{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#welcome-to-yalins-python-notes","title":"Welcome to Yalin's Python Notes","text":"<p>Hi there! Welcome to my GitHub repository where I share my study notes on python developing</p>"},{"location":"#about-me","title":"About Me","text":"<p>I am a Ph.D. Candidate in the Department of Geospatial Information Sciences at the University of Texas at Dallas (\u5fb7\u5dde\u5927\u5b66\u8fbe\u62c9\u65af\u5206\u6821).</p>"},{"location":"#education","title":"Education","text":"<ul> <li>2019\u2013now \u2003 Ph.D. Candidates in GIScience. University of Texas at Dallas, Texas, USA</li> <li>2022\u2013now \u2003 M.S. in Computer Science. University of Texas at Dallas, Texas, USA</li> <li>2017\u20132019 \u2003 M.A. in Geography. Binghamton University (SUNY), New York, USA</li> <li>2013\u20132017 \u2003 B.S. in GIScience. Yunnan University, Yunnan, China</li> </ul>"},{"location":"Ch10-Useful-Modules/Popular-Modules/","title":"Popular Modules","text":"In\u00a0[1]: Copied! <pre>import sys\nprint('Endianness:',sys.byteorder)\nprint('Copy rights \\n'+ sys.copyright)\nprint('The path of the interpreter',sys.executable)\nprint('Encoding style:',sys.getfilesystemencoding())\nprint('The platform:',sys.platform)\nprint('The version of the interpreter',sys.version)\n</pre> import sys print('Endianness:',sys.byteorder) print('Copy rights \\n'+ sys.copyright) print('The path of the interpreter',sys.executable) print('Encoding style:',sys.getfilesystemencoding()) print('The platform:',sys.platform) print('The version of the interpreter',sys.version) <pre>Endianness: little\nCopy rights \nCopyright (c) 2001-2019 Python Software Foundation.\nAll Rights Reserved.\n\nCopyright (c) 2000 BeOpen.com.\nAll Rights Reserved.\n\nCopyright (c) 1995-2001 Corporation for National Research Initiatives.\nAll Rights Reserved.\n\nCopyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.\nAll Rights Reserved.\nThe path of the interpreter E:\\Anaconda\\python.exe\nEncoding style: utf-8\nThe platform: win32\nThe version of the interpreter 3.7.6 (default, Jan  8 2020, 20:23:39) [MSC v.1916 64 bit (AMD64)]\n</pre> In\u00a0[2]: Copied! <pre>import subprocess\nsubprocess.run(['python','argv_test.py'])\n</pre> import subprocess subprocess.run(['python','argv_test.py']) Out[2]: <pre>CompletedProcess(args=['python', 'argv_test.py'], returncode=0)</pre> In\u00a0[3]: Copied! <pre>import subprocess\narg_lst = subprocess.run(['python','argv_test.py','Python','Swift'])\nprint(arg_lst.returncode)\n</pre> import subprocess arg_lst = subprocess.run(['python','argv_test.py','Python','Swift']) print(arg_lst.returncode) <pre>0\n</pre> In\u00a0[4]: Copied! <pre>import sys\nsys.path.append(r'F:\\COV19\\Script\\POI_DataProcessing')\nimport SafeGraph\n</pre> import sys sys.path.append(r'F:\\COV19\\Script\\POI_DataProcessing') import SafeGraph In\u00a0[5]: Copied! <pre>import os\nprint('Name of operation system', os.name)\nprint(os.getenv('PYTHONPATH'))\nprint('User name',os.getlogin())\n# print('Current ID',os.getpgid())\n# print('Parent ID',os.getppid())\nprint('Cpu Number',os.cpu_count())\nprint('Line space Symbol',os.linesep)\n</pre> import os print('Name of operation system', os.name) print(os.getenv('PYTHONPATH')) print('User name',os.getlogin()) # print('Current ID',os.getpgid()) # print('Parent ID',os.getppid()) print('Cpu Number',os.cpu_count()) print('Line space Symbol',os.linesep) <pre>Name of operation system nt\nNone\nUser name yyang\nCpu Number 16\nLine space Symbol \r\n\n</pre> In\u00a0[6]: Copied! <pre>import os\n# os.system('python argv_test.py Python')\n# Open files with the default program\nos.startfile(r'G:\\Books\\Crazy-With-Python\\README.md')\n</pre> import os # os.system('python argv_test.py Python') # Open files with the default program os.startfile(r'G:\\Books\\Crazy-With-Python\\README.md') In\u00a0[7]: Copied! <pre># os.execl(r'E:\\Anaconda\\python.exe',' ','os_test.py','i')\n</pre> # os.execl(r'E:\\Anaconda\\python.exe',' ','os_test.py','i') In\u00a0[8]: Copied! <pre>help(os.execl)\n</pre> help(os.execl) <pre>Help on function execl in module os:\n\nexecl(file, *args)\n    execl(file, *args)\n    \n    Execute the executable file with argument list args, replacing the\n    current process.\n\n</pre> In\u00a0[9]: Copied! <pre>import random\nprint('0.0 &lt;=x &lt; 1.0', random.random())\nprint('2.5 &lt;= x &lt; 10.0', random.uniform(2.5,10.0))\nprint('exponent variable:',random.expovariate(1/5))\nprint('0~9',random.randrange(10))\nprint('0~100',random.randrange(0,101,2))\nprint('Get an random choice:',random.choice(['Python','Swift','Kotlin']))\nprint('Reset order',random.shuffle(['Python','Swift','Kotlin']))\nprint('Get 4 samples from a sequence',random.sample([10,20,30,40,50,60,70,80,90],k=4))\n</pre> import random print('0.0 &lt;=x &lt; 1.0', random.random()) print('2.5 &lt;= x &lt; 10.0', random.uniform(2.5,10.0)) print('exponent variable:',random.expovariate(1/5)) print('0~9',random.randrange(10)) print('0~100',random.randrange(0,101,2)) print('Get an random choice:',random.choice(['Python','Swift','Kotlin'])) print('Reset order',random.shuffle(['Python','Swift','Kotlin'])) print('Get 4 samples from a sequence',random.sample([10,20,30,40,50,60,70,80,90],k=4)) <pre>0.0 &lt;=x &lt; 1.0 0.8950745816408237\n2.5 &lt;= x &lt; 10.0 9.628823797952816\nexponent variable: 3.1333380216263222\n0~9 2\n0~100 30\nGet an random choice: Python\nReset order None\nGet 4 samples from a sequence [70, 30, 10, 60]\n</pre> <p>In addition, it also has the following common used functions</p> <ul> <li><code>time.gmtime([secs])</code>: transfer seconds to a <code>sturct_time</code> object, if no parameter, would use the current time</li> <li><code>time.localtime([secs])</code>:</li> <li><code>time.mktime(t)</code>:</li> <li><code>time.process_time()</code>: How many seconds of CPU are used</li> <li><code>time.sleep(secs)</code></li> <li><code>time.timezone</code>: return the time offset, based on seconds</li> <li><code>time.tzname</code>: return the time zone name</li> <li><code>time.strptime(string[,format])</code>: transfer string to a <code>sturct_time</code> object</li> <li><code>time.strftime(format[,t])</code>: transfer a <code>sturct_time</code> object or a time tuple to string</li> </ul> In\u00a0[10]: Copied! <pre>import time\nprint('Current time,',time.asctime())\n# Transfer to sturct_time\nprint(time.gmtime())\nprint(time.process_time())\nprint('Current time to string',time.strftime('%Y-%m-%d %H:%M:%S'))\nprint('Time offset',time.time())\nprint('Time zone:',time.timezone)\n</pre> import time print('Current time,',time.asctime()) # Transfer to sturct_time print(time.gmtime()) print(time.process_time()) print('Current time to string',time.strftime('%Y-%m-%d %H:%M:%S')) print('Time offset',time.time()) print('Time zone:',time.timezone) <pre>Current time, Mon Jun 15 10:55:44 2020\ntime.struct_time(tm_year=2020, tm_mon=6, tm_mday=15, tm_hour=15, tm_min=55, tm_sec=44, tm_wday=0, tm_yday=167, tm_isdst=0)\n0.6875\nCurrent time to string 2020-06-15 10:55:44\nTime offset 1592236544.965894\nTime zone: 21600\n</pre> In\u00a0[11]: Copied! <pre>import json\njson.__all__\n</pre> import json json.__all__ Out[11]: <pre>['dump',\n 'dumps',\n 'load',\n 'loads',\n 'JSONDecoder',\n 'JSONDecodeError',\n 'JSONEncoder']</pre> In\u00a0[12]: Copied! <pre>s = json.dumps(['yeeku',{'favorite' : ('coding',None,'game',25)}])\nprint(s)\n</pre> s = json.dumps(['yeeku',{'favorite' : ('coding',None,'game',25)}]) print(s) <pre>[\"yeeku\", {\"favorite\": [\"coding\", null, \"game\", 25]}]\n</pre> In\u00a0[13]: Copied! <pre># Transfer dict to json\ns1 = json.dumps({'c':0,\"b\":0,\"a\":0},sort_keys=True)\nprint(s1)\n</pre> # Transfer dict to json s1 = json.dumps({'c':0,\"b\":0,\"a\":0},sort_keys=True) print(s1) <pre>{\"a\": 0, \"b\": 0, \"c\": 0}\n</pre> In\u00a0[14]: Copied! <pre>s2 = json.dumps([1,2,3,{'x':5,'y':7}])\nprint(s2)\n</pre> s2 = json.dumps([1,2,3,{'x':5,'y':7}]) print(s2) <pre>[1, 2, 3, {\"x\": 5, \"y\": 7}]\n</pre> <p>Use the <code>separators</code></p> In\u00a0[15]: Copied! <pre># Transfer list to json\ns2 = json.dumps([1,2,3,{'x':5,'y':7}],separators=(',',':'))\nprint(s2)\n</pre> # Transfer list to json s2 = json.dumps([1,2,3,{'x':5,'y':7}],separators=(',',':')) print(s2) <pre>[1,2,3,{\"x\":5,\"y\":7}]\n</pre> <p>Use <code>json.dump</code> to export output into a JSON file</p> In\u00a0[16]: Copied! <pre>f = open('a.json','w')\njson.dump(['kotlin',{'Python':'excellent'}],f)\n</pre> f = open('a.json','w') json.dump(['kotlin',{'Python':'excellent'}],f) In\u00a0[17]: Copied! <pre>resultl = json.loads('[\"yeeku\", {\"favorite\" : [ \"coding\", null,\"game\", 25]}]')\nprint(resultl)\n</pre> resultl = json.loads('[\"yeeku\", {\"favorite\" : [ \"coding\", null,\"game\", 25]}]') print(resultl) <pre>['yeeku', {'favorite': ['coding', None, 'game', 25]}]\n</pre> In\u00a0[18]: Copied! <pre># Read JSON file\nf = open('a.json')\nresult2 = json.load(f)\nprint(result2)\n</pre> # Read JSON file f = open('a.json') result2 = json.load(f) print(result2) <pre>['kotlin', {'Python': 'excellent'}]\n</pre>"},{"location":"Ch10-Useful-Modules/Popular-Modules/#popular-modules-in-python","title":"Popular Modules in Python\u00b6","text":""},{"location":"Ch10-Useful-Modules/Popular-Modules/#1-sys-module","title":"1. <code>sys</code> Module\u00b6","text":"<ul> <li><code>sys.argv</code>: get parameters from command line, <code>sys.argv\\[0\\]</code> represents python program, so <code>sys.arg\\[1\\]</code> means the first input parameter</li> <li><code>sys.exit()</code>: raise a <code>SystemExit</code> error to exit program, but when put it in to <code>try</code> sections, the <code>finally</code> sections would also be excuted</li> <li><code>sys.executable</code>: return the store path of the interpreter of Python</li> <li><code>sys.getrefcount(object)</code>: return the reference times of a object, when it comes to 0, the system would recover the object</li> <li><code>sys.path</code>: the basic path for searching modules in python, similar to system enviorment, could append</li> </ul>"},{"location":"Ch10-Useful-Modules/Popular-Modules/#11-get-arguments-from-the-command-line","title":"1.1 Get arguments from the command line\u00b6","text":"<ul> <li><code>sys.argv</code>: get parameters from command line, <code>sys.argv\\[0\\]</code> represents python program, so <code>sys.arg\\[1\\]</code> means the first input parameter</li> </ul>"},{"location":"Ch10-Useful-Modules/Popular-Modules/#12-chage-the-module-loading-path","title":"1.2 Chage the module loading path\u00b6","text":"<ul> <li><code>sys.path</code>: the basic path for searching modules in python, similar to system enviorment, could append</li> </ul>"},{"location":"Ch10-Useful-Modules/Popular-Modules/#2os-module","title":"2.<code>os</code> Module\u00b6","text":"<ul> <li><code>os.name</code> : return the name of the replied operation system</li> <li><code>os.environ</code>: return the dictionary consisted of enviroments parameters</li> <li><code>os.getpid()</code>: get the current process id</li> <li><code>os.getppid()</code>: get the parent process id</li> <li><code>os.putenv(key,value)</code>: add a enviroment parameter</li> <li><code>os.cpu_count()</code>: get the number of cpu</li> <li><code>os.linesep</code>: get the line space characters</li> </ul>"},{"location":"Ch10-Useful-Modules/Popular-Modules/#21-process-manipulating","title":"2.1 Process manipulating\u00b6","text":"<ul> <li><code>os.forkpty()</code> fork one sub-process</li> <li><code>os.kill(pid,sig)</code> : send <code>sig</code> signal to <code>pid</code> process, and end it</li> <li><code>os.popen(cmd,model = 'r',buffering  = -1)</code>: open a read pipe in the command line, <code>model = 'rw'</code> means read and write</li> <li><code>os.startfile(path[,operation])</code> : use defult program to open files</li> <li><code>os.system(command)</code> : similar to command line</li> </ul>"},{"location":"Ch10-Useful-Modules/Popular-Modules/#3-random-module","title":"3. <code>random</code> Module\u00b6","text":"<ul> <li><code>random.seed(a =None, version = 2)</code></li> <li><code>random.randrange(start,stop[,step])</code></li> <li><code>random.randint(a,b)</code></li> <li><code>random.choice(seq)</code></li> <li><code>random.choice(seq,weights = None, *,cum_weights = None, k=1)</code></li> <li><code>random.shuffle(x[,random])</code>: reset the index of <code>x</code> sequence</li> <li><code>random.sample(population,k)</code>: get k samples from the population</li> <li><code>random.uniform(a,b)</code></li> <li><code>random.expovariate(lambd)</code></li> </ul>"},{"location":"Ch10-Useful-Modules/Popular-Modules/#4-time-module","title":"4. <code>time</code> Module\u00b6","text":"<p>It offers a object named <code>time.struct_time</code>, it has 9 common used properties, including</p> <ul> <li><code>tm_year</code></li> <li><code>tm_mon</code> : 1~12</li> <li><code>tm_mday</code>: 1~31</li> <li><code>tm_hour</code>: 0~23</li> <li><code>tm_min</code>: 0~59</li> <li><code>tm_sec</code>: 0~59</li> <li><code>tm_wday</code>: 0~6</li> <li><code>tm_yday</code>: 1~366</li> <li><code>tm_isdst</code>: if it is summer time, from [0,1,-1]</li> </ul>"},{"location":"Ch10-Useful-Modules/Popular-Modules/#5-json","title":"5. <code>Json</code>\u00b6","text":"<p>Full name is JavaScript Object Notation. It is a commonly used data transfer format, just like XML Json has two types of format, such as:</p> <ul> <li>key-value: in Python, it refers to <code>dict</code>, in C, it is <code>struct</code></li> <li>sequence: in python, it refers to <code>list</code></li> </ul>"},{"location":"Ch10-Useful-Modules/Popular-Modules/#51-create-a-json-object","title":"5.1 Create a <code>Json</code> object\u00b6","text":"<p>Transfer Python object to JSON</p> <ul> <li>dumps()</li> <li>dump()</li> </ul>"},{"location":"Ch10-Useful-Modules/Popular-Modules/#52-transfer-json-to-python-object","title":"5.2 Transfer JSON to Python object\u00b6","text":"<ul> <li>load()</li> <li>loads()</li> </ul>"},{"location":"Ch10-Useful-Modules/Regular-Expression/","title":"Regular Expression","text":"In\u00a0[1]: Copied! <pre>import re\nre.__all__\n</pre> import re re.__all__ Out[1]: <pre>['match',\n 'fullmatch',\n 'search',\n 'sub',\n 'subn',\n 'split',\n 'findall',\n 'finditer',\n 'compile',\n 'purge',\n 'template',\n 'escape',\n 'error',\n 'Pattern',\n 'Match',\n 'A',\n 'I',\n 'L',\n 'M',\n 'S',\n 'X',\n 'U',\n 'ASCII',\n 'IGNORECASE',\n 'LOCALE',\n 'MULTILINE',\n 'DOTALL',\n 'VERBOSE',\n 'UNICODE']</pre> In\u00a0[2]: Copied! <pre>p = re.compile('abc')\np.search('www.abc.com')\n</pre> p = re.compile('abc') p.search('www.abc.com') Out[2]: <pre>&lt;re.Match object; span=(4, 7), match='abc'&gt;</pre> In\u00a0[3]: Copied! <pre>re.search('abc','www.abc.com')\n</pre> re.search('abc','www.abc.com') Out[3]: <pre>&lt;re.Match object; span=(4, 7), match='abc'&gt;</pre> In\u00a0[4]: Copied! <pre>m1 = re.match('www','www.fkit.org')\nprint(m1.span()) # return the location of matched item\nprint(m1.group()) # return what is matched\n</pre> m1 = re.match('www','www.fkit.org') print(m1.span()) # return the location of matched item print(m1.group()) # return what is matched <pre>(0, 3)\nwww\n</pre> In\u00a0[5]: Copied! <pre>print(re.match('fkit','www.fkit.com')) # search from the start position\nprint(re.search('fkit','www.fkit.com')) # search from the middle part\nprint(re.search('www','www.fkit.com'))\n</pre> print(re.match('fkit','www.fkit.com')) # search from the start position print(re.search('fkit','www.fkit.com')) # search from the middle part print(re.search('www','www.fkit.com')) <pre>None\n&lt;re.Match object; span=(4, 8), match='fkit'&gt;\n&lt;re.Match object; span=(0, 3), match='www'&gt;\n</pre> <p>Other commonly used functions</p> <ul> <li><code>re.findall(pattern,string,flags = 0)</code> : return a list contains all string matched with the pattern.</li> <li><code>re.finditer(pattern,string,flags = 0)</code>: same to the pervious fuction but return a iterator</li> </ul> In\u00a0[6]: Copied! <pre>print(re.findall('fkit','FKIT is very good, Fkit.org is my favorite'))\n# Ignore the upper-case and lower-case\nprint(re.findall('fkit','FKIT is very good, Fkit.org is my favorite',re.I))\n</pre> print(re.findall('fkit','FKIT is very good, Fkit.org is my favorite')) # Ignore the upper-case and lower-case print(re.findall('fkit','FKIT is very good, Fkit.org is my favorite',re.I)) <pre>[]\n['FKIT', 'Fkit']\n</pre> In\u00a0[7]: Copied! <pre>it = re.finditer('fkit','FKIT is very good, Fkit.org is my favorite',re.I)\nfor e in it:\n    print(str(e.span()) + '--&gt;' + e.group())\n</pre> it = re.finditer('fkit','FKIT is very good, Fkit.org is my favorite',re.I) for e in it:     print(str(e.span()) + '--&gt;' + e.group()) <pre>(0, 4)--&gt;FKIT\n(19, 23)--&gt;Fkit\n</pre> <p>Other commonly used functions</p> <ul> <li><code>re.fullmatch(pattern,string,flags = 0)</code> : require a full match string, if not return None</li> <li><code>re.sub(pattern,repl,string,count = 0, flags = 0)</code>: substitute pattern within a string using repl, allow <code>count</code> times replace</li> <li><code>re.split(pattern,string,maxsplit = 0, flags = 0)</code>: use pattren to split string</li> </ul> In\u00a0[8]: Copied! <pre>import re\nmy_date = '2008-08-18'\nprint(re.sub(r'-','/',count =1,string = my_date))\n</pre> import re my_date = '2008-08-18' print(re.sub(r'-','/',count =1,string = my_date)) <pre>2008/08-18\n</pre> In\u00a0[9]: Copied! <pre>print(re.split(',','fkit,fkjava,crazyit',1))\nprint(re.split(',','fkit,fkjava,crazyit'))\nprint(re.split('a','fkit,fkjava,crazyit',))\nprint(re.split('x','fkit,fkjava,crazyit',1)) # No x character, so would return the origin list\n</pre> print(re.split(',','fkit,fkjava,crazyit',1)) print(re.split(',','fkit,fkjava,crazyit')) print(re.split('a','fkit,fkjava,crazyit',)) print(re.split('x','fkit,fkjava,crazyit',1)) # No x character, so would return the origin list <pre>['fkit', 'fkjava,crazyit']\n['fkit', 'fkjava', 'crazyit']\n['fkit,fkj', 'v', ',cr', 'zyit']\n['fkit,fkjava,crazyit']\n</pre> In\u00a0[10]: Copied! <pre>pa = re.compile('fkit')\nprint(pa.match('www.fkit.org',4).span()) # start search from 4\nprint(pa.match('www.fkit.org'),4,6) # start from 4 and end at 6\nprint(pa.fullmatch('www.fkit.org',4,8).span())\n</pre> pa = re.compile('fkit') print(pa.match('www.fkit.org',4).span()) # start search from 4 print(pa.match('www.fkit.org'),4,6) # start from 4 and end at 6 print(pa.fullmatch('www.fkit.org',4,8).span()) <pre>(4, 8)\nNone 4 6\n(4, 8)\n</pre> In\u00a0[11]: Copied! <pre>m = re.search(r'(fkit).(org)',r'www.fkit.org is a good domain')\nprint(m.group(0))\nprint(m[0])\nprint(m[1])\nprint(m.span(0))\nprint(m.span(1))\nprint(m.group(1))\nprint(m.group(2))\nprint(m.groups())\n</pre> m = re.search(r'(fkit).(org)',r'www.fkit.org is a good domain') print(m.group(0)) print(m[0]) print(m[1]) print(m.span(0)) print(m.span(1)) print(m.group(1)) print(m.group(2)) print(m.groups()) <pre>fkit.org\nfkit.org\nfkit\n(4, 12)\n(4, 8)\nfkit\norg\n('fkit', 'org')\n</pre> <p>In the regular expression, could use <code>?P&lt;name&gt;</code> to set a name for each group</p> In\u00a0[12]: Copied! <pre>m2 = re.search(r'(?P&lt;prefix&gt;fkit).(?P&lt;suffix&gt;org)',\\\n              r\"www.fkit.org os a good domain\")\nprint(m2.groupdict())\nprint(m2.string)\nprint(m2.re)\n</pre> m2 = re.search(r'(?Pfkit).(?Porg)',\\               r\"www.fkit.org os a good domain\") print(m2.groupdict()) print(m2.string) print(m2.re) <pre>{'prefix': 'fkit', 'suffix': 'org'}\nwww.fkit.org os a good domain\nre.compile('(?P&lt;prefix&gt;fkit).(?P&lt;suffix&gt;org)')\n</pre> In\u00a0[13]: Copied! <pre>re.findall(r'fkit','FKIT is a good domain, FKIT is good')\nre.findall(r'fkit','FKIT is a good domain, FKIT is good',re.I)\n</pre> re.findall(r'fkit','FKIT is a good domain, FKIT is good') re.findall(r'fkit','FKIT is a good domain, FKIT is good',re.I) Out[13]: <pre>['FKIT', 'FKIT']</pre> In\u00a0[14]: Copied! <pre># find a phone number\nre.fullmatch(r'\\d\\d\\d-\\d\\d\\d-\\d\\d\\d\\d','789-123-8888')\n</pre> # find a phone number re.fullmatch(r'\\d\\d\\d-\\d\\d\\d-\\d\\d\\d\\d','789-123-8888') Out[14]: <pre>&lt;re.Match object; span=(0, 12), match='789-123-8888'&gt;</pre> In\u00a0[15]: Copied! <pre>re.search(r'Windows (95|98|NT|2000)[\\w ]+\\1', 'Windows 98 published in 98')\n</pre> re.search(r'Windows (95|98|NT|2000)[\\w ]+\\1', 'Windows 98 published in 98') Out[15]: <pre>&lt;re.Match object; span=(0, 26), match='Windows 98 published in 98'&gt;</pre> In\u00a0[16]: Copied! <pre>re.search(r'Windows (95|98|NT|2000)[\\w ]+\\1', 'Windows 98 published in 95')\n</pre> re.search(r'Windows (95|98|NT|2000)[\\w ]+\\1', 'Windows 98 published in 95') In\u00a0[17]: Copied! <pre>re.search(r'&lt;(?P&lt;tag&gt;\\w+)&gt;\\w+&lt;/(?P=tag)&gt;', '&lt;h3&gt;xx&lt;/h3&gt;')\n</pre> re.search(r'&lt;(?P\\w+)&gt;\\w+', 'xx') Out[17]: <pre>&lt;re.Match object; span=(0, 11), match='&lt;h3&gt;xx&lt;/h3&gt;'&gt;</pre> In\u00a0[18]: Copied! <pre>re.search(r'&lt;(?P&lt;tag&gt;\\w+)&gt;\\w+&lt;/(?P=tag)&gt;', '&lt;h3&gt;xx&lt;/h2&gt;')\n</pre> re.search(r'&lt;(?P\\w+)&gt;\\w+', 'xx') In\u00a0[19]: Copied! <pre>re.search(r'(?&lt;=&lt;h1&gt;).+?(?=&lt;/h1&gt;)','help! &lt;h1&gt;&lt;div&gt;fkit&lt;/div&gt;&lt;/h1&gt;! technology')\n</pre> re.search(r'(?&lt;=).+?(?=)','help! fkit! technology') Out[19]: <pre>&lt;re.Match object; span=(10, 25), match='&lt;div&gt;fkit&lt;/div&gt;'&gt;</pre> In\u00a0[20]: Copied! <pre>re.search(r'\\d{3}-\\d{3}-\\d{4}','789-654-1234')\n</pre> re.search(r'\\d{3}-\\d{3}-\\d{4}','789-654-1234') Out[20]: <pre>&lt;re.Match object; span=(0, 12), match='789-654-1234'&gt;</pre> <p>The default search model is greedy model</p> In\u00a0[21]: Copied! <pre>re.search(r'@.+\\.','sun@fkit.com.cn')\n</pre> re.search(r'@.+\\.','sun@fkit.com.cn') Out[21]: <pre>&lt;re.Match object; span=(3, 13), match='@fkit.com.'&gt;</pre> <p>use <code>?</code> to change it to reluctant model</p> In\u00a0[22]: Copied! <pre>re.search(r'@.+?\\.','sun@fkit.com.cn')\n</pre> re.search(r'@.+?\\.','sun@fkit.com.cn') Out[22]: <pre>&lt;re.Match object; span=(3, 9), match='@fkit.'&gt;</pre>"},{"location":"Ch10-Useful-Modules/Regular-Expression/#regular-expression","title":"Regular Expression\u00b6","text":"<p>A regular expression (shortened as regex or regexp;also referred to as rational expression) is a sequence of characters that define a search pattern. Usually such patterns are used by string searching algorithms for \"find\" or \"find and replace\" operations on strings, or for input validation. It is a technique developed in theoretical computer science and formal language theory.</p>"},{"location":"Ch10-Useful-Modules/Regular-Expression/#11-regular-expression-in-python","title":"1.1 Regular Expression in Python\u00b6","text":"<ul> <li><code>re.compile(pattern,flags = 0)</code>: compile a regular string to a <code>_sre.SRE_Pattern</code> object, which used in the computer memory</li> <li><code>x.search(compiled_str)</code>: is same to <code>re.search(target_str, orign_str)</code></li> <li><code>re.match(pattern,string,flags =0)</code> -<code>.span</code> -<code>.group</code></li> </ul> <p><code>match</code> must start from the first character, <code>search</code> could start from the middle part</p>"},{"location":"Ch10-Useful-Modules/Regular-Expression/#there-are-two-major-classes-in-re-module-one-is-the-complie-function-returned-_sresre_pattern-object-the-other-one-is-match-returned-match-object","title":"There are two major classes in <code>re</code> module, one is the <code>complie</code> function returned  <code>_sre.SRE_Pattern</code> object, the other one is <code>match</code> returned match object\u00b6","text":"<p><code>_sre.SRE_Pattern</code> object has the following properties</p> <ul> <li><code>match.group</code> : get the matched string</li> <li><code>match.groups(default = None)</code> : return a tuple contains the matched string</li> <li><code>match.groupdict(default = None)</code>: return a dict contains all the matched string</li> <li><code>match.start()</code></li> <li><code>match.end()</code></li> <li><code>match.span()</code></li> <li><code>match.re</code> return the using patterns</li> <li><code>match.string</code> return the using strings(origin)</li> </ul>"},{"location":"Ch10-Useful-Modules/Regular-Expression/#12-flag-in-regular-expression","title":"1.2 <code>flag</code> in regular expression\u00b6","text":"<ul> <li><code>re.A</code> or <code>re.ASCII</code>: only search the ASCII characters, (<code>?a</code>)</li> <li><code>re.DEBUG</code>: shows the debug info in the regular expression</li> <li><code>re.I</code> or <code>re.IGNORECASE</code>: not case sensitive (<code>?i</code>)</li> </ul>"},{"location":"Ch10-Useful-Modules/Regular-Expression/#13-create-regular-expression","title":"1.3 Create regular expression\u00b6","text":"<ul> <li><code>x</code>: stands for any character</li> <li><code>\\r</code>: stands for enter (similar to line break)</li> <li><code>\\f</code> : stands for page break</li> <li><code>\\n</code>: stands for line break</li> <li><code>$</code>: in the end</li> <li><code>^</code>: in the begining</li> <li><code>()</code>: set a group and their start and end position</li> <li><code>[]</code>: similar to <code>()</code></li> <li><code>{}</code>: set the times for the front regular expression</li> <li><code>*</code>: shows 0~n times</li> <li><code>+</code>: shows 1~n times</li> <li><code>?</code>: shows 0~1 times</li> <li><code>.</code> stands for all characters instead of <code>\\n</code>, unless you use <code>re.S</code> or <code>s.DOTALL</code> flag</li> <li><code>\\d</code> : number 0~9</li> <li><code>\\D</code> : non-numeric</li> <li><code>\\s</code> : all blank, including space, line break, table symbol, page break, etc.</li> <li><code>\\S</code> : any non-blank symbol</li> <li><code>\\w</code> : all character, including number 0-9, 26 english characters, and <code>_</code></li> <li><code>\\W</code> : non-character</li> </ul>"},{"location":"Ch10-Useful-Modules/Regular-Expression/#enumerate-method","title":"Enumerate method\u00b6","text":"<ul> <li><code>[abc]</code> : means could be any one of {a,b,c}</li> <li><code>[a-f]</code> : means could be any one of {a,b,c,d,e,f}</li> <li><code>[^abc]</code>: means could be anyone not from {a,b,c}</li> </ul>"},{"location":"Ch10-Useful-Modules/Regular-Expression/#14-sub-expression","title":"1.4 Sub-expression\u00b6","text":"<p>Use <code>()</code> to represent a sub-expression, and use <code>\\ + number</code> to mark each sub-expression. For example, in the following test, <code>\\1</code> represent the first sub-expression, if it matched with <code>98</code>, then the following position must be matched with <code>98</code></p>"},{"location":"Ch10-Useful-Modules/Regular-Expression/#in-addition-we-could-use-pname-exp-to-create-a-sub-expression","title":"In addition, we could use <code>(?p&lt;name&gt; exp)</code>  to create a sub-expression\u00b6","text":"<ul> <li>Use <code>&lt;?P=name&gt;</code> to call the sub-expression (must be same)</li> </ul>"},{"location":"Ch10-Useful-Modules/Regular-Expression/#other-important-expression-type","title":"other important expression type\u00b6","text":"<ul> <li><code>(?&lt;=exp)</code>: the exp must be shown in the left side of the matched content</li> <li><code>(?=exp)</code>: the exp must be shown in the right side of the matched content</li> <li><code>(?&lt;!exp)</code>: the exp must not be shown in the left side of the matched content</li> <li><code>(?!exp)</code>: the exp must not be shown in the right side of the matched content</li> <li><code>(?#comment)</code>: <code>?#</code> means it is a comment</li> </ul>"},{"location":"Ch10-Useful-Modules/Regular-Expression/#15-greedy-model-and-reluctant-model","title":"1.5 Greedy model and reluctant model\u00b6","text":"<ul> <li><code>*</code>: 0~n times</li> <li><code>+</code>: 1~n times</li> <li><code>?</code>: 0~1 times</li> <li><code>{n,m}</code>: n~m times</li> <li><code>{n,}</code>: at least n times</li> <li><code>{,m}</code>: not more than m times</li> <li><code>{n}</code>: must shown in n times</li> </ul>"},{"location":"Ch10-Useful-Modules/argv_test/","title":"Argv test","text":"In\u00a0[\u00a0]: Copied! <pre>from sys import argv\nprint(len(argv))\nfor arg in argv:\n    print(arg)\n</pre> from sys import argv print(len(argv)) for arg in argv:     print(arg)"},{"location":"Ch10-Useful-Modules/os_test/","title":"Os test","text":"In\u00a0[\u00a0]: Copied! <pre>import os\nprint('Name of operation system', os.name)\nprint(os.getenv('PYTHONPATH'))\nprint('User name',os.getlogin())\nprint('Current ID',os.getpgid())\nprint('Parent ID',os.getppid())\nprint('Cpu Number',os.cpu_count())\nprint('Line space Symbol',os.linesep)\n</pre> import os print('Name of operation system', os.name) print(os.getenv('PYTHONPATH')) print('User name',os.getlogin()) print('Current ID',os.getpgid()) print('Parent ID',os.getppid()) print('Cpu Number',os.cpu_count()) print('Line space Symbol',os.linesep)"},{"location":"Ch11-GUI/Python_GUI_module/","title":"Python GUI module","text":"In\u00a0[2]: Copied! <pre>from tkinter import *\n\n# Create a TK object, TK means window\nroot = Tk()\n\n# Set title of the window\nroot.title('First Test')\n\n# Create a label object, and put it into root\nw = Label(root, text = \"First Label!\")\n\n# Using pack to do arrangement.\nw.pack()\n\n# Start window\nroot.mainloop()\n</pre> from tkinter import *  # Create a TK object, TK means window root = Tk()  # Set title of the window root.title('First Test')  # Create a label object, and put it into root w = Label(root, text = \"First Label!\")  # Using pack to do arrangement. w.pack()  # Start window root.mainloop() <p>Another method is creating a subclass of <code>Frame</code>, then it would automatically create a window object.</p> In\u00a0[11]: Copied! <pre>class Application(Frame):\n    \n    def __init__(self,master = None):\n        # Do not use super() to call Frame class\n        Frame.__init__(self,master)\n        self.pack()\n        # Use initWidgets() method to initialize interface\n        self.initWidgets()\n        \n    def initWidgets(self):\n        # Create a label objectm and put it into our window\n        w = Label(self)\n        \n        # Create a photo image\n        bm = PhotoImage(file = 'pokemon.png')\n        # Use a variable to refer this photo image, otherwise it would be rrecycled\n        w.x = bm\n        w['image'] = bm\n        w.pack()\n        \n        # Create a button object\n        okButton = Button(self, text = \"Yes\")\n        okButton['background'] = 'yellow'\n        okButton.pack()\n</pre> class Application(Frame):          def __init__(self,master = None):         # Do not use super() to call Frame class         Frame.__init__(self,master)         self.pack()         # Use initWidgets() method to initialize interface         self.initWidgets()              def initWidgets(self):         # Create a label objectm and put it into our window         w = Label(self)                  # Create a photo image         bm = PhotoImage(file = 'pokemon.png')         # Use a variable to refer this photo image, otherwise it would be rrecycled         w.x = bm         w['image'] = bm         w.pack()                  # Create a button object         okButton = Button(self, text = \"Yes\")         okButton['background'] = 'yellow'         okButton.pack() In\u00a0[15]: Copied! <pre>app = Application()\n# the master of Frame object represents a tk object\nprint(type(app.master))\n\napp.master.title(\"Second Try!\")\napp.mainloop()\n</pre> app = Application() # the master of Frame object represents a tk object print(type(app.master))  app.master.title(\"Second Try!\") app.mainloop() <pre>&lt;class 'tkinter.Tk'&gt;\n</pre> <p>How to know what kind of variables we should set when we create a component</p> In\u00a0[13]: Copied! <pre>help(Button.__init__)\n</pre> help(Button.__init__) <pre>Help on function __init__ in module tkinter:\n\n__init__(self, master=None, cnf={}, **kw)\n    Construct a button widget with the parent MASTER.\n    \n    STANDARD OPTIONS\n    \n        activebackground, activeforeground, anchor,\n        background, bitmap, borderwidth, cursor,\n        disabledforeground, font, foreground\n        highlightbackground, highlightcolor,\n        highlightthickness, image, justify,\n        padx, pady, relief, repeatdelay,\n        repeatinterval, takefocus, text,\n        textvariable, underline, wraplength\n    \n    WIDGET-SPECIFIC OPTIONS\n    \n        command, compound, default, height,\n        overrelief, state, width\n\n</pre> In\u00a0[14]: Copied! <pre>root = Tk()\nroot.title('Pack_Demo')\n\nfor i in range(3):\n    lab = Label(root, text = \"The %d Label\" %(i+1), bg = \"#eeeeee\")\n    # use pack function\n    lab.pack()\n    \nroot.mainloop()\n</pre> root = Tk() root.title('Pack_Demo')  for i in range(3):     lab = Label(root, text = \"The %d Label\" %(i+1), bg = \"#eeeeee\")     # use pack function     lab.pack()      root.mainloop() <p>Actually, <code>pack</code> also have multiple options</p> In\u00a0[16]: Copied! <pre>help(Label.pack)\n</pre> help(Label.pack) <pre>Help on function pack_configure in module tkinter:\n\npack_configure(self, cnf={}, **kw)\n    Pack a widget in the parent widget. Use as options:\n    after=widget - pack it after you have packed widget\n    anchor=NSEW (or subset) - position widget according to\n                              given direction\n    before=widget - pack it before you will pack widget\n    expand=bool - expand widget if parent size grows\n    fill=NONE or X or Y or BOTH - fill widget if widget grows\n    in=master - use master to contain this widget\n    in_=master - see 'in' option description\n    ipadx=amount - add internal padding in x direction\n    ipady=amount - add internal padding in y direction\n    padx=amount - add padding in x direction\n    pady=amount - add padding in y direction\n    side=TOP or BOTTOM or LEFT or RIGHT -  where to add this widget.\n\n</pre> In\u00a0[17]: Copied! <pre>class App:\n    def __init__(self,master):\n        self.master = master\n        self.initWidgets()\n        \n    def initWidgets(self):\n        \n        # Create the first container\n        fm1 = Frame(self.master)\n        # Put this container to the left side\n        fm1.pack(side = LEFT, fill = BOTH, expand = YES)\n        # Add three-button into this container, follow the horizontal sequence\n        Button(fm1,text = \"First\").pack(side = TOP, fill = X, expand = YES)\n        Button(fm1,text = \"Second\").pack(side = TOP, fill = X, expand = YES)\n        Button(fm1,text = \"Third\").pack(side = TOP, fill = X, expand = YES)\n        \n        # Create the second container\n        fm2 = Frame(self.master)\n        # Put this container to the left side (left side of fm1)\n        fm2.pack(side = LEFT, padx = 10, expand = YES)\n        # Add three-button into this container, follow the vertical sequence\n        Button(fm2,text = \"First\").pack(side = RIGHT , fill = Y, expand = YES)\n        Button(fm2,text = \"Second\").pack(side = RIGHT , fill = Y, expand = YES)\n        Button(fm2,text = \"Third\").pack(side = RIGHT , fill = Y, expand = YES)\n        \n        # Create the third container\n        fm3 = Frame(self.master)\n        # Put this container to the right side (right side of fm1)\n        fm3.pack(side = RIGHT, padx = 10, fill = BOTH, expand = YES)\n        # Add three-button into this container, follow the vertical sequence\n        Button(fm3,text = \"First\").pack(side = BOTTOM , fill = Y, expand = YES)\n        Button(fm3,text = \"Second\").pack(side = BOTTOM , fill = Y, expand = YES)\n        Button(fm3,text = \"Third\").pack(side = BOTTOM , fill = Y, expand = YES)\n</pre> class App:     def __init__(self,master):         self.master = master         self.initWidgets()              def initWidgets(self):                  # Create the first container         fm1 = Frame(self.master)         # Put this container to the left side         fm1.pack(side = LEFT, fill = BOTH, expand = YES)         # Add three-button into this container, follow the horizontal sequence         Button(fm1,text = \"First\").pack(side = TOP, fill = X, expand = YES)         Button(fm1,text = \"Second\").pack(side = TOP, fill = X, expand = YES)         Button(fm1,text = \"Third\").pack(side = TOP, fill = X, expand = YES)                  # Create the second container         fm2 = Frame(self.master)         # Put this container to the left side (left side of fm1)         fm2.pack(side = LEFT, padx = 10, expand = YES)         # Add three-button into this container, follow the vertical sequence         Button(fm2,text = \"First\").pack(side = RIGHT , fill = Y, expand = YES)         Button(fm2,text = \"Second\").pack(side = RIGHT , fill = Y, expand = YES)         Button(fm2,text = \"Third\").pack(side = RIGHT , fill = Y, expand = YES)                  # Create the third container         fm3 = Frame(self.master)         # Put this container to the right side (right side of fm1)         fm3.pack(side = RIGHT, padx = 10, fill = BOTH, expand = YES)         # Add three-button into this container, follow the vertical sequence         Button(fm3,text = \"First\").pack(side = BOTTOM , fill = Y, expand = YES)         Button(fm3,text = \"Second\").pack(side = BOTTOM , fill = Y, expand = YES)         Button(fm3,text = \"Third\").pack(side = BOTTOM , fill = Y, expand = YES)          In\u00a0[18]: Copied! <pre>root = Tk()\nroot.title(\"Pack Layout\")\ndisplay = App(root)\nroot.mainloop()\n</pre> root = Tk() root.title(\"Pack Layout\") display = App(root) root.mainloop() In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"Ch11-GUI/Python_GUI_module/#1-tkinter-gui-module","title":"1. Tkinter GUI Module\u00b6","text":""},{"location":"Ch11-GUI/Python_GUI_module/#11-create-a-window-object","title":"1.1 Create a Window object\u00b6","text":""},{"location":"Ch11-GUI/Python_GUI_module/#12-layout-manager","title":"1.2 Layout Manager\u00b6","text":"<ul> <li><code>Pack</code> : it would follow the adding sequnce to manage the layout (default)</li> </ul>"},{"location":"Ch11-GUI/Python_GUI_module/#making-a-nested-window","title":"Making a nested window\u00b6","text":""},{"location":"Ch14-Parallel/Parallel_in_Python/","title":"Parallel in Python","text":"In\u00a0[8]: Copied! <pre>%%time\nimport threading\n\ndef action(max):\n    for i in range(max):\n        # use current_thread() function to get the current running threading\n        # use getName() function to get the name of current running threading\n        print(threading.current_thread().getName() + \" \" + str(i))\n        \n# the main() body\nfor i in range(10):\n    print(threading.current_thread().getName() + \" \" + str(i))\n    if i == 2:\n        # Create and run the first thread\n        t1 = threading.Thread(target = action, args = (10,))\n        t1.start()\n        # Create and run the first thread\n        t2 = threading.Thread(target = action, args = (10,))\n        t2.start()\n\nprint('Task Complete!')\n</pre> %%time import threading  def action(max):     for i in range(max):         # use current_thread() function to get the current running threading         # use getName() function to get the name of current running threading         print(threading.current_thread().getName() + \" \" + str(i))          # the main() body for i in range(10):     print(threading.current_thread().getName() + \" \" + str(i))     if i == 2:         # Create and run the first thread         t1 = threading.Thread(target = action, args = (10,))         t1.start()         # Create and run the first thread         t2 = threading.Thread(target = action, args = (10,))         t2.start()  print('Task Complete!') <pre>MainThread 0\nMainThread 1\nMainThread 2\nThread-16 0\nThread-16 1\nThread-16 2\nThread-16 3\nThread-16 4\nThread-16 5\nThread-16 6\nThread-16 7\nThread-16 8\nThread-16 9\nThread-17 0MainThread 3\nThread-17 1\nThread-17 2\nThread-17 3\nThread-17 4\nThread-17 5\nThread-17 6\nThread-17 7\nThread-17 8\nThread-17 9\n\nMainThread 4\nMainThread 5\nMainThread 6\nMainThread 7\nMainThread 8\nMainThread 9\nTask Complete!\nWall time: 3.99 ms\n</pre> <p>Although the above script only creates 2 threads, actually it works as 3. Because when we run the python script, it would automatically create at least one Main Thread</p> In\u00a0[10]: Copied! <pre>%%time\n# Crate a subclass of Thread\nclass YlThread(threading.Thread):\n    def __init__(self):\n        threading.Thread.__init__(self)\n        self.i = 0\n    \n    # overwrite it's run() function as the main body\n    def run(self):\n        while self.i&lt; 5:\n            print (threading.current_thread().getName() + \" \" + str(self.i))\n            self.i +=1\n\nfor i in range(10):\n    print(threading.current_thread().getName() + \" \" + str(i))\n    if i == 2:\n        ft1 = YlThread()\n        ft1.start()\n        ft2 = YlThread()\n        ft2.start()\nprint('Task Finished')\n</pre> %%time # Crate a subclass of Thread class YlThread(threading.Thread):     def __init__(self):         threading.Thread.__init__(self)         self.i = 0          # overwrite it's run() function as the main body     def run(self):         while self.i&lt; 5:             print (threading.current_thread().getName() + \" \" + str(self.i))             self.i +=1  for i in range(10):     print(threading.current_thread().getName() + \" \" + str(i))     if i == 2:         ft1 = YlThread()         ft1.start()         ft2 = YlThread()         ft2.start() print('Task Finished') <pre>MainThread 0\nMainThread 1\nMainThread 2\nThread-20 0\nThread-20 1\nThread-20 2\nThread-20 3\nThread-20 4\nThread-21 0\nThread-21 1\nThread-21 2\nThread-21 3\nThread-21 4\nMainThread 3\nMainThread 4\nMainThread 5\nMainThread 6\nMainThread 7\nMainThread 8\nMainThread 9\nTask Finished\nWall time: 3.99 ms\n</pre> In\u00a0[11]: Copied! <pre>def action(max):\n    for i in range(max):\n        # use current_thread() function to get the current running threading\n        # use getName() function to get the name of current running threading\n        print(threading.current_thread().name + \" \" + str(i))\n        \nfor i in range(10):\n    print(threading.current_thread().name + \" \" + str(i))\n    if i == 2:\n        # These two lines would not create 2 threads\n        threading.Thread(target=action, args = (5,)).run()\n        threading.Thread(target=action, args = (5,)).run()\n</pre> def action(max):     for i in range(max):         # use current_thread() function to get the current running threading         # use getName() function to get the name of current running threading         print(threading.current_thread().name + \" \" + str(i))          for i in range(10):     print(threading.current_thread().name + \" \" + str(i))     if i == 2:         # These two lines would not create 2 threads         threading.Thread(target=action, args = (5,)).run()         threading.Thread(target=action, args = (5,)).run() <pre>MainThread 0\nMainThread 1\nMainThread 2\nMainThread 0\nMainThread 1\nMainThread 2\nMainThread 3\nMainThread 4\nMainThread 0\nMainThread 1\nMainThread 2\nMainThread 3\nMainThread 4\nMainThread 3\nMainThread 4\nMainThread 5\nMainThread 6\nMainThread 7\nMainThread 8\nMainThread 9\n</pre> <p>When a thread complete task or catch some error, it would go dead. Do not want to use the <code>start()</code> function to call it again. Dead means it would never work again.</p> In\u00a0[14]: Copied! <pre># example for calling a thread already dead\nsd = threading.Thread(target= action, args = (5,))\nfor i in range(20):\n    print(threading.current_thread().name + \" \" + str(i))\n    if i == 20:\n        sd.start()\n        print(sd.is_alive())\nif i &gt; 20 and not(sd.is_alive()):\n    sd.start()\n</pre> # example for calling a thread already dead sd = threading.Thread(target= action, args = (5,)) for i in range(20):     print(threading.current_thread().name + \" \" + str(i))     if i == 20:         sd.start()         print(sd.is_alive()) if i &gt; 20 and not(sd.is_alive()):     sd.start() <pre>MainThread 0\nMainThread 1\nMainThread 2\nMainThread 3\nMainThread 4\nMainThread 5\nMainThread 6\nMainThread 7\nMainThread 8\nMainThread 9\nMainThread 10\nMainThread 11\nMainThread 12\nMainThread 13\nMainThread 14\nMainThread 15\nMainThread 16\nMainThread 17\nMainThread 18\nMainThread 19\n</pre> In\u00a0[15]: Copied! <pre>threading.Thread(target=action,args=(10,),name=\"New Thread\").start()\nfor i in range(10):\n    if i == 2:\n        jt = threading.Thread(target=action,args=(10,),name = \"Joined Thread\")\n        jt.start()\n        # In the MainThread we call the join() under jt thread\n        # So the MainThread would wait until jt Thread complete all tasks\n        jt.join()\n    print(threading.current_thread().name + \" \" + str(i))\n</pre> threading.Thread(target=action,args=(10,),name=\"New Thread\").start() for i in range(10):     if i == 2:         jt = threading.Thread(target=action,args=(10,),name = \"Joined Thread\")         jt.start()         # In the MainThread we call the join() under jt thread         # So the MainThread would wait until jt Thread complete all tasks         jt.join()     print(threading.current_thread().name + \" \" + str(i)) <pre>New Thread 0\nNew Thread 1\nNew Thread 2\nNew Thread 3\nNew Thread 4\nNew Thread 5\nNew Thread 6\nNew Thread 7\nNew Thread 8\nNew Thread 9\nMainThread 0\nMainThread 1\nJoined Thread 0\nJoined Thread 1\nJoined Thread 2\nJoined Thread 3\nJoined Thread 4\nJoined Thread 5\nJoined Thread 6\nJoined Thread 7\nJoined Thread 8\nJoined Thread 9\nMainThread 2\nMainThread 3\nMainThread 4\nMainThread 5\nMainThread 6\nMainThread 7\nMainThread 8\nMainThread 9\n</pre> In\u00a0[19]: Copied! <pre>import time\nfor i in range(5):\n    print(\"Current time : %s\" %time.ctime())\n    jt = threading.Thread(target=action,args=(5,))\n    if i == 2:\n        jt.start()\n    time.sleep(1)\n    print(threading.current_thread().getName() + \" \" + str(i))\n</pre> import time for i in range(5):     print(\"Current time : %s\" %time.ctime())     jt = threading.Thread(target=action,args=(5,))     if i == 2:         jt.start()     time.sleep(1)     print(threading.current_thread().getName() + \" \" + str(i)) <pre>Current time : Sat Apr 11 11:47:38 2020\nMainThread 0\nCurrent time : Sat Apr 11 11:47:39 2020\nMainThread 1\nCurrent time : Sat Apr 11 11:47:40 2020\nThread-35 0\nThread-35 1\nThread-35 2\nThread-35 3\nThread-35 4\nMainThread 2\nCurrent time : Sat Apr 11 11:47:41 2020\nMainThread 3\nCurrent time : Sat Apr 11 11:47:42 2020\nMainThread 4\n</pre> In\u00a0[26]: Copied! <pre>class Account:\n    # define a constructor\n    def __init__(self,account_no,balance):\n        self.account_no = account_no\n        self.balance = balance\n\n# Define a function to simulate withdraw money from a bank\ndef draw(account,draw_amount):\n    # sufficient balance\n    if account.balance &gt;= draw_amount:\n        print(threading.current_thread().name + \" withdraw successful \uff1a \" + str(draw_amount))\n        time.sleep(0.001)\n        # modify the balance\n        account.balance -= draw_amount\n        print(\"\\n Balance is : \" + str(account.balance))\n    else:\n        print(threading.current_thread().name + \" withdraw failed! insufficient balance!\")\n</pre> class Account:     # define a constructor     def __init__(self,account_no,balance):         self.account_no = account_no         self.balance = balance  # Define a function to simulate withdraw money from a bank def draw(account,draw_amount):     # sufficient balance     if account.balance &gt;= draw_amount:         print(threading.current_thread().name + \" withdraw successful \uff1a \" + str(draw_amount))         time.sleep(0.001)         # modify the balance         account.balance -= draw_amount         print(\"\\n Balance is : \" + str(account.balance))     else:         print(threading.current_thread().name + \" withdraw failed! insufficient balance!\")         In\u00a0[27]: Copied! <pre># Create a account\nacct = Account(\"yyl\",1000)\n# Use two thread to withdraw money simultaneously\nthreading.Thread(name = 'yxy',target= draw,args=(acct,800)).start()\nthreading.Thread(name = 'ywu',target= draw,args=(acct,800)).start()\n</pre> # Create a account acct = Account(\"yyl\",1000) # Use two thread to withdraw money simultaneously threading.Thread(name = 'yxy',target= draw,args=(acct,800)).start() threading.Thread(name = 'ywu',target= draw,args=(acct,800)).start() <pre>yxy withdraw successful \uff1a 800\nywu withdraw successful \uff1a 800\n\n Balance is : 200\n\n Balance is : -600\n</pre> <p>You would find the balance becomes negative in the end. For preventing this situation, Thread module provides <code>Lock</code> and <code>RLock</code> two classes</p> <ul> <li><code>acquire(blocking = True, timeout = -1)</code> Lock <code>Lock</code> or <code>RLock</code> objects within <code>timeout</code> seconds.</li> <li><code>release()</code> release those objects.</li> </ul> In\u00a0[42]: Copied! <pre>class Account:\n    def __init__(self,account_no,balance):\n        # Encapsulate two variables\n        self.account_no = account_no\n        self._balance = balance\n        self.lock = threading.RLock()\n        \n    # Define a function to update balance\n    def getBalance(self):\n        return self._balance\n    def draw(self,draw_amount):\n        # Lock\n        self.lock.acquire()\n        try:\n            if self._balance &gt;= draw_amount:\n                print(threading.current_thread().name + \" withdraw successful \uff1a \" + str(draw_amount))\n                time.sleep(0.001)\n                # update balance\n                self._balance -= draw_amount\n                print(\"\\n Balance is : \" + str(self._balance))\n            else:\n                print(threading.current_thread().name + \" withdraw failed! insufficient balance!\")       \n        finally:\n            # Complete updating, release the lock\n            self.lock.release()\n</pre> class Account:     def __init__(self,account_no,balance):         # Encapsulate two variables         self.account_no = account_no         self._balance = balance         self.lock = threading.RLock()              # Define a function to update balance     def getBalance(self):         return self._balance     def draw(self,draw_amount):         # Lock         self.lock.acquire()         try:             if self._balance &gt;= draw_amount:                 print(threading.current_thread().name + \" withdraw successful \uff1a \" + str(draw_amount))                 time.sleep(0.001)                 # update balance                 self._balance -= draw_amount                 print(\"\\n Balance is : \" + str(self._balance))             else:                 print(threading.current_thread().name + \" withdraw failed! insufficient balance!\")                finally:             # Complete updating, release the lock             self.lock.release() In\u00a0[43]: Copied! <pre>def draw(account,draw_amount):\n    account.draw(draw_amount)\n\n# Create a account\nacct = Account(\"yyl\",1000)\n# Use two thread to withdraw money simultaneously\nthreading.Thread(name = 'yxy',target= draw,args=(acct,800)).start()\nthreading.Thread(name = 'ywu',target= draw,args=(acct,800)).start()\n</pre> def draw(account,draw_amount):     account.draw(draw_amount)  # Create a account acct = Account(\"yyl\",1000) # Use two thread to withdraw money simultaneously threading.Thread(name = 'yxy',target= draw,args=(acct,800)).start() threading.Thread(name = 'ywu',target= draw,args=(acct,800)).start() <pre>yxy withdraw successful \uff1a 800\n\n Balance is : 200\nywu withdraw failed! insufficient balance!\n</pre> In\u00a0[46]: Copied! <pre>%%time\nfrom concurrent.futures import ThreadPoolExecutor\n\ndef action(max):\n    my_sum = 0\n    for i in range(max):\n        print(threading.current_thread().name + ' ' + str(i))\n        my_sum += i\n    return my_sum\n\n# Create a thread pool with size 2\npool = ThreadPoolExecutor(max_workers = 2)\n\n# Submit one mission to the thread pool, 10 as the input parameter\nfuture1 = pool.submit(action,10)\n\n# Submit another mission to the thread pool, 20 as the input parameter\nfuture2 = pool.submit(action,20)\n\n# Check if future1 are finished\nprint(future1.done())\ntime.sleep(1)\n\n# Check if future2 are finished\nprint(future2.done())\n\n# Check their result\nprint(future1.result())\nprint(future2.result())\n\n# Shutdown the pool\npool.shutdown()\n</pre> %%time from concurrent.futures import ThreadPoolExecutor  def action(max):     my_sum = 0     for i in range(max):         print(threading.current_thread().name + ' ' + str(i))         my_sum += i     return my_sum  # Create a thread pool with size 2 pool = ThreadPoolExecutor(max_workers = 2)  # Submit one mission to the thread pool, 10 as the input parameter future1 = pool.submit(action,10)  # Submit another mission to the thread pool, 20 as the input parameter future2 = pool.submit(action,20)  # Check if future1 are finished print(future1.done()) time.sleep(1)  # Check if future2 are finished print(future2.done())  # Check their result print(future1.result()) print(future2.result())  # Shutdown the pool pool.shutdown() <pre>ThreadPoolExecutor-2_0 0\nThreadPoolExecutor-2_0 1\nThreadPoolExecutor-2_0 2\nThreadPoolExecutor-2_0 3\nThreadPoolExecutor-2_0 4ThreadPoolExecutor-2_1 0False\nThreadPoolExecutor-2_1 1\nThreadPoolExecutor-2_1 2\n\nThreadPoolExecutor-2_1 3\nThreadPoolExecutor-2_1 4\nThreadPoolExecutor-2_1 5\nThreadPoolExecutor-2_1 6\nThreadPoolExecutor-2_1 7\nThreadPoolExecutor-2_1 8\nThreadPoolExecutor-2_1 9\nThreadPoolExecutor-2_1 10\nThreadPoolExecutor-2_1 11\nThreadPoolExecutor-2_1 12\nThreadPoolExecutor-2_1 13\nThreadPoolExecutor-2_1 14\nThreadPoolExecutor-2_1 15\nThreadPoolExecutor-2_1 16\nThreadPoolExecutor-2_1 17\nThreadPoolExecutor-2_1 18\nThreadPoolExecutor-2_1 19\n\nThreadPoolExecutor-2_0 5\nThreadPoolExecutor-2_0 6\nThreadPoolExecutor-2_0 7\nThreadPoolExecutor-2_0 8\nThreadPoolExecutor-2_0 9\nTrue\n45\n190\nWall time: 1 s\n</pre> <p>We could use <code>result()</code> function to get the return from one thread, but it would block other threads until finish the return. if you do not want to block others, could use <code>add_done_callback()</code> function under <code>Future</code> class to add a callback function. When threads finish their task, they would execute the callback function automatically.</p> In\u00a0[47]: Copied! <pre>%%time\n# Create a pool with size 2\nwith ThreadPoolExecutor(max_workers=2) as pool:\n    future1 = pool.submit(action,10)\n    future2 = pool.submit(action,20)\n    \n    def get_result(future):\n        print(future.result())\n    \n    # Add callback function to threads\n    future1.add_done_callback(get_result)\n    future2.add_done_callback(get_result)\n    print(\"-----------\")\n</pre> %%time # Create a pool with size 2 with ThreadPoolExecutor(max_workers=2) as pool:     future1 = pool.submit(action,10)     future2 = pool.submit(action,20)          def get_result(future):         print(future.result())          # Add callback function to threads     future1.add_done_callback(get_result)     future2.add_done_callback(get_result)     print(\"-----------\") <pre>ThreadPoolExecutor-3_0 0\nThreadPoolExecutor-3_0 1\nThreadPoolExecutor-3_0 2\nThreadPoolExecutor-3_0 3\nThreadPoolExecutor-3_0 4\nThreadPoolExecutor-3_0 5\nThreadPoolExecutor-3_0 6\nThreadPoolExecutor-3_0 7\nThreadPoolExecutor-3_0 8\nThreadPoolExecutor-3_0 9\nThreadPoolExecutor-3_0 0\nThreadPoolExecutor-3_0 1\nThreadPoolExecutor-3_0 2\nThreadPoolExecutor-3_0 3\nThreadPoolExecutor-3_0 4\nThreadPoolExecutor-3_0 5\nThreadPoolExecutor-3_0 6\nThreadPoolExecutor-3_0 7\nThreadPoolExecutor-3_0 8\nThreadPoolExecutor-3_0 9\nThreadPoolExecutor-3_0 10\nThreadPoolExecutor-3_0 11\nThreadPoolExecutor-3_0 12\nThreadPoolExecutor-3_0 13\nThreadPoolExecutor-3_0 14\nThreadPoolExecutor-3_0 15\nThreadPoolExecutor-3_0 16\nThreadPoolExecutor-3_0 17\nThreadPoolExecutor-3_0 18\nThreadPoolExecutor-3_0 19\n45\n190\n-----------\nWall time: 3.97 ms\n</pre> In\u00a0[48]: Copied! <pre>%%time\nwith ThreadPoolExecutor(max_workers=4) as pool:\n    # The input tuple has three components, so it would create 3 threads\n    results = pool.map(action,(5,10,15))\n    print('---------------')\n    \nfor r in results:\n    print(r)\n</pre> %%time with ThreadPoolExecutor(max_workers=4) as pool:     # The input tuple has three components, so it would create 3 threads     results = pool.map(action,(5,10,15))     print('---------------')      for r in results:     print(r) <pre>ThreadPoolExecutor-4_0 0\nThreadPoolExecutor-4_0 1ThreadPoolExecutor-4_1 0\nThreadPoolExecutor-4_1 1\nThreadPoolExecutor-4_1 2\nThreadPoolExecutor-4_1 3\nThreadPoolExecutor-4_1 4\nThreadPoolExecutor-4_0 2\nThreadPoolExecutor-4_0 3\nThreadPoolExecutor-4_0 4\n\nThreadPoolExecutor-4_1 5\nThreadPoolExecutor-4_1 6\nThreadPoolExecutor-4_1 7\nThreadPoolExecutor-4_1 8\nThreadPoolExecutor-4_1 9\nThreadPoolExecutor-4_1 0\nThreadPoolExecutor-4_1 1\nThreadPoolExecutor-4_1 2\nThreadPoolExecutor-4_1 3\nThreadPoolExecutor-4_1 4\nThreadPoolExecutor-4_1 5\nThreadPoolExecutor-4_1 6\nThreadPoolExecutor-4_1 7\nThreadPoolExecutor-4_1 8\nThreadPoolExecutor-4_1 9\nThreadPoolExecutor-4_1 10\nThreadPoolExecutor-4_1 11\nThreadPoolExecutor-4_1 12\nThreadPoolExecutor-4_1 13\nThreadPoolExecutor-4_1 14\n---------------\n10\n45\n105\nWall time: 3.99 ms\n</pre> In\u00a0[50]: Copied! <pre># import os\n\n# print('FathreProcess(%s) has started!' % os.getpid())\n\n# # Create a subprocess using fork, which means the following scripts would be executed in two different threads\n# pid = os.fork()\n# # If pig equal to 0, means it in the subprocess\n# if pig == 0:\n#     print('SubProcess, with ID %s, FatherProcess is %s' %(os.getpid(),os.getppid()))\n# else:\n#     print('SubProcess ID is %s' % pid)\n# print('Finished!')\n</pre> # import os  # print('FathreProcess(%s) has started!' % os.getpid())  # # Create a subprocess using fork, which means the following scripts would be executed in two different threads # pid = os.fork() # # If pig equal to 0, means it in the subprocess # if pig == 0: #     print('SubProcess, with ID %s, FatherProcess is %s' %(os.getpid(),os.getppid())) # else: #     print('SubProcess ID is %s' % pid) # print('Finished!') <ul> <li>Use<code>multiprocessing.Process</code> to create a subprocess</li> </ul> In\u00a0[52]: Copied! <pre>import multiprocessing\nclass MyProcess(multiprocessing.Process):\n    def __init__(self,max):\n        self.max = max\n        super().__init__()\n    # rewrite the run function\n    def run(self):\n        for i in range(self.max):\n            print(\"SubProcess(%s), FatherProcess(%s); %d\" % (os.getpid(),os.getppid(),i))\nif __name__ == '__main__':\n    for i in range(10):\n        print(\"FatherProcess(%s) : %d\" %(os.getpid(),i))\n        if i == 5:\n            mp1 = MyProcess(10)\n            mp1.start()\n            mp2 = MyProcess(10)\n            mp2.start()\n            mp2.join()\n    print('Task finished')\n</pre> import multiprocessing class MyProcess(multiprocessing.Process):     def __init__(self,max):         self.max = max         super().__init__()     # rewrite the run function     def run(self):         for i in range(self.max):             print(\"SubProcess(%s), FatherProcess(%s); %d\" % (os.getpid(),os.getppid(),i)) if __name__ == '__main__':     for i in range(10):         print(\"FatherProcess(%s) : %d\" %(os.getpid(),i))         if i == 5:             mp1 = MyProcess(10)             mp1.start()             mp2 = MyProcess(10)             mp2.start()             mp2.join()     print('Task finished') In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"Ch14-Parallel/Parallel_in_Python/#11-create-thread-and-run","title":"1.1 Create Thread and Run\u00b6","text":""},{"location":"Ch14-Parallel/Parallel_in_Python/#12-create-a-local-class-inherited-by-thread-class","title":"1.2 Create a Local Class inherited by Thread Class\u00b6","text":"<p>Define the subclass of Threads, we need to overwrite it's <code>run()</code> function, the body of <code>run()</code> represents the task each thread need to complete.</p>"},{"location":"Ch14-Parallel/Parallel_in_Python/#13-the-life-circule-of-threads","title":"1.3 The Life Circule of Threads\u00b6","text":"<p>The life circule of a thread could be divided into</p> <ul> <li>New</li> <li>Ready</li> <li>Running</li> <li>Blocked</li> <li>Dead</li> </ul> <p>If you directly call <code>run()</code> within a Thread object, CPU would execute line by line instead of parallel.</p>"},{"location":"Ch14-Parallel/Parallel_in_Python/#14-manipulate-threads","title":"1.4 Manipulate Threads\u00b6","text":"<ul> <li><code>join()</code> function</li> <li><code>sleep()</code> function</li> </ul>"},{"location":"Ch14-Parallel/Parallel_in_Python/#15-concurrency-problem","title":"1.5 Concurrency Problem\u00b6","text":""},{"location":"Ch14-Parallel/Parallel_in_Python/#using-lock-class-to-get-the-following-features","title":"Using <code>Lock</code> class to get the following features\u00b6","text":"<ul> <li>The objects created from this class allows multiple access.</li> <li>No matter what function is called from this object, you would get the right answer.</li> </ul>"},{"location":"Ch14-Parallel/Parallel_in_Python/#16-thread-pool","title":"1.6 Thread Pool\u00b6","text":"<ul> <li><code>ThreadPoolExecutor</code> for building a thread pool</li> <li><code>ProcessPoolExecutor</code> for building a processor pool</li> </ul>"},{"location":"Ch14-Parallel/Parallel_in_Python/#exectuor-provides-following-functions","title":"Exectuor provides following functions\u00b6","text":"<ul> <li><code>submit(fn,*args,**kwargs)</code> Pass fn function to the thread pool</li> <li><code>map(func,*iterables, timeout = None, chunksize = 1)</code> Asynchronous execute multiple threads</li> <li><code>shutdown(wait = True)</code> Shunt down the thread pool</li> </ul>"},{"location":"Ch14-Parallel/Parallel_in_Python/#map-function-would-automatically-create-threads-for-the-iterable-inputs-using-with-open-to-close-pool-automatically","title":"<code>map()</code> function would automatically create threads for the iterable inputs.  (Using <code>with open</code> to close pool automatically)\u00b6","text":""},{"location":"Ch14-Parallel/Parallel_in_Python/#17-multiple-processes","title":"1.7 Multiple Processes\u00b6","text":"<ul> <li>Use <code>fork()</code> under the <code>os</code> module could create a subprocess (Not Work on Windows System)</li> </ul>"},{"location":"Ch15-Web-Service/Untitled/","title":"Untitled","text":"Table of Contents <ul><li>1\u00a0\u00a0<code>urllib.parse</code> module</li><li>2\u00a0\u00a0Use <code>urllib.request</code> to read resources<ul><li>2.1\u00a0\u00a0Send <code>Get</code></li><li>2.2\u00a0\u00a0Send <code>Post</code></li><li>2.3\u00a0\u00a0Send <code>Put</code></li><li>2.4\u00a0\u00a0Multi-thread download unit</li></ul></li></ul> In\u00a0[1]: Copied! <pre>from urllib.parse import *\n</pre> from urllib.parse import * In\u00a0[2]: Copied! <pre>result = urlparse('http://www.crazyit.org:80/index.php;yeeku?name=fkit#frag')\nprint(result)\n</pre> result = urlparse('http://www.crazyit.org:80/index.php;yeeku?name=fkit#frag') print(result) <pre>ParseResult(scheme='http', netloc='www.crazyit.org:80', path='/index.php', params='yeeku', query='name=fkit', fragment='frag')\n</pre> In\u00a0[3]: Copied! <pre># use index or attributes name to get contents\nprint('scheme:',result.scheme,result[0])\nprint('host and port', result.netloc, result[1])\nprint('host',result.hostname)\nprint('port',result.port)\nprint('resource path',result.path,result[2])\nprint('parameter',result.params,result[3])\nprint('search string',result.query,result[4])\nprint('fragment:',result.fragment,result[5])\nprint(result.geturl())\n</pre> # use index or attributes name to get contents print('scheme:',result.scheme,result[0]) print('host and port', result.netloc, result[1]) print('host',result.hostname) print('port',result.port) print('resource path',result.path,result[2]) print('parameter',result.params,result[3]) print('search string',result.query,result[4]) print('fragment:',result.fragment,result[5]) print(result.geturl()) <pre>scheme: http http\nhost and port www.crazyit.org:80 www.crazyit.org:80\nhost www.crazyit.org\nport 80\nresource path /index.php /index.php\nparameter yeeku yeeku\nsearch string name=fkit name=fkit\nfragment: frag frag\nhttp://www.crazyit.org:80/index.php;yeeku?name=fkit#frag\n</pre> <p><code>urlunparse()</code> is an opposite method to <code>urlparse()</code>, which combine parameters together to get the URL address</p> In\u00a0[4]: Copied! <pre>result = urlunparse(('http','www.crazyit.org:80','index.php','yeeku','name=fkit','frag'))\nprint('url: ',result)\n</pre> result = urlunparse(('http','www.crazyit.org:80','index.php','yeeku','name=fkit','frag')) print('url: ',result) <pre>url:  http://www.crazyit.org:80/index.php;yeeku?name=fkit#frag\n</pre> In\u00a0[5]: Copied! <pre>from urllib.request import *\n# read the resource from url\nresult = urlopen('https://fkjava.org/')\ndata = result.read().decode('utf-8')\nprint(data)\n</pre> from urllib.request import * # read the resource from url result = urlopen('https://fkjava.org/') data = result.read().decode('utf-8') print(data) <pre>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n\n    \n\n    \n    &lt;title&gt;\u75af\u72c2\u7cfb\u5217\u56fe\u4e66&lt;/title&gt;\n    \n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\"&gt;\n    \n    &lt;meta name=\"description\" content=\"\u75af\u72c2\u8f6f\u4ef6\u7684\u5b98\u65b9\u7f51\u7ad9\"&gt;\n&lt;meta property=\"og:type\" content=\"website\"&gt;\n&lt;meta property=\"og:title\" content=\"\u75af\u72c2\u7cfb\u5217\u56fe\u4e66\"&gt;\n&lt;meta property=\"og:url\" content=\"https:&amp;#x2F;&amp;#x2F;fkjava.org&amp;#x2F;index.html\"&gt;\n&lt;meta property=\"og:site_name\" content=\"\u75af\u72c2\u7cfb\u5217\u56fe\u4e66\"&gt;\n&lt;meta property=\"og:description\" content=\"\u75af\u72c2\u8f6f\u4ef6\u7684\u5b98\u65b9\u7f51\u7ad9\"&gt;\n&lt;meta property=\"og:locale\" content=\"zh_CN\"&gt;\n&lt;meta property=\"article:author\" content=\"\u75af\u72c2\u8f6f\u4ef6\"&gt;\n&lt;meta property=\"article:tag\" content=\"\u75af\u72c2\u8f6f\u4ef6\"&gt;\n&lt;meta property=\"article:tag\" content=\"\u75af\u72c2Java\"&gt;\n&lt;meta property=\"article:tag\" content=\"\u75af\u72c2Python\"&gt;\n&lt;meta property=\"article:tag\" content=\"Java\u5b66\u4e60\"&gt;\n&lt;meta property=\"article:tag\" content=\"Python\u5b66\u4e60\"&gt;\n&lt;meta name=\"twitter:card\" content=\"summary\"&gt;\n    \n\n    \n\n    \n\n    \n&lt;link rel=\"stylesheet\" href=\"/libs/font-awesome/css/font-awesome.min.css\"&gt;\n\n    \n&lt;link rel=\"stylesheet\" href=\"/libs/titillium-web/styles.css\"&gt;\n\n    \n&lt;link rel=\"stylesheet\" href=\"/libs/source-code-pro/styles.css\"&gt;\n\n\n    \n&lt;link rel=\"stylesheet\" href=\"/css/style.css\"&gt;\n\n\n    \n&lt;script src=\"/libs/jquery/3.4.1/jquery.min.js\"&gt;&lt;/script&gt;\n\n    \n    \n        \n&lt;link rel=\"stylesheet\" href=\"/libs/lightgallery/css/lightgallery.min.css\"&gt;\n\n    \n    \n        \n&lt;link rel=\"stylesheet\" href=\"/libs/justified-gallery/justifiedGallery.min.css\"&gt;\n\n    \n    \n    \n\n\n&lt;meta name=\"generator\" content=\"Hexo 4.1.0\"&gt;&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;div id=\"wrap\"&gt;\n        &lt;header id=\"header\"&gt;\n    &lt;div id=\"header-outer\" class=\"outer\"&gt;\n        &lt;div class=\"container\"&gt;\n            &lt;div class=\"container-inner\"&gt;\n                &lt;div id=\"header-title\"&gt;\n                    &lt;h1 class=\"logo-wrap\"&gt;\n                        &lt;a href=\"/\" class=\"logo\"&gt;&lt;/a&gt;\n                    &lt;/h1&gt;\n                    \n                        &lt;h2 class=\"subtitle-wrap\"&gt;\n                            &lt;p class=\"subtitle\"&gt;\u75af\u72c2\u7cfb\u5217\u56fe\u4e66\u7684\u7f51\u7ad9&lt;/p&gt;\n                        &lt;/h2&gt;\n                    \n                &lt;/div&gt;\n                &lt;div id=\"header-inner\" class=\"nav-container\"&gt;\n                    &lt;a id=\"main-nav-toggle\" class=\"nav-icon fa fa-bars\"&gt;&lt;/a&gt;\n                    &lt;div class=\"nav-container-inner\"&gt;\n                        &lt;ul id=\"main-nav\"&gt;\n                            \n                                &lt;li class=\"main-nav-list-item\" &gt;\n                                    &lt;a class=\"main-nav-list-link\" href=\"/\"&gt;\u4e3b\u9875&lt;/a&gt;\n                                &lt;/li&gt;\n                            \n                                        &lt;ul class=\"main-nav-list\"&gt;&lt;li class=\"main-nav-list-item\"&gt;&lt;a class=\"main-nav-list-link\" href=\"/categories/Java/\"&gt;Java&lt;/a&gt;&lt;/li&gt;&lt;li class=\"main-nav-list-item\"&gt;&lt;a class=\"main-nav-list-link\" href=\"/categories/Python/\"&gt;Python&lt;/a&gt;&lt;/li&gt;&lt;li class=\"main-nav-list-item\"&gt;&lt;a class=\"main-nav-list-link\" href=\"/categories/%E5%89%8D%E7%AB%AF/\"&gt;\u524d\u7aef&lt;/a&gt;&lt;/li&gt;&lt;li class=\"main-nav-list-item\"&gt;&lt;a class=\"main-nav-list-link\" href=\"/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/\"&gt;\u79fb\u52a8\u5f00\u53d1&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;\n                                    \n                                &lt;li class=\"main-nav-list-item\" &gt;\n                                    &lt;a class=\"main-nav-list-link\" href=\"/archives/\"&gt;\u5f52\u6863&lt;/a&gt;\n                                &lt;/li&gt;\n                            \n                                &lt;li class=\"main-nav-list-item\" &gt;\n                                    &lt;a class=\"main-nav-list-link\" href=\"/tags/\"&gt;\u6807\u7b7e&lt;/a&gt;\n                                &lt;/li&gt;\n                            \n                                &lt;li class=\"main-nav-list-item\" &gt;\n                                    &lt;a class=\"main-nav-list-link\" href=\"/about/index.html\"&gt;\u5173\u4e8e&lt;/a&gt;\n                                &lt;/li&gt;\n                            \n                        &lt;/ul&gt;\n                        &lt;nav id=\"sub-nav\"&gt;\n                            &lt;div id=\"search-form-wrap\"&gt;\n\n    &lt;form class=\"search-form\"&gt;\n        &lt;input type=\"text\" class=\"ins-search-input search-form-input\" placeholder=\"\u641c\u7d22\" /&gt;\n        &lt;button type=\"submit\" class=\"search-form-submit\"&gt;&lt;/button&gt;\n    &lt;/form&gt;\n    &lt;div class=\"ins-search\"&gt;\n    &lt;div class=\"ins-search-mask\"&gt;&lt;/div&gt;\n    &lt;div class=\"ins-search-container\"&gt;\n        &lt;div class=\"ins-input-wrapper\"&gt;\n            &lt;input type=\"text\" class=\"ins-search-input\" placeholder=\"\u60f3\u8981\u67e5\u627e\u4ec0\u4e48...\" /&gt;\n            &lt;span class=\"ins-close ins-selectable\"&gt;&lt;i class=\"fa fa-times-circle\"&gt;&lt;/i&gt;&lt;/span&gt;\n        &lt;/div&gt;\n        &lt;div class=\"ins-section-wrapper\"&gt;\n            &lt;div class=\"ins-section-container\"&gt;&lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n&lt;script&gt;\n(function (window) {\n    var INSIGHT_CONFIG = {\n        TRANSLATION: {\n            POSTS: '\u6587\u7ae0',\n            PAGES: '\u9875\u9762',\n            CATEGORIES: '\u5206\u7c7b',\n            TAGS: '\u6807\u7b7e',\n            UNTITLED: '(\u672a\u547d\u540d)',\n        },\n        ROOT_URL: '/',\n        CONTENT_URL: '/content.json',\n    };\n    window.INSIGHT_CONFIG = INSIGHT_CONFIG;\n})(window);\n&lt;/script&gt;\n\n&lt;script src=\"/js/insight.js\"&gt;&lt;/script&gt;\n\n\n&lt;/div&gt;\n                        &lt;/nav&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/header&gt;\n        &lt;div class=\"container\"&gt;\n            &lt;div class=\"main-body container-inner\"&gt;\n                &lt;div class=\"main-body-inner\"&gt;\n                    &lt;section id=\"main\"&gt;\n                        &lt;div class=\"main-body-header\"&gt;\n    &lt;h1 class=\"header\"&gt;\n    \n    &lt;em class=\"page-title-link\" data-url=\"home\"&gt;\u4e3b\u9875&lt;/em&gt;\n    &lt;/h1&gt;\n&lt;/div&gt;\n\n                        &lt;div class=\"main-body-content\"&gt;\n                            \n\n    \n    \n        \n        \n        &lt;section class=\"archives-wrap\"&gt;\n            &lt;div class=\"archive-year-wrap\"&gt;\n                &lt;a href=\"/archives/2020\" class=\"archive-year\"&gt;&lt;i class=\"icon fa fa-calendar-o\"&gt;&lt;/i&gt;2020&lt;/a&gt;\n            &lt;/div&gt;\n            &lt;div class=\"archives\"&gt;\n    \n    \n    \n        &lt;div class=\"article-row\"&gt;\n    \n        &lt;article class=\"article article-summary\"&gt;\n    &lt;div class=\"article-summary-inner\"&gt;\n        \n        &lt;a href=\"/2020/04/01/ssm/\" class=\"thumbnail\"&gt;\n    \n    \n        &lt;span style=\"background-image:url(/2020/04/01/ssm/ssm_cover.png)\" alt=\"\u8f7b\u91cf\u7ea7Java Web\u4f01\u4e1a\u5e94\u7528\u5b9e\u6218\u2015\u2015Spring MVC+Spring+MyBatis\u6574\u5408\u5f00\u53d1\" class=\"thumbnail-image\"&gt;&lt;/span&gt;\n    \n    \n        \n&lt;span class=\"comment-counter\"&gt;\n    &lt;i class=\"fa fa-comments-o\"&gt;&lt;/i&gt;\n    \n        &lt;span&gt;&lt;a href=\"https://fkjava.org/2020/04/01/ssm/#isso-thread\"&gt;&lt;/a&gt;&lt;/span&gt;\n    \n&lt;/span&gt;\n\n\n    \n&lt;/a&gt;\n\n        \n        &lt;div class=\"article-meta\"&gt;\n            &lt;div class=\"category\"&gt;\n            &lt;a class=\"article-category-link\" href=\"/categories/Java/\"&gt;Java&lt;/a&gt;\n            &lt;/div&gt;\n            &lt;div class=\"date\"&gt;&lt;time datetime=\"2020-04-01T13:46:00.000Z\" itemprop=\"datePublished\"&gt;2020-04-01&lt;/time&gt;&lt;/div&gt;\n        &lt;/div&gt;\n        \n    \n        &lt;h1 class=\"article-title\" itemprop=\"name\"&gt;\n        &lt;a href=\"/2020/04/01/ssm/\"&gt;\u8f7b\u91cf\u7ea7Java Web\u4f01\u4e1a\u5e94\u7528\u5b9e\u6218\u2015\u2015Spring MVC+Spring+MyBatis\u6574\u5408\u5f00\u53d1&lt;/a&gt;\n        &lt;/h1&gt;\n    \n\n        &lt;p class=\"article-excerpt\"&gt;\n            \u8fd9\u4e0d\u662f\u4e00\u4efd\u201cX\u5929\u7cbe\u901aJava EE\u5f00\u53d1\u201d\u5fc3\u7075\u9e21\u6c64\uff0c\u8fd9\u662f\u4e00\u672c\u4ee4\u4eba\u671b\u800c\u751f\u754f\u7684Java Web\u5f00\u53d1\u7684\u201c\u7816\u5934\u4e66\u201d\u3002\u5168\u9762\u3001\u6df1\u5165\u4ecb\u7ecdSpring MVC\u3001Spring\u3001MyBatis\u4e09\u5927\u6846\u67b6\u6574\u5408\u5f00\u53d1\u7684\u56fe\u4e66\uff0c\u4e0d\u4ec5\u6709\u4e09\u5927\u6846\u67b6\u7684\u6700\u4f73\u5b9e\u8df5\uff0c\u800c\u4e14\u5bf9Spring MVC\u3001MyBatis\u6846\u67b6\u7684\u6e90\u4ee3\u7801\u8fdb\u884c\u89e3\u8bfb\uff0c\u63d0\u4f9b\u5fae\u4fe1+QQ\u7b54\u7591\u7fa4\n\n    \n        \u4e66\u540d\uff1a\u8f7b\u91cf\u7ea7Java Web\u4f01\u4e1a\u5e94\u7528\u5b9e\u6218\u2015\u2015Spring MVC+\n        &lt;/p&gt;\n    &lt;/div&gt;\n&lt;/article&gt;\n    \n\n    \n    \n        \n            &lt;/div&gt;&lt;/section&gt;\n        \n        \n        &lt;section class=\"archives-wrap\"&gt;\n            &lt;div class=\"archive-year-wrap\"&gt;\n                &lt;a href=\"/archives/2019\" class=\"archive-year\"&gt;&lt;i class=\"icon fa fa-calendar-o\"&gt;&lt;/i&gt;2019&lt;/a&gt;\n            &lt;/div&gt;\n            &lt;div class=\"archives\"&gt;\n    \n    \n    \n        &lt;div class=\"article-row\"&gt;\n    \n        &lt;article class=\"article article-summary\"&gt;\n    &lt;div class=\"article-summary-inner\"&gt;\n        \n        &lt;a href=\"/2019/10/01/xml3/\" class=\"thumbnail\"&gt;\n    \n    \n        &lt;span style=\"background-image:url(/2019/10/01/xml3/xml3_cover.png)\" alt=\"\u75af\u72c2XML\u8bb2\u4e49\uff08\u7b2c3\u7248\uff09\" class=\"thumbnail-image\"&gt;&lt;/span&gt;\n    \n    \n        \n&lt;span class=\"comment-counter\"&gt;\n    &lt;i class=\"fa fa-comments-o\"&gt;&lt;/i&gt;\n    \n        &lt;span&gt;&lt;a href=\"https://fkjava.org/2019/10/01/xml3/#isso-thread\"&gt;&lt;/a&gt;&lt;/span&gt;\n    \n&lt;/span&gt;\n\n\n    \n&lt;/a&gt;\n\n        \n        &lt;div class=\"article-meta\"&gt;\n            &lt;div class=\"category\"&gt;\n            &lt;a class=\"article-category-link\" href=\"/categories/Java/\"&gt;Java&lt;/a&gt;\n            &lt;/div&gt;\n            &lt;div class=\"date\"&gt;&lt;time datetime=\"2019-10-01T13:46:00.000Z\" itemprop=\"datePublished\"&gt;2019-10-01&lt;/time&gt;&lt;/div&gt;\n        &lt;/div&gt;\n        \n    \n        &lt;h1 class=\"article-title\" itemprop=\"name\"&gt;\n        &lt;a href=\"/2019/10/01/xml3/\"&gt;\u75af\u72c2XML\u8bb2\u4e49\uff08\u7b2c3\u7248\uff09&lt;/a&gt;\n        &lt;/h1&gt;\n    \n\n        &lt;p class=\"article-excerpt\"&gt;\n            \u5168\u9762\u8986\u76d6XML\u76f8\u5173\u7684DTD\u3001XML\u3001Schema\u7b49\u77e5\u8bc6\uff0c\u5e76\u8986\u76d6XSLT\u3001XPath\u3001XQuery\u3001DOM\u3001SAX\u3001JDOM\u3001dom4j\u3001Web Service\u7b49\u9ad8\u7ea7\u5185\u5bb9\uff0c\u63d0\u4f9b\u5fae\u4fe1+QQ\u7b54\u7591\u7fa4\n\n    \n        \u4e66\u540d\uff1a\u75af\u72c2XML\u8bb2\u4e49\uff08\u7b2c3\u7248\uff09\n        \u51fa\u7248\u793e\uff1a\u7535\u5b50\u5de5\u4e1a\u51fa\u7248\u793e\n    \n    \n        \u51fa\u7248\u65f6\u95f4\uff1a2019-10-01\n        \u7248\u6b21\uff1a3\n    \n  \n        &lt;/p&gt;\n    &lt;/div&gt;\n&lt;/article&gt;\n    \n\n    \n    \n    \n    \n        &lt;article class=\"article article-summary\"&gt;\n    &lt;div class=\"article-summary-inner\"&gt;\n        \n        &lt;a href=\"/2019/04/01/java5/\" class=\"thumbnail\"&gt;\n    \n    \n        &lt;span style=\"background-image:url(/2019/04/01/java5/java5_cover.png)\" alt=\"\u75af\u72c2Java\u8bb2\u4e49\uff08\u7b2c5\u7248\uff09\uff08\u542bDVD\u5149\u76d8\u4e00\u5f20\uff09\" class=\"thumbnail-image\"&gt;&lt;/span&gt;\n    \n    \n        \n&lt;span class=\"comment-counter\"&gt;\n    &lt;i class=\"fa fa-comments-o\"&gt;&lt;/i&gt;\n    \n        &lt;span&gt;&lt;a href=\"https://fkjava.org/2019/04/01/java5/#isso-thread\"&gt;&lt;/a&gt;&lt;/span&gt;\n    \n&lt;/span&gt;\n\n\n    \n&lt;/a&gt;\n\n        \n        &lt;div class=\"article-meta\"&gt;\n            &lt;div class=\"category\"&gt;\n            &lt;a class=\"article-category-link\" href=\"/categories/Java/\"&gt;Java&lt;/a&gt;\n            &lt;/div&gt;\n            &lt;div class=\"date\"&gt;&lt;time datetime=\"2019-04-02T02:46:00.000Z\" itemprop=\"datePublished\"&gt;2019-04-01&lt;/time&gt;&lt;/div&gt;\n        &lt;/div&gt;\n        \n    \n        &lt;h1 class=\"article-title\" itemprop=\"name\"&gt;\n        &lt;a href=\"/2019/04/01/java5/\"&gt;\u75af\u72c2Java\u8bb2\u4e49\uff08\u7b2c5\u7248\uff09\uff08\u542bDVD\u5149\u76d8\u4e00\u5f20\uff09&lt;/a&gt;\n        &lt;/h1&gt;\n    \n\n        &lt;p class=\"article-excerpt\"&gt;\n            \u8986\u76d6Java\u7a33\u5b9a\u7684\u5927\u7248\u672cJava11\uff0c\u674e\u521a\u4f5c\u54c1\u6210\u4e3a\u8fd1\u767e\u4e07\u6d77\u5ce1\u4e24\u5cb8\u8bfb\u8005\u4e4b\u9009\uff0c\u672c\u4e66\u8d60\u90011700\u5206\u949f\u89c6\u9891\u3001\u6e90\u4ee3\u7801\u3001\u7535\u5b50\u4e66\u3001\u8bfe\u4ef6\u3001\u9762\u8bd5\u9898\uff0c\u63d0\u4f9b\u5fae\u4fe1+QQ\u7b54\u7591\u7fa4\n\n    \n        \u4e66\u540d\uff1a\u75af\u72c2Java\u8bb2\u4e49\uff08\u7b2c5\u7248\uff09\n        \u51fa\u7248\u793e\uff1a\u7535\u5b50\u5de5\u4e1a\u51fa\u7248\u793e\n    \n    \n        \u51fa\u7248\u65f6\u95f4\uff1a2019-04-01\n        \u7248\u6b21\uff1a5\n    \n    \n        \u54c1\u724c\uff1a\u535a\u6587\u89c6\u70b9\n\n        &lt;/p&gt;\n    &lt;/div&gt;\n&lt;/article&gt;\n    \n        &lt;/div&gt;\n    \n\n    \n    \n    \n    \n        &lt;div class=\"article-row\"&gt;\n    \n        &lt;article class=\"article article-summary\"&gt;\n    &lt;div class=\"article-summary-inner\"&gt;\n        \n        &lt;a href=\"/2019/04/01/python/\" class=\"thumbnail\"&gt;\n    \n    \n        &lt;span style=\"background-image:url(/2019/04/01/python/python_cover.png)\" alt=\"\u75af\u72c2Python\u8bb2\u4e49\" class=\"thumbnail-image\"&gt;&lt;/span&gt;\n    \n    \n        \n&lt;span class=\"comment-counter\"&gt;\n    &lt;i class=\"fa fa-comments-o\"&gt;&lt;/i&gt;\n    \n        &lt;span&gt;&lt;a href=\"https://fkjava.org/2019/04/01/python/#isso-thread\"&gt;&lt;/a&gt;&lt;/span&gt;\n    \n&lt;/span&gt;\n\n\n    \n&lt;/a&gt;\n\n        \n        &lt;div class=\"article-meta\"&gt;\n            &lt;div class=\"category\"&gt;\n            &lt;a class=\"article-category-link\" href=\"/categories/Python/\"&gt;Python&lt;/a&gt;\n            &lt;/div&gt;\n            &lt;div class=\"date\"&gt;&lt;time datetime=\"2019-04-02T02:46:00.000Z\" itemprop=\"datePublished\"&gt;2019-04-01&lt;/time&gt;&lt;/div&gt;\n        &lt;/div&gt;\n        \n    \n        &lt;h1 class=\"article-title\" itemprop=\"name\"&gt;\n        &lt;a href=\"/2019/04/01/python/\"&gt;\u75af\u72c2Python\u8bb2\u4e49&lt;/a&gt;\n        &lt;/h1&gt;\n    \n\n        &lt;p class=\"article-excerpt\"&gt;\n            \u4ece\u96f6\u5f00\u59cb\uff0cPython\u7f16\u7a0b\u4ece\u5165\u95e8\u5230\u5b9e\u8df5\u4e00\u7f51\u6253\u5c3d\uff0c648\u9875\u9e3f\u7bc7\u5de8\u5236\uff0c\u56f4\u7ed5\u7f51\u7edc\u722c\u866b\u3001\u5927\u6570\u636e\u5206\u6790\u3001Web\u7f16\u7a0b\u7b49\u5c31\u4e1a\u70ed\u70b9\u8bbe\u7f6e\u6848\u4f8b\n\n    \n        \u4e66\u540d\uff1a\u75af\u72c2Python\u8bb2\u4e49\n        \u51fa\u7248\u793e\uff1a\u7535\u5b50\u5de5\u4e1a\u51fa\u7248\u793e\n    \n    \n        \u51fa\u7248\u65f6\u95f4\uff1a2018-12-01\n        \u7248\u6b21\uff1a1\n    \n    \n        \u54c1\u724c\uff1a\u535a\u6587\u89c6\u70b9\n        ISBN\uff1a97871\n        &lt;/p&gt;\n    &lt;/div&gt;\n&lt;/article&gt;\n    \n\n    \n    \n    \n    \n        &lt;article class=\"article article-summary\"&gt;\n    &lt;div class=\"article-summary-inner\"&gt;\n        \n        &lt;a href=\"/2019/03/01/android4/\" class=\"thumbnail\"&gt;\n    \n    \n        &lt;span style=\"background-image:url(/2019/03/01/android4/android4_cover.png)\" alt=\"\u75af\u72c2Android\u8bb2\u4e49\uff08\u7b2c4\u7248\uff09\" class=\"thumbnail-image\"&gt;&lt;/span&gt;\n    \n    \n        \n&lt;span class=\"comment-counter\"&gt;\n    &lt;i class=\"fa fa-comments-o\"&gt;&lt;/i&gt;\n    \n        &lt;span&gt;&lt;a href=\"https://fkjava.org/2019/03/01/android4/#isso-thread\"&gt;&lt;/a&gt;&lt;/span&gt;\n    \n&lt;/span&gt;\n\n\n    \n&lt;/a&gt;\n\n        \n        &lt;div class=\"article-meta\"&gt;\n            &lt;div class=\"category\"&gt;\n            &lt;a class=\"article-category-link\" href=\"/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/\"&gt;\u79fb\u52a8\u5f00\u53d1&lt;/a&gt;\n            &lt;/div&gt;\n            &lt;div class=\"date\"&gt;&lt;time datetime=\"2019-03-01T18:46:00.000Z\" itemprop=\"datePublished\"&gt;2019-03-01&lt;/time&gt;&lt;/div&gt;\n        &lt;/div&gt;\n        \n    \n        &lt;h1 class=\"article-title\" itemprop=\"name\"&gt;\n        &lt;a href=\"/2019/03/01/android4/\"&gt;\u75af\u72c2Android\u8bb2\u4e49\uff08\u7b2c4\u7248\uff09&lt;/a&gt;\n        &lt;/h1&gt;\n    \n\n        &lt;p class=\"article-excerpt\"&gt;\n            \u5b89\u5353\u7ecf\u5178\u4e4b\u4f5c\u57fa\u4e8eAndroid9\u5168\u65b0\u5347\u7ea7\uff0cstormzhang\u7b49\u5708\u5185\u4eba\u58eb\u70b9\u8d5e\uff0c\u66fe\u83b7\u8bc4CSDN\u5e74\u5ea6\u5177\u6709\u6280\u672f\u5f71\u54cd\u529b\u5341\u5927\u539f\u521b\u56fe\u4e66\uff0c\u63d0\u4f9b\u5fae\u4fe1+QQ\u7b54\u7591\u7fa4\n\n    \n        \u4e66\u540d\uff1a\u75af\u72c2Android\u8bb2\u4e49\uff08\u7b2c4\u7248\uff09\n        \u51fa\u7248\u793e\uff1a\u7535\u5b50\u5de5\u4e1a\u51fa\u7248\u793e\n    \n    \n        \u51fa\u7248\u65f6\u95f4\uff1a2019-03-01\n        \u7248\u6b21\uff1a4\n    \n    \n        \u54c1\u724c\uff1a\u535a\u6587\u89c6\u70b9\n\n        &lt;/p&gt;\n    &lt;/div&gt;\n&lt;/article&gt;\n    \n        &lt;/div&gt;\n    \n\n    \n    \n        \n            &lt;/div&gt;&lt;/section&gt;\n        \n        \n        &lt;section class=\"archives-wrap\"&gt;\n            &lt;div class=\"archive-year-wrap\"&gt;\n                &lt;a href=\"/archives/2018\" class=\"archive-year\"&gt;&lt;i class=\"icon fa fa-calendar-o\"&gt;&lt;/i&gt;2018&lt;/a&gt;\n            &lt;/div&gt;\n            &lt;div class=\"archives\"&gt;\n    \n    \n    \n        &lt;div class=\"article-row\"&gt;\n    \n        &lt;article class=\"article article-summary\"&gt;\n    &lt;div class=\"article-summary-inner\"&gt;\n        \n        &lt;a href=\"/2018/06/01/android_kotlin/\" class=\"thumbnail\"&gt;\n    \n    \n        &lt;span style=\"background-image:url(/2018/06/01/android_kotlin/android_kotlin_cover.png)\" alt=\"\u75af\u72c2Android\u8bb2\u4e49\uff08Kotlin\u7248\uff09\" class=\"thumbnail-image\"&gt;&lt;/span&gt;\n    \n    \n        \n&lt;span class=\"comment-counter\"&gt;\n    &lt;i class=\"fa fa-comments-o\"&gt;&lt;/i&gt;\n    \n        &lt;span&gt;&lt;a href=\"https://fkjava.org/2018/06/01/android_kotlin/#isso-thread\"&gt;&lt;/a&gt;&lt;/span&gt;\n    \n&lt;/span&gt;\n\n\n    \n&lt;/a&gt;\n\n        \n        &lt;div class=\"article-meta\"&gt;\n            &lt;div class=\"category\"&gt;\n            &lt;a class=\"article-category-link\" href=\"/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/\"&gt;\u79fb\u52a8\u5f00\u53d1&lt;/a&gt;\n            &lt;/div&gt;\n            &lt;div class=\"date\"&gt;&lt;time datetime=\"2018-06-02T02:46:00.000Z\" itemprop=\"datePublished\"&gt;2018-06-01&lt;/time&gt;&lt;/div&gt;\n        &lt;/div&gt;\n        \n    \n        &lt;h1 class=\"article-title\" itemprop=\"name\"&gt;\n        &lt;a href=\"/2018/06/01/android_kotlin/\"&gt;\u75af\u72c2Android\u8bb2\u4e49\uff08Kotlin\u7248\uff09&lt;/a&gt;\n        &lt;/h1&gt;\n    \n\n        &lt;p class=\"article-excerpt\"&gt;\n            \u91cd\u537035\u6b21\u3001\u5370\u5237\u91cf\u8d8517\u4e07\u518c\u7684Android\u7ecf\u5178\uff0c\u57fa\u4e8e\u5168\u65b0\u7684Android\u7248\u672c\u5168\u9762\u5347\u7ea7\uff0c\u66fe\u83b7\u8bc4CSDN\u5e74\u5ea6\u5177\u6709\u6280\u672f\u5f71\u54cd\u529b\u5341\u5927\u539f\u521b\u56fe\u4e66\uff0c\u63d0\u4f9b\u5fae\u4fe1+QQ\u7b54\u7591\u7fa4\n\n    \n        \u4e66\u540d\uff1a\u75af\u72c2Android\u8bb2\u4e49\uff08Kotlin\u7248\uff09\n        \u51fa\u7248\u793e\uff1a\u7535\u5b50\u5de5\u4e1a\u51fa\u7248\u793e\n    \n    \n        \u51fa\u7248\u65f6\u95f4\uff1a2018-06-01\n        \u7248\u6b21\uff1a1\n    \n    \n       \n        &lt;/p&gt;\n    &lt;/div&gt;\n&lt;/article&gt;\n    \n\n    \n    \n    \n    \n        &lt;article class=\"article article-summary\"&gt;\n    &lt;div class=\"article-summary-inner\"&gt;\n        \n        &lt;a href=\"/2018/03/10/javaee5/\" class=\"thumbnail\"&gt;\n    \n    \n        &lt;span style=\"background-image:url(/2018/03/10/javaee5/javaee5_cover.png)\" alt=\"\u8f7b\u91cf\u7ea7Java EE\u4f01\u4e1a\u5e94\u7528\u5b9e\u6218\uff08\u7b2c5\u7248\uff09\u2015\u2015Struts 2+Spring 5+Hibernate/JPA\u6574\u5408\u5f00\u53d1\uff08\u542bDVD\u5149\u76d8\u4e00\u5f20\uff09\" class=\"thumbnail-image\"&gt;&lt;/span&gt;\n    \n    \n        \n&lt;span class=\"comment-counter\"&gt;\n    &lt;i class=\"fa fa-comments-o\"&gt;&lt;/i&gt;\n    \n        &lt;span&gt;&lt;a href=\"https://fkjava.org/2018/03/10/javaee5/#isso-thread\"&gt;&lt;/a&gt;&lt;/span&gt;\n    \n&lt;/span&gt;\n\n\n    \n&lt;/a&gt;\n\n        \n        &lt;div class=\"article-meta\"&gt;\n            &lt;div class=\"category\"&gt;\n            &lt;a class=\"article-category-link\" href=\"/categories/Java/\"&gt;Java&lt;/a&gt;\n            &lt;/div&gt;\n            &lt;div class=\"date\"&gt;&lt;time datetime=\"2018-03-10T13:46:00.000Z\" itemprop=\"datePublished\"&gt;2018-03-10&lt;/time&gt;&lt;/div&gt;\n        &lt;/div&gt;\n        \n    \n        &lt;h1 class=\"article-title\" itemprop=\"name\"&gt;\n        &lt;a href=\"/2018/03/10/javaee5/\"&gt;\u8f7b\u91cf\u7ea7Java EE\u4f01\u4e1a\u5e94\u7528\u5b9e\u6218\uff08\u7b2c5\u7248\uff09\u2015\u2015Struts 2+Spring 5+Hibernate/JPA\u6574\u5408\u5f00\u53d1\uff08\u542bDVD\u5149\u76d8\u4e00\u5f20\uff09&lt;/a&gt;\n        &lt;/h1&gt;\n    \n\n        &lt;p class=\"article-excerpt\"&gt;\n            S2SH\u7ecf\u5178\u56fe\u4e66\u5347\u7ea7\u7248\uff0c\u5168\u9762\u62e5\u62b1Spring 5\u8f7b\u91cf\u7ea7Web\u5f00\u53d1\u65b0\u7279\u6027\uff1b\u9762\u4e16\u5341\u4f59\u5e74\uff0c\u5386\u7ecf\u6570\u5341\u4e07\u8bfb\u8005\u68c0\u9a8c\uff1b\u75af\u72c2Java\u8bb2\u4e49\u4f5c\u8005\u674e\u521a\u51fa\u54c1\uff1b1000+\u5206\u949f\u8bfe\u7a0b\u5b9e\u5f55\u89c6\u9891\uff1b\u63d0\u4f9bQQ\u7fa4\u3001\u5fae\u4fe1\u7fa4\u7b54\u7591\u670d\u52a1\u53ca\u6280\u672f\u652f\u6301\u793e\u533a\n\n    \n        \u4e66\u540d\uff1a\u8f7b\u91cf\u7ea7Java EE\u4f01\u4e1a\u5e94\u7528\u5b9e\u6218\uff08\u7b2c5\u7248\uff09\n        \u51fa\u7248\u793e\uff1a\u7535\u5b50\u5de5\u4e1a\u51fa\u7248\u793e\n    \n    \n        \u51fa\u7248\u65f6\u95f4\uff1a2018-03-01\n     \n        &lt;/p&gt;\n    &lt;/div&gt;\n&lt;/article&gt;\n    \n        &lt;/div&gt;\n    \n\n    \n    \n    \n    \n        &lt;div class=\"article-row\"&gt;\n    \n        &lt;article class=\"article article-summary\"&gt;\n    &lt;div class=\"article-summary-inner\"&gt;\n        \n        &lt;a href=\"/2018/03/01/front/\" class=\"thumbnail\"&gt;\n    \n    \n        &lt;span style=\"background-image:url(/2018/03/01/front/front_cover.png)\" alt=\"\u75af\u72c2\u524d\u7aef\u5f00\u53d1\u8bb2\u4e49\uff1ajQuery+AngularJS+Bootstrap\u524d\u7aef\u5f00\u53d1\u5b9e\u6218\" class=\"thumbnail-image\"&gt;&lt;/span&gt;\n    \n    \n        \n&lt;span class=\"comment-counter\"&gt;\n    &lt;i class=\"fa fa-comments-o\"&gt;&lt;/i&gt;\n    \n        &lt;span&gt;&lt;a href=\"https://fkjava.org/2018/03/01/front/#isso-thread\"&gt;&lt;/a&gt;&lt;/span&gt;\n    \n&lt;/span&gt;\n\n\n    \n&lt;/a&gt;\n\n        \n        &lt;div class=\"article-meta\"&gt;\n            &lt;div class=\"category\"&gt;\n            &lt;a class=\"article-category-link\" href=\"/categories/%E5%89%8D%E7%AB%AF/\"&gt;\u524d\u7aef&lt;/a&gt;\n            &lt;/div&gt;\n            &lt;div class=\"date\"&gt;&lt;time datetime=\"2018-03-01T17:46:00.000Z\" itemprop=\"datePublished\"&gt;2018-03-01&lt;/time&gt;&lt;/div&gt;\n        &lt;/div&gt;\n        \n    \n        &lt;h1 class=\"article-title\" itemprop=\"name\"&gt;\n        &lt;a href=\"/2018/03/01/front/\"&gt;\u75af\u72c2\u524d\u7aef\u5f00\u53d1\u8bb2\u4e49\uff1ajQuery+AngularJS+Bootstrap\u524d\u7aef\u5f00\u53d1\u5b9e\u6218&lt;/a&gt;\n        &lt;/h1&gt;\n    \n\n        &lt;p class=\"article-excerpt\"&gt;\n            \u56f4\u7ed5\u771f\u6b63\u8f7b\u91cf\u7ea7\u7684AngularJS\u8fdb\u884c\u8bb2\u89e3\uff0c\u9002\u5408\u719f\u6089JS\u7684\u524d\u7aef\u5f00\u53d1\u8005\uff1bBootstrap\u91c7\u7528\u5168\u65b0\u7248\u672c\uff1b\u4e00\u672c\u4e66\u641e\u5b9a\u524d\u7aef\u5f00\u53d1\uff0c\u63d0\u4f9b\u5fae\u4fe1+QQ\u7b54\u7591\u7fa4\n\n    \n        \u4e66\u540d\uff1a\u75af\u72c2\u524d\u7aef\u5f00\u53d1\u8bb2\u4e49\uff1ajQuery+AngularJS+Bootstrap\u524d\u7aef\u5f00\u53d1\u5b9e\u6218\n        \u51fa\u7248\u793e\uff1a\u7535\u5b50\u5de5\u4e1a\u51fa\u7248\u793e\n    \n    \n        \u51fa\u7248\u65f6\u95f4\uff1a2017-10-01\n        \u7248\u6b21\uff1a1\n  \n        &lt;/p&gt;\n    &lt;/div&gt;\n&lt;/article&gt;\n    \n\n    \n    \n    \n    \n        &lt;article class=\"article article-summary\"&gt;\n    &lt;div class=\"article-summary-inner\"&gt;\n        \n        &lt;a href=\"/2018/02/01/html52/\" class=\"thumbnail\"&gt;\n    \n    \n        &lt;span style=\"background-image:url(/2018/02/01/html52/html52_cover.png)\" alt=\"\u75af\u72c2HTML5+CSS3+JavaScript\u8bb2\u4e49\uff08\u7b2c2\u7248\uff09\" class=\"thumbnail-image\"&gt;&lt;/span&gt;\n    \n    \n        \n&lt;span class=\"comment-counter\"&gt;\n    &lt;i class=\"fa fa-comments-o\"&gt;&lt;/i&gt;\n    \n        &lt;span&gt;&lt;a href=\"https://fkjava.org/2018/02/01/html52/#isso-thread\"&gt;&lt;/a&gt;&lt;/span&gt;\n    \n&lt;/span&gt;\n\n\n    \n&lt;/a&gt;\n\n        \n        &lt;div class=\"article-meta\"&gt;\n            &lt;div class=\"category\"&gt;\n            &lt;a class=\"article-category-link\" href=\"/categories/%E5%89%8D%E7%AB%AF/\"&gt;\u524d\u7aef&lt;/a&gt;\n            &lt;/div&gt;\n            &lt;div class=\"date\"&gt;&lt;time datetime=\"2018-02-02T03:46:00.000Z\" itemprop=\"datePublished\"&gt;2018-02-01&lt;/time&gt;&lt;/div&gt;\n        &lt;/div&gt;\n        \n    \n        &lt;h1 class=\"article-title\" itemprop=\"name\"&gt;\n        &lt;a href=\"/2018/02/01/html52/\"&gt;\u75af\u72c2HTML5+CSS3+JavaScript\u8bb2\u4e49\uff08\u7b2c2\u7248\uff09&lt;/a&gt;\n        &lt;/h1&gt;\n    \n\n        &lt;p class=\"article-excerpt\"&gt;\n            \u9762\u5411 HTML5 .1\u89c4\u8303\u6b63\u5f0f\u7248\uff0c\u4ee5ES 6\u6807\u51c6\u4e3a\u57fa\u7840\u5199\u5c31\uff0c\u8986\u76d6CSS 3\u7684\u65b0\u589e\u5185\u5bb9\n\n    \n        \u4e66\u540d\uff1a\u75af\u72c2HTML5+CSS3+JavaScript\u8bb2\u4e49\uff08\u7b2c2\u7248\uff09\n        \u51fa\u7248\u793e\uff1a\u7535\u5b50\u5de5\u4e1a\u51fa\u7248\u793e\n    \n    \n        \u51fa\u7248\u65f6\u95f4\uff1a2017-05-01\n        \u7248\u6b21\uff1a2\n    \n    \n        \u54c1\u724c\uff1a\u535a\u6587\u89c6\u70b9\n        ISBN\uff1a978\n        &lt;/p&gt;\n    &lt;/div&gt;\n&lt;/article&gt;\n    \n        &lt;/div&gt;\n    \n\n\n    &lt;/div&gt;&lt;/section&gt;\n\n\n\n                        &lt;/div&gt;\n                    &lt;/section&gt;\n                    &lt;aside id=\"sidebar\"&gt;\n    &lt;a class=\"sidebar-toggle\" title=\"Expand Sidebar\"&gt;&lt;i class=\"toggle icon\"&gt;&lt;/i&gt;&lt;/a&gt;\n    &lt;div class=\"sidebar-top\"&gt;\n        &lt;p&gt;\u5173\u6ce8\u6211\u4eec :&lt;/p&gt;\n        &lt;ul class=\"social-links\"&gt;\n            \n                \n                &lt;li&gt;\n                    &lt;a class=\"social-tooltip\" title=\"github\" href=\"https://lgjava.github.io/fkbooksdown/\" target=\"_blank\" rel=\"noopener\"&gt;\n                        &lt;i class=\"icon fa fa-github\"&gt;&lt;/i&gt;\n                    &lt;/a&gt;\n                &lt;/li&gt;\n                \n            \n                \n                &lt;li&gt;\n                    &lt;a class=\"social-tooltip\" title=\"weibo\" href=\"https://www.weibo.com/lgjava/\" target=\"_blank\" rel=\"noopener\"&gt;\n                        &lt;i class=\"icon fa fa-weibo\"&gt;&lt;/i&gt;\n                    &lt;/a&gt;\n                &lt;/li&gt;\n                \n            \n        &lt;/ul&gt;\n    &lt;/div&gt;\n    \n    &lt;div class=\"widget-wrap widget-list\"&gt;\n\t&lt;h3 class=\"widget-title\" style=\"float:left\"&gt;\u626b\u63cf\u5173\u6ce8\u516c\u4f17\u53f7\uff1a&lt;/h3&gt;\n\t&lt;h3 class=\"widget-title\" style=\"float:right\"&gt;\u6dfb\u52a0\u52a9\u624b\u52a0\u7fa4\u6216\u54a8\u8be2\uff1a&lt;/h3&gt;\n\t&lt;img src=\"/css/images/fkjava_qr.jpg\" alt=\"\u75af\u72c2\u8f6f\u4ef6\" width=\"135\" height=\"135\"&gt;&amp;nbsp;\n\t&lt;img src=\"/css/images/assist_qr.png\" alt=\"\u75af\u72c2\u5c0f\u52a9\u624b\" width=\"135\" height=\"135\"&gt;\n    &lt;/div&gt;\n    &lt;div class=\"widgets-container\"&gt;\n        \n            \n                \n\n            \n                \n    &lt;div class=\"widget-wrap\"&gt;\n        &lt;h3 class=\"widget-title\"&gt;\u6700\u65b0\u6587\u7ae0&lt;/h3&gt;\n        &lt;div class=\"widget\"&gt;\n            &lt;ul id=\"recent-post\" class=\"\"&gt;\n                \n                    &lt;li&gt;\n                        \n                        &lt;div class=\"item-thumbnail\"&gt;\n                            &lt;a href=\"/2020/04/01/ssm/\" class=\"thumbnail\"&gt;\n    \n    \n        &lt;span style=\"background-image:url(/2020/04/01/ssm/ssm_cover.png)\" alt=\"\u8f7b\u91cf\u7ea7Java Web\u4f01\u4e1a\u5e94\u7528\u5b9e\u6218\u2015\u2015Spring MVC+Spring+MyBatis\u6574\u5408\u5f00\u53d1\" class=\"thumbnail-image\"&gt;&lt;/span&gt;\n    \n    \n&lt;/a&gt;\n\n                        &lt;/div&gt;\n                        \n                        &lt;div class=\"item-inner\"&gt;\n                            &lt;p class=\"item-category\"&gt;&lt;a class=\"article-category-link\" href=\"/categories/Java/\"&gt;Java&lt;/a&gt;&lt;/p&gt;\n                            &lt;p class=\"item-title\"&gt;&lt;a href=\"/2020/04/01/ssm/\" class=\"title\"&gt;\u8f7b\u91cf\u7ea7Java Web\u4f01\u4e1a\u5e94\u7528\u5b9e\u6218\u2015\u2015Spring MVC+Spring+MyBatis\u6574\u5408\u5f00\u53d1&lt;/a&gt;&lt;/p&gt;\n                            &lt;p class=\"item-date\"&gt;&lt;time datetime=\"2020-04-01T13:46:00.000Z\" itemprop=\"datePublished\"&gt;2020-04-01&lt;/time&gt;&lt;/p&gt;\n                        &lt;/div&gt;\n                    &lt;/li&gt;\n                \n                    &lt;li&gt;\n                        \n                        &lt;div class=\"item-thumbnail\"&gt;\n                            &lt;a href=\"/2019/10/01/xml3/\" class=\"thumbnail\"&gt;\n    \n    \n        &lt;span style=\"background-image:url(/2019/10/01/xml3/xml3_cover.png)\" alt=\"\u75af\u72c2XML\u8bb2\u4e49\uff08\u7b2c3\u7248\uff09\" class=\"thumbnail-image\"&gt;&lt;/span&gt;\n    \n    \n&lt;/a&gt;\n\n                        &lt;/div&gt;\n                        \n                        &lt;div class=\"item-inner\"&gt;\n                            &lt;p class=\"item-category\"&gt;&lt;a class=\"article-category-link\" href=\"/categories/Java/\"&gt;Java&lt;/a&gt;&lt;/p&gt;\n                            &lt;p class=\"item-title\"&gt;&lt;a href=\"/2019/10/01/xml3/\" class=\"title\"&gt;\u75af\u72c2XML\u8bb2\u4e49\uff08\u7b2c3\u7248\uff09&lt;/a&gt;&lt;/p&gt;\n                            &lt;p class=\"item-date\"&gt;&lt;time datetime=\"2019-10-01T13:46:00.000Z\" itemprop=\"datePublished\"&gt;2019-10-01&lt;/time&gt;&lt;/p&gt;\n                        &lt;/div&gt;\n                    &lt;/li&gt;\n                \n                    &lt;li&gt;\n                        \n                        &lt;div class=\"item-thumbnail\"&gt;\n                            &lt;a href=\"/2019/04/01/java5/\" class=\"thumbnail\"&gt;\n    \n    \n        &lt;span style=\"background-image:url(/2019/04/01/java5/java5_cover.png)\" alt=\"\u75af\u72c2Java\u8bb2\u4e49\uff08\u7b2c5\u7248\uff09\uff08\u542bDVD\u5149\u76d8\u4e00\u5f20\uff09\" class=\"thumbnail-image\"&gt;&lt;/span&gt;\n    \n    \n&lt;/a&gt;\n\n                        &lt;/div&gt;\n                        \n                        &lt;div class=\"item-inner\"&gt;\n                            &lt;p class=\"item-category\"&gt;&lt;a class=\"article-category-link\" href=\"/categories/Java/\"&gt;Java&lt;/a&gt;&lt;/p&gt;\n                            &lt;p class=\"item-title\"&gt;&lt;a href=\"/2019/04/01/java5/\" class=\"title\"&gt;\u75af\u72c2Java\u8bb2\u4e49\uff08\u7b2c5\u7248\uff09\uff08\u542bDVD\u5149\u76d8\u4e00\u5f20\uff09&lt;/a&gt;&lt;/p&gt;\n                            &lt;p class=\"item-date\"&gt;&lt;time datetime=\"2019-04-02T02:46:00.000Z\" itemprop=\"datePublished\"&gt;2019-04-01&lt;/time&gt;&lt;/p&gt;\n                        &lt;/div&gt;\n                    &lt;/li&gt;\n                \n                    &lt;li&gt;\n                        \n                        &lt;div class=\"item-thumbnail\"&gt;\n                            &lt;a href=\"/2019/04/01/python/\" class=\"thumbnail\"&gt;\n    \n    \n        &lt;span style=\"background-image:url(/2019/04/01/python/python_cover.png)\" alt=\"\u75af\u72c2Python\u8bb2\u4e49\" class=\"thumbnail-image\"&gt;&lt;/span&gt;\n    \n    \n&lt;/a&gt;\n\n                        &lt;/div&gt;\n                        \n                        &lt;div class=\"item-inner\"&gt;\n                            &lt;p class=\"item-category\"&gt;&lt;a class=\"article-category-link\" href=\"/categories/Python/\"&gt;Python&lt;/a&gt;&lt;/p&gt;\n                            &lt;p class=\"item-title\"&gt;&lt;a href=\"/2019/04/01/python/\" class=\"title\"&gt;\u75af\u72c2Python\u8bb2\u4e49&lt;/a&gt;&lt;/p&gt;\n                            &lt;p class=\"item-date\"&gt;&lt;time datetime=\"2019-04-02T02:46:00.000Z\" itemprop=\"datePublished\"&gt;2019-04-01&lt;/time&gt;&lt;/p&gt;\n                        &lt;/div&gt;\n                    &lt;/li&gt;\n                \n                    &lt;li&gt;\n                        \n                        &lt;div class=\"item-thumbnail\"&gt;\n                            &lt;a href=\"/2019/03/01/android4/\" class=\"thumbnail\"&gt;\n    \n    \n        &lt;span style=\"background-image:url(/2019/03/01/android4/android4_cover.png)\" alt=\"\u75af\u72c2Android\u8bb2\u4e49\uff08\u7b2c4\u7248\uff09\" class=\"thumbnail-image\"&gt;&lt;/span&gt;\n    \n    \n&lt;/a&gt;\n\n                        &lt;/div&gt;\n                        \n                        &lt;div class=\"item-inner\"&gt;\n                            &lt;p class=\"item-category\"&gt;&lt;a class=\"article-category-link\" href=\"/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/\"&gt;\u79fb\u52a8\u5f00\u53d1&lt;/a&gt;&lt;/p&gt;\n                            &lt;p class=\"item-title\"&gt;&lt;a href=\"/2019/03/01/android4/\" class=\"title\"&gt;\u75af\u72c2Android\u8bb2\u4e49\uff08\u7b2c4\u7248\uff09&lt;/a&gt;&lt;/p&gt;\n                            &lt;p class=\"item-date\"&gt;&lt;time datetime=\"2019-03-01T18:46:00.000Z\" itemprop=\"datePublished\"&gt;2019-03-01&lt;/time&gt;&lt;/p&gt;\n                        &lt;/div&gt;\n                    &lt;/li&gt;\n                \n            &lt;/ul&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n\n            \n                \n    &lt;div class=\"widget-wrap widget-list\"&gt;\n        &lt;h3 class=\"widget-title\"&gt;\u5206\u7c7b&lt;/h3&gt;\n        &lt;div class=\"widget\"&gt;\n            &lt;ul class=\"category-list\"&gt;&lt;li class=\"category-list-item\"&gt;&lt;a class=\"category-list-link\" href=\"/categories/Java/\"&gt;Java&lt;/a&gt;&lt;span class=\"category-list-count\"&gt;4&lt;/span&gt;&lt;/li&gt;&lt;li class=\"category-list-item\"&gt;&lt;a class=\"category-list-link\" href=\"/categories/Python/\"&gt;Python&lt;/a&gt;&lt;span class=\"category-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"category-list-item\"&gt;&lt;a class=\"category-list-link\" href=\"/categories/%E5%89%8D%E7%AB%AF/\"&gt;\u524d\u7aef&lt;/a&gt;&lt;span class=\"category-list-count\"&gt;2&lt;/span&gt;&lt;/li&gt;&lt;li class=\"category-list-item\"&gt;&lt;a class=\"category-list-link\" href=\"/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/\"&gt;\u79fb\u52a8\u5f00\u53d1&lt;/a&gt;&lt;span class=\"category-list-count\"&gt;2&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n\n\n            \n                \n    &lt;div class=\"widget-wrap widget-list\"&gt;\n        &lt;h3 class=\"widget-title\"&gt;\u5f52\u6863&lt;/h3&gt;\n        &lt;div class=\"widget\"&gt;\n            &lt;ul class=\"archive-list\"&gt;&lt;li class=\"archive-list-item\"&gt;&lt;a class=\"archive-list-link\" href=\"/archives/2020/04/\"&gt;\u56db\u6708 2020&lt;/a&gt;&lt;span class=\"archive-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"archive-list-item\"&gt;&lt;a class=\"archive-list-link\" href=\"/archives/2019/10/\"&gt;\u5341\u6708 2019&lt;/a&gt;&lt;span class=\"archive-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"archive-list-item\"&gt;&lt;a class=\"archive-list-link\" href=\"/archives/2019/04/\"&gt;\u56db\u6708 2019&lt;/a&gt;&lt;span class=\"archive-list-count\"&gt;2&lt;/span&gt;&lt;/li&gt;&lt;li class=\"archive-list-item\"&gt;&lt;a class=\"archive-list-link\" href=\"/archives/2019/03/\"&gt;\u4e09\u6708 2019&lt;/a&gt;&lt;span class=\"archive-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"archive-list-item\"&gt;&lt;a class=\"archive-list-link\" href=\"/archives/2018/06/\"&gt;\u516d\u6708 2018&lt;/a&gt;&lt;span class=\"archive-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"archive-list-item\"&gt;&lt;a class=\"archive-list-link\" href=\"/archives/2018/03/\"&gt;\u4e09\u6708 2018&lt;/a&gt;&lt;span class=\"archive-list-count\"&gt;2&lt;/span&gt;&lt;/li&gt;&lt;li class=\"archive-list-item\"&gt;&lt;a class=\"archive-list-link\" href=\"/archives/2018/02/\"&gt;\u4e8c\u6708 2018&lt;/a&gt;&lt;span class=\"archive-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n\n\n            \n                \n    &lt;div class=\"widget-wrap widget-list\"&gt;\n        &lt;h3 class=\"widget-title\"&gt;\u6807\u7b7e&lt;/h3&gt;\n        &lt;div class=\"widget\"&gt;\n            &lt;ul class=\"tag-list\" itemprop=\"keywords\"&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/Android/\" rel=\"tag\"&gt;Android&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;2&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/Android-Studio/\" rel=\"tag\"&gt;Android Studio&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;2&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/Angular/\" rel=\"tag\"&gt;Angular&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/Boostrap/\" rel=\"tag\"&gt;Boostrap&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/CSS-3/\" rel=\"tag\"&gt;CSS 3&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/DOM/\" rel=\"tag\"&gt;DOM&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/H5/\" rel=\"tag\"&gt;H5&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/HTML-5/\" rel=\"tag\"&gt;HTML 5&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/JAXP/\" rel=\"tag\"&gt;JAXP&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/JS/\" rel=\"tag\"&gt;JS&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;2&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/Java/\" rel=\"tag\"&gt;Java&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;2&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/Java-11/\" rel=\"tag\"&gt;Java 11&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/Java-EE/\" rel=\"tag\"&gt;Java EE&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/Java-Web/\" rel=\"tag\"&gt;Java Web&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/Java-%E5%9F%BA%E7%A1%80/\" rel=\"tag\"&gt;Java \u57fa\u7840&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/JavaScript/\" rel=\"tag\"&gt;JavaScript&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/Java%E5%AD%A6%E4%B9%A0/\" rel=\"tag\"&gt;Java\u5b66\u4e60&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/Kotlin/\" rel=\"tag\"&gt;Kotlin&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/MyBatis/\" rel=\"tag\"&gt;MyBatis&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/Python/\" rel=\"tag\"&gt;Python&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/Python%E5%AD%A6%E4%B9%A0/\" rel=\"tag\"&gt;Python\u5b66\u4e60&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/SAX/\" rel=\"tag\"&gt;SAX&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/SSH/\" rel=\"tag\"&gt;SSH&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/Schema/\" rel=\"tag\"&gt;Schema&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/Spring/\" rel=\"tag\"&gt;Spring&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;2&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/Spring-MVC/\" rel=\"tag\"&gt;Spring MVC&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/Web-Service/\" rel=\"tag\"&gt;Web Service&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/Web%E5%BC%80%E5%8F%91/\" rel=\"tag\"&gt;Web\u5f00\u53d1&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/XML/\" rel=\"tag\"&gt;XML&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/jQuery/\" rel=\"tag\"&gt;jQuery&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/%E4%BC%81%E4%B8%9A%E5%BC%80%E5%8F%91/\" rel=\"tag\"&gt;\u4f01\u4e1a\u5f00\u53d1&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/%E5%89%8D%E7%AB%AF/\" rel=\"tag\"&gt;\u524d\u7aef&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/\" rel=\"tag\"&gt;\u6570\u636e\u5206\u6790&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/\" rel=\"tag\"&gt;\u79fb\u52a8\u5f00\u53d1&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;2&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/\" rel=\"tag\"&gt;\u7f51\u7edc\u722c\u866b&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n\n\n            \n                \n    &lt;div class=\"widget-wrap widget-float\"&gt;\n        &lt;h3 class=\"widget-title\"&gt;\u6807\u7b7e\u4e91&lt;/h3&gt;\n        &lt;div class=\"widget tagcloud\"&gt;\n            &lt;a href=\"/tags/Android/\" style=\"font-size: 20px;\"&gt;Android&lt;/a&gt; &lt;a href=\"/tags/Android-Studio/\" style=\"font-size: 20px;\"&gt;Android Studio&lt;/a&gt; &lt;a href=\"/tags/Angular/\" style=\"font-size: 10px;\"&gt;Angular&lt;/a&gt; &lt;a href=\"/tags/Boostrap/\" style=\"font-size: 10px;\"&gt;Boostrap&lt;/a&gt; &lt;a href=\"/tags/CSS-3/\" style=\"font-size: 10px;\"&gt;CSS 3&lt;/a&gt; &lt;a href=\"/tags/DOM/\" style=\"font-size: 10px;\"&gt;DOM&lt;/a&gt; &lt;a href=\"/tags/H5/\" style=\"font-size: 10px;\"&gt;H5&lt;/a&gt; &lt;a href=\"/tags/HTML-5/\" style=\"font-size: 10px;\"&gt;HTML 5&lt;/a&gt; &lt;a href=\"/tags/JAXP/\" style=\"font-size: 10px;\"&gt;JAXP&lt;/a&gt; &lt;a href=\"/tags/JS/\" style=\"font-size: 20px;\"&gt;JS&lt;/a&gt; &lt;a href=\"/tags/Java/\" style=\"font-size: 20px;\"&gt;Java&lt;/a&gt; &lt;a href=\"/tags/Java-11/\" style=\"font-size: 10px;\"&gt;Java 11&lt;/a&gt; &lt;a href=\"/tags/Java-EE/\" style=\"font-size: 10px;\"&gt;Java EE&lt;/a&gt; &lt;a href=\"/tags/Java-Web/\" style=\"font-size: 10px;\"&gt;Java Web&lt;/a&gt; &lt;a href=\"/tags/Java-%E5%9F%BA%E7%A1%80/\" style=\"font-size: 10px;\"&gt;Java \u57fa\u7840&lt;/a&gt; &lt;a href=\"/tags/JavaScript/\" style=\"font-size: 10px;\"&gt;JavaScript&lt;/a&gt; &lt;a href=\"/tags/Java%E5%AD%A6%E4%B9%A0/\" style=\"font-size: 10px;\"&gt;Java\u5b66\u4e60&lt;/a&gt; &lt;a href=\"/tags/Kotlin/\" style=\"font-size: 10px;\"&gt;Kotlin&lt;/a&gt; &lt;a href=\"/tags/MyBatis/\" style=\"font-size: 10px;\"&gt;MyBatis&lt;/a&gt; &lt;a href=\"/tags/Python/\" style=\"font-size: 10px;\"&gt;Python&lt;/a&gt; &lt;a href=\"/tags/Python%E5%AD%A6%E4%B9%A0/\" style=\"font-size: 10px;\"&gt;Python\u5b66\u4e60&lt;/a&gt; &lt;a href=\"/tags/SAX/\" style=\"font-size: 10px;\"&gt;SAX&lt;/a&gt; &lt;a href=\"/tags/SSH/\" style=\"font-size: 10px;\"&gt;SSH&lt;/a&gt; &lt;a href=\"/tags/Schema/\" style=\"font-size: 10px;\"&gt;Schema&lt;/a&gt; &lt;a href=\"/tags/Spring/\" style=\"font-size: 20px;\"&gt;Spring&lt;/a&gt; &lt;a href=\"/tags/Spring-MVC/\" style=\"font-size: 10px;\"&gt;Spring MVC&lt;/a&gt; &lt;a href=\"/tags/Web-Service/\" style=\"font-size: 10px;\"&gt;Web Service&lt;/a&gt; &lt;a href=\"/tags/Web%E5%BC%80%E5%8F%91/\" style=\"font-size: 10px;\"&gt;Web\u5f00\u53d1&lt;/a&gt; &lt;a href=\"/tags/XML/\" style=\"font-size: 10px;\"&gt;XML&lt;/a&gt; &lt;a href=\"/tags/jQuery/\" style=\"font-size: 10px;\"&gt;jQuery&lt;/a&gt; &lt;a href=\"/tags/%E4%BC%81%E4%B8%9A%E5%BC%80%E5%8F%91/\" style=\"font-size: 10px;\"&gt;\u4f01\u4e1a\u5f00\u53d1&lt;/a&gt; &lt;a href=\"/tags/%E5%89%8D%E7%AB%AF/\" style=\"font-size: 10px;\"&gt;\u524d\u7aef&lt;/a&gt; &lt;a href=\"/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/\" style=\"font-size: 10px;\"&gt;\u6570\u636e\u5206\u6790&lt;/a&gt; &lt;a href=\"/tags/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/\" style=\"font-size: 20px;\"&gt;\u79fb\u52a8\u5f00\u53d1&lt;/a&gt; &lt;a href=\"/tags/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/\" style=\"font-size: 10px;\"&gt;\u7f51\u7edc\u722c\u866b&lt;/a&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n\n\n            \n                \n    &lt;div class=\"widget-wrap widget-list\"&gt;\n        &lt;h3 class=\"widget-title\"&gt;\u94fe\u63a5&lt;/h3&gt;\n        &lt;div class=\"widget\"&gt;\n            &lt;ul&gt;\n                \n                    &lt;li&gt;\n                        &lt;a href=\"http://www.crazyit.org\" target=\"_blank\" rel=\"noopener\"&gt;\u75af\u72c2Java\u8054\u76df&lt;/a&gt;\n                    &lt;/li&gt;\n                \n            &lt;/ul&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n\n\n            \n        \n    &lt;/div&gt;\n&lt;/aside&gt;\n\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;footer id=\"footer\"&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;div class=\"container-inner\"&gt;\n            &lt;a id=\"back-to-top\" href=\"javascript:;\"&gt;&lt;i class=\"icon fa fa-angle-up\"&gt;&lt;/i&gt;&lt;/a&gt;\n            &lt;div class=\"credit\"&gt;\n                &lt;h1 class=\"logo-wrap\"&gt;\n                    &lt;a href=\"/\" class=\"logo\"&gt;&lt;/a&gt;\n                &lt;/h1&gt;\n                &lt;p&gt;&amp;copy; 2001-2020 \u75af\u72c2\u8f6f\u4ef6&lt;/p&gt;\n                \n            &lt;/div&gt;\n            &lt;div class=\"footer-plugins\"&gt;\n              \n    \n\n\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/footer&gt;\n\n        \n    \n&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\"&gt;\n&lt;script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n    var gitalk = new Gitalk({\n        clientID: 'dfdf40aec0119b7ee2e6',\n        clientSecret: '384732e1b3eaf1e1480d3748c57cb6bffeb5092c',\n        id: 'eacf331f0ffc35d4b482f1d15a887d3b',\n        repo: 'fkjava',\n        owner: 'lgjava',\n        admin: \"lgjava\"\n    })\n    gitalk.render('comment-container')\n&lt;/script&gt;\n\n\n\n\n\n    \n        \n&lt;script src=\"/libs/lightgallery/js/lightgallery.min.js\"&gt;&lt;/script&gt;\n\n        \n&lt;script src=\"/libs/lightgallery/js/lg-thumbnail.min.js\"&gt;&lt;/script&gt;\n\n        \n&lt;script src=\"/libs/lightgallery/js/lg-pager.min.js\"&gt;&lt;/script&gt;\n\n        \n&lt;script src=\"/libs/lightgallery/js/lg-autoplay.min.js\"&gt;&lt;/script&gt;\n\n        \n&lt;script src=\"/libs/lightgallery/js/lg-fullscreen.min.js\"&gt;&lt;/script&gt;\n\n        \n&lt;script src=\"/libs/lightgallery/js/lg-zoom.min.js\"&gt;&lt;/script&gt;\n\n        \n&lt;script src=\"/libs/lightgallery/js/lg-hash.min.js\"&gt;&lt;/script&gt;\n\n        \n&lt;script src=\"/libs/lightgallery/js/lg-share.min.js\"&gt;&lt;/script&gt;\n\n        \n&lt;script src=\"/libs/lightgallery/js/lg-video.min.js\"&gt;&lt;/script&gt;\n\n    \n    \n        \n&lt;script src=\"/libs/justified-gallery/jquery.justifiedGallery.min.js\"&gt;&lt;/script&gt;\n\n    \n    \n\n    \n\n\n\n&lt;!-- Custom Scripts --&gt;\n\n&lt;script src=\"/js/main.js\"&gt;&lt;/script&gt;\n\n\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n</pre> In\u00a0[6]: Copied! <pre># use context manager to read the url resource\nwith urlopen('https://fkjava.org/') as f:\n    data = f.read()\n    print(data.decode('utf-8'))\n</pre> # use context manager to read the url resource with urlopen('https://fkjava.org/') as f:     data = f.read()     print(data.decode('utf-8')) <pre>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n\n    \n\n    \n    &lt;title&gt;\u75af\u72c2\u7cfb\u5217\u56fe\u4e66&lt;/title&gt;\n    \n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\"&gt;\n    \n    &lt;meta name=\"description\" content=\"\u75af\u72c2\u8f6f\u4ef6\u7684\u5b98\u65b9\u7f51\u7ad9\"&gt;\n&lt;meta property=\"og:type\" content=\"website\"&gt;\n&lt;meta property=\"og:title\" content=\"\u75af\u72c2\u7cfb\u5217\u56fe\u4e66\"&gt;\n&lt;meta property=\"og:url\" content=\"https:&amp;#x2F;&amp;#x2F;fkjava.org&amp;#x2F;index.html\"&gt;\n&lt;meta property=\"og:site_name\" content=\"\u75af\u72c2\u7cfb\u5217\u56fe\u4e66\"&gt;\n&lt;meta property=\"og:description\" content=\"\u75af\u72c2\u8f6f\u4ef6\u7684\u5b98\u65b9\u7f51\u7ad9\"&gt;\n&lt;meta property=\"og:locale\" content=\"zh_CN\"&gt;\n&lt;meta property=\"article:author\" content=\"\u75af\u72c2\u8f6f\u4ef6\"&gt;\n&lt;meta property=\"article:tag\" content=\"\u75af\u72c2\u8f6f\u4ef6\"&gt;\n&lt;meta property=\"article:tag\" content=\"\u75af\u72c2Java\"&gt;\n&lt;meta property=\"article:tag\" content=\"\u75af\u72c2Python\"&gt;\n&lt;meta property=\"article:tag\" content=\"Java\u5b66\u4e60\"&gt;\n&lt;meta property=\"article:tag\" content=\"Python\u5b66\u4e60\"&gt;\n&lt;meta name=\"twitter:card\" content=\"summary\"&gt;\n    \n\n    \n\n    \n\n    \n&lt;link rel=\"stylesheet\" href=\"/libs/font-awesome/css/font-awesome.min.css\"&gt;\n\n    \n&lt;link rel=\"stylesheet\" href=\"/libs/titillium-web/styles.css\"&gt;\n\n    \n&lt;link rel=\"stylesheet\" href=\"/libs/source-code-pro/styles.css\"&gt;\n\n\n    \n&lt;link rel=\"stylesheet\" href=\"/css/style.css\"&gt;\n\n\n    \n&lt;script src=\"/libs/jquery/3.4.1/jquery.min.js\"&gt;&lt;/script&gt;\n\n    \n    \n        \n&lt;link rel=\"stylesheet\" href=\"/libs/lightgallery/css/lightgallery.min.css\"&gt;\n\n    \n    \n        \n&lt;link rel=\"stylesheet\" href=\"/libs/justified-gallery/justifiedGallery.min.css\"&gt;\n\n    \n    \n    \n\n\n&lt;meta name=\"generator\" content=\"Hexo 4.1.0\"&gt;&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;div id=\"wrap\"&gt;\n        &lt;header id=\"header\"&gt;\n    &lt;div id=\"header-outer\" class=\"outer\"&gt;\n        &lt;div class=\"container\"&gt;\n            &lt;div class=\"container-inner\"&gt;\n                &lt;div id=\"header-title\"&gt;\n                    &lt;h1 class=\"logo-wrap\"&gt;\n                        &lt;a href=\"/\" class=\"logo\"&gt;&lt;/a&gt;\n                    &lt;/h1&gt;\n                    \n                        &lt;h2 class=\"subtitle-wrap\"&gt;\n                            &lt;p class=\"subtitle\"&gt;\u75af\u72c2\u7cfb\u5217\u56fe\u4e66\u7684\u7f51\u7ad9&lt;/p&gt;\n                        &lt;/h2&gt;\n                    \n                &lt;/div&gt;\n                &lt;div id=\"header-inner\" class=\"nav-container\"&gt;\n                    &lt;a id=\"main-nav-toggle\" class=\"nav-icon fa fa-bars\"&gt;&lt;/a&gt;\n                    &lt;div class=\"nav-container-inner\"&gt;\n                        &lt;ul id=\"main-nav\"&gt;\n                            \n                                &lt;li class=\"main-nav-list-item\" &gt;\n                                    &lt;a class=\"main-nav-list-link\" href=\"/\"&gt;\u4e3b\u9875&lt;/a&gt;\n                                &lt;/li&gt;\n                            \n                                        &lt;ul class=\"main-nav-list\"&gt;&lt;li class=\"main-nav-list-item\"&gt;&lt;a class=\"main-nav-list-link\" href=\"/categories/Java/\"&gt;Java&lt;/a&gt;&lt;/li&gt;&lt;li class=\"main-nav-list-item\"&gt;&lt;a class=\"main-nav-list-link\" href=\"/categories/Python/\"&gt;Python&lt;/a&gt;&lt;/li&gt;&lt;li class=\"main-nav-list-item\"&gt;&lt;a class=\"main-nav-list-link\" href=\"/categories/%E5%89%8D%E7%AB%AF/\"&gt;\u524d\u7aef&lt;/a&gt;&lt;/li&gt;&lt;li class=\"main-nav-list-item\"&gt;&lt;a class=\"main-nav-list-link\" href=\"/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/\"&gt;\u79fb\u52a8\u5f00\u53d1&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;\n                                    \n                                &lt;li class=\"main-nav-list-item\" &gt;\n                                    &lt;a class=\"main-nav-list-link\" href=\"/archives/\"&gt;\u5f52\u6863&lt;/a&gt;\n                                &lt;/li&gt;\n                            \n                                &lt;li class=\"main-nav-list-item\" &gt;\n                                    &lt;a class=\"main-nav-list-link\" href=\"/tags/\"&gt;\u6807\u7b7e&lt;/a&gt;\n                                &lt;/li&gt;\n                            \n                                &lt;li class=\"main-nav-list-item\" &gt;\n                                    &lt;a class=\"main-nav-list-link\" href=\"/about/index.html\"&gt;\u5173\u4e8e&lt;/a&gt;\n                                &lt;/li&gt;\n                            \n                        &lt;/ul&gt;\n                        &lt;nav id=\"sub-nav\"&gt;\n                            &lt;div id=\"search-form-wrap\"&gt;\n\n    &lt;form class=\"search-form\"&gt;\n        &lt;input type=\"text\" class=\"ins-search-input search-form-input\" placeholder=\"\u641c\u7d22\" /&gt;\n        &lt;button type=\"submit\" class=\"search-form-submit\"&gt;&lt;/button&gt;\n    &lt;/form&gt;\n    &lt;div class=\"ins-search\"&gt;\n    &lt;div class=\"ins-search-mask\"&gt;&lt;/div&gt;\n    &lt;div class=\"ins-search-container\"&gt;\n        &lt;div class=\"ins-input-wrapper\"&gt;\n            &lt;input type=\"text\" class=\"ins-search-input\" placeholder=\"\u60f3\u8981\u67e5\u627e\u4ec0\u4e48...\" /&gt;\n            &lt;span class=\"ins-close ins-selectable\"&gt;&lt;i class=\"fa fa-times-circle\"&gt;&lt;/i&gt;&lt;/span&gt;\n        &lt;/div&gt;\n        &lt;div class=\"ins-section-wrapper\"&gt;\n            &lt;div class=\"ins-section-container\"&gt;&lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n&lt;script&gt;\n(function (window) {\n    var INSIGHT_CONFIG = {\n        TRANSLATION: {\n            POSTS: '\u6587\u7ae0',\n            PAGES: '\u9875\u9762',\n            CATEGORIES: '\u5206\u7c7b',\n            TAGS: '\u6807\u7b7e',\n            UNTITLED: '(\u672a\u547d\u540d)',\n        },\n        ROOT_URL: '/',\n        CONTENT_URL: '/content.json',\n    };\n    window.INSIGHT_CONFIG = INSIGHT_CONFIG;\n})(window);\n&lt;/script&gt;\n\n&lt;script src=\"/js/insight.js\"&gt;&lt;/script&gt;\n\n\n&lt;/div&gt;\n                        &lt;/nav&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/header&gt;\n        &lt;div class=\"container\"&gt;\n            &lt;div class=\"main-body container-inner\"&gt;\n                &lt;div class=\"main-body-inner\"&gt;\n                    &lt;section id=\"main\"&gt;\n                        &lt;div class=\"main-body-header\"&gt;\n    &lt;h1 class=\"header\"&gt;\n    \n    &lt;em class=\"page-title-link\" data-url=\"home\"&gt;\u4e3b\u9875&lt;/em&gt;\n    &lt;/h1&gt;\n&lt;/div&gt;\n\n                        &lt;div class=\"main-body-content\"&gt;\n                            \n\n    \n    \n        \n        \n        &lt;section class=\"archives-wrap\"&gt;\n            &lt;div class=\"archive-year-wrap\"&gt;\n                &lt;a href=\"/archives/2020\" class=\"archive-year\"&gt;&lt;i class=\"icon fa fa-calendar-o\"&gt;&lt;/i&gt;2020&lt;/a&gt;\n            &lt;/div&gt;\n            &lt;div class=\"archives\"&gt;\n    \n    \n    \n        &lt;div class=\"article-row\"&gt;\n    \n        &lt;article class=\"article article-summary\"&gt;\n    &lt;div class=\"article-summary-inner\"&gt;\n        \n        &lt;a href=\"/2020/04/01/ssm/\" class=\"thumbnail\"&gt;\n    \n    \n        &lt;span style=\"background-image:url(/2020/04/01/ssm/ssm_cover.png)\" alt=\"\u8f7b\u91cf\u7ea7Java Web\u4f01\u4e1a\u5e94\u7528\u5b9e\u6218\u2015\u2015Spring MVC+Spring+MyBatis\u6574\u5408\u5f00\u53d1\" class=\"thumbnail-image\"&gt;&lt;/span&gt;\n    \n    \n        \n&lt;span class=\"comment-counter\"&gt;\n    &lt;i class=\"fa fa-comments-o\"&gt;&lt;/i&gt;\n    \n        &lt;span&gt;&lt;a href=\"https://fkjava.org/2020/04/01/ssm/#isso-thread\"&gt;&lt;/a&gt;&lt;/span&gt;\n    \n&lt;/span&gt;\n\n\n    \n&lt;/a&gt;\n\n        \n        &lt;div class=\"article-meta\"&gt;\n            &lt;div class=\"category\"&gt;\n            &lt;a class=\"article-category-link\" href=\"/categories/Java/\"&gt;Java&lt;/a&gt;\n            &lt;/div&gt;\n            &lt;div class=\"date\"&gt;&lt;time datetime=\"2020-04-01T13:46:00.000Z\" itemprop=\"datePublished\"&gt;2020-04-01&lt;/time&gt;&lt;/div&gt;\n        &lt;/div&gt;\n        \n    \n        &lt;h1 class=\"article-title\" itemprop=\"name\"&gt;\n        &lt;a href=\"/2020/04/01/ssm/\"&gt;\u8f7b\u91cf\u7ea7Java Web\u4f01\u4e1a\u5e94\u7528\u5b9e\u6218\u2015\u2015Spring MVC+Spring+MyBatis\u6574\u5408\u5f00\u53d1&lt;/a&gt;\n        &lt;/h1&gt;\n    \n\n        &lt;p class=\"article-excerpt\"&gt;\n            \u8fd9\u4e0d\u662f\u4e00\u4efd\u201cX\u5929\u7cbe\u901aJava EE\u5f00\u53d1\u201d\u5fc3\u7075\u9e21\u6c64\uff0c\u8fd9\u662f\u4e00\u672c\u4ee4\u4eba\u671b\u800c\u751f\u754f\u7684Java Web\u5f00\u53d1\u7684\u201c\u7816\u5934\u4e66\u201d\u3002\u5168\u9762\u3001\u6df1\u5165\u4ecb\u7ecdSpring MVC\u3001Spring\u3001MyBatis\u4e09\u5927\u6846\u67b6\u6574\u5408\u5f00\u53d1\u7684\u56fe\u4e66\uff0c\u4e0d\u4ec5\u6709\u4e09\u5927\u6846\u67b6\u7684\u6700\u4f73\u5b9e\u8df5\uff0c\u800c\u4e14\u5bf9Spring MVC\u3001MyBatis\u6846\u67b6\u7684\u6e90\u4ee3\u7801\u8fdb\u884c\u89e3\u8bfb\uff0c\u63d0\u4f9b\u5fae\u4fe1+QQ\u7b54\u7591\u7fa4\n\n    \n        \u4e66\u540d\uff1a\u8f7b\u91cf\u7ea7Java Web\u4f01\u4e1a\u5e94\u7528\u5b9e\u6218\u2015\u2015Spring MVC+\n        &lt;/p&gt;\n    &lt;/div&gt;\n&lt;/article&gt;\n    \n\n    \n    \n        \n            &lt;/div&gt;&lt;/section&gt;\n        \n        \n        &lt;section class=\"archives-wrap\"&gt;\n            &lt;div class=\"archive-year-wrap\"&gt;\n                &lt;a href=\"/archives/2019\" class=\"archive-year\"&gt;&lt;i class=\"icon fa fa-calendar-o\"&gt;&lt;/i&gt;2019&lt;/a&gt;\n            &lt;/div&gt;\n            &lt;div class=\"archives\"&gt;\n    \n    \n    \n        &lt;div class=\"article-row\"&gt;\n    \n        &lt;article class=\"article article-summary\"&gt;\n    &lt;div class=\"article-summary-inner\"&gt;\n        \n        &lt;a href=\"/2019/10/01/xml3/\" class=\"thumbnail\"&gt;\n    \n    \n        &lt;span style=\"background-image:url(/2019/10/01/xml3/xml3_cover.png)\" alt=\"\u75af\u72c2XML\u8bb2\u4e49\uff08\u7b2c3\u7248\uff09\" class=\"thumbnail-image\"&gt;&lt;/span&gt;\n    \n    \n        \n&lt;span class=\"comment-counter\"&gt;\n    &lt;i class=\"fa fa-comments-o\"&gt;&lt;/i&gt;\n    \n        &lt;span&gt;&lt;a href=\"https://fkjava.org/2019/10/01/xml3/#isso-thread\"&gt;&lt;/a&gt;&lt;/span&gt;\n    \n&lt;/span&gt;\n\n\n    \n&lt;/a&gt;\n\n        \n        &lt;div class=\"article-meta\"&gt;\n            &lt;div class=\"category\"&gt;\n            &lt;a class=\"article-category-link\" href=\"/categories/Java/\"&gt;Java&lt;/a&gt;\n            &lt;/div&gt;\n            &lt;div class=\"date\"&gt;&lt;time datetime=\"2019-10-01T13:46:00.000Z\" itemprop=\"datePublished\"&gt;2019-10-01&lt;/time&gt;&lt;/div&gt;\n        &lt;/div&gt;\n        \n    \n        &lt;h1 class=\"article-title\" itemprop=\"name\"&gt;\n        &lt;a href=\"/2019/10/01/xml3/\"&gt;\u75af\u72c2XML\u8bb2\u4e49\uff08\u7b2c3\u7248\uff09&lt;/a&gt;\n        &lt;/h1&gt;\n    \n\n        &lt;p class=\"article-excerpt\"&gt;\n            \u5168\u9762\u8986\u76d6XML\u76f8\u5173\u7684DTD\u3001XML\u3001Schema\u7b49\u77e5\u8bc6\uff0c\u5e76\u8986\u76d6XSLT\u3001XPath\u3001XQuery\u3001DOM\u3001SAX\u3001JDOM\u3001dom4j\u3001Web Service\u7b49\u9ad8\u7ea7\u5185\u5bb9\uff0c\u63d0\u4f9b\u5fae\u4fe1+QQ\u7b54\u7591\u7fa4\n\n    \n        \u4e66\u540d\uff1a\u75af\u72c2XML\u8bb2\u4e49\uff08\u7b2c3\u7248\uff09\n        \u51fa\u7248\u793e\uff1a\u7535\u5b50\u5de5\u4e1a\u51fa\u7248\u793e\n    \n    \n        \u51fa\u7248\u65f6\u95f4\uff1a2019-10-01\n        \u7248\u6b21\uff1a3\n    \n  \n        &lt;/p&gt;\n    &lt;/div&gt;\n&lt;/article&gt;\n    \n\n    \n    \n    \n    \n        &lt;article class=\"article article-summary\"&gt;\n    &lt;div class=\"article-summary-inner\"&gt;\n        \n        &lt;a href=\"/2019/04/01/java5/\" class=\"thumbnail\"&gt;\n    \n    \n        &lt;span style=\"background-image:url(/2019/04/01/java5/java5_cover.png)\" alt=\"\u75af\u72c2Java\u8bb2\u4e49\uff08\u7b2c5\u7248\uff09\uff08\u542bDVD\u5149\u76d8\u4e00\u5f20\uff09\" class=\"thumbnail-image\"&gt;&lt;/span&gt;\n    \n    \n        \n&lt;span class=\"comment-counter\"&gt;\n    &lt;i class=\"fa fa-comments-o\"&gt;&lt;/i&gt;\n    \n        &lt;span&gt;&lt;a href=\"https://fkjava.org/2019/04/01/java5/#isso-thread\"&gt;&lt;/a&gt;&lt;/span&gt;\n    \n&lt;/span&gt;\n\n\n    \n&lt;/a&gt;\n\n        \n        &lt;div class=\"article-meta\"&gt;\n            &lt;div class=\"category\"&gt;\n            &lt;a class=\"article-category-link\" href=\"/categories/Java/\"&gt;Java&lt;/a&gt;\n            &lt;/div&gt;\n            &lt;div class=\"date\"&gt;&lt;time datetime=\"2019-04-02T02:46:00.000Z\" itemprop=\"datePublished\"&gt;2019-04-01&lt;/time&gt;&lt;/div&gt;\n        &lt;/div&gt;\n        \n    \n        &lt;h1 class=\"article-title\" itemprop=\"name\"&gt;\n        &lt;a href=\"/2019/04/01/java5/\"&gt;\u75af\u72c2Java\u8bb2\u4e49\uff08\u7b2c5\u7248\uff09\uff08\u542bDVD\u5149\u76d8\u4e00\u5f20\uff09&lt;/a&gt;\n        &lt;/h1&gt;\n    \n\n        &lt;p class=\"article-excerpt\"&gt;\n            \u8986\u76d6Java\u7a33\u5b9a\u7684\u5927\u7248\u672cJava11\uff0c\u674e\u521a\u4f5c\u54c1\u6210\u4e3a\u8fd1\u767e\u4e07\u6d77\u5ce1\u4e24\u5cb8\u8bfb\u8005\u4e4b\u9009\uff0c\u672c\u4e66\u8d60\u90011700\u5206\u949f\u89c6\u9891\u3001\u6e90\u4ee3\u7801\u3001\u7535\u5b50\u4e66\u3001\u8bfe\u4ef6\u3001\u9762\u8bd5\u9898\uff0c\u63d0\u4f9b\u5fae\u4fe1+QQ\u7b54\u7591\u7fa4\n\n    \n        \u4e66\u540d\uff1a\u75af\u72c2Java\u8bb2\u4e49\uff08\u7b2c5\u7248\uff09\n        \u51fa\u7248\u793e\uff1a\u7535\u5b50\u5de5\u4e1a\u51fa\u7248\u793e\n    \n    \n        \u51fa\u7248\u65f6\u95f4\uff1a2019-04-01\n        \u7248\u6b21\uff1a5\n    \n    \n        \u54c1\u724c\uff1a\u535a\u6587\u89c6\u70b9\n\n        &lt;/p&gt;\n    &lt;/div&gt;\n&lt;/article&gt;\n    \n        &lt;/div&gt;\n    \n\n    \n    \n    \n    \n        &lt;div class=\"article-row\"&gt;\n    \n        &lt;article class=\"article article-summary\"&gt;\n    &lt;div class=\"article-summary-inner\"&gt;\n        \n        &lt;a href=\"/2019/04/01/python/\" class=\"thumbnail\"&gt;\n    \n    \n        &lt;span style=\"background-image:url(/2019/04/01/python/python_cover.png)\" alt=\"\u75af\u72c2Python\u8bb2\u4e49\" class=\"thumbnail-image\"&gt;&lt;/span&gt;\n    \n    \n        \n&lt;span class=\"comment-counter\"&gt;\n    &lt;i class=\"fa fa-comments-o\"&gt;&lt;/i&gt;\n    \n        &lt;span&gt;&lt;a href=\"https://fkjava.org/2019/04/01/python/#isso-thread\"&gt;&lt;/a&gt;&lt;/span&gt;\n    \n&lt;/span&gt;\n\n\n    \n&lt;/a&gt;\n\n        \n        &lt;div class=\"article-meta\"&gt;\n            &lt;div class=\"category\"&gt;\n            &lt;a class=\"article-category-link\" href=\"/categories/Python/\"&gt;Python&lt;/a&gt;\n            &lt;/div&gt;\n            &lt;div class=\"date\"&gt;&lt;time datetime=\"2019-04-02T02:46:00.000Z\" itemprop=\"datePublished\"&gt;2019-04-01&lt;/time&gt;&lt;/div&gt;\n        &lt;/div&gt;\n        \n    \n        &lt;h1 class=\"article-title\" itemprop=\"name\"&gt;\n        &lt;a href=\"/2019/04/01/python/\"&gt;\u75af\u72c2Python\u8bb2\u4e49&lt;/a&gt;\n        &lt;/h1&gt;\n    \n\n        &lt;p class=\"article-excerpt\"&gt;\n            \u4ece\u96f6\u5f00\u59cb\uff0cPython\u7f16\u7a0b\u4ece\u5165\u95e8\u5230\u5b9e\u8df5\u4e00\u7f51\u6253\u5c3d\uff0c648\u9875\u9e3f\u7bc7\u5de8\u5236\uff0c\u56f4\u7ed5\u7f51\u7edc\u722c\u866b\u3001\u5927\u6570\u636e\u5206\u6790\u3001Web\u7f16\u7a0b\u7b49\u5c31\u4e1a\u70ed\u70b9\u8bbe\u7f6e\u6848\u4f8b\n\n    \n        \u4e66\u540d\uff1a\u75af\u72c2Python\u8bb2\u4e49\n        \u51fa\u7248\u793e\uff1a\u7535\u5b50\u5de5\u4e1a\u51fa\u7248\u793e\n    \n    \n        \u51fa\u7248\u65f6\u95f4\uff1a2018-12-01\n        \u7248\u6b21\uff1a1\n    \n    \n        \u54c1\u724c\uff1a\u535a\u6587\u89c6\u70b9\n        ISBN\uff1a97871\n        &lt;/p&gt;\n    &lt;/div&gt;\n&lt;/article&gt;\n    \n\n    \n    \n    \n    \n        &lt;article class=\"article article-summary\"&gt;\n    &lt;div class=\"article-summary-inner\"&gt;\n        \n        &lt;a href=\"/2019/03/01/android4/\" class=\"thumbnail\"&gt;\n    \n    \n        &lt;span style=\"background-image:url(/2019/03/01/android4/android4_cover.png)\" alt=\"\u75af\u72c2Android\u8bb2\u4e49\uff08\u7b2c4\u7248\uff09\" class=\"thumbnail-image\"&gt;&lt;/span&gt;\n    \n    \n        \n&lt;span class=\"comment-counter\"&gt;\n    &lt;i class=\"fa fa-comments-o\"&gt;&lt;/i&gt;\n    \n        &lt;span&gt;&lt;a href=\"https://fkjava.org/2019/03/01/android4/#isso-thread\"&gt;&lt;/a&gt;&lt;/span&gt;\n    \n&lt;/span&gt;\n\n\n    \n&lt;/a&gt;\n\n        \n        &lt;div class=\"article-meta\"&gt;\n            &lt;div class=\"category\"&gt;\n            &lt;a class=\"article-category-link\" href=\"/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/\"&gt;\u79fb\u52a8\u5f00\u53d1&lt;/a&gt;\n            &lt;/div&gt;\n            &lt;div class=\"date\"&gt;&lt;time datetime=\"2019-03-01T18:46:00.000Z\" itemprop=\"datePublished\"&gt;2019-03-01&lt;/time&gt;&lt;/div&gt;\n        &lt;/div&gt;\n        \n    \n        &lt;h1 class=\"article-title\" itemprop=\"name\"&gt;\n        &lt;a href=\"/2019/03/01/android4/\"&gt;\u75af\u72c2Android\u8bb2\u4e49\uff08\u7b2c4\u7248\uff09&lt;/a&gt;\n        &lt;/h1&gt;\n    \n\n        &lt;p class=\"article-excerpt\"&gt;\n            \u5b89\u5353\u7ecf\u5178\u4e4b\u4f5c\u57fa\u4e8eAndroid9\u5168\u65b0\u5347\u7ea7\uff0cstormzhang\u7b49\u5708\u5185\u4eba\u58eb\u70b9\u8d5e\uff0c\u66fe\u83b7\u8bc4CSDN\u5e74\u5ea6\u5177\u6709\u6280\u672f\u5f71\u54cd\u529b\u5341\u5927\u539f\u521b\u56fe\u4e66\uff0c\u63d0\u4f9b\u5fae\u4fe1+QQ\u7b54\u7591\u7fa4\n\n    \n        \u4e66\u540d\uff1a\u75af\u72c2Android\u8bb2\u4e49\uff08\u7b2c4\u7248\uff09\n        \u51fa\u7248\u793e\uff1a\u7535\u5b50\u5de5\u4e1a\u51fa\u7248\u793e\n    \n    \n        \u51fa\u7248\u65f6\u95f4\uff1a2019-03-01\n        \u7248\u6b21\uff1a4\n    \n    \n        \u54c1\u724c\uff1a\u535a\u6587\u89c6\u70b9\n\n        &lt;/p&gt;\n    &lt;/div&gt;\n&lt;/article&gt;\n    \n        &lt;/div&gt;\n    \n\n    \n    \n        \n            &lt;/div&gt;&lt;/section&gt;\n        \n        \n        &lt;section class=\"archives-wrap\"&gt;\n            &lt;div class=\"archive-year-wrap\"&gt;\n                &lt;a href=\"/archives/2018\" class=\"archive-year\"&gt;&lt;i class=\"icon fa fa-calendar-o\"&gt;&lt;/i&gt;2018&lt;/a&gt;\n            &lt;/div&gt;\n            &lt;div class=\"archives\"&gt;\n    \n    \n    \n        &lt;div class=\"article-row\"&gt;\n    \n        &lt;article class=\"article article-summary\"&gt;\n    &lt;div class=\"article-summary-inner\"&gt;\n        \n        &lt;a href=\"/2018/06/01/android_kotlin/\" class=\"thumbnail\"&gt;\n    \n    \n        &lt;span style=\"background-image:url(/2018/06/01/android_kotlin/android_kotlin_cover.png)\" alt=\"\u75af\u72c2Android\u8bb2\u4e49\uff08Kotlin\u7248\uff09\" class=\"thumbnail-image\"&gt;&lt;/span&gt;\n    \n    \n        \n&lt;span class=\"comment-counter\"&gt;\n    &lt;i class=\"fa fa-comments-o\"&gt;&lt;/i&gt;\n    \n        &lt;span&gt;&lt;a href=\"https://fkjava.org/2018/06/01/android_kotlin/#isso-thread\"&gt;&lt;/a&gt;&lt;/span&gt;\n    \n&lt;/span&gt;\n\n\n    \n&lt;/a&gt;\n\n        \n        &lt;div class=\"article-meta\"&gt;\n            &lt;div class=\"category\"&gt;\n            &lt;a class=\"article-category-link\" href=\"/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/\"&gt;\u79fb\u52a8\u5f00\u53d1&lt;/a&gt;\n            &lt;/div&gt;\n            &lt;div class=\"date\"&gt;&lt;time datetime=\"2018-06-02T02:46:00.000Z\" itemprop=\"datePublished\"&gt;2018-06-01&lt;/time&gt;&lt;/div&gt;\n        &lt;/div&gt;\n        \n    \n        &lt;h1 class=\"article-title\" itemprop=\"name\"&gt;\n        &lt;a href=\"/2018/06/01/android_kotlin/\"&gt;\u75af\u72c2Android\u8bb2\u4e49\uff08Kotlin\u7248\uff09&lt;/a&gt;\n        &lt;/h1&gt;\n    \n\n        &lt;p class=\"article-excerpt\"&gt;\n            \u91cd\u537035\u6b21\u3001\u5370\u5237\u91cf\u8d8517\u4e07\u518c\u7684Android\u7ecf\u5178\uff0c\u57fa\u4e8e\u5168\u65b0\u7684Android\u7248\u672c\u5168\u9762\u5347\u7ea7\uff0c\u66fe\u83b7\u8bc4CSDN\u5e74\u5ea6\u5177\u6709\u6280\u672f\u5f71\u54cd\u529b\u5341\u5927\u539f\u521b\u56fe\u4e66\uff0c\u63d0\u4f9b\u5fae\u4fe1+QQ\u7b54\u7591\u7fa4\n\n    \n        \u4e66\u540d\uff1a\u75af\u72c2Android\u8bb2\u4e49\uff08Kotlin\u7248\uff09\n        \u51fa\u7248\u793e\uff1a\u7535\u5b50\u5de5\u4e1a\u51fa\u7248\u793e\n    \n    \n        \u51fa\u7248\u65f6\u95f4\uff1a2018-06-01\n        \u7248\u6b21\uff1a1\n    \n    \n       \n        &lt;/p&gt;\n    &lt;/div&gt;\n&lt;/article&gt;\n    \n\n    \n    \n    \n    \n        &lt;article class=\"article article-summary\"&gt;\n    &lt;div class=\"article-summary-inner\"&gt;\n        \n        &lt;a href=\"/2018/03/10/javaee5/\" class=\"thumbnail\"&gt;\n    \n    \n        &lt;span style=\"background-image:url(/2018/03/10/javaee5/javaee5_cover.png)\" alt=\"\u8f7b\u91cf\u7ea7Java EE\u4f01\u4e1a\u5e94\u7528\u5b9e\u6218\uff08\u7b2c5\u7248\uff09\u2015\u2015Struts 2+Spring 5+Hibernate/JPA\u6574\u5408\u5f00\u53d1\uff08\u542bDVD\u5149\u76d8\u4e00\u5f20\uff09\" class=\"thumbnail-image\"&gt;&lt;/span&gt;\n    \n    \n        \n&lt;span class=\"comment-counter\"&gt;\n    &lt;i class=\"fa fa-comments-o\"&gt;&lt;/i&gt;\n    \n        &lt;span&gt;&lt;a href=\"https://fkjava.org/2018/03/10/javaee5/#isso-thread\"&gt;&lt;/a&gt;&lt;/span&gt;\n    \n&lt;/span&gt;\n\n\n    \n&lt;/a&gt;\n\n        \n        &lt;div class=\"article-meta\"&gt;\n            &lt;div class=\"category\"&gt;\n            &lt;a class=\"article-category-link\" href=\"/categories/Java/\"&gt;Java&lt;/a&gt;\n            &lt;/div&gt;\n            &lt;div class=\"date\"&gt;&lt;time datetime=\"2018-03-10T13:46:00.000Z\" itemprop=\"datePublished\"&gt;2018-03-10&lt;/time&gt;&lt;/div&gt;\n        &lt;/div&gt;\n        \n    \n        &lt;h1 class=\"article-title\" itemprop=\"name\"&gt;\n        &lt;a href=\"/2018/03/10/javaee5/\"&gt;\u8f7b\u91cf\u7ea7Java EE\u4f01\u4e1a\u5e94\u7528\u5b9e\u6218\uff08\u7b2c5\u7248\uff09\u2015\u2015Struts 2+Spring 5+Hibernate/JPA\u6574\u5408\u5f00\u53d1\uff08\u542bDVD\u5149\u76d8\u4e00\u5f20\uff09&lt;/a&gt;\n        &lt;/h1&gt;\n    \n\n        &lt;p class=\"article-excerpt\"&gt;\n            S2SH\u7ecf\u5178\u56fe\u4e66\u5347\u7ea7\u7248\uff0c\u5168\u9762\u62e5\u62b1Spring 5\u8f7b\u91cf\u7ea7Web\u5f00\u53d1\u65b0\u7279\u6027\uff1b\u9762\u4e16\u5341\u4f59\u5e74\uff0c\u5386\u7ecf\u6570\u5341\u4e07\u8bfb\u8005\u68c0\u9a8c\uff1b\u75af\u72c2Java\u8bb2\u4e49\u4f5c\u8005\u674e\u521a\u51fa\u54c1\uff1b1000+\u5206\u949f\u8bfe\u7a0b\u5b9e\u5f55\u89c6\u9891\uff1b\u63d0\u4f9bQQ\u7fa4\u3001\u5fae\u4fe1\u7fa4\u7b54\u7591\u670d\u52a1\u53ca\u6280\u672f\u652f\u6301\u793e\u533a\n\n    \n        \u4e66\u540d\uff1a\u8f7b\u91cf\u7ea7Java EE\u4f01\u4e1a\u5e94\u7528\u5b9e\u6218\uff08\u7b2c5\u7248\uff09\n        \u51fa\u7248\u793e\uff1a\u7535\u5b50\u5de5\u4e1a\u51fa\u7248\u793e\n    \n    \n        \u51fa\u7248\u65f6\u95f4\uff1a2018-03-01\n     \n        &lt;/p&gt;\n    &lt;/div&gt;\n&lt;/article&gt;\n    \n        &lt;/div&gt;\n    \n\n    \n    \n    \n    \n        &lt;div class=\"article-row\"&gt;\n    \n        &lt;article class=\"article article-summary\"&gt;\n    &lt;div class=\"article-summary-inner\"&gt;\n        \n        &lt;a href=\"/2018/03/01/front/\" class=\"thumbnail\"&gt;\n    \n    \n        &lt;span style=\"background-image:url(/2018/03/01/front/front_cover.png)\" alt=\"\u75af\u72c2\u524d\u7aef\u5f00\u53d1\u8bb2\u4e49\uff1ajQuery+AngularJS+Bootstrap\u524d\u7aef\u5f00\u53d1\u5b9e\u6218\" class=\"thumbnail-image\"&gt;&lt;/span&gt;\n    \n    \n        \n&lt;span class=\"comment-counter\"&gt;\n    &lt;i class=\"fa fa-comments-o\"&gt;&lt;/i&gt;\n    \n        &lt;span&gt;&lt;a href=\"https://fkjava.org/2018/03/01/front/#isso-thread\"&gt;&lt;/a&gt;&lt;/span&gt;\n    \n&lt;/span&gt;\n\n\n    \n&lt;/a&gt;\n\n        \n        &lt;div class=\"article-meta\"&gt;\n            &lt;div class=\"category\"&gt;\n            &lt;a class=\"article-category-link\" href=\"/categories/%E5%89%8D%E7%AB%AF/\"&gt;\u524d\u7aef&lt;/a&gt;\n            &lt;/div&gt;\n            &lt;div class=\"date\"&gt;&lt;time datetime=\"2018-03-01T17:46:00.000Z\" itemprop=\"datePublished\"&gt;2018-03-01&lt;/time&gt;&lt;/div&gt;\n        &lt;/div&gt;\n        \n    \n        &lt;h1 class=\"article-title\" itemprop=\"name\"&gt;\n        &lt;a href=\"/2018/03/01/front/\"&gt;\u75af\u72c2\u524d\u7aef\u5f00\u53d1\u8bb2\u4e49\uff1ajQuery+AngularJS+Bootstrap\u524d\u7aef\u5f00\u53d1\u5b9e\u6218&lt;/a&gt;\n        &lt;/h1&gt;\n    \n\n        &lt;p class=\"article-excerpt\"&gt;\n            \u56f4\u7ed5\u771f\u6b63\u8f7b\u91cf\u7ea7\u7684AngularJS\u8fdb\u884c\u8bb2\u89e3\uff0c\u9002\u5408\u719f\u6089JS\u7684\u524d\u7aef\u5f00\u53d1\u8005\uff1bBootstrap\u91c7\u7528\u5168\u65b0\u7248\u672c\uff1b\u4e00\u672c\u4e66\u641e\u5b9a\u524d\u7aef\u5f00\u53d1\uff0c\u63d0\u4f9b\u5fae\u4fe1+QQ\u7b54\u7591\u7fa4\n\n    \n        \u4e66\u540d\uff1a\u75af\u72c2\u524d\u7aef\u5f00\u53d1\u8bb2\u4e49\uff1ajQuery+AngularJS+Bootstrap\u524d\u7aef\u5f00\u53d1\u5b9e\u6218\n        \u51fa\u7248\u793e\uff1a\u7535\u5b50\u5de5\u4e1a\u51fa\u7248\u793e\n    \n    \n        \u51fa\u7248\u65f6\u95f4\uff1a2017-10-01\n        \u7248\u6b21\uff1a1\n  \n        &lt;/p&gt;\n    &lt;/div&gt;\n&lt;/article&gt;\n    \n\n    \n    \n    \n    \n        &lt;article class=\"article article-summary\"&gt;\n    &lt;div class=\"article-summary-inner\"&gt;\n        \n        &lt;a href=\"/2018/02/01/html52/\" class=\"thumbnail\"&gt;\n    \n    \n        &lt;span style=\"background-image:url(/2018/02/01/html52/html52_cover.png)\" alt=\"\u75af\u72c2HTML5+CSS3+JavaScript\u8bb2\u4e49\uff08\u7b2c2\u7248\uff09\" class=\"thumbnail-image\"&gt;&lt;/span&gt;\n    \n    \n        \n&lt;span class=\"comment-counter\"&gt;\n    &lt;i class=\"fa fa-comments-o\"&gt;&lt;/i&gt;\n    \n        &lt;span&gt;&lt;a href=\"https://fkjava.org/2018/02/01/html52/#isso-thread\"&gt;&lt;/a&gt;&lt;/span&gt;\n    \n&lt;/span&gt;\n\n\n    \n&lt;/a&gt;\n\n        \n        &lt;div class=\"article-meta\"&gt;\n            &lt;div class=\"category\"&gt;\n            &lt;a class=\"article-category-link\" href=\"/categories/%E5%89%8D%E7%AB%AF/\"&gt;\u524d\u7aef&lt;/a&gt;\n            &lt;/div&gt;\n            &lt;div class=\"date\"&gt;&lt;time datetime=\"2018-02-02T03:46:00.000Z\" itemprop=\"datePublished\"&gt;2018-02-01&lt;/time&gt;&lt;/div&gt;\n        &lt;/div&gt;\n        \n    \n        &lt;h1 class=\"article-title\" itemprop=\"name\"&gt;\n        &lt;a href=\"/2018/02/01/html52/\"&gt;\u75af\u72c2HTML5+CSS3+JavaScript\u8bb2\u4e49\uff08\u7b2c2\u7248\uff09&lt;/a&gt;\n        &lt;/h1&gt;\n    \n\n        &lt;p class=\"article-excerpt\"&gt;\n            \u9762\u5411 HTML5 .1\u89c4\u8303\u6b63\u5f0f\u7248\uff0c\u4ee5ES 6\u6807\u51c6\u4e3a\u57fa\u7840\u5199\u5c31\uff0c\u8986\u76d6CSS 3\u7684\u65b0\u589e\u5185\u5bb9\n\n    \n        \u4e66\u540d\uff1a\u75af\u72c2HTML5+CSS3+JavaScript\u8bb2\u4e49\uff08\u7b2c2\u7248\uff09\n        \u51fa\u7248\u793e\uff1a\u7535\u5b50\u5de5\u4e1a\u51fa\u7248\u793e\n    \n    \n        \u51fa\u7248\u65f6\u95f4\uff1a2017-05-01\n        \u7248\u6b21\uff1a2\n    \n    \n        \u54c1\u724c\uff1a\u535a\u6587\u89c6\u70b9\n        ISBN\uff1a978\n        &lt;/p&gt;\n    &lt;/div&gt;\n&lt;/article&gt;\n    \n        &lt;/div&gt;\n    \n\n\n    &lt;/div&gt;&lt;/section&gt;\n\n\n\n                        &lt;/div&gt;\n                    &lt;/section&gt;\n                    &lt;aside id=\"sidebar\"&gt;\n    &lt;a class=\"sidebar-toggle\" title=\"Expand Sidebar\"&gt;&lt;i class=\"toggle icon\"&gt;&lt;/i&gt;&lt;/a&gt;\n    &lt;div class=\"sidebar-top\"&gt;\n        &lt;p&gt;\u5173\u6ce8\u6211\u4eec :&lt;/p&gt;\n        &lt;ul class=\"social-links\"&gt;\n            \n                \n                &lt;li&gt;\n                    &lt;a class=\"social-tooltip\" title=\"github\" href=\"https://lgjava.github.io/fkbooksdown/\" target=\"_blank\" rel=\"noopener\"&gt;\n                        &lt;i class=\"icon fa fa-github\"&gt;&lt;/i&gt;\n                    &lt;/a&gt;\n                &lt;/li&gt;\n                \n            \n                \n                &lt;li&gt;\n                    &lt;a class=\"social-tooltip\" title=\"weibo\" href=\"https://www.weibo.com/lgjava/\" target=\"_blank\" rel=\"noopener\"&gt;\n                        &lt;i class=\"icon fa fa-weibo\"&gt;&lt;/i&gt;\n                    &lt;/a&gt;\n                &lt;/li&gt;\n                \n            \n        &lt;/ul&gt;\n    &lt;/div&gt;\n    \n    &lt;div class=\"widget-wrap widget-list\"&gt;\n\t&lt;h3 class=\"widget-title\" style=\"float:left\"&gt;\u626b\u63cf\u5173\u6ce8\u516c\u4f17\u53f7\uff1a&lt;/h3&gt;\n\t&lt;h3 class=\"widget-title\" style=\"float:right\"&gt;\u6dfb\u52a0\u52a9\u624b\u52a0\u7fa4\u6216\u54a8\u8be2\uff1a&lt;/h3&gt;\n\t&lt;img src=\"/css/images/fkjava_qr.jpg\" alt=\"\u75af\u72c2\u8f6f\u4ef6\" width=\"135\" height=\"135\"&gt;&amp;nbsp;\n\t&lt;img src=\"/css/images/assist_qr.png\" alt=\"\u75af\u72c2\u5c0f\u52a9\u624b\" width=\"135\" height=\"135\"&gt;\n    &lt;/div&gt;\n    &lt;div class=\"widgets-container\"&gt;\n        \n            \n                \n\n            \n                \n    &lt;div class=\"widget-wrap\"&gt;\n        &lt;h3 class=\"widget-title\"&gt;\u6700\u65b0\u6587\u7ae0&lt;/h3&gt;\n        &lt;div class=\"widget\"&gt;\n            &lt;ul id=\"recent-post\" class=\"\"&gt;\n                \n                    &lt;li&gt;\n                        \n                        &lt;div class=\"item-thumbnail\"&gt;\n                            &lt;a href=\"/2020/04/01/ssm/\" class=\"thumbnail\"&gt;\n    \n    \n        &lt;span style=\"background-image:url(/2020/04/01/ssm/ssm_cover.png)\" alt=\"\u8f7b\u91cf\u7ea7Java Web\u4f01\u4e1a\u5e94\u7528\u5b9e\u6218\u2015\u2015Spring MVC+Spring+MyBatis\u6574\u5408\u5f00\u53d1\" class=\"thumbnail-image\"&gt;&lt;/span&gt;\n    \n    \n&lt;/a&gt;\n\n                        &lt;/div&gt;\n                        \n                        &lt;div class=\"item-inner\"&gt;\n                            &lt;p class=\"item-category\"&gt;&lt;a class=\"article-category-link\" href=\"/categories/Java/\"&gt;Java&lt;/a&gt;&lt;/p&gt;\n                            &lt;p class=\"item-title\"&gt;&lt;a href=\"/2020/04/01/ssm/\" class=\"title\"&gt;\u8f7b\u91cf\u7ea7Java Web\u4f01\u4e1a\u5e94\u7528\u5b9e\u6218\u2015\u2015Spring MVC+Spring+MyBatis\u6574\u5408\u5f00\u53d1&lt;/a&gt;&lt;/p&gt;\n                            &lt;p class=\"item-date\"&gt;&lt;time datetime=\"2020-04-01T13:46:00.000Z\" itemprop=\"datePublished\"&gt;2020-04-01&lt;/time&gt;&lt;/p&gt;\n                        &lt;/div&gt;\n                    &lt;/li&gt;\n                \n                    &lt;li&gt;\n                        \n                        &lt;div class=\"item-thumbnail\"&gt;\n                            &lt;a href=\"/2019/10/01/xml3/\" class=\"thumbnail\"&gt;\n    \n    \n        &lt;span style=\"background-image:url(/2019/10/01/xml3/xml3_cover.png)\" alt=\"\u75af\u72c2XML\u8bb2\u4e49\uff08\u7b2c3\u7248\uff09\" class=\"thumbnail-image\"&gt;&lt;/span&gt;\n    \n    \n&lt;/a&gt;\n\n                        &lt;/div&gt;\n                        \n                        &lt;div class=\"item-inner\"&gt;\n                            &lt;p class=\"item-category\"&gt;&lt;a class=\"article-category-link\" href=\"/categories/Java/\"&gt;Java&lt;/a&gt;&lt;/p&gt;\n                            &lt;p class=\"item-title\"&gt;&lt;a href=\"/2019/10/01/xml3/\" class=\"title\"&gt;\u75af\u72c2XML\u8bb2\u4e49\uff08\u7b2c3\u7248\uff09&lt;/a&gt;&lt;/p&gt;\n                            &lt;p class=\"item-date\"&gt;&lt;time datetime=\"2019-10-01T13:46:00.000Z\" itemprop=\"datePublished\"&gt;2019-10-01&lt;/time&gt;&lt;/p&gt;\n                        &lt;/div&gt;\n                    &lt;/li&gt;\n                \n                    &lt;li&gt;\n                        \n                        &lt;div class=\"item-thumbnail\"&gt;\n                            &lt;a href=\"/2019/04/01/java5/\" class=\"thumbnail\"&gt;\n    \n    \n        &lt;span style=\"background-image:url(/2019/04/01/java5/java5_cover.png)\" alt=\"\u75af\u72c2Java\u8bb2\u4e49\uff08\u7b2c5\u7248\uff09\uff08\u542bDVD\u5149\u76d8\u4e00\u5f20\uff09\" class=\"thumbnail-image\"&gt;&lt;/span&gt;\n    \n    \n&lt;/a&gt;\n\n                        &lt;/div&gt;\n                        \n                        &lt;div class=\"item-inner\"&gt;\n                            &lt;p class=\"item-category\"&gt;&lt;a class=\"article-category-link\" href=\"/categories/Java/\"&gt;Java&lt;/a&gt;&lt;/p&gt;\n                            &lt;p class=\"item-title\"&gt;&lt;a href=\"/2019/04/01/java5/\" class=\"title\"&gt;\u75af\u72c2Java\u8bb2\u4e49\uff08\u7b2c5\u7248\uff09\uff08\u542bDVD\u5149\u76d8\u4e00\u5f20\uff09&lt;/a&gt;&lt;/p&gt;\n                            &lt;p class=\"item-date\"&gt;&lt;time datetime=\"2019-04-02T02:46:00.000Z\" itemprop=\"datePublished\"&gt;2019-04-01&lt;/time&gt;&lt;/p&gt;\n                        &lt;/div&gt;\n                    &lt;/li&gt;\n                \n                    &lt;li&gt;\n                        \n                        &lt;div class=\"item-thumbnail\"&gt;\n                            &lt;a href=\"/2019/04/01/python/\" class=\"thumbnail\"&gt;\n    \n    \n        &lt;span style=\"background-image:url(/2019/04/01/python/python_cover.png)\" alt=\"\u75af\u72c2Python\u8bb2\u4e49\" class=\"thumbnail-image\"&gt;&lt;/span&gt;\n    \n    \n&lt;/a&gt;\n\n                        &lt;/div&gt;\n                        \n                        &lt;div class=\"item-inner\"&gt;\n                            &lt;p class=\"item-category\"&gt;&lt;a class=\"article-category-link\" href=\"/categories/Python/\"&gt;Python&lt;/a&gt;&lt;/p&gt;\n                            &lt;p class=\"item-title\"&gt;&lt;a href=\"/2019/04/01/python/\" class=\"title\"&gt;\u75af\u72c2Python\u8bb2\u4e49&lt;/a&gt;&lt;/p&gt;\n                            &lt;p class=\"item-date\"&gt;&lt;time datetime=\"2019-04-02T02:46:00.000Z\" itemprop=\"datePublished\"&gt;2019-04-01&lt;/time&gt;&lt;/p&gt;\n                        &lt;/div&gt;\n                    &lt;/li&gt;\n                \n                    &lt;li&gt;\n                        \n                        &lt;div class=\"item-thumbnail\"&gt;\n                            &lt;a href=\"/2019/03/01/android4/\" class=\"thumbnail\"&gt;\n    \n    \n        &lt;span style=\"background-image:url(/2019/03/01/android4/android4_cover.png)\" alt=\"\u75af\u72c2Android\u8bb2\u4e49\uff08\u7b2c4\u7248\uff09\" class=\"thumbnail-image\"&gt;&lt;/span&gt;\n    \n    \n&lt;/a&gt;\n\n                        &lt;/div&gt;\n                        \n                        &lt;div class=\"item-inner\"&gt;\n                            &lt;p class=\"item-category\"&gt;&lt;a class=\"article-category-link\" href=\"/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/\"&gt;\u79fb\u52a8\u5f00\u53d1&lt;/a&gt;&lt;/p&gt;\n                            &lt;p class=\"item-title\"&gt;&lt;a href=\"/2019/03/01/android4/\" class=\"title\"&gt;\u75af\u72c2Android\u8bb2\u4e49\uff08\u7b2c4\u7248\uff09&lt;/a&gt;&lt;/p&gt;\n                            &lt;p class=\"item-date\"&gt;&lt;time datetime=\"2019-03-01T18:46:00.000Z\" itemprop=\"datePublished\"&gt;2019-03-01&lt;/time&gt;&lt;/p&gt;\n                        &lt;/div&gt;\n                    &lt;/li&gt;\n                \n            &lt;/ul&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n\n            \n                \n    &lt;div class=\"widget-wrap widget-list\"&gt;\n        &lt;h3 class=\"widget-title\"&gt;\u5206\u7c7b&lt;/h3&gt;\n        &lt;div class=\"widget\"&gt;\n            &lt;ul class=\"category-list\"&gt;&lt;li class=\"category-list-item\"&gt;&lt;a class=\"category-list-link\" href=\"/categories/Java/\"&gt;Java&lt;/a&gt;&lt;span class=\"category-list-count\"&gt;4&lt;/span&gt;&lt;/li&gt;&lt;li class=\"category-list-item\"&gt;&lt;a class=\"category-list-link\" href=\"/categories/Python/\"&gt;Python&lt;/a&gt;&lt;span class=\"category-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"category-list-item\"&gt;&lt;a class=\"category-list-link\" href=\"/categories/%E5%89%8D%E7%AB%AF/\"&gt;\u524d\u7aef&lt;/a&gt;&lt;span class=\"category-list-count\"&gt;2&lt;/span&gt;&lt;/li&gt;&lt;li class=\"category-list-item\"&gt;&lt;a class=\"category-list-link\" href=\"/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/\"&gt;\u79fb\u52a8\u5f00\u53d1&lt;/a&gt;&lt;span class=\"category-list-count\"&gt;2&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n\n\n            \n                \n    &lt;div class=\"widget-wrap widget-list\"&gt;\n        &lt;h3 class=\"widget-title\"&gt;\u5f52\u6863&lt;/h3&gt;\n        &lt;div class=\"widget\"&gt;\n            &lt;ul class=\"archive-list\"&gt;&lt;li class=\"archive-list-item\"&gt;&lt;a class=\"archive-list-link\" href=\"/archives/2020/04/\"&gt;\u56db\u6708 2020&lt;/a&gt;&lt;span class=\"archive-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"archive-list-item\"&gt;&lt;a class=\"archive-list-link\" href=\"/archives/2019/10/\"&gt;\u5341\u6708 2019&lt;/a&gt;&lt;span class=\"archive-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"archive-list-item\"&gt;&lt;a class=\"archive-list-link\" href=\"/archives/2019/04/\"&gt;\u56db\u6708 2019&lt;/a&gt;&lt;span class=\"archive-list-count\"&gt;2&lt;/span&gt;&lt;/li&gt;&lt;li class=\"archive-list-item\"&gt;&lt;a class=\"archive-list-link\" href=\"/archives/2019/03/\"&gt;\u4e09\u6708 2019&lt;/a&gt;&lt;span class=\"archive-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"archive-list-item\"&gt;&lt;a class=\"archive-list-link\" href=\"/archives/2018/06/\"&gt;\u516d\u6708 2018&lt;/a&gt;&lt;span class=\"archive-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"archive-list-item\"&gt;&lt;a class=\"archive-list-link\" href=\"/archives/2018/03/\"&gt;\u4e09\u6708 2018&lt;/a&gt;&lt;span class=\"archive-list-count\"&gt;2&lt;/span&gt;&lt;/li&gt;&lt;li class=\"archive-list-item\"&gt;&lt;a class=\"archive-list-link\" href=\"/archives/2018/02/\"&gt;\u4e8c\u6708 2018&lt;/a&gt;&lt;span class=\"archive-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n\n\n            \n                \n    &lt;div class=\"widget-wrap widget-list\"&gt;\n        &lt;h3 class=\"widget-title\"&gt;\u6807\u7b7e&lt;/h3&gt;\n        &lt;div class=\"widget\"&gt;\n            &lt;ul class=\"tag-list\" itemprop=\"keywords\"&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/Android/\" rel=\"tag\"&gt;Android&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;2&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/Android-Studio/\" rel=\"tag\"&gt;Android Studio&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;2&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/Angular/\" rel=\"tag\"&gt;Angular&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/Boostrap/\" rel=\"tag\"&gt;Boostrap&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/CSS-3/\" rel=\"tag\"&gt;CSS 3&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/DOM/\" rel=\"tag\"&gt;DOM&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/H5/\" rel=\"tag\"&gt;H5&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/HTML-5/\" rel=\"tag\"&gt;HTML 5&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/JAXP/\" rel=\"tag\"&gt;JAXP&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/JS/\" rel=\"tag\"&gt;JS&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;2&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/Java/\" rel=\"tag\"&gt;Java&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;2&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/Java-11/\" rel=\"tag\"&gt;Java 11&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/Java-EE/\" rel=\"tag\"&gt;Java EE&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/Java-Web/\" rel=\"tag\"&gt;Java Web&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/Java-%E5%9F%BA%E7%A1%80/\" rel=\"tag\"&gt;Java \u57fa\u7840&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/JavaScript/\" rel=\"tag\"&gt;JavaScript&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/Java%E5%AD%A6%E4%B9%A0/\" rel=\"tag\"&gt;Java\u5b66\u4e60&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/Kotlin/\" rel=\"tag\"&gt;Kotlin&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/MyBatis/\" rel=\"tag\"&gt;MyBatis&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/Python/\" rel=\"tag\"&gt;Python&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/Python%E5%AD%A6%E4%B9%A0/\" rel=\"tag\"&gt;Python\u5b66\u4e60&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/SAX/\" rel=\"tag\"&gt;SAX&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/SSH/\" rel=\"tag\"&gt;SSH&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/Schema/\" rel=\"tag\"&gt;Schema&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/Spring/\" rel=\"tag\"&gt;Spring&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;2&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/Spring-MVC/\" rel=\"tag\"&gt;Spring MVC&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/Web-Service/\" rel=\"tag\"&gt;Web Service&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/Web%E5%BC%80%E5%8F%91/\" rel=\"tag\"&gt;Web\u5f00\u53d1&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/XML/\" rel=\"tag\"&gt;XML&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/jQuery/\" rel=\"tag\"&gt;jQuery&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/%E4%BC%81%E4%B8%9A%E5%BC%80%E5%8F%91/\" rel=\"tag\"&gt;\u4f01\u4e1a\u5f00\u53d1&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/%E5%89%8D%E7%AB%AF/\" rel=\"tag\"&gt;\u524d\u7aef&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/\" rel=\"tag\"&gt;\u6570\u636e\u5206\u6790&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/\" rel=\"tag\"&gt;\u79fb\u52a8\u5f00\u53d1&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;2&lt;/span&gt;&lt;/li&gt;&lt;li class=\"tag-list-item\"&gt;&lt;a class=\"tag-list-link\" href=\"/tags/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/\" rel=\"tag\"&gt;\u7f51\u7edc\u722c\u866b&lt;/a&gt;&lt;span class=\"tag-list-count\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n\n\n            \n                \n    &lt;div class=\"widget-wrap widget-float\"&gt;\n        &lt;h3 class=\"widget-title\"&gt;\u6807\u7b7e\u4e91&lt;/h3&gt;\n        &lt;div class=\"widget tagcloud\"&gt;\n            &lt;a href=\"/tags/Android/\" style=\"font-size: 20px;\"&gt;Android&lt;/a&gt; &lt;a href=\"/tags/Android-Studio/\" style=\"font-size: 20px;\"&gt;Android Studio&lt;/a&gt; &lt;a href=\"/tags/Angular/\" style=\"font-size: 10px;\"&gt;Angular&lt;/a&gt; &lt;a href=\"/tags/Boostrap/\" style=\"font-size: 10px;\"&gt;Boostrap&lt;/a&gt; &lt;a href=\"/tags/CSS-3/\" style=\"font-size: 10px;\"&gt;CSS 3&lt;/a&gt; &lt;a href=\"/tags/DOM/\" style=\"font-size: 10px;\"&gt;DOM&lt;/a&gt; &lt;a href=\"/tags/H5/\" style=\"font-size: 10px;\"&gt;H5&lt;/a&gt; &lt;a href=\"/tags/HTML-5/\" style=\"font-size: 10px;\"&gt;HTML 5&lt;/a&gt; &lt;a href=\"/tags/JAXP/\" style=\"font-size: 10px;\"&gt;JAXP&lt;/a&gt; &lt;a href=\"/tags/JS/\" style=\"font-size: 20px;\"&gt;JS&lt;/a&gt; &lt;a href=\"/tags/Java/\" style=\"font-size: 20px;\"&gt;Java&lt;/a&gt; &lt;a href=\"/tags/Java-11/\" style=\"font-size: 10px;\"&gt;Java 11&lt;/a&gt; &lt;a href=\"/tags/Java-EE/\" style=\"font-size: 10px;\"&gt;Java EE&lt;/a&gt; &lt;a href=\"/tags/Java-Web/\" style=\"font-size: 10px;\"&gt;Java Web&lt;/a&gt; &lt;a href=\"/tags/Java-%E5%9F%BA%E7%A1%80/\" style=\"font-size: 10px;\"&gt;Java \u57fa\u7840&lt;/a&gt; &lt;a href=\"/tags/JavaScript/\" style=\"font-size: 10px;\"&gt;JavaScript&lt;/a&gt; &lt;a href=\"/tags/Java%E5%AD%A6%E4%B9%A0/\" style=\"font-size: 10px;\"&gt;Java\u5b66\u4e60&lt;/a&gt; &lt;a href=\"/tags/Kotlin/\" style=\"font-size: 10px;\"&gt;Kotlin&lt;/a&gt; &lt;a href=\"/tags/MyBatis/\" style=\"font-size: 10px;\"&gt;MyBatis&lt;/a&gt; &lt;a href=\"/tags/Python/\" style=\"font-size: 10px;\"&gt;Python&lt;/a&gt; &lt;a href=\"/tags/Python%E5%AD%A6%E4%B9%A0/\" style=\"font-size: 10px;\"&gt;Python\u5b66\u4e60&lt;/a&gt; &lt;a href=\"/tags/SAX/\" style=\"font-size: 10px;\"&gt;SAX&lt;/a&gt; &lt;a href=\"/tags/SSH/\" style=\"font-size: 10px;\"&gt;SSH&lt;/a&gt; &lt;a href=\"/tags/Schema/\" style=\"font-size: 10px;\"&gt;Schema&lt;/a&gt; &lt;a href=\"/tags/Spring/\" style=\"font-size: 20px;\"&gt;Spring&lt;/a&gt; &lt;a href=\"/tags/Spring-MVC/\" style=\"font-size: 10px;\"&gt;Spring MVC&lt;/a&gt; &lt;a href=\"/tags/Web-Service/\" style=\"font-size: 10px;\"&gt;Web Service&lt;/a&gt; &lt;a href=\"/tags/Web%E5%BC%80%E5%8F%91/\" style=\"font-size: 10px;\"&gt;Web\u5f00\u53d1&lt;/a&gt; &lt;a href=\"/tags/XML/\" style=\"font-size: 10px;\"&gt;XML&lt;/a&gt; &lt;a href=\"/tags/jQuery/\" style=\"font-size: 10px;\"&gt;jQuery&lt;/a&gt; &lt;a href=\"/tags/%E4%BC%81%E4%B8%9A%E5%BC%80%E5%8F%91/\" style=\"font-size: 10px;\"&gt;\u4f01\u4e1a\u5f00\u53d1&lt;/a&gt; &lt;a href=\"/tags/%E5%89%8D%E7%AB%AF/\" style=\"font-size: 10px;\"&gt;\u524d\u7aef&lt;/a&gt; &lt;a href=\"/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/\" style=\"font-size: 10px;\"&gt;\u6570\u636e\u5206\u6790&lt;/a&gt; &lt;a href=\"/tags/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/\" style=\"font-size: 20px;\"&gt;\u79fb\u52a8\u5f00\u53d1&lt;/a&gt; &lt;a href=\"/tags/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/\" style=\"font-size: 10px;\"&gt;\u7f51\u7edc\u722c\u866b&lt;/a&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n\n\n            \n                \n    &lt;div class=\"widget-wrap widget-list\"&gt;\n        &lt;h3 class=\"widget-title\"&gt;\u94fe\u63a5&lt;/h3&gt;\n        &lt;div class=\"widget\"&gt;\n            &lt;ul&gt;\n                \n                    &lt;li&gt;\n                        &lt;a href=\"http://www.crazyit.org\" target=\"_blank\" rel=\"noopener\"&gt;\u75af\u72c2Java\u8054\u76df&lt;/a&gt;\n                    &lt;/li&gt;\n                \n            &lt;/ul&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n\n\n            \n        \n    &lt;/div&gt;\n&lt;/aside&gt;\n\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;footer id=\"footer\"&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;div class=\"container-inner\"&gt;\n            &lt;a id=\"back-to-top\" href=\"javascript:;\"&gt;&lt;i class=\"icon fa fa-angle-up\"&gt;&lt;/i&gt;&lt;/a&gt;\n            &lt;div class=\"credit\"&gt;\n                &lt;h1 class=\"logo-wrap\"&gt;\n                    &lt;a href=\"/\" class=\"logo\"&gt;&lt;/a&gt;\n                &lt;/h1&gt;\n                &lt;p&gt;&amp;copy; 2001-2020 \u75af\u72c2\u8f6f\u4ef6&lt;/p&gt;\n                \n            &lt;/div&gt;\n            &lt;div class=\"footer-plugins\"&gt;\n              \n    \n\n\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/footer&gt;\n\n        \n    \n&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\"&gt;\n&lt;script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n    var gitalk = new Gitalk({\n        clientID: 'dfdf40aec0119b7ee2e6',\n        clientSecret: '384732e1b3eaf1e1480d3748c57cb6bffeb5092c',\n        id: 'eacf331f0ffc35d4b482f1d15a887d3b',\n        repo: 'fkjava',\n        owner: 'lgjava',\n        admin: \"lgjava\"\n    })\n    gitalk.render('comment-container')\n&lt;/script&gt;\n\n\n\n\n\n    \n        \n&lt;script src=\"/libs/lightgallery/js/lightgallery.min.js\"&gt;&lt;/script&gt;\n\n        \n&lt;script src=\"/libs/lightgallery/js/lg-thumbnail.min.js\"&gt;&lt;/script&gt;\n\n        \n&lt;script src=\"/libs/lightgallery/js/lg-pager.min.js\"&gt;&lt;/script&gt;\n\n        \n&lt;script src=\"/libs/lightgallery/js/lg-autoplay.min.js\"&gt;&lt;/script&gt;\n\n        \n&lt;script src=\"/libs/lightgallery/js/lg-fullscreen.min.js\"&gt;&lt;/script&gt;\n\n        \n&lt;script src=\"/libs/lightgallery/js/lg-zoom.min.js\"&gt;&lt;/script&gt;\n\n        \n&lt;script src=\"/libs/lightgallery/js/lg-hash.min.js\"&gt;&lt;/script&gt;\n\n        \n&lt;script src=\"/libs/lightgallery/js/lg-share.min.js\"&gt;&lt;/script&gt;\n\n        \n&lt;script src=\"/libs/lightgallery/js/lg-video.min.js\"&gt;&lt;/script&gt;\n\n    \n    \n        \n&lt;script src=\"/libs/justified-gallery/jquery.justifiedGallery.min.js\"&gt;&lt;/script&gt;\n\n    \n    \n\n    \n\n\n\n&lt;!-- Custom Scripts --&gt;\n\n&lt;script src=\"/js/main.js\"&gt;&lt;/script&gt;\n\n\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n</pre> In\u00a0[7]: Copied! <pre>import urllib.parse\n</pre> import urllib.parse In\u00a0[8]: Copied! <pre>params = urllib.parse.urlencode({'name':'fkit','password':'123888'})\n# add parameter to request\nurl = 'http://localhost:8888/test/get.jsp?%s' %params\nprint(url)\n</pre> params = urllib.parse.urlencode({'name':'fkit','password':'123888'}) # add parameter to request url = 'http://localhost:8888/test/get.jsp?%s' %params print(url) <pre>http://localhost:8888/test/get.jsp?name=fkit&amp;password=123888\n</pre> <p>We have not deploy this server as the localhost yet</p> In\u00a0[9]: Copied! <pre># with urlopen(url = url) as f:\n#     print(f.read().decode('utf-8'))\n</pre> # with urlopen(url = url) as f: #     print(f.read().decode('utf-8')) In\u00a0[10]: Copied! <pre>params = urllib.parse.urlencode({'name':'fkit','password':'123888'})\nparams = params.encode('utf-8')\n# input params as data\n# with urlopen('https://fkjava.org/',data = params) as f:\n#     print(f.read().decode('utf-8'))\n</pre> params = urllib.parse.urlencode({'name':'fkit','password':'123888'}) params = params.encode('utf-8') # input params as data # with urlopen('https://fkjava.org/',data = params) as f: #     print(f.read().decode('utf-8')) In\u00a0[11]: Copied! <pre>params = 'put parameters'.encode('utf-8')\n# Create Request Object, Use PUT method\n# req = urllib.request.Request(url = 'http://localhost:8888/test/put', data = params, method = 'PUT')`\n# with urlopen(req) as f:\n#     print(f.status)\n#     print(f.read().decode('utf-8'))\n</pre> params = 'put parameters'.encode('utf-8') # Create Request Object, Use PUT method # req = urllib.request.Request(url = 'http://localhost:8888/test/put', data = params, method = 'PUT')` # with urlopen(req) as f: #     print(f.status) #     print(f.read().decode('utf-8')) In\u00a0[\u00a0]: Copied! <pre>import threading\nclass DownUtill:\n    def __init__(self,path,target_file,thread_num):\n        # Download path\n        self.path = path\n        # How many threads are using\n        self.thread_num = thread_num\n        # The save place\n        self.target_file = target_file\n        # initialize threads arrary\n</pre> import threading class DownUtill:     def __init__(self,path,target_file,thread_num):         # Download path         self.path = path         # How many threads are using         self.thread_num = thread_num         # The save place         self.target_file = target_file         # initialize threads arrary"},{"location":"Ch15-Web-Service/Untitled/#urllibparse-module","title":"<code>urllib.parse</code> module\u00b6","text":""},{"location":"Ch15-Web-Service/Untitled/#use-urllibrequest-to-read-resources","title":"Use <code>urllib.request</code> to read resources\u00b6","text":""},{"location":"Ch15-Web-Service/Untitled/#send-get","title":"Send <code>Get</code>\u00b6","text":"<ul> <li>Use <code>urlopen</code> to send <code>Get</code> requirement with parameters to server</li> </ul>"},{"location":"Ch15-Web-Service/Untitled/#send-post","title":"Send <code>Post</code>\u00b6","text":"<ul> <li>use <code>urlopen</code> to send <code>POST</code> requirement with parameters to server</li> <li>use <code>data</code> in <code>urlopen</code></li> </ul>"},{"location":"Ch15-Web-Service/Untitled/#send-put","title":"Send <code>Put</code>\u00b6","text":""},{"location":"Ch15-Web-Service/Untitled/#multi-thread-download-unit","title":"Multi-thread download unit\u00b6","text":""},{"location":"Ch19-Visualization/Data_Diagram/","title":"Data Diagram","text":"In\u00a0[1]: Copied! <pre>import matplotlib.pyplot as plt\nplt.rcParams['figure.figsize'] = [14, 12]\n</pre> import matplotlib.pyplot as plt plt.rcParams['figure.figsize'] = [14, 12] In\u00a0[2]: Copied! <pre>data = [0.16881,0.14966,0.07471,0.06992,0.04762,0.3541,0.02925,0.02411,0.02316,0.01409,0.36326]\nlabels = ['Java','C','C++','Python','Visual Basic .NET','C#','PHP','JavaScript','SQL','Assembly Language','else']\n\n# Emphasis Python\nexplode = [0,0,0,0.3,0,0,0,0,0,0,0]\ncolors = ['red','pink','magenta','purple','orange']\n\n# Set chart as a circular, otherwise would be an ellipse\nplt.axes(aspect = 'equal')\n\n# Set the radius of circular\nplt.xlim(0,8)\nplt.ylim(0,8)\n\n# Draw the pie chart\nplt.pie( x = data,\n        labels = labels,\n        explode = explode,\n        colors = colors,\n        autopct =' %.3f%%', # keep 3 decimals\n        pctdistance = 0.75, # the distance between label and the center of circular\n        labeldistance = 1.1,\n        startangle = 180,\n        center = (4,4),\n        radius = 3.2,\n        counterclock = False,\n        wedgeprops = {'linewidth':1, 'edgecolor' : 'green'},\n        textprops = {'fontsize':13, 'color': 'black'},\n        frame = 1  # set if show the boundary of the circular\n)\n# do not show x,y axis\nplt.xticks(())\nplt.yticks(())\nplt.title('Most popular programming language')\nplt.show()\n</pre> data = [0.16881,0.14966,0.07471,0.06992,0.04762,0.3541,0.02925,0.02411,0.02316,0.01409,0.36326] labels = ['Java','C','C++','Python','Visual Basic .NET','C#','PHP','JavaScript','SQL','Assembly Language','else']  # Emphasis Python explode = [0,0,0,0.3,0,0,0,0,0,0,0] colors = ['red','pink','magenta','purple','orange']  # Set chart as a circular, otherwise would be an ellipse plt.axes(aspect = 'equal')  # Set the radius of circular plt.xlim(0,8) plt.ylim(0,8)  # Draw the pie chart plt.pie( x = data,         labels = labels,         explode = explode,         colors = colors,         autopct =' %.3f%%', # keep 3 decimals         pctdistance = 0.75, # the distance between label and the center of circular         labeldistance = 1.1,         startangle = 180,         center = (4,4),         radius = 3.2,         counterclock = False,         wedgeprops = {'linewidth':1, 'edgecolor' : 'green'},         textprops = {'fontsize':13, 'color': 'black'},         frame = 1  # set if show the boundary of the circular ) # do not show x,y axis plt.xticks(()) plt.yticks(()) plt.title('Most popular programming language') plt.show() In\u00a0[3]: Copied! <pre>import numpy as np\n\nx_data = ['2011','2012','2013','2014','2015','2016','2017']\ny_data = [58000,60200,63000,71000,84000,90500,107000]\ny_data2 = [52000,54200,51500,58300,56800,59500,62700]\n\n# Draw the histogram\nplt.bar(x = x_data, height = y_data, label = 'Crazy Python', COLOR = 'steelblue', alpha = 0.8)\nplt.bar(x = x_data, height = y_data2, label = 'Crazy Java', COLOR = 'indianred', alpha = 0.8)\n\n# set labels\nfor x,y in enumerate(y_data):\n    plt.text(x,y+100, '%s' %y,ha = 'center', va = 'bottom')\nfor x,y in enumerate(y_data2):\n    plt.text(x,y+100, '%s' %y,ha = 'center', va = 'top')\n    \nplt.title('Comparison between Java and Python')\nplt.xlabel('Year')\nplt.ylabel('Sales')\n\nplt.legend(loc = 'best')\nplt.show()\n</pre> import numpy as np  x_data = ['2011','2012','2013','2014','2015','2016','2017'] y_data = [58000,60200,63000,71000,84000,90500,107000] y_data2 = [52000,54200,51500,58300,56800,59500,62700]  # Draw the histogram plt.bar(x = x_data, height = y_data, label = 'Crazy Python', COLOR = 'steelblue', alpha = 0.8) plt.bar(x = x_data, height = y_data2, label = 'Crazy Java', COLOR = 'indianred', alpha = 0.8)  # set labels for x,y in enumerate(y_data):     plt.text(x,y+100, '%s' %y,ha = 'center', va = 'bottom') for x,y in enumerate(y_data2):     plt.text(x,y+100, '%s' %y,ha = 'center', va = 'top')      plt.title('Comparison between Java and Python') plt.xlabel('Year') plt.ylabel('Sales')  plt.legend(loc = 'best') plt.show() <p>Plot them into different columns</p> In\u00a0[4]: Copied! <pre>bar_width = 0.45\nplt.bar(x = range(len(x_data)),height = y_data, label = 'Crazy Python', color = 'steelblue',alpha = 0.8, width = bar_width)\nplt.bar(x = np.arange(len(x_data)) + bar_width,\n        height = y_data2, label = 'Crazy Java', color = 'indianred',alpha = 0.8, width = bar_width)\nfor x,y in enumerate(y_data):\n    plt.text(x,y+100,'%s'%y, ha = 'center', va = 'bottom')\nfor x,y in enumerate(y_data2):\n    plt.text(x+bar_width, y +100, '%s'%y, ha = 'center', va = 'bottom')\n\nplt.title('Comparison between Java and Python')\nplt.xlabel('Year')\nplt.ylabel('Sales')\n\nplt.legend(loc = 'best')\nplt.show()\n</pre> bar_width = 0.45 plt.bar(x = range(len(x_data)),height = y_data, label = 'Crazy Python', color = 'steelblue',alpha = 0.8, width = bar_width) plt.bar(x = np.arange(len(x_data)) + bar_width,         height = y_data2, label = 'Crazy Java', color = 'indianred',alpha = 0.8, width = bar_width) for x,y in enumerate(y_data):     plt.text(x,y+100,'%s'%y, ha = 'center', va = 'bottom') for x,y in enumerate(y_data2):     plt.text(x+bar_width, y +100, '%s'%y, ha = 'center', va = 'bottom')  plt.title('Comparison between Java and Python') plt.xlabel('Year') plt.ylabel('Sales')  plt.legend(loc = 'best') plt.show()   <p><code>bar_width = 0.4</code> <code>plt.barh(y = range(len(x_data)),width = y_data, label = 'Crazy Python', color = 'steelblue',alpha = 0.8, height = bar_width)</code> <code>plt.barh(y = np.arange(len(x_data)) + bar_width,</code> <code>width = y_data2, label = 'Crazy Java', color = 'indianred',alpha = 0.8, height = bar_width)</code> <code>for x,y in enumerate(y_data):</code> <code>plt.text(x + 5000, y-bar_width/2 ,'%s'%x, ha = 'center', va = 'bottom')</code> <code>for x,y in enumerate(y_data2):</code> <code>plt.text(x + 5000, y+bar_width/2, '%s'%x, ha = 'center', va = 'bottom')</code></p> <p><code>plt.yticks(np.arange(len(x_data)) + bar_width/2, x_data)</code> <code>plt.title('Comparison between Java and Python')</code> <code>plt.xlabel('Sales')</code> <code>plt.ylabel('Year')</code></p> <p><code>plt.legend(loc = 'best')</code> <code>plt.show()</code> </p> In\u00a0[5]: Copied! <pre>plt.figure()\n# generate 64 points\nx_data = np.linspace(-2 * np.pi,2 * np.pi,256,endpoint = True)\nplt.scatter(x_data,np.sin(x_data), c= 'purple',\n           s= 50,\n           alpha = 0.5,\n           marker = 'p',\n           linewidths=1,\n           edgecolors = ['green','yellow'])\nplt.scatter(x_data[0],np.sin(x_data)[0], c= 'red',\n           s = 150,\n           alpha=1)\nplt.scatter(x_data[128],np.sin(x_data)[128], c= 'red',\n           s = 150,\n           alpha=1)\nplt.scatter(x_data[63],np.sin(x_data)[63], c= 'black',\n           s = 150,\n           alpha=1)\nplt.scatter(x_data[191],np.sin(x_data)[191], c= 'black',\n           s = 150,\n           alpha=1)\nplt.gca().spines['right'].set_color('none')\nplt.gca().spines['top'].set_color('none')\nplt.gca().spines['bottom'].set_position(('data',0))\nplt.gca().spines['left'].set_position(('data',0))\nplt.title('Sin Plot')\nplt.show()\n</pre> plt.figure() # generate 64 points x_data = np.linspace(-2 * np.pi,2 * np.pi,256,endpoint = True) plt.scatter(x_data,np.sin(x_data), c= 'purple',            s= 50,            alpha = 0.5,            marker = 'p',            linewidths=1,            edgecolors = ['green','yellow']) plt.scatter(x_data[0],np.sin(x_data)[0], c= 'red',            s = 150,            alpha=1) plt.scatter(x_data[128],np.sin(x_data)[128], c= 'red',            s = 150,            alpha=1) plt.scatter(x_data[63],np.sin(x_data)[63], c= 'black',            s = 150,            alpha=1) plt.scatter(x_data[191],np.sin(x_data)[191], c= 'black',            s = 150,            alpha=1) plt.gca().spines['right'].set_color('none') plt.gca().spines['top'].set_color('none') plt.gca().spines['bottom'].set_position(('data',0)) plt.gca().spines['left'].set_position(('data',0)) plt.title('Sin Plot') plt.show() In\u00a0[6]: Copied! <pre>help(np.arange)\n</pre> help(np.arange) <pre>Help on built-in function arange in module numpy:\n\narange(...)\n    arange([start,] stop[, step,], dtype=None)\n    \n    Return evenly spaced values within a given interval.\n    \n    Values are generated within the half-open interval ``[start, stop)``\n    (in other words, the interval including `start` but excluding `stop`).\n    For integer arguments the function is equivalent to the Python built-in\n    `range` function, but returns an ndarray rather than a list.\n    \n    When using a non-integer step, such as 0.1, the results will often not\n    be consistent.  It is better to use `numpy.linspace` for these cases.\n    \n    Parameters\n    ----------\n    start : number, optional\n        Start of interval.  The interval includes this value.  The default\n        start value is 0.\n    stop : number\n        End of interval.  The interval does not include this value, except\n        in some cases where `step` is not an integer and floating point\n        round-off affects the length of `out`.\n    step : number, optional\n        Spacing between values.  For any output `out`, this is the distance\n        between two adjacent values, ``out[i+1] - out[i]``.  The default\n        step size is 1.  If `step` is specified as a position argument,\n        `start` must also be given.\n    dtype : dtype\n        The type of the output array.  If `dtype` is not given, infer the data\n        type from the other input arguments.\n    \n    Returns\n    -------\n    arange : ndarray\n        Array of evenly spaced values.\n    \n        For floating point arguments, the length of the result is\n        ``ceil((stop - start)/step)``.  Because of floating point overflow,\n        this rule may result in the last element of `out` being greater\n        than `stop`.\n    \n    See Also\n    --------\n    numpy.linspace : Evenly spaced numbers with careful handling of endpoints.\n    numpy.ogrid: Arrays of evenly spaced numbers in N-dimensions.\n    numpy.mgrid: Grid-shaped arrays of evenly spaced numbers in N-dimensions.\n    \n    Examples\n    --------\n    &gt;&gt;&gt; np.arange(3)\n    array([0, 1, 2])\n    &gt;&gt;&gt; np.arange(3.0)\n    array([ 0.,  1.,  2.])\n    &gt;&gt;&gt; np.arange(3,7)\n    array([3, 4, 5, 6])\n    &gt;&gt;&gt; np.arange(3,7,2)\n    array([3, 5])\n\n</pre> In\u00a0[7]: Copied! <pre>delta = 0.025\nx = np.arange(-3.0,3.0,delta)\ny = np.arange(-2.0,2.0,delta)\n\n# Generate grid from x,y\nX,Y = np.meshgrid(x,y)\n\n# Set the elevation\nZ1 = np.exp(-X **2 - Y**2)\nZ2 = np.exp(-(X-1)**2 - (Y-1)**2)\nZ = (Z1-Z2) * 2\n\n# Draw the contour line\n# 16 means divided plot into 16 parts\nplt.contourf(x,y,Z,16, alpha = 0.75, cmap = 'rainbow')\nc = plt.contour(x,y,Z,16, colors = 'black',linewidths = 1.2)\n\nplt.clabel(c,inline = True, fontsize = 12)\n\n# get rid of x,y axis\nplt.xticks(())\nplt.yticks(())\n\nplt.title('Contour line')\nplt.xlabel('Latitude')\nplt.ylabel('Longtitude')\nplt.show()\n</pre> delta = 0.025 x = np.arange(-3.0,3.0,delta) y = np.arange(-2.0,2.0,delta)  # Generate grid from x,y X,Y = np.meshgrid(x,y)  # Set the elevation Z1 = np.exp(-X **2 - Y**2) Z2 = np.exp(-(X-1)**2 - (Y-1)**2) Z = (Z1-Z2) * 2  # Draw the contour line # 16 means divided plot into 16 parts plt.contourf(x,y,Z,16, alpha = 0.75, cmap = 'rainbow') c = plt.contour(x,y,Z,16, colors = 'black',linewidths = 1.2)  plt.clabel(c,inline = True, fontsize = 12)  # get rid of x,y axis plt.xticks(()) plt.yticks(())  plt.title('Contour line') plt.xlabel('Latitude') plt.ylabel('Longtitude') plt.show() In\u00a0[8]: Copied! <pre>from mpl_toolkits.mplot3d import Axes3D\n\nfig = plt.figure(figsize = (14,10))\nax = Axes3D(fig)\n\ndelta = 0.125\nx = np.arange(-3.0,3.0,delta)\ny = np.arange(-2.0,2.0,delta)\n\n# Generate grid from x,y\nX,Y = np.meshgrid(x,y)\n\n# Set the elevation\nZ1 = np.exp(-X **2 - Y**2)\nZ2 = np.exp(-(X-1)**2 - (Y-1)**2)\nZ = (Z1-Z2) * 2\n\nax.plot_surface(X,Y,Z,\n               rstride = 1, # rstride(row): the interval of row\n               cstride = 1, # cstride(column): the interval of column\n               cmap = plt.get_cmap('rainbow'))\n\n# Set the range of Z\nax.set_zlim(-2,2)\n\nplt.title('3D Surface')\nplt.show()\n</pre> from mpl_toolkits.mplot3d import Axes3D  fig = plt.figure(figsize = (14,10)) ax = Axes3D(fig)  delta = 0.125 x = np.arange(-3.0,3.0,delta) y = np.arange(-2.0,2.0,delta)  # Generate grid from x,y X,Y = np.meshgrid(x,y)  # Set the elevation Z1 = np.exp(-X **2 - Y**2) Z2 = np.exp(-(X-1)**2 - (Y-1)**2) Z = (Z1-Z2) * 2  ax.plot_surface(X,Y,Z,                rstride = 1, # rstride(row): the interval of row                cstride = 1, # cstride(column): the interval of column                cmap = plt.get_cmap('rainbow'))  # Set the range of Z ax.set_zlim(-2,2)  plt.title('3D Surface') plt.show() In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"Ch19-Visualization/Data_Diagram/#data-diagram","title":"Data Diagram\u00b6","text":""},{"location":"Ch19-Visualization/Data_Diagram/#1-pie-chart","title":"1. Pie Chart\u00b6","text":""},{"location":"Ch19-Visualization/Data_Diagram/#2histogram","title":"2.Histogram\u00b6","text":"<ul> <li><code>ha</code> stands for horizontal formatting</li> <li><code>va</code> stands for vertical formatting</li> </ul>"},{"location":"Ch19-Visualization/Data_Diagram/#3-horizontal-histogram","title":"3. Horizontal histogram\u00b6","text":"<ul> <li><code>barh()</code></li> </ul>"},{"location":"Ch19-Visualization/Data_Diagram/#4-scatter-plot","title":"4. Scatter Plot\u00b6","text":"<ul> <li><code>s</code>: Size of points</li> <li><code>c</code>: Color of points</li> <li><code>alpha</code>: Transparency</li> <li><code>linewidths</code> : box width</li> <li><code>edgecolors</code></li> <li><code>marker</code>: The styple of points, including <code>.</code>,<code>,</code>,<code>o</code>,<code>1</code>,<code>2</code>.<code>3</code>,<code>4</code>,<code>s</code>,<code>p</code>,<code>*</code>,<code>h</code>,<code>+</code>,<code>x</code>,<code>D</code>,<code>|</code>.<code>_</code></li> <li><code>cmap</code>: The map style of points colors</li> </ul>"},{"location":"Ch19-Visualization/Data_Diagram/#5-contour-line-plot","title":"5. Contour line plot\u00b6","text":"<ul> <li>countour()</li> <li>countourf()</li> </ul>"},{"location":"Ch19-Visualization/Data_Diagram/#6-3d-plot","title":"6. 3D Plot\u00b6","text":"<ul> <li>Using <code>plot_surface()</code> in <code>Axes3D</code> Objects</li> </ul>"},{"location":"Ch19-Visualization/Data_Processing/","title":"Data Processing","text":"In\u00a0[1]: Copied! <pre>import csv\n</pre> import csv In\u00a0[2]: Copied! <pre>filename = 'guangzhou-20171.csv'\n\nwith open(filename, encoding='gb2312', errors='ignore') as f:\n    reader = csv.reader(f)\n    # Read the first row\n    header_row = next(reader)\n    print(header_row)\n    print()\n    \n    # Read the second row [data]\n    first_row = next(reader)\n    print(first_row)\n</pre> filename = 'guangzhou-20171.csv'  with open(filename, encoding='gb2312', errors='ignore') as f:     reader = csv.reader(f)     # Read the first row     header_row = next(reader)     print(header_row)     print()          # Read the second row [data]     first_row = next(reader)     print(first_row) <pre>['Date', 'Max TemperatureC', 'Min TemperatureC', 'Description', 'WindDir', 'WindForce']\n\n['2017-1-1', '24', '13', '\u6674', '\u897f\u5357\u98ce', '1\u7ea7']\n</pre> In\u00a0[3]: Copied! <pre>%matplotlib inline\nfrom datetime import datetime\nfrom matplotlib import pyplot as plt\nplt.rcParams['figure.figsize'] = [12, 10]\nimport pandas as pd\n</pre> %matplotlib inline from datetime import datetime from matplotlib import pyplot as plt plt.rcParams['figure.figsize'] = [12, 10] import pandas as pd In\u00a0[4]: Copied! <pre>df = pd.read_csv(filename, encoding='gb2312')\ndf.head()\n</pre> df = pd.read_csv(filename, encoding='gb2312') df.head() Out[4]: Date Max TemperatureC Min TemperatureC Description WindDir WindForce 0 2017-1-1 24 13 \u6674 \u897f\u5357\u98ce 1\u7ea7 1 2017-1-2 25 15 \u591a\u4e91 \u4e1c\u5317\u98ce \u5fae\u98ce 2 2017-1-3 26 16 \u6674 \u5317\u98ce 1\u7ea7 3 2017-1-4 27 17 \u6674 \u4e1c\u5317\u98ce 1\u7ea7 4 2017-1-5 25 17 \u591a\u4e91 \u4e1c\u5317\u98ce 1\u7ea7 In\u00a0[5]: Copied! <pre>with open(filename, encoding='gb2312', errors='ignore') as f:\n    reader = csv.reader(f)\n    # read the first row\n    header_row = next(reader)\n    print(header_row)\n    \n    # Define the time range\n    start_date = datetime(2017,6,30)\n    end_date = datetime(2017,10,1)\n    \n    # Define three lists for data visualization\n    dates,highs,lows = [],[],[]\n    for row in reader:\n        # Transfer first column to date\n        d = datetime.strptime(row[0],'%Y-%m-%d')\n        if start_date &lt; d &lt; end_date:\n            dates.append(d)\n            highs.append(int(row[1]))\n            lows.append(int(row[2]))\n</pre> with open(filename, encoding='gb2312', errors='ignore') as f:     reader = csv.reader(f)     # read the first row     header_row = next(reader)     print(header_row)          # Define the time range     start_date = datetime(2017,6,30)     end_date = datetime(2017,10,1)          # Define three lists for data visualization     dates,highs,lows = [],[],[]     for row in reader:         # Transfer first column to date         d = datetime.strptime(row[0],'%Y-%m-%d')         if start_date &lt; d &lt; end_date:             dates.append(d)             highs.append(int(row[1]))             lows.append(int(row[2])) <pre>['Date', 'Max TemperatureC', 'Min TemperatureC', 'Description', 'WindDir', 'WindForce']\n</pre> In\u00a0[6]: Copied! <pre># Draw the graph\nfig = plt.figure(dpi = 256, figsize = (15,10))\n\nplt.plot(dates, highs, c = 'red',label = 'Highest Temperature', alpha = 0.5, linewidth = 2.0,\n        linestyle = '-',marker = 'v')\nplt.plot(dates, lows, c = 'blue',label = 'Lowest Temperature', alpha = 0.5, linewidth = 2.0,\n        linestyle = '-.',marker = 'o')\n\n# Add the color between two lines\nplt.fill_between(dates,highs,lows,facecolor = 'blue',alpha = 0.1)\n\nplt.title('2017 Guangzhou Max&amp;Min Temperature')\nplt.xlabel('Date')\nplt.ylabel('Temperature(C)')\n\n# Set x label as date\nfig.autofmt_xdate()\n\nplt.legend()\nax = plt.gca()\nax.spines['right'].set_color('none')\nax.spines['top'].set_color('none')\nplt.show()\n</pre> # Draw the graph fig = plt.figure(dpi = 256, figsize = (15,10))  plt.plot(dates, highs, c = 'red',label = 'Highest Temperature', alpha = 0.5, linewidth = 2.0,         linestyle = '-',marker = 'v') plt.plot(dates, lows, c = 'blue',label = 'Lowest Temperature', alpha = 0.5, linewidth = 2.0,         linestyle = '-.',marker = 'o')  # Add the color between two lines plt.fill_between(dates,highs,lows,facecolor = 'blue',alpha = 0.1)  plt.title('2017 Guangzhou Max&amp;Min Temperature') plt.xlabel('Date') plt.ylabel('Temperature(C)')  # Set x label as date fig.autofmt_xdate()  plt.legend() ax = plt.gca() ax.spines['right'].set_color('none') ax.spines['top'].set_color('none') plt.show() In\u00a0[7]: Copied! <pre>import pygal\n</pre> import pygal In\u00a0[8]: Copied! <pre>with open(filename, encoding='gb2312', errors='ignore') as f:\n    reader = csv.reader(f)\n    header_row = next(reader)\n    print(header_row)\n    \n    # Set lists for data visualization\n    shades,sunnys,cloudys,rains = 0,0,0,0\n    for row in reader:\n        if '\u9634' in row[3]:\n            shades += 1\n        elif '\u6674' in row[3]:\n            sunnys +=1\n        elif '\u4e91' in row[3]:\n            cloudys +=1\n        elif '\u96e8' in row[3]:\n            rains +=1\n        else:\n            print(row[3])\n</pre> with open(filename, encoding='gb2312', errors='ignore') as f:     reader = csv.reader(f)     header_row = next(reader)     print(header_row)          # Set lists for data visualization     shades,sunnys,cloudys,rains = 0,0,0,0     for row in reader:         if '\u9634' in row[3]:             shades += 1         elif '\u6674' in row[3]:             sunnys +=1         elif '\u4e91' in row[3]:             cloudys +=1         elif '\u96e8' in row[3]:             rains +=1         else:             print(row[3])             <pre>['Date', 'Max TemperatureC', 'Min TemperatureC', 'Description', 'WindDir', 'WindForce']\n</pre> In\u00a0[9]: Copied! <pre>pie = pygal.Pie()\npie.add('Shades',shades)\npie.add('Sunnys',sunnys)\npie.add('Rainys',rains)\npie.add('Cloudys',cloudys)\npie.title ='Weathers in GuangZhou'\npie.legend_at_bottom = True\npie.render_to_file('guangzhou_weather.svg')\n</pre> pie = pygal.Pie() pie.add('Shades',shades) pie.add('Sunnys',sunnys) pie.add('Rainys',rains) pie.add('Cloudys',cloudys) pie.title ='Weathers in GuangZhou' pie.legend_at_bottom = True pie.render_to_file('guangzhou_weather.svg') In\u00a0[10]: Copied! <pre>import json\nimport numpy as np\n</pre> import json import numpy as np In\u00a0[11]: Copied! <pre>filename = 'gdp_json.json'\ndf = pd.read_json(filename)\ndf1 = pd.DataFrame(df)\ndf1.head(10)\n</pre> filename = 'gdp_json.json' df = pd.read_json(filename) df1 = pd.DataFrame(df) df1.head(10) Out[11]: Country Code Country Name Value Year 0 ARB Arab World 2.576068e+10 1968 1 ARB Arab World 2.843420e+10 1969 2 ARB Arab World 3.138550e+10 1970 3 ARB Arab World 3.642691e+10 1971 4 ARB Arab World 4.331606e+10 1972 5 ARB Arab World 5.501839e+10 1973 6 ARB Arab World 1.051458e+11 1974 7 ARB Arab World 1.163370e+11 1975 8 ARB Arab World 1.448462e+11 1976 9 ARB Arab World 1.673083e+11 1977 In\u00a0[12]: Copied! <pre>with open(filename) as f:\n    gpd_list = json.load(f)\n    \nfor i,gpd_dict in enumerate(gpd_list):\n    # only for chinese gdp\n    if (gpd_dict['Country Code'] == 'CHN') and (gpd_dict['Year'] &gt;= 2001):\n        print(gpd_dict['Country Name'], gpd_dict['Value'], gpd_dict['Year'])\n</pre> with open(filename) as f:     gpd_list = json.load(f)      for i,gpd_dict in enumerate(gpd_list):     # only for chinese gdp     if (gpd_dict['Country Code'] == 'CHN') and (gpd_dict['Year'] &gt;= 2001):         print(gpd_dict['Country Name'], gpd_dict['Value'], gpd_dict['Year']) <pre>China 1339395718865.3 2001\nChina 1470550015081.55 2002\nChina 1660287965662.68 2003\nChina 1955347004963.27 2004\nChina 2285965892360.54 2005\nChina 2752131773355.16 2006\nChina 3552182311652.97 2007\nChina 4598206091384.0 2008\nChina 5109953609257.25 2009\nChina 6100620488867.55 2010\nChina 7572553836875.34 2011\nChina 8560547314679.28 2012\nChina 9607224481532.65 2013\nChina 10482372109961.9 2014\nChina 11064666282625.5 2015\nChina 11199145157649.2 2016\n</pre> <p>Matplotlib plot</p> In\u00a0[13]: Copied! <pre># Get China, US, Japan, Russia, Canada GDP\ncountry_gdps = [{},{},{},{},{}]\ncountry_codes = ['CHN','USA','JPN','RUS','CAN']\n\n# Set time range\nx_data = range(2001,2017)\n\nfor gpd_dict in gpd_list:\n    for i,country_code in enumerate(country_codes):\n        if gpd_dict['Country Code'] == country_code:\n            year = gpd_dict['Year']\n            if 2017 &gt; year &gt; 2000:\n                country_gdps[i][year] = gpd_dict['Value']\n\n# Transfer dict to list\ncountry_gdp_list = [[],[],[],[],[]]\nfor i in range(len(country_gdp_list)):\n    for year in x_data:\n        # Change unit to 1e8\n        country_gdp_list[i].append(country_gdps[i][year] / 1e8)\n        \n# Draw the graph\nbar_width = 0.15\nfig = plt.figure(dpi = 256,figsize = (15,10))\ncolors = ['indianred','steelblue','gold','lightpink','seagreen']\ncountries = ['China','USA','Japan','Russia','Canada']\n\n# Plot 5 columns\nfor i in range(len(countries)):\n    plt.bar(x = np.arange(len(x_data)) + bar_width * i, height = country_gdp_list[i],\n           label = countries[i],color = colors[i], alpha = 0.8, width = bar_width)\n    # Set text on first three countries\n    if i &lt; 3:\n        for x,y in enumerate(country_gdp_list[i]):\n            plt.text(x + bar_width * i,y+100, '%.0f' %y, ha = 'center',va = 'bottom')\n\nplt.xticks(np.arange(len(x_data))+bar_width * 2,x_data)\nplt.title('GDP of five countries')\nplt.xlabel('Year')\nplt.ylabel('GDP($)')\nplt.legend(loc = 'best')\nplt.show()\n</pre> # Get China, US, Japan, Russia, Canada GDP country_gdps = [{},{},{},{},{}] country_codes = ['CHN','USA','JPN','RUS','CAN']  # Set time range x_data = range(2001,2017)  for gpd_dict in gpd_list:     for i,country_code in enumerate(country_codes):         if gpd_dict['Country Code'] == country_code:             year = gpd_dict['Year']             if 2017 &gt; year &gt; 2000:                 country_gdps[i][year] = gpd_dict['Value']  # Transfer dict to list country_gdp_list = [[],[],[],[],[]] for i in range(len(country_gdp_list)):     for year in x_data:         # Change unit to 1e8         country_gdp_list[i].append(country_gdps[i][year] / 1e8)          # Draw the graph bar_width = 0.15 fig = plt.figure(dpi = 256,figsize = (15,10)) colors = ['indianred','steelblue','gold','lightpink','seagreen'] countries = ['China','USA','Japan','Russia','Canada']  # Plot 5 columns for i in range(len(countries)):     plt.bar(x = np.arange(len(x_data)) + bar_width * i, height = country_gdp_list[i],            label = countries[i],color = colors[i], alpha = 0.8, width = bar_width)     # Set text on first three countries     if i &lt; 3:         for x,y in enumerate(country_gdp_list[i]):             plt.text(x + bar_width * i,y+100, '%.0f' %y, ha = 'center',va = 'bottom')  plt.xticks(np.arange(len(x_data))+bar_width * 2,x_data) plt.title('GDP of five countries') plt.xlabel('Year') plt.ylabel('GDP($)') plt.legend(loc = 'best') plt.show() <p>Pygal Plot</p> In\u00a0[14]: Copied! <pre>filename = 'gdp_json.json'\nwith open(filename) as f:\n    gdp_list = json.load(f)\n    \npop_filename = 'population-figures-by-country.json'\nwith open(pop_filename) as f:\n    pop_list = json.load(f)\n\n# Get GDP data for USA, Japan, Russia, Canada\ncountry_mean_gdps = [{},{},{},{},{}]\ncountry_codes = ['USA','JPN','RUS','CAN','CHN']\n\nfor gdp_dict in gdp_list:\n    for i,country_code in enumerate(country_codes):\n        if (gdp_dict['Country Code'] == country_code) and (2017 &gt; gdp_dict['Year'] &gt;2000):\n            year = gdp_dict['Year']\n            for pop_dict in pop_list:\n                if pop_dict['Country_Code'] == country_code:\n                    country_mean_gdps[i][year] = round(gdp_dict['Value'] / pop_dict['Population_in_%d' %year])\n                    \ndf = pd.DataFrame(country_mean_gdps)\ndf\n</pre> filename = 'gdp_json.json' with open(filename) as f:     gdp_list = json.load(f)      pop_filename = 'population-figures-by-country.json' with open(pop_filename) as f:     pop_list = json.load(f)  # Get GDP data for USA, Japan, Russia, Canada country_mean_gdps = [{},{},{},{},{}] country_codes = ['USA','JPN','RUS','CAN','CHN']  for gdp_dict in gdp_list:     for i,country_code in enumerate(country_codes):         if (gdp_dict['Country Code'] == country_code) and (2017 &gt; gdp_dict['Year'] &gt;2000):             year = gdp_dict['Year']             for pop_dict in pop_list:                 if pop_dict['Country_Code'] == country_code:                     country_mean_gdps[i][year] = round(gdp_dict['Value'] / pop_dict['Population_in_%d' %year])                      df = pd.DataFrame(country_mean_gdps) df Out[14]: 2001 2002 2003 2004 2005 2006 2007 2008 2009 2010 2011 2012 2013 2014 2015 2016 0 37274 38166 39677 41922 44308 46437 48062 48401 47002 48374 49791 51450 52787 54599 56469 57638 1 33846 32289 34808 37689 37218 35434 35275 39339 40855 44508 48168 48603 40454 38096 34474 38901 2 2100 2375 2975 4102 5323 6920 9101 11635 8563 10675 14351 15435 16007 14349 9479 8890 3 23692 24168 28172 31980 36190 40387 44545 46596 40773 47447 52082 52497 52414 50440 43316 42158 4 1053 1149 1289 1509 1753 2099 2695 3471 3838 4561 5634 6338 7078 7684 8069 8123 In\u00a0[15]: Copied! <pre># Transfer to list\ncountry_mean_gdp_list = [[],[],[],[],[]]\nx_data = range(2001,2017)\nfor i in range(len(country_mean_gdp_list)):\n    for year in x_data:\n        country_mean_gdp_list[i].append(country_mean_gdps[i][year])\n\ncountries = ['USA','Japan','Russia','Canada','China']\n\n# Draw the graph\nbar = pygal.Bar()\n# Add data\nfor i in range(len(countries)):\n    bar.add(countries[i],country_mean_gdp_list[i])\n\nbar.width = 1100\nbar.x_labels = x_data\nbar.title = 'Comparison of GDP'\nbar.x_title = 'Year'\nbar.y_title = 'Mean GDP($)'\nbar.x_label_rotation = 45\nbar.legend_at_bottom = True\nbar.render_to_file('mean_gdp.svg')\n</pre> # Transfer to list country_mean_gdp_list = [[],[],[],[],[]] x_data = range(2001,2017) for i in range(len(country_mean_gdp_list)):     for year in x_data:         country_mean_gdp_list[i].append(country_mean_gdps[i][year])  countries = ['USA','Japan','Russia','Canada','China']  # Draw the graph bar = pygal.Bar() # Add data for i in range(len(countries)):     bar.add(countries[i],country_mean_gdp_list[i])  bar.width = 1100 bar.x_labels = x_data bar.title = 'Comparison of GDP' bar.x_title = 'Year' bar.y_title = 'Mean GDP($)' bar.x_label_rotation = 45 bar.legend_at_bottom = True bar.render_to_file('mean_gdp.svg') In\u00a0[16]: Copied! <pre>from datetime import timedelta\n</pre> from datetime import timedelta In\u00a0[17]: Copied! <pre>filename = 'guangzhou-20171.csv'\n\nwith open(filename, encoding='gb2312', errors='ignore') as f:\n    reader = csv.reader(f)\n    head_row = next(reader)\n    print(head_row)\n    \n    # preparing the data visualization\n    shades,sunnys,cloudys,rains = 0,0,0,0\n    prev_day = datetime(2016,12,31)\n    for row in reader:\n        try:\n            cur_day = datetime.strptime(row[0],'%Y-%m-%d')\n            description = row[3]\n        except ValueError as e:\n            print(cur_day, 'Value Error!')\n        else:\n            diff = cur_day - prev_day\n            if diff != timedelta(days = 1):\n                print('%d days data are missing before %s' %(diff.days -1, cur_day))\n            prev_day = cur_day\n            if '\u9634' in description:\n                shades += 1\n            elif '\u6674' in description:\n                sunnys +=1\n            elif '\u4e91' in description:\n                cloudys +=1\n            elif '\u96e8' in description:\n                rains +=1\n            else:\n                print(description)\n</pre> filename = 'guangzhou-20171.csv'  with open(filename, encoding='gb2312', errors='ignore') as f:     reader = csv.reader(f)     head_row = next(reader)     print(head_row)          # preparing the data visualization     shades,sunnys,cloudys,rains = 0,0,0,0     prev_day = datetime(2016,12,31)     for row in reader:         try:             cur_day = datetime.strptime(row[0],'%Y-%m-%d')             description = row[3]         except ValueError as e:             print(cur_day, 'Value Error!')         else:             diff = cur_day - prev_day             if diff != timedelta(days = 1):                 print('%d days data are missing before %s' %(diff.days -1, cur_day))             prev_day = cur_day             if '\u9634' in description:                 shades += 1             elif '\u6674' in description:                 sunnys +=1             elif '\u4e91' in description:                 cloudys +=1             elif '\u96e8' in description:                 rains +=1             else:                 print(description)  <pre>['Date', 'Max TemperatureC', 'Min TemperatureC', 'Description', 'WindDir', 'WindForce']\n2 days data are missing before 2017-03-06 00:00:00\n</pre> In\u00a0[18]: Copied! <pre>pie = pygal.Pie()\npie.add('Shades',shades)\npie.add('Sunnys',sunnys)\npie.add('Rainys',rains)\npie.add('Cloudys',cloudys)\npie.title ='Weathers in GuangZhou'\npie.legend_at_bottom = True\npie.render_to_file('guangzhou_weather.svg')\n</pre> pie = pygal.Pie() pie.add('Shades',shades) pie.add('Sunnys',sunnys) pie.add('Rainys',rains) pie.add('Cloudys',cloudys) pie.title ='Weathers in GuangZhou' pie.legend_at_bottom = True pie.render_to_file('guangzhou_weather.svg') In\u00a0[19]: Copied! <pre>import re\nfrom urllib.request import *\n</pre> import re from urllib.request import * In\u00a0[20]: Copied! <pre># get data from http://lishi.tianqi.com/\ndef get_html(city,year,month):\n    url = 'http://lishi.tianqi.com/' + city + '/' + str(year) + str(month) + '.html'\n    # post a request\n    request = Request(url)\n    \n    # Set a header\n    request.add_header('User-Agent','Mozilla/5.0 (Windows NT 10.0; Win64; x64) \\\n                       AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.87 Safari/537.36')\n    response = urlopen(request)\n    \n    return response.read().decode('gbk','ignore')\n</pre> # get data from http://lishi.tianqi.com/ def get_html(city,year,month):     url = 'http://lishi.tianqi.com/' + city + '/' + str(year) + str(month) + '.html'     # post a request     request = Request(url)          # Set a header     request.add_header('User-Agent','Mozilla/5.0 (Windows NT 10.0; Win64; x64) \\                        AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.87 Safari/537.36')     response = urlopen(request)          return response.read().decode('gbk','ignore') In\u00a0[21]: Copied! <pre>dates, highs, lows = [],[],[]\ncity = 'chongqing'\nyear = '2019'\nmonths = ['01','02','03','04','05','06','07','08','09','10','11','12']\nprev_day = datetime(2018,12,31)\n\nfor month in months:\n    html = get_html(city,year,month)\n    text = ''.join(html.split())\n    pattern = re.compile('&lt;divclass = \"tqtongji2\"&gt;(.*?)&lt;/div&gt;&lt;divstyle = \"clear:both\"&gt;')\n    table = re.findall(pattern,text)\n    pattern1 = re.compile('&lt;ul&gt;(.*?)&lt;/ul&gt;')\n    try:\n        uls = re.findall(pattern1,table[0])\n        \n        for ul in uls:\n            # Get the weather info\n            pattern2 = re.compile('&lt;li&gt;(.*?)&lt;/li&gt;')\n            lis = re.findall(pattern2,ul)\n\n            # Get the date\n            d_str = re.findall('&gt;(.*?)&lt;/a&gt;',lis[0])[0]\n        try:\n            cur_day = datetime.strptime(d_str,'%Y-%m-%d')\n            high = int(lis[1])\n            low = int(lis[2])\n        except ValueError:\n            print(cur_day,' Data Error!')\n        else:\n            diff = cur_day - prev_day\n            if diff != timedelta(days = 1):\n                print('%d days data are missing before %s' %(diff.days -1, cur_day))\n            prev_day = cur_day\n            dates.append(cur_day)\n            highs.append(high)\n            lows.append(low)\n    except:\n        pass\n</pre> dates, highs, lows = [],[],[] city = 'chongqing' year = '2019' months = ['01','02','03','04','05','06','07','08','09','10','11','12'] prev_day = datetime(2018,12,31)  for month in months:     html = get_html(city,year,month)     text = ''.join(html.split())     pattern = re.compile('(.*?)')     table = re.findall(pattern,text)     pattern1 = re.compile('<ul>(.*?)</ul>')     try:         uls = re.findall(pattern1,table[0])                  for ul in uls:             # Get the weather info             pattern2 = re.compile('<li>(.*?)</li>')             lis = re.findall(pattern2,ul)              # Get the date             d_str = re.findall('&gt;(.*?)',lis[0])[0]         try:             cur_day = datetime.strptime(d_str,'%Y-%m-%d')             high = int(lis[1])             low = int(lis[2])         except ValueError:             print(cur_day,' Data Error!')         else:             diff = cur_day - prev_day             if diff != timedelta(days = 1):                 print('%d days data are missing before %s' %(diff.days -1, cur_day))             prev_day = cur_day             dates.append(cur_day)             highs.append(high)             lows.append(low)     except:         pass       In\u00a0[22]: Copied! <pre>dates\n</pre> dates Out[22]: <pre>[]</pre> In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"Ch19-Visualization/Data_Processing/#data-processing","title":"Data Processing\u00b6","text":""},{"location":"Ch19-Visualization/Data_Processing/#1-csv-file","title":"1. CSV file\u00b6","text":""},{"location":"Ch19-Visualization/Data_Processing/#11-plot-weather-condition-matplotlib","title":"1.1 Plot Weather Condition (matplotlib)\u00b6","text":""},{"location":"Ch19-Visualization/Data_Processing/#12-plot-weather-condition-pygal","title":"1.2 Plot Weather Condition (pygal)\u00b6","text":""},{"location":"Ch19-Visualization/Data_Processing/#2-json","title":"2. Json\u00b6","text":""},{"location":"Ch19-Visualization/Data_Processing/#3-data-cleaning","title":"3. Data Cleaning\u00b6","text":""},{"location":"Ch19-Visualization/Data_Processing/#4-read-online-data","title":"4. Read Online Data\u00b6","text":"<ul> <li>using <code>urllib.request</code> to get the data from web</li> <li>using <code>re</code> to do the data cleanning</li> </ul>"},{"location":"Ch19-Visualization/Matplotlib/","title":"Matplotlib","text":"In\u00a0[3]: Copied! <pre>%matplotlib inline\nimport matplotlib.pyplot as plt\nimport numpy as np\nplt.rcParams['figure.figsize'] = [12, 10]\n</pre> %matplotlib inline import matplotlib.pyplot as plt import numpy as np plt.rcParams['figure.figsize'] = [12, 10] In\u00a0[4]: Copied! <pre>x_data = ['2011','2012','2013','2014','2015','2016','2017']\ny_data = [58000,60200,63000,71000,84000,90500,107000]\nplt.plot(x_data,y_data)\nplt.show()\n</pre> x_data = ['2011','2012','2013','2014','2015','2016','2017'] y_data = [58000,60200,63000,71000,84000,90500,107000] plt.plot(x_data,y_data) plt.show() In\u00a0[5]: Copied! <pre>plt.plot(y_data)\n</pre> plt.plot(y_data) Out[5]: <pre>[&lt;matplotlib.lines.Line2D at 0x29a46be3108&gt;]</pre> In\u00a0[6]: Copied! <pre>y_data2 = [52000,54200,51500,58300,56800,59500,62700]\nplt.plot(x_data,y_data,x_data,y_data2)\n</pre> y_data2 = [52000,54200,51500,58300,56800,59500,62700] plt.plot(x_data,y_data,x_data,y_data2) Out[6]: <pre>[&lt;matplotlib.lines.Line2D at 0x29a46e5e3c8&gt;,\n &lt;matplotlib.lines.Line2D at 0x29a46e51688&gt;]</pre> In\u00a0[7]: Copied! <pre>plt.plot(x_data,y_data)\nplt.plot(x_data,y_data2)\n</pre> plt.plot(x_data,y_data) plt.plot(x_data,y_data2) Out[7]: <pre>[&lt;matplotlib.lines.Line2D at 0x29a46e8eac8&gt;]</pre> In\u00a0[8]: Copied! <pre>plt.plot(x_data,y_data,color = 'red', linewidth = 2.0, linestyle = '--')\nplt.plot(x_data,y_data2,color = 'blue', linewidth = 3.0, linestyle = '-.')\n</pre> plt.plot(x_data,y_data,color = 'red', linewidth = 2.0, linestyle = '--') plt.plot(x_data,y_data2,color = 'blue', linewidth = 3.0, linestyle = '-.') Out[8]: <pre>[&lt;matplotlib.lines.Line2D at 0x29a470e6e48&gt;]</pre> In\u00a0[9]: Copied! <pre>plt.plot(x_data,y_data,color = 'red', linewidth = 2.0, linestyle = '--',label = 'Python Sold')\nplt.plot(x_data,y_data2,color = 'blue', linewidth = 3.0, linestyle = '-.',label = 'Java Sold')\nplt.legend(loc = 'best')\nplt.show()\n</pre> plt.plot(x_data,y_data,color = 'red', linewidth = 2.0, linestyle = '--',label = 'Python Sold') plt.plot(x_data,y_data2,color = 'blue', linewidth = 3.0, linestyle = '-.',label = 'Java Sold') plt.legend(loc = 'best') plt.show() In\u00a0[10]: Copied! <pre>plt.plot(x_data,y_data,color = 'red', linewidth = 2.0, linestyle = '--',label = 'Python Sold')\nplt.plot(x_data,y_data2,color = 'blue', linewidth = 3.0, linestyle = '-.',label = 'Java Sold')\nplt.legend(loc = 'best')\nplt.xlabel('Year')\nplt.ylabel('Sold number')\nplt.yticks([50000,70000,100000],['fair','good','extraordinary'])\nplt.show()\n</pre> plt.plot(x_data,y_data,color = 'red', linewidth = 2.0, linestyle = '--',label = 'Python Sold') plt.plot(x_data,y_data2,color = 'blue', linewidth = 3.0, linestyle = '-.',label = 'Java Sold') plt.legend(loc = 'best') plt.xlabel('Year') plt.ylabel('Sold number') plt.yticks([50000,70000,100000],['fair','good','extraordinary']) plt.show() <p>could use <code>splines</code> to get the axis, and set their position and color</p> In\u00a0[11]: Copied! <pre>plt.plot(x_data,y_data,color = 'red', linewidth = 2.0, linestyle = '--',label = 'Python Sold')\nplt.plot(x_data,y_data2,color = 'blue', linewidth = 3.0, linestyle = '-.',label = 'Java Sold')\nplt.legend(loc = 'best')\nplt.xlabel('Year')\nplt.ylabel('Sold number')\nplt.yticks([50000,70000,100000],['fair','good','extraordinary'])\nplt.title('The sales of Crazy series')\nax = plt.gca()\nax.xaxis.set_ticks_position('bottom')\nax.yaxis.set_ticks_position('left')\nax.spines['right'].set_color('none')\nax.spines['top'].set_color('none')\nax.spines['bottom'].set_position(('data',70000))\nplt.show()\n</pre> plt.plot(x_data,y_data,color = 'red', linewidth = 2.0, linestyle = '--',label = 'Python Sold') plt.plot(x_data,y_data2,color = 'blue', linewidth = 3.0, linestyle = '-.',label = 'Java Sold') plt.legend(loc = 'best') plt.xlabel('Year') plt.ylabel('Sold number') plt.yticks([50000,70000,100000],['fair','good','extraordinary']) plt.title('The sales of Crazy series') ax = plt.gca() ax.xaxis.set_ticks_position('bottom') ax.yaxis.set_ticks_position('left') ax.spines['right'].set_color('none') ax.spines['top'].set_color('none') ax.spines['bottom'].set_position(('data',70000)) plt.show() In\u00a0[12]: Copied! <pre>plt.figure()\n# generate 64 points\nx_data = np.linspace(-2 * np.pi,2 * np.pi,256,endpoint = True)\nplt.subplot(2,2,1)\n\nplt.plot(x_data,np.sin(x_data))\nplt.gca().spines['right'].set_color('none')\nplt.gca().spines['top'].set_color('none')\nplt.gca().spines['bottom'].set_position(('data',0))\nplt.gca().spines['left'].set_position(('data',0))\nplt.title('Sin Plot')\n\nplt.subplot(222)\nplt.plot(x_data,np.cos(x_data))\nplt.gca().spines['right'].set_color('none')\nplt.gca().spines['top'].set_color('none')\nplt.gca().spines['bottom'].set_position(('data',0))\nplt.gca().spines['left'].set_position(('data',0))\nplt.title('Cos Plot')\n\nplt.subplot(223)\nplt.plot(x_data,np.tan(x_data))\nplt.gca().spines['right'].set_color('none')\nplt.gca().spines['top'].set_color('none')\nplt.gca().spines['bottom'].set_position(('data',0))\nplt.gca().spines['left'].set_position(('data',0))\nplt.title('Tan Plot')\n\nplt.show()\n</pre> plt.figure() # generate 64 points x_data = np.linspace(-2 * np.pi,2 * np.pi,256,endpoint = True) plt.subplot(2,2,1)  plt.plot(x_data,np.sin(x_data)) plt.gca().spines['right'].set_color('none') plt.gca().spines['top'].set_color('none') plt.gca().spines['bottom'].set_position(('data',0)) plt.gca().spines['left'].set_position(('data',0)) plt.title('Sin Plot')  plt.subplot(222) plt.plot(x_data,np.cos(x_data)) plt.gca().spines['right'].set_color('none') plt.gca().spines['top'].set_color('none') plt.gca().spines['bottom'].set_position(('data',0)) plt.gca().spines['left'].set_position(('data',0)) plt.title('Cos Plot')  plt.subplot(223) plt.plot(x_data,np.tan(x_data)) plt.gca().spines['right'].set_color('none') plt.gca().spines['top'].set_color('none') plt.gca().spines['bottom'].set_position(('data',0)) plt.gca().spines['left'].set_position(('data',0)) plt.title('Tan Plot')  plt.show() In\u00a0[13]: Copied! <pre>plt.figure()\n# generate 64 points\nx_data = np.linspace(-2 * np.pi,2 * np.pi,256,endpoint = True)\n\nplt.subplot(2,1,1)\nplt.plot(x_data,np.sin(x_data))\nplt.gca().spines['right'].set_color('none')\nplt.gca().spines['top'].set_color('none')\nplt.gca().spines['bottom'].set_position(('data',0))\nplt.gca().spines['left'].set_position(('data',0))\nplt.title('Sin Plot')\n\nplt.subplot(223)\nplt.plot(x_data,np.cos(x_data))\nplt.gca().spines['right'].set_color('none')\nplt.gca().spines['top'].set_color('none')\nplt.gca().spines['bottom'].set_position(('data',0))\nplt.gca().spines['left'].set_position(('data',0))\nplt.title('Cos Plot')\n\nplt.subplot(224)\nplt.plot(x_data,np.tan(x_data))\nplt.gca().spines['right'].set_color('none')\nplt.gca().spines['top'].set_color('none')\nplt.gca().spines['bottom'].set_position(('data',0))\nplt.gca().spines['left'].set_position(('data',0))\nplt.title('Tan Plot')\n\nplt.show()\n</pre> plt.figure() # generate 64 points x_data = np.linspace(-2 * np.pi,2 * np.pi,256,endpoint = True)  plt.subplot(2,1,1) plt.plot(x_data,np.sin(x_data)) plt.gca().spines['right'].set_color('none') plt.gca().spines['top'].set_color('none') plt.gca().spines['bottom'].set_position(('data',0)) plt.gca().spines['left'].set_position(('data',0)) plt.title('Sin Plot')  plt.subplot(223) plt.plot(x_data,np.cos(x_data)) plt.gca().spines['right'].set_color('none') plt.gca().spines['top'].set_color('none') plt.gca().spines['bottom'].set_position(('data',0)) plt.gca().spines['left'].set_position(('data',0)) plt.title('Cos Plot')  plt.subplot(224) plt.plot(x_data,np.tan(x_data)) plt.gca().spines['right'].set_color('none') plt.gca().spines['top'].set_color('none') plt.gca().spines['bottom'].set_position(('data',0)) plt.gca().spines['left'].set_position(('data',0)) plt.title('Tan Plot')  plt.show() <p>if you do not want to calculate row and column by yourself, could use <code>gridspec</code> to do the formatting</p> In\u00a0[14]: Copied! <pre>import matplotlib.gridspec as gridspec\n</pre> import matplotlib.gridspec as gridspec In\u00a0[15]: Copied! <pre>plt.figure()\n# generate 64 points\nx_data = np.linspace(-2 * np.pi,2 * np.pi,256,endpoint = True)\n\ngs = gridspec.GridSpec(2,3)\n# first plot in the first row\nax1 = plt.subplot(gs[0,:])\n\nax2 = plt.subplot(gs[1,0])\nax3 = plt.subplot(gs[1,1:3])\n\nax1.plot(x_data,np.sin(x_data))\nax1.spines['right'].set_color('none')\nax1.spines['top'].set_color('none')\nax1.spines['bottom'].set_position(('data',0))\nax1.spines['left'].set_position(('data',0))\nax1.set_title('Sin Plot')\n\nax2.plot(x_data,np.cos(x_data))\nax2.spines['right'].set_color('none')\nax2.spines['top'].set_color('none')\nax2.spines['bottom'].set_position(('data',0))\nax2.spines['left'].set_position(('data',0))\nax2.set_title('Cos Plot')\n\nax3.plot(x_data,np.tan(x_data))\nax3.spines['right'].set_color('none')\nax3.spines['top'].set_color('none')\nax3.spines['bottom'].set_position(('data',0))\nax3.spines['left'].set_position(('data',0))\nax3.set_title('Tan Plot')\n\nplt.show()\n</pre> plt.figure() # generate 64 points x_data = np.linspace(-2 * np.pi,2 * np.pi,256,endpoint = True)  gs = gridspec.GridSpec(2,3) # first plot in the first row ax1 = plt.subplot(gs[0,:])  ax2 = plt.subplot(gs[1,0]) ax3 = plt.subplot(gs[1,1:3])  ax1.plot(x_data,np.sin(x_data)) ax1.spines['right'].set_color('none') ax1.spines['top'].set_color('none') ax1.spines['bottom'].set_position(('data',0)) ax1.spines['left'].set_position(('data',0)) ax1.set_title('Sin Plot')  ax2.plot(x_data,np.cos(x_data)) ax2.spines['right'].set_color('none') ax2.spines['top'].set_color('none') ax2.spines['bottom'].set_position(('data',0)) ax2.spines['left'].set_position(('data',0)) ax2.set_title('Cos Plot')  ax3.plot(x_data,np.tan(x_data)) ax3.spines['right'].set_color('none') ax3.spines['top'].set_color('none') ax3.spines['bottom'].set_position(('data',0)) ax3.spines['left'].set_position(('data',0)) ax3.set_title('Tan Plot')  plt.show() In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"Ch19-Visualization/Matplotlib/#matplotlib","title":"Matplotlib\u00b6","text":""},{"location":"Ch19-Visualization/Matplotlib/#1-using-matplotlib-to-generate-plot","title":"1. Using matplotlib to generate plot\u00b6","text":""},{"location":"Ch19-Visualization/Matplotlib/#linestyle","title":"<code>linestyle</code>\u00b6","text":"<ul> <li><code>-</code>: represent a solid line, it is default</li> <li><code>--</code>: represent a dash line</li> <li><code>:</code>: represent a point line</li> <li><code>-.</code>: represent a point-dash line</li> </ul>"},{"location":"Ch19-Visualization/Matplotlib/#2-adding-legends","title":"2. Adding legends\u00b6","text":""},{"location":"Ch19-Visualization/Matplotlib/#loc-location","title":"<code>loc</code>: location\u00b6","text":"<ul> <li><code>best</code>: find the best location</li> <li><code>upper right</code></li> <li><code>upper left</code></li> <li><code>lower right</code></li> <li><code>lower left</code></li> <li><code>right</code></li> <li><code>left</code></li> <li><code>center</code></li> <li><code>center left</code></li> <li><code>center right</code></li> <li><code>lower center</code></li> <li><code>upper center</code></li> </ul>"},{"location":"Ch19-Visualization/Matplotlib/#3-axis-decoration","title":"3. Axis decoration\u00b6","text":"<ul> <li><code>xlabel</code></li> <li><code>ylabel</code></li> <li><code>yticks</code></li> <li><code>title</code></li> <li><code>ax = plt.gca()</code></li> </ul>"},{"location":"Ch19-Visualization/Matplotlib/#4-multiple-plot","title":"4. Multiple Plot\u00b6","text":"<ul> <li><code>subplot(nrows,ncols,index,**kwargs)</code>: could generate multiple sub-area to plot, using index to represent each area</li> </ul>"},{"location":"Ch19-Visualization/Plots_in_pygal/","title":"Plots in pygal","text":"In\u00a0[1]: Copied! <pre>import pygal\n</pre> import pygal In\u00a0[3]: Copied! <pre>x_data = ['2011','2012','2013','2014','2015','2016','2017']\ny_data = [58000,60200,63000,71000,84000,90500,107000]\ny_data2 = [52000,54200,51500,58300,56800,59500,62700]\n\n# Draw Linear chart\nline = pygal.Line()\nline.add('Crazy Java',y_data2)\nline.add('Crazy Python',y_data)\n\nline.x_labels = x_data\nline.y_labels = [20000,40000,60000,80000,100000]\nline.title = 'Sales of book'\n\nline.x_title = 'Year'\nline.y_title = 'Sales'\nline.legend_at_bottom = True\n\n# Explore plot into a file\nline.render_to_file('fk_books3.svg')\n</pre> x_data = ['2011','2012','2013','2014','2015','2016','2017'] y_data = [58000,60200,63000,71000,84000,90500,107000] y_data2 = [52000,54200,51500,58300,56800,59500,62700]  # Draw Linear chart line = pygal.Line() line.add('Crazy Java',y_data2) line.add('Crazy Python',y_data)  line.x_labels = x_data line.y_labels = [20000,40000,60000,80000,100000] line.title = 'Sales of book'  line.x_title = 'Year' line.y_title = 'Sales' line.legend_at_bottom = True  # Explore plot into a file line.render_to_file('fk_books3.svg') In\u00a0[5]: Copied! <pre># Draw the histogram\nhorizontal_bar = pygal.HorizontalBar()\nhorizontal_bar.add('Crazy Java',y_data2)\nhorizontal_bar.add('Crazy Python',y_data)\n\nhorizontal_bar.x_labels = x_data\nhorizontal_bar.y_labels = [20000,40000,60000,80000,100000]\nhorizontal_bar.title = 'Sales of book'\n\nhorizontal_bar.x_title = 'Sales'\nhorizontal_bar.y_title = 'Year'\n\nhorizontal_bar.lengend_at_bottom = True\nhorizontal_bar.render_to_file('fk_books4.svg')\n</pre> # Draw the histogram horizontal_bar = pygal.HorizontalBar() horizontal_bar.add('Crazy Java',y_data2) horizontal_bar.add('Crazy Python',y_data)  horizontal_bar.x_labels = x_data horizontal_bar.y_labels = [20000,40000,60000,80000,100000] horizontal_bar.title = 'Sales of book'  horizontal_bar.x_title = 'Sales' horizontal_bar.y_title = 'Year'  horizontal_bar.lengend_at_bottom = True horizontal_bar.render_to_file('fk_books4.svg') In\u00a0[6]: Copied! <pre>stacked_bar = pygal.StackedBar()\nstacked_bar.add('Crazy Python', y_data)\nstacked_bar.add('Crazy Java',y_data2)\n\nstacked_bar.x_labels = x_data\nstacked_bar.y_labels = [20000,40000,60000,80000,100000]\nstacked_bar.title = 'Sales of book'\nstacked_bar.x_title = 'Sales'\nstacked_bar.y_title = 'Year'\n\nstacked_bar.legend_at_bottom = True\nstacked_bar.render_to_file('fk_books5.svg')\n</pre> stacked_bar = pygal.StackedBar() stacked_bar.add('Crazy Python', y_data) stacked_bar.add('Crazy Java',y_data2)  stacked_bar.x_labels = x_data stacked_bar.y_labels = [20000,40000,60000,80000,100000] stacked_bar.title = 'Sales of book' stacked_bar.x_title = 'Sales' stacked_bar.y_title = 'Year'  stacked_bar.legend_at_bottom = True stacked_bar.render_to_file('fk_books5.svg') In\u00a0[16]: Copied! <pre>stacked_line = pygal.StackedLine()\nstacked_line.add('Crazy Python', y_data)\nstacked_line.add('Crazy Java',y_data2)\n\nstacked_line.x_labels = x_data\nstacked_line.y_labels = [20000,40000,60000,80000,100000]\nstacked_line.title = 'Sales of book'\nstacked_line.x_title = 'Sales'\nstacked_line.y_title = 'Year'\n\nstacked_line.legend_at_bottom = True\nstacked_line.render_to_file('fk_books6.svg')\n</pre> stacked_line = pygal.StackedLine() stacked_line.add('Crazy Python', y_data) stacked_line.add('Crazy Java',y_data2)  stacked_line.x_labels = x_data stacked_line.y_labels = [20000,40000,60000,80000,100000] stacked_line.title = 'Sales of book' stacked_line.x_title = 'Sales' stacked_line.y_title = 'Year'  stacked_line.legend_at_bottom = True stacked_line.render_to_file('fk_books6.svg') In\u00a0[17]: Copied! <pre>data = [0.16881,0.14966,0.07471,0.06992,0.04762,0.3541,0.02925,0.02411,0.02316,0.01409,0.36326]\nlabels = ['Java','C','C++','Python','Visual Basic .NET','C#','PHP','JavaScript','SQL','Assembly Language','else']\n\npie = pygal.Pie()\n# Add data\nfor i,per in enumerate(data):\n    pie.add(labels[i],per)\npie.title = '2018 Most Popular Programming Language'\npie.legend_at_bottom = True\n\npie.inner_radius = 0.4\npie.half_pie = True\npie.render_to_file('language_percent.svg')\n</pre> data = [0.16881,0.14966,0.07471,0.06992,0.04762,0.3541,0.02925,0.02411,0.02316,0.01409,0.36326] labels = ['Java','C','C++','Python','Visual Basic .NET','C#','PHP','JavaScript','SQL','Assembly Language','else']  pie = pygal.Pie() # Add data for i,per in enumerate(data):     pie.add(labels[i],per) pie.title = '2018 Most Popular Programming Language' pie.legend_at_bottom = True  pie.inner_radius = 0.4 pie.half_pie = True pie.render_to_file('language_percent.svg') In\u00a0[19]: Copied! <pre>data = [0.16881,0.14966,0.07471,0.06992,0.04762,0.3541,0.02925,0.02411,0.02316,0.01409,0.36326]\nlabels = ['Java','C','C++','Python','Visual Basic .NET','C#','PHP','JavaScript','SQL','Assembly Language','else']\n\npie = pygal.Pie()\n# Add data\nfor i,per in enumerate(data):\n    pie.add(labels[i],per)\npie.title = '2018 Most Popular Programming Language'\npie.legend_at_bottom = True\n\npie.inner_radius = 0.4\npie.render_to_file('language_percent1.svg')\n</pre> data = [0.16881,0.14966,0.07471,0.06992,0.04762,0.3541,0.02925,0.02411,0.02316,0.01409,0.36326] labels = ['Java','C','C++','Python','Visual Basic .NET','C#','PHP','JavaScript','SQL','Assembly Language','else']  pie = pygal.Pie() # Add data for i,per in enumerate(data):     pie.add(labels[i],per) pie.title = '2018 Most Popular Programming Language' pie.legend_at_bottom = True  pie.inner_radius = 0.4 pie.render_to_file('language_percent1.svg') In\u00a0[20]: Copied! <pre>dot = pygal.Dot()\n\n# Set the points size\ndot.dots_size = 5\ndot.add('Crazy Python',y_data)\ndot.add('Crazy Java',y_data2)\ndot.x_labels = x_data\ndot.y_labels = ['Crazy Python','Crazy Java']\n\n# Set the rotation of y labels\ndot.y_label_rotation = 45\ndot.title = 'Sales of book'\ndot.legend_at_bottom = True\ndot.render_to_file('fk_books7.svg')\n</pre> dot = pygal.Dot()  # Set the points size dot.dots_size = 5 dot.add('Crazy Python',y_data) dot.add('Crazy Java',y_data2) dot.x_labels = x_data dot.y_labels = ['Crazy Python','Crazy Java']  # Set the rotation of y labels dot.y_label_rotation = 45 dot.title = 'Sales of book' dot.legend_at_bottom = True dot.render_to_file('fk_books7.svg') In\u00a0[24]: Copied! <pre>data = [0.16881,0.14966,0.07471,0.06992,0.04762,0.3541,0.02925,0.02411,0.02316,0.01409,0.36326]\nlabels = ['Java','C','C++','Python','Visual Basic .NET','C#','PHP','JavaScript','SQL','Assembly Language','else']\n\n# Draw the gauge graph\ngauge = pygal.Gauge()\ngauge.range = [0,1]\n\n# Add data\nfor i,per in enumerate(data):\n    gauge.add(labels[i],per)\ngauge.title = '2018 Most Popular Programming Language'\ngauge.legend_at_bottom = True\ngauge.render_to_file('language_percent2.svg')\n</pre> data = [0.16881,0.14966,0.07471,0.06992,0.04762,0.3541,0.02925,0.02411,0.02316,0.01409,0.36326] labels = ['Java','C','C++','Python','Visual Basic .NET','C#','PHP','JavaScript','SQL','Assembly Language','else']  # Draw the gauge graph gauge = pygal.Gauge() gauge.range = [0,1]  # Add data for i,per in enumerate(data):     gauge.add(labels[i],per) gauge.title = '2018 Most Popular Programming Language' gauge.legend_at_bottom = True gauge.render_to_file('language_percent2.svg') In\u00a0[25]: Copied! <pre>data = [[5,4.0,5,5,5],\n       [4.8,2.8,4.8,4.8,4.9],\n       [4.5,2.9,4.6,4.0,4.9],\n       [4.0,4.8,4.9,4.0,5],\n       [3.0,4.2,2.3,3.5,2],\n       [4.8,4.3,3.9,3.0,4.5]]\nlabels = ['Java','C','C++','Python','C#','PHP']\n\n# Draw the radar graph\nradar = pygal.Radar()\n\n# Add data\nfor i,per in enumerate(labels):\n    radar.add(per,data[i])\nradar.x_labels = ['Platform','Efficiency','Community','Market','Future']\nradar.title = 'Programming Language Comparison'\n\n# Set point size\nradar.dot_size = 8\nradar.legend_at_bottom = True\nradar.render_to_file('language_compare.svg')\n</pre> data = [[5,4.0,5,5,5],        [4.8,2.8,4.8,4.8,4.9],        [4.5,2.9,4.6,4.0,4.9],        [4.0,4.8,4.9,4.0,5],        [3.0,4.2,2.3,3.5,2],        [4.8,4.3,3.9,3.0,4.5]] labels = ['Java','C','C++','Python','C#','PHP']  # Draw the radar graph radar = pygal.Radar()  # Add data for i,per in enumerate(labels):     radar.add(per,data[i]) radar.x_labels = ['Platform','Efficiency','Community','Market','Future'] radar.title = 'Programming Language Comparison'  # Set point size radar.dot_size = 8 radar.legend_at_bottom = True radar.render_to_file('language_compare.svg')"},{"location":"Ch19-Visualization/Plots_in_pygal/#plots-in-pygal","title":"Plots in Pygal\u00b6","text":""},{"location":"Ch19-Visualization/Plots_in_pygal/#1-linear-chart","title":"1. Linear chart\u00b6","text":""},{"location":"Ch19-Visualization/Plots_in_pygal/#2-horizontal-histogram","title":"2. Horizontal histogram\u00b6","text":"<p>In horizontal histogram, <code>x_labels</code> indicates y axis, <code>y_labels</code> indicates x axis</p>"},{"location":"Ch19-Visualization/Plots_in_pygal/#3-stacked-histogram","title":"3. Stacked histogram\u00b6","text":""},{"location":"Ch19-Visualization/Plots_in_pygal/#4-pie-chart","title":"4. Pie Chart\u00b6","text":"<ul> <li><code>inner_radius</code>: Set the radius of pie chart</li> <li><code>half_pie</code>: Set it as True, would create a half circular</li> </ul>"},{"location":"Ch19-Visualization/Plots_in_pygal/#5-points-graph","title":"5. Points Graph\u00b6","text":""},{"location":"Ch19-Visualization/Plots_in_pygal/#6-gauge-graph","title":"6. Gauge Graph\u00b6","text":""},{"location":"Ch19-Visualization/Plots_in_pygal/#radar-graph","title":"Radar Graph\u00b6","text":"<ul> <li>Using for plot matrix info</li> </ul>"},{"location":"Ch19-Visualization/Pygal_Plot/","title":"Pygal Plot","text":"In\u00a0[7]: Copied! <pre>import pygal\nfrom IPython.display import SVG, display\n</pre> import pygal from IPython.display import SVG, display In\u00a0[15]: Copied! <pre>x_data = ['2011','2012','2013','2014','2015','2016','2017']\ny_data = [58000,60200,63000,71000,84000,90500,107000]\ny_data2 = [52000,54200,51500,58300,56800,59500,62700]\n\n# Draw the histogram\nbar = pygal.Bar()\n\nbar.add('Crazy Java', y_data2)\nbar.add('Crazy Python',y_data)\n\nbar.x_labels = x_data\nbar.title = 'Sales of books'\nbar.x_title = 'Year'\nbar.y_title = 'Sales'\n\n# explore it to .png file\nbar.render_to_file('fk_books.svg')\n</pre> x_data = ['2011','2012','2013','2014','2015','2016','2017'] y_data = [58000,60200,63000,71000,84000,90500,107000] y_data2 = [52000,54200,51500,58300,56800,59500,62700]  # Draw the histogram bar = pygal.Bar()  bar.add('Crazy Java', y_data2) bar.add('Crazy Python',y_data)  bar.x_labels = x_data bar.title = 'Sales of books' bar.x_title = 'Year' bar.y_title = 'Sales'  # explore it to .png file bar.render_to_file('fk_books.svg') In\u00a0[13]: Copied! <pre># Draw the histogram\nbar = pygal.Bar()\n\nbar.add('Crazy Java', y_data2)\nbar.add('Crazy Python',y_data)\n\nbar.x_labels = x_data\nbar.title = 'Sales of books'\nbar.x_title = 'Year'\nbar.y_title = 'Sales'\n\n# rotate x axis\nbar.x_label_rotation = 45\n# Put legend into bottom\nbar.legend_at_bottom = True\n\n# Set margin\nbar.margin = 35\n\nbar.show_y_guides = False\nbar.show_x_guides = True\n\nbar.render_to_file('fk_books2.svg')\n</pre> # Draw the histogram bar = pygal.Bar()  bar.add('Crazy Java', y_data2) bar.add('Crazy Python',y_data)  bar.x_labels = x_data bar.title = 'Sales of books' bar.x_title = 'Year' bar.y_title = 'Sales'  # rotate x axis bar.x_label_rotation = 45 # Put legend into bottom bar.legend_at_bottom = True  # Set margin bar.margin = 35  bar.show_y_guides = False bar.show_x_guides = True  bar.render_to_file('fk_books2.svg')"},{"location":"Ch19-Visualization/Pygal_Plot/#pygal","title":"Pygal\u00b6","text":""},{"location":"Ch19-Visualization/Pygal_Plot/#1-basic-usage-of-pygal","title":"1. Basic usage of Pygal\u00b6","text":"<ul> <li>Create a <code>pygal</code> object</li> <li>Using <code>add()</code> to add data</li> <li>Using <code>Config</code> to do the plot formatting</li> <li>Using <code>render_to_xxx</code> to explore plot</li> </ul>"},{"location":"Ch19-Visualization/Pygal_Plot/#2-plot-formatting","title":"2. Plot Formatting\u00b6","text":""},{"location":"Ch19-Visualization/matplotlib_test/","title":"Matplotlib test","text":"In\u00a0[\u00a0]: Copied! <pre>import matplotlib.pyplot as plt\nimport numpy as np\n</pre> import matplotlib.pyplot as plt import numpy as np In\u00a0[\u00a0]: Copied! <pre>x_data = ['2011','2012','2013','2014','2015','2016','2017']\ny_data = [58000,60200,63000,71000,84000,90500,107000]\ny_data2 = [52000,54200,51500,58300,56800,59500,62700]\n</pre> x_data = ['2011','2012','2013','2014','2015','2016','2017'] y_data = [58000,60200,63000,71000,84000,90500,107000] y_data2 = [52000,54200,51500,58300,56800,59500,62700] In\u00a0[\u00a0]: Copied! <pre>bar_width = 0.4\nplt.barh(y = range(len(x_data)),width = y_data, label = 'Crazy Python', color = 'steelblue',alpha = 0.8, height = bar_width)\nplt.barh(y = np.arange(len(x_data)) + bar_width,\n        width = y_data2, label = 'Crazy Java', color = 'indianred',alpha = 0.8, height = bar_width)\nfor x,y in enumerate(y_data):\n    plt.text(x + 5000, y-bar_width/2 ,'%s'%x, ha = 'center', va = 'bottom')\nfor x,y in enumerate(y_data2):\n    plt.text(x + 5000, y+bar_width/2, '%s'%x, ha = 'center', va = 'bottom')\n</pre> bar_width = 0.4 plt.barh(y = range(len(x_data)),width = y_data, label = 'Crazy Python', color = 'steelblue',alpha = 0.8, height = bar_width) plt.barh(y = np.arange(len(x_data)) + bar_width,         width = y_data2, label = 'Crazy Java', color = 'indianred',alpha = 0.8, height = bar_width) for x,y in enumerate(y_data):     plt.text(x + 5000, y-bar_width/2 ,'%s'%x, ha = 'center', va = 'bottom') for x,y in enumerate(y_data2):     plt.text(x + 5000, y+bar_width/2, '%s'%x, ha = 'center', va = 'bottom') In\u00a0[\u00a0]: Copied! <pre>plt.yticks(np.arange(len(x_data)) + bar_width/2, x_data)\nplt.title('Comparison between Java and Python')\nplt.xlabel('Sales')\nplt.ylabel('Year')\n</pre> plt.yticks(np.arange(len(x_data)) + bar_width/2, x_data) plt.title('Comparison between Java and Python') plt.xlabel('Sales') plt.ylabel('Year') In\u00a0[\u00a0]: Copied! <pre>plt.legend(loc = 'best')\nplt.show()\n</pre> plt.legend(loc = 'best') plt.show()"},{"location":"Ch20-Data-Mining/Untitled/","title":"Untitled","text":"Table of Contents In\u00a0[\u00a0]: Copied!"},{"location":"Ch20-Data-Mining/ZhipinSpider/ZhipinSpider/__init__/","title":"init","text":""},{"location":"Ch20-Data-Mining/ZhipinSpider/ZhipinSpider/items/","title":"Items","text":"<p>Define here the models for your scraped items</p> <p>See documentation in: https://docs.scrapy.org/en/latest/topics/items.html</p> In\u00a0[\u00a0]: Copied! <pre>import scrapy\n</pre> import scrapy In\u00a0[\u00a0]: Copied! <pre>class ZhipinspiderItem(scrapy.Item):\n    # define the fields for your item here like:\n    # name = scrapy.Field()\n    pass\n</pre> class ZhipinspiderItem(scrapy.Item):     # define the fields for your item here like:     # name = scrapy.Field()     pass"},{"location":"Ch20-Data-Mining/ZhipinSpider/ZhipinSpider/middlewares/","title":"Middlewares","text":"<p>Define here the models for your spider middleware</p> <p>See documentation in: https://docs.scrapy.org/en/latest/topics/spider-middleware.html</p> In\u00a0[\u00a0]: Copied! <pre>from scrapy import signals\n</pre> from scrapy import signals In\u00a0[\u00a0]: Copied! <pre># useful for handling different item types with a single interface\nfrom itemadapter import is_item, ItemAdapter\n</pre> # useful for handling different item types with a single interface from itemadapter import is_item, ItemAdapter In\u00a0[\u00a0]: Copied! <pre>class ZhipinspiderSpiderMiddleware:\n    # Not all methods need to be defined. If a method is not defined,\n    # scrapy acts as if the spider middleware does not modify the\n    # passed objects.\n\n    @classmethod\n    def from_crawler(cls, crawler):\n        # This method is used by Scrapy to create your spiders.\n        s = cls()\n        crawler.signals.connect(s.spider_opened, signal=signals.spider_opened)\n        return s\n\n    def process_spider_input(self, response, spider):\n        # Called for each response that goes through the spider\n        # middleware and into the spider.\n\n        # Should return None or raise an exception.\n        return None\n\n    def process_spider_output(self, response, result, spider):\n        # Called with the results returned from the Spider, after\n        # it has processed the response.\n\n        # Must return an iterable of Request, or item objects.\n        for i in result:\n            yield i\n\n    def process_spider_exception(self, response, exception, spider):\n        # Called when a spider or process_spider_input() method\n        # (from other spider middleware) raises an exception.\n\n        # Should return either None or an iterable of Request or item objects.\n        pass\n\n    def process_start_requests(self, start_requests, spider):\n        # Called with the start requests of the spider, and works\n        # similarly to the process_spider_output() method, except\n        # that it doesn\u2019t have a response associated.\n\n        # Must return only requests (not items).\n        for r in start_requests:\n            yield r\n\n    def spider_opened(self, spider):\n        spider.logger.info('Spider opened: %s' % spider.name)\n</pre> class ZhipinspiderSpiderMiddleware:     # Not all methods need to be defined. If a method is not defined,     # scrapy acts as if the spider middleware does not modify the     # passed objects.      @classmethod     def from_crawler(cls, crawler):         # This method is used by Scrapy to create your spiders.         s = cls()         crawler.signals.connect(s.spider_opened, signal=signals.spider_opened)         return s      def process_spider_input(self, response, spider):         # Called for each response that goes through the spider         # middleware and into the spider.          # Should return None or raise an exception.         return None      def process_spider_output(self, response, result, spider):         # Called with the results returned from the Spider, after         # it has processed the response.          # Must return an iterable of Request, or item objects.         for i in result:             yield i      def process_spider_exception(self, response, exception, spider):         # Called when a spider or process_spider_input() method         # (from other spider middleware) raises an exception.          # Should return either None or an iterable of Request or item objects.         pass      def process_start_requests(self, start_requests, spider):         # Called with the start requests of the spider, and works         # similarly to the process_spider_output() method, except         # that it doesn\u2019t have a response associated.          # Must return only requests (not items).         for r in start_requests:             yield r      def spider_opened(self, spider):         spider.logger.info('Spider opened: %s' % spider.name) In\u00a0[\u00a0]: Copied! <pre>class ZhipinspiderDownloaderMiddleware:\n    # Not all methods need to be defined. If a method is not defined,\n    # scrapy acts as if the downloader middleware does not modify the\n    # passed objects.\n\n    @classmethod\n    def from_crawler(cls, crawler):\n        # This method is used by Scrapy to create your spiders.\n        s = cls()\n        crawler.signals.connect(s.spider_opened, signal=signals.spider_opened)\n        return s\n\n    def process_request(self, request, spider):\n        # Called for each request that goes through the downloader\n        # middleware.\n\n        # Must either:\n        # - return None: continue processing this request\n        # - or return a Response object\n        # - or return a Request object\n        # - or raise IgnoreRequest: process_exception() methods of\n        #   installed downloader middleware will be called\n        return None\n\n    def process_response(self, request, response, spider):\n        # Called with the response returned from the downloader.\n\n        # Must either;\n        # - return a Response object\n        # - return a Request object\n        # - or raise IgnoreRequest\n        return response\n\n    def process_exception(self, request, exception, spider):\n        # Called when a download handler or a process_request()\n        # (from other downloader middleware) raises an exception.\n\n        # Must either:\n        # - return None: continue processing this exception\n        # - return a Response object: stops process_exception() chain\n        # - return a Request object: stops process_exception() chain\n        pass\n\n    def spider_opened(self, spider):\n        spider.logger.info('Spider opened: %s' % spider.name)\n</pre> class ZhipinspiderDownloaderMiddleware:     # Not all methods need to be defined. If a method is not defined,     # scrapy acts as if the downloader middleware does not modify the     # passed objects.      @classmethod     def from_crawler(cls, crawler):         # This method is used by Scrapy to create your spiders.         s = cls()         crawler.signals.connect(s.spider_opened, signal=signals.spider_opened)         return s      def process_request(self, request, spider):         # Called for each request that goes through the downloader         # middleware.          # Must either:         # - return None: continue processing this request         # - or return a Response object         # - or return a Request object         # - or raise IgnoreRequest: process_exception() methods of         #   installed downloader middleware will be called         return None      def process_response(self, request, response, spider):         # Called with the response returned from the downloader.          # Must either;         # - return a Response object         # - return a Request object         # - or raise IgnoreRequest         return response      def process_exception(self, request, exception, spider):         # Called when a download handler or a process_request()         # (from other downloader middleware) raises an exception.          # Must either:         # - return None: continue processing this exception         # - return a Response object: stops process_exception() chain         # - return a Request object: stops process_exception() chain         pass      def spider_opened(self, spider):         spider.logger.info('Spider opened: %s' % spider.name)"},{"location":"Ch20-Data-Mining/ZhipinSpider/ZhipinSpider/pipelines/","title":"Pipelines","text":"<p>Define your item pipelines here</p> <p>Don't forget to add your pipeline to the ITEM_PIPELINES setting See: https://docs.scrapy.org/en/latest/topics/item-pipeline.html</p> In\u00a0[\u00a0]: Copied! <pre># useful for handling different item types with a single interface\nfrom itemadapter import ItemAdapter\n</pre> # useful for handling different item types with a single interface from itemadapter import ItemAdapter In\u00a0[\u00a0]: Copied! <pre>class ZhipinspiderPipeline:\n    def process_item(self, item, spider):\n        return item\n</pre> class ZhipinspiderPipeline:     def process_item(self, item, spider):         return item"},{"location":"Ch20-Data-Mining/ZhipinSpider/ZhipinSpider/settings/","title":"Settings","text":"<p>Scrapy settings for ZhipinSpider project</p> <p>For simplicity, this file contains only settings considered important or commonly used. You can find more settings consulting the documentation:</p> <pre><code>https://docs.scrapy.org/en/latest/topics/settings.html\nhttps://docs.scrapy.org/en/latest/topics/downloader-middleware.html\nhttps://docs.scrapy.org/en/latest/topics/spider-middleware.html</code></pre> In\u00a0[\u00a0]: Copied! <pre>BOT_NAME = 'ZhipinSpider'\n</pre> BOT_NAME = 'ZhipinSpider' In\u00a0[\u00a0]: Copied! <pre>SPIDER_MODULES = ['ZhipinSpider.spiders']\nNEWSPIDER_MODULE = 'ZhipinSpider.spiders'\n</pre> SPIDER_MODULES = ['ZhipinSpider.spiders'] NEWSPIDER_MODULE = 'ZhipinSpider.spiders' <p>Crawl responsibly by identifying yourself (and your website) on the user-agent USER_AGENT = 'ZhipinSpider (+http://www.yourdomain.com)'</p> In\u00a0[\u00a0]: Copied! <pre># Obey robots.txt rules\nROBOTSTXT_OBEY = True\n</pre> # Obey robots.txt rules ROBOTSTXT_OBEY = True <p>Configure maximum concurrent requests performed by Scrapy (default: 16) CONCURRENT_REQUESTS = 32</p> <p>Configure a delay for requests for the same website (default: 0) See https://docs.scrapy.org/en/latest/topics/settings.html#download-delay See also autothrottle settings and docs DOWNLOAD_DELAY = 3 The download delay setting will honor only one of: CONCURRENT_REQUESTS_PER_DOMAIN = 16 CONCURRENT_REQUESTS_PER_IP = 16</p> <p>Disable cookies (enabled by default) COOKIES_ENABLED = False</p> <p>Disable Telnet Console (enabled by default) TELNETCONSOLE_ENABLED = False</p> <p>Override the default request headers: DEFAULT_REQUEST_HEADERS = { 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,/;q=0.8', 'Accept-Language': 'en', }</p> <p>Enable or disable spider middlewares See https://docs.scrapy.org/en/latest/topics/spider-middleware.html SPIDER_MIDDLEWARES = { 'ZhipinSpider.middlewares.ZhipinspiderSpiderMiddleware': 543, }</p> <p>Enable or disable downloader middlewares See https://docs.scrapy.org/en/latest/topics/downloader-middleware.html DOWNLOADER_MIDDLEWARES = { 'ZhipinSpider.middlewares.ZhipinspiderDownloaderMiddleware': 543, }</p> <p>Enable or disable extensions See https://docs.scrapy.org/en/latest/topics/extensions.html EXTENSIONS = { 'scrapy.extensions.telnet.TelnetConsole': None, }</p> <p>Configure item pipelines See https://docs.scrapy.org/en/latest/topics/item-pipeline.html ITEM_PIPELINES = { 'ZhipinSpider.pipelines.ZhipinspiderPipeline': 300, }</p> <p>Enable and configure the AutoThrottle extension (disabled by default) See https://docs.scrapy.org/en/latest/topics/autothrottle.html AUTOTHROTTLE_ENABLED = True The initial download delay AUTOTHROTTLE_START_DELAY = 5 The maximum download delay to be set in case of high latencies AUTOTHROTTLE_MAX_DELAY = 60 The average number of requests Scrapy should be sending in parallel to each remote server AUTOTHROTTLE_TARGET_CONCURRENCY = 1.0 Enable showing throttling stats for every response received: AUTOTHROTTLE_DEBUG = False</p> <p>Enable and configure HTTP caching (disabled by default) See https://docs.scrapy.org/en/latest/topics/downloader-middleware.html#httpcache-middleware-settings HTTPCACHE_ENABLED = True HTTPCACHE_EXPIRATION_SECS = 0 HTTPCACHE_DIR = 'httpcache' HTTPCACHE_IGNORE_HTTP_CODES = [] HTTPCACHE_STORAGE = 'scrapy.extensions.httpcache.FilesystemCacheStorage'</p>"},{"location":"Ch20-Data-Mining/ZhipinSpider/ZhipinSpider/spiders/__init__/","title":"init","text":"<p>This package will contain the spiders of your Scrapy project</p> <p>Please refer to the documentation for information on how to create and manage your spiders.</p>"},{"location":"Ch4-WorkflowControl/Applications/","title":"Applications","text":"In\u00a0[1]: Copied! <pre>def circular(num):\n    x = range(num)\n    y = range(num)\n</pre> def circular(num):     x = range(num)     y = range(num)      In\u00a0[2]: Copied! <pre>num = 4\narray = [['0' *num] * num]\narray\n</pre> num = 4 array = [['0' *num] * num] array Out[2]: <pre>[['0000', '0000', '0000', '0000']]</pre> In\u00a0[3]: Copied! <pre>def circular(Size):\n    # do not use this!\n    # array = [[0] * Size] * Size\n    array = [[0] * Size]\n    for i in range(Size):\n        array = array + [[0] * Size]\n\n#     print(array)\n    '''\n    orient represents the orientation, 0 stands for down, 1 for right, 2 for left, 3 for up\n    k for column index, j for row index\n    '''\n    orient = 0\n    j = 0\n    k = 0\n    for num in range(1,Size * Size + 1):\n        array[j][k] = num\n        if  j + k == Size -1:\n            if j &gt; k:\n                orient = 1\n            else:\n                orient = 2\n        elif (k == j) and (k &gt;= Size / 2):\n            orient = 3\n        elif (j == k -1) and (k &lt;= Size /2):\n            orient = 0\n        if orient == 0:\n#             print('%0.2d '%array[j][k],end='')\n#             print('go down')\n            j+=1\n        elif orient == 1:\n#             print('%0.2d '%array[j][k],end='')\n#             print('go right!')\n            k+=1\n        elif orient == 2:\n#             print('%0.2d '%array[j][k],end='')\n#             print('go left')\n            k-=1\n        elif orient == 3:\n#             print('%0.2d '%array[j][k],end='')\n#             print('go up')\n            j-=1\n    return array\n</pre> def circular(Size):     # do not use this!     # array = [[0] * Size] * Size     array = [[0] * Size]     for i in range(Size):         array = array + [[0] * Size]  #     print(array)     '''     orient represents the orientation, 0 stands for down, 1 for right, 2 for left, 3 for up     k for column index, j for row index     '''     orient = 0     j = 0     k = 0     for num in range(1,Size * Size + 1):         array[j][k] = num         if  j + k == Size -1:             if j &gt; k:                 orient = 1             else:                 orient = 2         elif (k == j) and (k &gt;= Size / 2):             orient = 3         elif (j == k -1) and (k &lt;= Size /2):             orient = 0         if orient == 0: #             print('%0.2d '%array[j][k],end='') #             print('go down')             j+=1         elif orient == 1: #             print('%0.2d '%array[j][k],end='') #             print('go right!')             k+=1         elif orient == 2: #             print('%0.2d '%array[j][k],end='') #             print('go left')             k-=1         elif orient == 3: #             print('%0.2d '%array[j][k],end='') #             print('go up')             j-=1     return array In\u00a0[4]: Copied! <pre>Size = 11 \narray = circular(Size)\n\nfor x in range(Size):\n    for y in range(Size):\n        print('%0.3d '%array[x][y],end='')\n    print('')\n</pre> Size = 11  array = circular(Size)  for x in range(Size):     for y in range(Size):         print('%0.3d '%array[x][y],end='')     print('') <pre>001 040 039 038 037 036 035 034 033 032 031 \n002 041 072 071 070 069 068 067 066 065 030 \n003 042 073 096 095 094 093 092 091 064 029 \n004 043 074 097 112 111 110 109 090 063 028 \n005 044 075 098 113 120 119 108 089 062 027 \n006 045 076 099 114 121 118 107 088 061 026 \n007 046 077 100 115 116 117 106 087 060 025 \n008 047 078 101 102 103 104 105 086 059 024 \n009 048 079 080 081 082 083 084 085 058 023 \n010 049 050 051 052 053 054 055 056 057 022 \n011 012 013 014 015 016 017 018 019 020 021 \n</pre> In\u00a0[\u00a0]: Copied! <pre>board_size = 17\nboard = []\ndef initBoard():\n    for i in range(board_size):\n        row  = ['+'] * board_size\n        board.append(row)\n\ndef printBoard():\n    for i in range(board_size):\n        for j in range(board_size):\n            print(board[i][j], end = '')\n        # equal to print('\\n')\n        print()\ninitBoard()\nprintBoard()\ninputStr = input('Please input coordinates of your go [x,y format]\\n')\nwhile inputStr != None:\n    x_str,y_str = inputStr.split(sep=',')\n    board[int(y_str) - 1][int(x_str) -1] = '\u25cf'\n    printBoard()\n    inputStr = input('Please input coordinates of your go [x,y format]\\n')\n</pre> board_size = 17 board = [] def initBoard():     for i in range(board_size):         row  = ['+'] * board_size         board.append(row)  def printBoard():     for i in range(board_size):         for j in range(board_size):             print(board[i][j], end = '')         # equal to print('\\n')         print() initBoard() printBoard() inputStr = input('Please input coordinates of your go [x,y format]\\n') while inputStr != None:     x_str,y_str = inputStr.split(sep=',')     board[int(y_str) - 1][int(x_str) -1] = '\u25cf'     printBoard()     inputStr = input('Please input coordinates of your go [x,y format]\\n') In\u00a0[6]: Copied! <pre>for i in range(9):\n    row = []\n    for j in range(i+1):\n        row.append(str(j+1)+'*'+str(i+1)+'='+str((j+1)*(i+1)) )\n    print(row)\n</pre> for i in range(9):     row = []     for j in range(i+1):         row.append(str(j+1)+'*'+str(i+1)+'='+str((j+1)*(i+1)) )     print(row) <pre>['1*1=1']\n['1*2=2', '2*2=4']\n['1*3=3', '2*3=6', '3*3=9']\n['1*4=4', '2*4=8', '3*4=12', '4*4=16']\n['1*5=5', '2*5=10', '3*5=15', '4*5=20', '5*5=25']\n['1*6=6', '2*6=12', '3*6=18', '4*6=24', '5*6=30', '6*6=36']\n['1*7=7', '2*7=14', '3*7=21', '4*7=28', '5*7=35', '6*7=42', '7*7=49']\n['1*8=8', '2*8=16', '3*8=24', '4*8=32', '5*8=40', '6*8=48', '7*8=56', '8*8=64']\n['1*9=9', '2*9=18', '3*9=27', '4*9=36', '5*9=45', '6*9=54', '7*9=63', '8*9=72', '9*9=81']\n</pre> In\u00a0[27]: Copied! <pre>def Isosceles(num):\n    tri = []\n    for i in range(1,num+1):\n        row = [' '] * (2 * num - 1)\n        for j in range((2*i-1)):\n            row[num - i + j] = '*'\n        tri.append(row)\n    for row in tri:\n        for ele in row:\n            print(ele,end='')\n        print()\n</pre> def Isosceles(num):     tri = []     for i in range(1,num+1):         row = [' '] * (2 * num - 1)         for j in range((2*i-1)):             row[num - i + j] = '*'         tri.append(row)     for row in tri:         for ele in row:             print(ele,end='')         print() In\u00a0[29]: Copied! <pre>Isosceles(8)\n</pre> Isosceles(8) <pre>       *       \n      ***      \n     *****     \n    *******    \n   *********   \n  ***********  \n ************* \n***************\n</pre> In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"Ch4-WorkflowControl/Applications/#applications","title":"Applications\u00b6","text":""},{"location":"Ch4-WorkflowControl/Loop_Statement/","title":"Loop Statement","text":"In\u00a0[1]: Copied! <pre>count_i = 0\nwhile count_i &lt; 10:\n    print('Count :', count_i)\n    # iteration statements\n    count_i += 1\nprint('Loop end!')\n</pre> count_i = 0 while count_i &lt; 10:     print('Count :', count_i)     # iteration statements     count_i += 1 print('Loop end!') <pre>Count : 0\nCount : 1\nCount : 2\nCount : 3\nCount : 4\nCount : 5\nCount : 6\nCount : 7\nCount : 8\nCount : 9\nLoop end!\n</pre> In\u00a0[2]: Copied! <pre>a_tuple = ('fkit','crazyit','Charlie')\ni = 0\nwhile i &lt; len(a_tuple):\n    print(a_tuple[i])\n    i +=1\n</pre> a_tuple = ('fkit','crazyit','Charlie') i = 0 while i &lt; len(a_tuple):     print(a_tuple[i])     i +=1 <pre>fkit\ncrazyit\nCharlie\n</pre> In\u00a0[4]: Copied! <pre>src_list = [12,45,34,13,100,224,56,74,109]\na_list = []\nb_list = []\nc_list = []\n\nwhile len(src_list) &gt;0:\n    ele = src_list.pop()\n    if ele % 3 ==0:\n        a_list.append(ele)\n    elif ele % 3 == 1:\n        b_list.append(ele)\n    else:\n        c_list.append(ele)\n\nprint('Divisible by three: ',a_list)\nprint('Reminder is one: ',b_list)\nprint('Reminder is two: ',c_list)\n</pre> src_list = [12,45,34,13,100,224,56,74,109] a_list = [] b_list = [] c_list = []  while len(src_list) &gt;0:     ele = src_list.pop()     if ele % 3 ==0:         a_list.append(ele)     elif ele % 3 == 1:         b_list.append(ele)     else:         c_list.append(ele)  print('Divisible by three: ',a_list) print('Reminder is one: ',b_list) print('Reminder is two: ',c_list) <pre>Divisible by three:  [45, 12]\nReminder is one:  [109, 100, 13, 34]\nReminder is two:  [74, 56, 224]\n</pre> In\u00a0[5]: Copied! <pre>s_max = input('Calculate the factorial of: ')\nmx = int(s_max)\nresult = 1 \nfor num in range(1,mx+1):\n    result *= num\nprint(result)\n</pre> s_max = input('Calculate the factorial of: ') mx = int(s_max) result = 1  for num in range(1,mx+1):     result *= num print(result) <pre>Calculate the factorial of: 9\n362880\n</pre> In\u00a0[8]: Copied! <pre>def factorial(n):\n    if n&lt;= 1:\n        return n\n    else:\n        return n * factorial(n-1)\n</pre> def factorial(n):     if n&lt;= 1:         return n     else:         return n * factorial(n-1) In\u00a0[9]: Copied! <pre>factorial(9)\n</pre> factorial(9) Out[9]: <pre>362880</pre> <p>Could do this but not recommended!</p> In\u00a0[11]: Copied! <pre>for i in range(1,5):\n    i = 20\n    print('i = ',i)\n</pre> for i in range(1,5):     i = 20     print('i = ',i) <pre>i =  20\ni =  20\ni =  20\ni =  20\n</pre> In\u00a0[16]: Copied! <pre>a_tuple = ('crazyit','fkit','Charlie')\nfor ele in a_tuple:\n    print('ele is:',ele)\n</pre> a_tuple = ('crazyit','fkit','Charlie') for ele in a_tuple:     print('ele is:',ele) <pre>ele is: crazyit\nele is: fkit\nele is: Charlie\n</pre> In\u00a0[17]: Copied! <pre>src_list = [12,45,3.4,13,'a',4,56,'crazyit',109.5]\nmy_sum = 0\nmy_count = 0\nfor ele in src_list:\n    if isinstance(ele,int) or isinstance(ele,float):\n        print(ele)\n        my_sum+= ele\n        my_count+= 1\nprint('Total Sum:',my_sum)\nprint('Average:',my_sum/my_count)\n</pre> src_list = [12,45,3.4,13,'a',4,56,'crazyit',109.5] my_sum = 0 my_count = 0 for ele in src_list:     if isinstance(ele,int) or isinstance(ele,float):         print(ele)         my_sum+= ele         my_count+= 1 print('Total Sum:',my_sum) print('Average:',my_sum/my_count) <pre>12\n45\n3.4\n13\n4\n56\n109.5\nTotal Sum: 242.9\nAverage: 34.7\n</pre> In\u00a0[18]: Copied! <pre>my_dict = {'Literature':89, 'Math':92, 'English':80}\nfor key,value in my_dict.items():\n    print('Key:',key)\n    print('Values:',value)\n</pre> my_dict = {'Literature':89, 'Math':92, 'English':80} for key,value in my_dict.items():     print('Key:',key)     print('Values:',value) <pre>Key: Literature\nValues: 89\nKey: Math\nValues: 92\nKey: English\nValues: 80\n</pre> In\u00a0[19]: Copied! <pre>for key in my_dict.keys():\n    print('Key:',key)\n</pre> for key in my_dict.keys():     print('Key:',key) <pre>Key: Literature\nKey: Math\nKey: English\n</pre> In\u00a0[20]: Copied! <pre>for value in my_dict.values():\n    print('Values:',value)\n</pre> for value in my_dict.values():     print('Values:',value) <pre>Values: 89\nValues: 92\nValues: 80\n</pre> <p>Count Vaibles in a list using dictionary</p> In\u00a0[21]: Copied! <pre>src_list = [12,45,3.4,12,'fkit',45,3.4,'fkit',45,3.4]\nstatistics = {}\nfor ele in src_list:\n    if ele in statistics:\n        statistics[ele]+=1\n    else:\n        statistics[ele] = 1\nfor ele,count in statistics.items():\n    print('%s shows %d times'%(ele,count))\n</pre> src_list = [12,45,3.4,12,'fkit',45,3.4,'fkit',45,3.4] statistics = {} for ele in src_list:     if ele in statistics:         statistics[ele]+=1     else:         statistics[ele] = 1 for ele,count in statistics.items():     print('%s shows %d times'%(ele,count)) <pre>12 shows 2 times\n45 shows 3 times\n3.4 shows 3 times\nfkit shows 2 times\n</pre> In\u00a0[23]: Copied! <pre>count_i = 0\nwhile count_i &lt;5:\n    print('count_i &lt; 5:', count_i) \n    count_i += 1\nelse:\n    print('count_i &gt;= 5:', count_i)\n</pre> count_i = 0 while count_i &lt;5:     print('count_i &lt; 5:', count_i)      count_i += 1 else:     print('count_i &gt;= 5:', count_i) <pre>count_i &lt; 5: 0\ncount_i &lt; 5: 1\ncount_i &lt; 5: 2\ncount_i &lt; 5: 3\ncount_i &lt; 5: 4\ncount_i &gt;= 5: 5\n</pre> In\u00a0[24]: Copied! <pre>count_i = 0\nwhile count_i &lt;5:\n    print('count_i &lt; 5:', count_i) \n    count_i += 1\nprint('count_i &gt;= 5:', count_i)\n</pre> count_i = 0 while count_i &lt;5:     print('count_i &lt; 5:', count_i)      count_i += 1 print('count_i &gt;= 5:', count_i) <pre>count_i &lt; 5: 0\ncount_i &lt; 5: 1\ncount_i &lt; 5: 2\ncount_i &lt; 5: 3\ncount_i &lt; 5: 4\ncount_i &gt;= 5: 5\n</pre> In\u00a0[25]: Copied! <pre>a_list = [330, 1.4,50,'fkit',-3.5]\nfor ele in a_list:\n    print('ele :',ele)\nelse:\n    print('In the else statement:',ele)\n</pre> a_list = [330, 1.4,50,'fkit',-3.5] for ele in a_list:     print('ele :',ele) else:     print('In the else statement:',ele) <pre>ele : 330\nele : 1.4\nele : 50\nele : fkit\nele : -3.5\nIn the else statement: -3.5\n</pre> In\u00a0[26]: Copied! <pre>for i in range(0,5):\n    j = 0\n    while j &lt; 3:\n        print('i is %d, j is %d' %(i,j))\n        j+=1\n</pre> for i in range(0,5):     j = 0     while j &lt; 3:         print('i is %d, j is %d' %(i,j))         j+=1 <pre>i is 0, j is 0\ni is 0, j is 1\ni is 0, j is 2\ni is 1, j is 0\ni is 1, j is 1\ni is 1, j is 2\ni is 2, j is 0\ni is 2, j is 1\ni is 2, j is 2\ni is 3, j is 0\ni is 3, j is 1\ni is 3, j is 2\ni is 4, j is 0\ni is 4, j is 1\ni is 4, j is 2\n</pre> In\u00a0[27]: Copied! <pre>a_range = range(10)\na_list = [x*x for x in a_range]\nprint(a_list)\n</pre> a_range = range(10) a_list = [x*x for x in a_range] print(a_list) <pre>[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n</pre> In\u00a0[28]: Copied! <pre>b_list = [x*x for x in a_range if x%2 == 0]\nprint(b_list)\n</pre> b_list = [x*x for x in a_range if x%2 == 0] print(b_list) <pre>[0, 4, 16, 36, 64]\n</pre> <p>Create generator</p> In\u00a0[36]: Copied! <pre>c_generator = (x*x for x in a_range if x%2 ==0)\nprint(type(c_generator))\n</pre> c_generator = (x*x for x in a_range if x%2 ==0) print(type(c_generator)) <pre>&lt;class 'generator'&gt;\n</pre> In\u00a0[37]: Copied! <pre>for i in c_generator:\n    print(i,end='\\t')\n</pre> for i in c_generator:     print(i,end='\\t') <pre>0\t4\t16\t36\t64\t</pre> In\u00a0[38]: Copied! <pre>d_list = [(x,y) for x in range(5) for y in range(4)]\nprint(d_list)\n</pre> d_list = [(x,y) for x in range(5) for y in range(4)] print(d_list) <pre>[(0, 0), (0, 1), (0, 2), (0, 3), (1, 0), (1, 1), (1, 2), (1, 3), (2, 0), (2, 1), (2, 2), (2, 3), (3, 0), (3, 1), (3, 2), (3, 3), (4, 0), (4, 1), (4, 2), (4, 3)]\n</pre> In\u00a0[40]: Copied! <pre>e_list = [[x,y,z] for x in range(5) for y in range(4) for z in range(3)]\nprint(e_list)\n</pre> e_list = [[x,y,z] for x in range(5) for y in range(4) for z in range(3)] print(e_list) <pre>[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [0, 3, 0], [0, 3, 1], [0, 3, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [1, 3, 0], [1, 3, 1], [1, 3, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2], [2, 3, 0], [2, 3, 1], [2, 3, 2], [3, 0, 0], [3, 0, 1], [3, 0, 2], [3, 1, 0], [3, 1, 1], [3, 1, 2], [3, 2, 0], [3, 2, 1], [3, 2, 2], [3, 3, 0], [3, 3, 1], [3, 3, 2], [4, 0, 0], [4, 0, 1], [4, 0, 2], [4, 1, 0], [4, 1, 1], [4, 1, 2], [4, 2, 0], [4, 2, 1], [4, 2, 2], [4, 3, 0], [4, 3, 1], [4, 3, 2]]\n</pre> In\u00a0[41]: Copied! <pre>src_a = [30,12,66,34,39,78,36,57,121]\nsrc_b = [3,5,7,11]\nresult = [(x,y) for x in src_b for y in src_a if y % x ==0]\nprint(result)\n</pre> src_a = [30,12,66,34,39,78,36,57,121] src_b = [3,5,7,11] result = [(x,y) for x in src_b for y in src_a if y % x ==0] print(result) <pre>[(3, 30), (3, 12), (3, 66), (3, 39), (3, 78), (3, 36), (3, 57), (5, 30), (11, 66), (11, 121)]\n</pre> In\u00a0[42]: Copied! <pre>a = ['a','b','c']\nb = [1,2,3]\n[x for x in zip(a,b)]\n</pre> a = ['a','b','c'] b = [1,2,3] [x for x in zip(a,b)] Out[42]: <pre>[('a', 1), ('b', 2), ('c', 3)]</pre> In\u00a0[43]: Copied! <pre>c = [0.1,0.2]\n[x for x in zip(a,b,c)]\n</pre> c = [0.1,0.2] [x for x in zip(a,b,c)] Out[43]: <pre>[('a', 1, 0.1), ('b', 2, 0.2)]</pre> In\u00a0[45]: Copied! <pre>books= ['Java','Python','C++']\nprices = [79,69,89]\nfor book,price in zip(books,prices):\n    print('%s is %d dollars' %(book,price))\n</pre> books= ['Java','Python','C++'] prices = [79,69,89] for book,price in zip(books,prices):     print('%s is %d dollars' %(book,price)) <pre>Java is 79 dollars\nPython is 69 dollars\nC++ is 89 dollars\n</pre> In\u00a0[46]: Copied! <pre>a = range(10)\n[x for x in reversed(a)]\n</pre> a = range(10) [x for x in reversed(a)] Out[46]: <pre>[9, 8, 7, 6, 5, 4, 3, 2, 1, 0]</pre> In\u00a0[47]: Copied! <pre>[x for x in sorted(a,reverse=True)]\n</pre> [x for x in sorted(a,reverse=True)] Out[47]: <pre>[9, 8, 7, 6, 5, 4, 3, 2, 1, 0]</pre> In\u00a0[48]: Copied! <pre>for i in range(0,10):\n    print('i is:',i)\n    if i == 2:\n        break\n</pre> for i in range(0,10):     print('i is:',i)     if i == 2:         break <pre>i is: 0\ni is: 1\ni is: 2\n</pre> In\u00a0[49]: Copied! <pre>for i in range(0,10):\n    print('i is:',i)\n    if i == 2:\n        break\n    else:\n        print('Get into else part')\n</pre> for i in range(0,10):     print('i is:',i)     if i == 2:         break     else:         print('Get into else part') <pre>i is: 0\nGet into else part\ni is: 1\nGet into else part\ni is: 2\n</pre> In\u00a0[51]: Copied! <pre>for i in range(0,5):\n    for j in range(0,3):\n        print('i is %d, j is %d' %(i,j))\n        if j == 1:\n            break\n</pre> for i in range(0,5):     for j in range(0,3):         print('i is %d, j is %d' %(i,j))         if j == 1:             break <pre>i is 0, j is 0\ni is 0, j is 1\ni is 1, j is 0\ni is 1, j is 1\ni is 2, j is 0\ni is 2, j is 1\ni is 3, j is 0\ni is 3, j is 1\ni is 4, j is 0\ni is 4, j is 1\n</pre> In\u00a0[52]: Copied! <pre>for i in range(0,3):\n    print('i is', i)\n    if i == 1:\n        continue\n    print('This part would be ignored')\n</pre> for i in range(0,3):     print('i is', i)     if i == 1:         continue     print('This part would be ignored') <pre>i is 0\nThis part would be ignored\ni is 1\ni is 2\nThis part would be ignored\n</pre> In\u00a0[53]: Copied! <pre>def test():\n    for i in range(10):\n        for j in range(10):\n            print('i is %d, j is %d'%(i,j))\n            if j == 1:\n                return\n            print('This part won\\'t work!')\ntest()\n</pre> def test():     for i in range(10):         for j in range(10):             print('i is %d, j is %d'%(i,j))             if j == 1:                 return             print('This part won\\'t work!') test() <pre>i is 0, j is 0\nThis part won't work!\ni is 0, j is 1\n</pre>"},{"location":"Ch4-WorkflowControl/Loop_Statement/#loop-statement","title":"Loop Statement\u00b6","text":"<ul> <li>init_statements</li> <li>test_expression</li> <li>body_statements</li> <li>iteration_statements</li> </ul>"},{"location":"Ch4-WorkflowControl/Loop_Statement/#11-while-loop","title":"1.1 While Loop\u00b6","text":"<ul> <li>Could use <code>while</code> to build a endless loop</li> </ul>"},{"location":"Ch4-WorkflowControl/Loop_Statement/#12-using-while-loop-to-traverse-list-and-tuple","title":"1.2 Using while loop to traverse list and tuple\u00b6","text":""},{"location":"Ch4-WorkflowControl/Loop_Statement/#13-for-in-loop","title":"1.3 <code>for-in</code> Loop\u00b6","text":""},{"location":"Ch4-WorkflowControl/Loop_Statement/#14-using-for-in-to-traverse-list-and-tuple","title":"1.4 Using <code>for-in</code> to traverse list and tuple\u00b6","text":""},{"location":"Ch4-WorkflowControl/Loop_Statement/#15-using-for-in-to-traverse-dictionary","title":"1.5 Using <code>for-in</code> to traverse dictionary\u00b6","text":""},{"location":"Ch4-WorkflowControl/Loop_Statement/#16-using-else","title":"1.6 Using <code>else</code>\u00b6","text":""},{"location":"Ch4-WorkflowControl/Loop_Statement/#17-nested-loop","title":"1.7 Nested Loop\u00b6","text":""},{"location":"Ch4-WorkflowControl/Loop_Statement/#18-for-expression","title":"1.8 <code>for</code> expression\u00b6","text":""},{"location":"Ch4-WorkflowControl/Loop_Statement/#19-convenience-functions","title":"1.9 Convenience functions\u00b6","text":"<ul> <li><code>zip()</code></li> <li><code>reversed()</code></li> <li><code>sorted()</code></li> </ul>"},{"location":"Ch4-WorkflowControl/Loop_Statement/#110-using-break-to-end-loop","title":"1.10 Using <code>break</code> to end loop\u00b6","text":"<p><code>break</code> could only end one level loop within a nested model</p>"},{"location":"Ch4-WorkflowControl/Loop_Statement/#111-using-continue-to-ignore-the-rest-part","title":"1.11 Using <code>continue</code> to ignore the rest part\u00b6","text":""},{"location":"Ch4-WorkflowControl/Loop_Statement/#112-using-return-to-end-loop-within-a-function","title":"1.12 Using <code>return</code> to end loop (within a function)\u00b6","text":""},{"location":"Ch4-WorkflowControl/ifAndAssert/","title":"ifAndAssert","text":"In\u00a0[1]: Copied! <pre>s_age = input('Your age is: ')\nage = int(s_age)\nif age &gt; 20:\n    print('You already greater than 20')\n    print('You may make dicisions on you own in the future')\n</pre> s_age = input('Your age is: ') age = int(s_age) if age &gt; 20:     print('You already greater than 20')     print('You may make dicisions on you own in the future') <pre>Your age is: 22\nYou already greater than 20\nYou may make dicisions on you own in the future\n</pre> In\u00a0[2]: Copied! <pre>s = ''\nif s:\n    print('s is not empty')\nelse:\n    print('s is empty')\n</pre> s = '' if s:     print('s is not empty') else:     print('s is empty') <pre>s is empty\n</pre> In\u00a0[3]: Copied! <pre>my_list = []\nif my_list:\n    print('my_list is not empty')\nelse:\n    print('my_list is empty')\n</pre> my_list = [] if my_list:     print('my_list is not empty') else:     print('my_list is empty') <pre>my_list is empty\n</pre> In\u00a0[4]: Copied! <pre>my_dict = {}\nif my_dict:\n    print('my_dict is not empty')\nelse:\n    print('my_dict is empty')\n</pre> my_dict = {} if my_dict:     print('my_dict is not empty') else:     print('my_dict is empty') <pre>my_dict is empty\n</pre> In\u00a0[5]: Copied! <pre>age = 45\nif age &gt; 20:\n    print('adolescent')\nelif age &gt; 40:\n    print('mid age')\nelif age &gt; 60:\n    print('old')\n</pre> age = 45 if age &gt; 20:     print('adolescent') elif age &gt; 40:     print('mid age') elif age &gt; 60:     print('old') <pre>adolescent\n</pre> <p>The right way is</p> In\u00a0[7]: Copied! <pre>age = 45\nif age &gt; 60:\n    print('old')\nelif age &gt; 40:\n    print('mid age')\nelif age &gt; 20:\n    print('adolescent')\n</pre> age = 45 if age &gt; 60:     print('old') elif age &gt; 40:     print('mid age') elif age &gt; 20:     print('adolescent') <pre>mid age\n</pre> In\u00a0[8]: Copied! <pre>s = input('Please enter a number: ')\ns = int(s)\nif s &gt; 5:\n    print('Larger than 5')\nelif s &lt; 5:\n    pass\nelse:\n    print('Equal to 5')\n</pre> s = input('Please enter a number: ') s = int(s) if s &gt; 5:     print('Larger than 5') elif s &lt; 5:     pass else:     print('Equal to 5') <pre>Please enter a number: 5\nEqual to 5\n</pre> In\u00a0[9]: Copied! <pre>s_age = input('Please enter your age: ')\nage = int(s_age)\nassert 20 &lt; age &lt; 80\nprint('Please enjoy everyday you have!')\n</pre> s_age = input('Please enter your age: ') age = int(s_age) assert 20 &lt; age &lt; 80 print('Please enjoy everyday you have!') <pre>Please enter your age: 25\nPlease enjoy everyday you have!\n</pre> In\u00a0[10]: Copied! <pre>s_age = input('Please enter your age: ')\nage = int(s_age)\nassert 20 &lt; age &lt; 80\nprint('Please enjoy everyday you have!')\n</pre> s_age = input('Please enter your age: ') age = int(s_age) assert 20 &lt; age &lt; 80 print('Please enjoy everyday you have!') <pre>Please enter your age: 15\n</pre> <pre>\n---------------------------------------------------------------------------\nAssertionError                            Traceback (most recent call last)\n&lt;ipython-input-10-7f00a03090ce&gt; in &lt;module&gt;\n      1 s_age = input('Please enter your age: ')\n      2 age = int(s_age)\n----&gt; 3 assert 20 &lt; age &lt; 80\n      4 print('Please enjoy everyday you have!')\n\nAssertionError: </pre>"},{"location":"Ch4-WorkflowControl/ifAndAssert/#if-and-assert","title":"If and Assert\u00b6","text":""},{"location":"Ch4-WorkflowControl/ifAndAssert/#11-usage-of-if","title":"1.1 Usage of if\u00b6","text":"<ul> <li>do not forget indentation</li> <li>careful for using indentation</li> <li>do not forget colon</li> </ul>"},{"location":"Ch4-WorkflowControl/ifAndAssert/#12-condition-types","title":"1.2 Condition Types\u00b6","text":"<ul> <li><code>String</code></li> <li><code>List</code></li> <li><code>Dictionary</code></li> </ul>"},{"location":"Ch4-WorkflowControl/ifAndAssert/#13-logical-error","title":"1.3 Logical Error\u00b6","text":""},{"location":"Ch4-WorkflowControl/ifAndAssert/#14-pass-sentence","title":"1.4 <code>pass</code> sentence\u00b6","text":""},{"location":"Ch4-WorkflowControl/ifAndAssert/#15-assert","title":"1.5 Assert\u00b6","text":"<ul> <li>if the condition get true, the code would keep running, otherwise would raise <code>AssertionError</code></li> </ul>"},{"location":"Ch8-Special-functions/Applications/","title":"Applications","text":"In\u00a0[23]: Copied! <pre>def check_key(key):\n    if not isinstance(key,int): raise TypeError('index must be an integer')\n    if key &lt; 0: raise IndexError('index must be a positive number')\n    if key &gt; 52: raise IndexError('index must less than 52')\n\nsuit_lst = ['\u2663','\u2666','\u2665','\u2660']\nrank_lst = list(range(2,11)) + ['J','Q','K','A']\n\nclass PlayingCards:\n    def __len__(self):\n        return 52    \n    def __getitem__(self,key):\n        check_key(key)\n        suit = suit_lst[key // 13]\n        rank =  rank_lst[key % 13]\n        return suit + str(rank)\n</pre> def check_key(key):     if not isinstance(key,int): raise TypeError('index must be an integer')     if key &lt; 0: raise IndexError('index must be a positive number')     if key &gt; 52: raise IndexError('index must less than 52')  suit_lst = ['\u2663','\u2666','\u2665','\u2660'] rank_lst = list(range(2,11)) + ['J','Q','K','A']  class PlayingCards:     def __len__(self):         return 52         def __getitem__(self,key):         check_key(key)         suit = suit_lst[key // 13]         rank =  rank_lst[key % 13]         return suit + str(rank) In\u00a0[24]: Copied! <pre>pc = PlayingCards()\nfor ele in pc:\n    print(ele,end = ' ')\n</pre> pc = PlayingCards() for ele in pc:     print(ele,end = ' ') <pre>\u26632 \u26633 \u26634 \u26635 \u26636 \u26637 \u26638 \u26639 \u266310 \u2663J \u2663Q \u2663K \u2663A \u26662 \u26663 \u26664 \u26665 \u26666 \u26667 \u26668 \u26669 \u266610 \u2666J \u2666Q \u2666K \u2666A \u26652 \u26653 \u26654 \u26655 \u26656 \u26657 \u26658 \u26659 \u266510 \u2665J \u2665Q \u2665K \u2665A \u26602 \u26603 \u26604 \u26605 \u26606 \u26607 \u26608 \u26609 \u266010 \u2660J \u2660Q \u2660K \u2660A </pre> In\u00a0[25]: Copied! <pre>class summation:\n    def __init__(self,len):\n        self.sum = 0\n        self.first = 1\n        self.__len = len\n    def __next__(self):\n        if self.__len == 0:\n            raise StopIteration\n        self.sum,self.first = self.sum + self.first, self.first + 1\n        self.__len -= 1\n        return self.sum\n    def __iter__(self):\n        return self\n    \nsumm = summation(20)\nfor ele in summ:\n    print(ele, end = ' ')\n</pre> class summation:     def __init__(self,len):         self.sum = 0         self.first = 1         self.__len = len     def __next__(self):         if self.__len == 0:             raise StopIteration         self.sum,self.first = self.sum + self.first, self.first + 1         self.__len -= 1         return self.sum     def __iter__(self):         return self      summ = summation(20) for ele in summ:     print(ele, end = ' ') <pre>1 3 6 10 15 21 28 36 45 55 66 78 91 105 120 136 153 171 190 210 </pre> In\u00a0[26]: Copied! <pre>def factorial(length):\n    factorial = 1\n    for i in range(1,length):\n        factorial = factorial * i\n        yield factorial\n        \nt = factorial(10)\nprint(next(t))\nfor ele in t:\n    print(ele,end = ' ')\n</pre> def factorial(length):     factorial = 1     for i in range(1,length):         factorial = factorial * i         yield factorial          t = factorial(10) print(next(t)) for ele in t:     print(ele,end = ' ') <pre>1\n2 6 24 120 720 5040 40320 362880 </pre>"},{"location":"Ch8-Special-functions/Applications/#applications","title":"Applications\u00b6","text":""},{"location":"Ch8-Special-functions/Applications/#1-52-cards-deck","title":"1. 52 cards deck\u00b6","text":"<p>It includes thirteen ranks in each of the four French suits:</p> <ul> <li>Clubs (\u2663)</li> <li>Diamonds (\u2666)</li> <li>Hearts (\u2665)</li> <li>Spades (\u2660)</li> </ul>"},{"location":"Ch8-Special-functions/Applications/#2-summation-iterator","title":"2. Summation iterator\u00b6","text":"<ul> <li>Return $1,1+2,1+2+3....$</li> </ul>"},{"location":"Ch8-Special-functions/Applications/#3-factorial-generator","title":"3. Factorial generator\u00b6","text":"<ul> <li>Return $1!,2!,3!,...,n!$</li> </ul>"},{"location":"Ch8-Special-functions/Magic-Methods/","title":"Magic Methods","text":"In\u00a0[1]: Copied! <pre>class Item:\n    def __init__(self,name,price):\n        self.name = name\n        self.price = price\n        \n# Create Item\nim = Item('Mouse',29.8)\nprint(im)\nprint(im.__repr__)\n</pre> class Item:     def __init__(self,name,price):         self.name = name         self.price = price          # Create Item im = Item('Mouse',29.8) print(im) print(im.__repr__) <pre>&lt;__main__.Item object at 0x00000241FE97AA48&gt;\n&lt;method-wrapper '__repr__' of Item object at 0x00000241FE97AA48&gt;\n</pre> In\u00a0[3]: Copied! <pre>class Apple:\n    # constructor\n    def __init__(self,color,weight):\n        self.color = color\n        self.weight = weight\n    # re-write __repr__()\n    def __repr__(self):\n        return 'Apple[color = '+ self.color + ',weight =' + str(self.weight) + ']'\n\na = Apple('red',5.65)\nprint(a)\n</pre> class Apple:     # constructor     def __init__(self,color,weight):         self.color = color         self.weight = weight     # re-write __repr__()     def __repr__(self):         return 'Apple[color = '+ self.color + ',weight =' + str(self.weight) + ']'  a = Apple('red',5.65) print(a) <pre>Apple[color = red,weight =5.65]\n</pre> In\u00a0[4]: Copied! <pre>class Item:\n    def __init__(self,name,price):\n        self.name = name\n        self.price = price\n    def __del__(self):\n        print('Delete Object!')\nim = Item('mouse',29.8)\nx = im\ndel im\nprint('----------')\n</pre> class Item:     def __init__(self,name,price):         self.name = name         self.price = price     def __del__(self):         print('Delete Object!') im = Item('mouse',29.8) x = im del im print('----------') <pre>----------\n</pre> <p>Since <code>x</code> also refers to object <code>im</code> , so the <code>del im</code> would not call the <code>__del__()</code></p> In\u00a0[5]: Copied! <pre>class Item:\n    def __init__(self,name,price):\n        self.name = name\n        self.price = price\n    def __del__(self):\n        print('Delete Object!')\nim = Item('mouse',29.8)\nx = im\n# del im\nprint('----------')\n</pre> class Item:     def __init__(self,name,price):         self.name = name         self.price = price     def __del__(self):         print('Delete Object!') im = Item('mouse',29.8) x = im # del im print('----------') <pre>Delete Object!\n----------\n</pre> In\u00a0[6]: Copied! <pre>del x\n</pre> del x In\u00a0[10]: Copied! <pre>class Item:\n    def __init__(self,name,price):\n        self.name = name\n        self.price = price\n\nim = Item('mouse',29.8)\nprint(im.__dir__())\nprint(dir(im))\n</pre> class Item:     def __init__(self,name,price):         self.name = name         self.price = price  im = Item('mouse',29.8) print(im.__dir__()) print(dir(im)) <pre>['name', 'price', '__module__', '__init__', '__dict__', '__weakref__', '__doc__', '__repr__', '__hash__', '__str__', '__getattribute__', '__setattr__', '__delattr__', '__lt__', '__le__', '__eq__', '__ne__', '__gt__', '__ge__', '__new__', '__reduce_ex__', '__reduce__', '__subclasshook__', '__init_subclass__', '__format__', '__sizeof__', '__dir__', '__class__']\n['__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', 'name', 'price']\n</pre> In\u00a0[12]: Copied! <pre>print(im.__dict__['name'])\nprint(im.__dict__['price'])\nim.__dict__['name']  = 'keyboard'\nim.__dict__['price'] = 32.8\nprint(im.name)\nprint(im.price)\n</pre> print(im.__dict__['name']) print(im.__dict__['price']) im.__dict__['name']  = 'keyboard' im.__dict__['price'] = 32.8 print(im.name) print(im.price) <pre>mouse\n29.8\nkeyboard\n32.8\n</pre> In\u00a0[15]: Copied! <pre>class Rectangle:\n    def __init__(self,width,height):\n        self.width = width\n        self.height = height\n    def __setattr__(self,name,value):\n        print('----set %s property----' % name)\n        if name == 'size':\n            self.width,self.height = value\n        else:\n            self.__dict__[name] = value\n    def __getattr__(self,name):\n        print('----read %s property----' % name)\n        if name == 'size':\n            return self.width, self.height\n        else:\n            raise AttributeError\n    def __delattr__(self,name):\n        print('----delte %s property' %name)\n        if name == 'size':\n            self.__dict__['width'] = 0\n            self.__dict__['height'] = 0\n            \nrect = Rectangle(3,4)\nprint(rect.size)\nrect.size = 6,8\nprint(rect.width)\ndel rect.size\nprint(rect.size)\n</pre> class Rectangle:     def __init__(self,width,height):         self.width = width         self.height = height     def __setattr__(self,name,value):         print('----set %s property----' % name)         if name == 'size':             self.width,self.height = value         else:             self.__dict__[name] = value     def __getattr__(self,name):         print('----read %s property----' % name)         if name == 'size':             return self.width, self.height         else:             raise AttributeError     def __delattr__(self,name):         print('----delte %s property' %name)         if name == 'size':             self.__dict__['width'] = 0             self.__dict__['height'] = 0              rect = Rectangle(3,4) print(rect.size) rect.size = 6,8 print(rect.width) del rect.size print(rect.size) <pre>----set width property----\n----set height property----\n----read size property----\n(3, 4)\n----set size property----\n----set width property----\n----set height property----\n6\n----delte size property\n----read size property----\n(0, 0)\n</pre> <p>Those methods is very useful for checking the legality of input</p> In\u00a0[18]: Copied! <pre>class User:\n    def __init__(self,name,age):\n        self.name = name\n        self.age = age\n    def __setattr__(self,name,value):\n        # check the input\n        if name == 'name':\n            if 2 &lt; len(value) &lt;= 8:\n                self.__dict__['name'] = value\n            else:\n                raise ValueError('the length of name must between 2~8')\n        elif name == 'age':\n            if 10&lt; value &lt;60:\n                self.__dict__['age'] = value\n            else:\n                raise ValueError('age must between 10~60')\n                    \nu = User('fkit',24)\nprint(u.name)\nprint(u.age)\nu.age = 65\n</pre> class User:     def __init__(self,name,age):         self.name = name         self.age = age     def __setattr__(self,name,value):         # check the input         if name == 'name':             if 2 &lt; len(value) &lt;= 8:                 self.__dict__['name'] = value             else:                 raise ValueError('the length of name must between 2~8')         elif name == 'age':             if 10&lt; value &lt;60:                 self.__dict__['age'] = value             else:                 raise ValueError('age must between 10~60')                      u = User('fkit',24) print(u.name) print(u.age) u.age = 65 <pre>fkit\n24\n</pre> <pre>\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n&lt;ipython-input-18-3b76f5fdf3ba&gt; in &lt;module&gt;\n     19 print(u.name)\n     20 print(u.age)\n---&gt; 21 u.age = 65\n\n&lt;ipython-input-18-3b76f5fdf3ba&gt; in __setattr__(self, name, value)\n     14                 self.__dict__['age'] = value\n     15             else:\n---&gt; 16                 raise ValueError('age must between 10~60')\n     17 \n     18 u = User('fkit',24)\n\nValueError: age must between 10~60</pre> In\u00a0[6]: Copied! <pre>class User:\n    def __init__(self,name,password):\n        self.name = name\n        self.password = password\n    def validLogin(self):\n        print('Verify the indentity of %s' %self.name)\n\nu = User('yyl','admin')\nprint(hasattr(u.name,'__call__'))\nprint(hasattr(u.validLogin,'__call__'))\n</pre> class User:     def __init__(self,name,password):         self.name = name         self.password = password     def validLogin(self):         print('Verify the indentity of %s' %self.name)  u = User('yyl','admin') print(hasattr(u.name,'__call__')) print(hasattr(u.validLogin,'__call__')) <pre>False\nTrue\n</pre> In\u00a0[7]: Copied! <pre>u.validLogin()\nu.validLogin.__call__()\n</pre> u.validLogin() u.validLogin.__call__() <pre>Verify the indentity of yyl\nVerify the indentity of yyl\n</pre> In\u00a0[3]: Copied! <pre>class Comment:\n    def __init__(self,detail,view_times):\n        self.detail = detail\n        self.view_times = view_times\n    def info():\n        print('This is a comment, content is %s' %self.detail)\n        \nc = Comment('Crazy Python sold out!',20)\n\n# Check if has the following properties\nprint(hasattr(c,'detail'))\nprint(hasattr(c,'info'))\nprint(hasattr(c,'author'))\n\n# Get the value of properties\nprint(getattr(c,'detail'))\nprint(getattr(c,'view_times'))\n\n# Set the value to properties\nsetattr(c,'detail','Good weather')\nprint(c.detail)\n</pre> class Comment:     def __init__(self,detail,view_times):         self.detail = detail         self.view_times = view_times     def info():         print('This is a comment, content is %s' %self.detail)          c = Comment('Crazy Python sold out!',20)  # Check if has the following properties print(hasattr(c,'detail')) print(hasattr(c,'info')) print(hasattr(c,'author'))  # Get the value of properties print(getattr(c,'detail')) print(getattr(c,'view_times'))  # Set the value to properties setattr(c,'detail','Good weather') print(c.detail) <pre>True\nTrue\nFalse\nCrazy Python sold out!\n20\nGood weather\n</pre> <p>Add addtional Properties</p> In\u00a0[5]: Copied! <pre>c.test = 'new property'\nprint(c.test)\n</pre> c.test = 'new property' print(c.test) <pre>new property\n</pre>"},{"location":"Ch8-Special-functions/Magic-Methods/#magic-methods","title":"Magic-Methods\u00b6","text":""},{"location":"Ch8-Special-functions/Magic-Methods/#1-common-magic-methods","title":"1. Common Magic-Methods\u00b6","text":""},{"location":"Ch8-Special-functions/Magic-Methods/#11-__repr__","title":"1.1 <code>__repr__</code>\u00b6","text":"<ul> <li>If you use <code>print()</code> functions to call an object, it would call it's <code>__repr__()</code></li> <li><code>__repr__</code> returns <code>class name + object at memory address</code></li> <li>rewrite <code>__repr__</code> as <code>class name[field1 = xxx, field2 = xxx,...]</code></li> </ul>"},{"location":"Ch8-Special-functions/Magic-Methods/#12-destructor-__del__","title":"1.2 Destructor <code>__del__</code>\u00b6","text":"<ul> <li>for the opposite of <code>__init__()</code>, <code>__del__</code> using for destroy an object</li> <li>when you do not need an object anymore, please use it to do the Garbage Collector(GC)</li> </ul>"},{"location":"Ch8-Special-functions/Magic-Methods/#13-__dir__","title":"1.3 <code>__dir__()</code>\u00b6","text":"<ul> <li>It is similar to <code>dir(object)</code></li> </ul>"},{"location":"Ch8-Special-functions/Magic-Methods/#14-__dict__","title":"1.4 <code>__dict__</code>\u00b6","text":"<ul> <li><code>__dict__</code> is using for check all the variables and their value within an object, and return them as a dict</li> </ul>"},{"location":"Ch8-Special-functions/Magic-Methods/#15-__getattr__-and-__setattr__-etc","title":"1.5 <code>__getattr__</code> and <code>__setattr__</code>, etc.\u00b6","text":"<p>For manipulating(access, set, delete) the properties of an object, Python would call the following functions:</p> <ul> <li><code>__getattribute__(self,name)</code> : when access a property</li> <li><code>__getattr__(self,name)</code> : call a property but do not exist, So it is only for some Synthetic attributes</li> <li><code>__setattr__(self,name,value)</code> : set a value of a property</li> <li><code>__delattr__(self,name)</code> : delete a property</li> </ul>"},{"location":"Ch8-Special-functions/Magic-Methods/#16-__call__","title":"1.6 <code>__call__</code>\u00b6","text":"<ul> <li>Use <code>__call__</code> to determine if it is a property or method</li> </ul>"},{"location":"Ch8-Special-functions/Magic-Methods/#2-dynamic-programming","title":"2. Dynamic Programming\u00b6","text":""},{"location":"Ch8-Special-functions/Sequence-related-methods/","title":"Sequence related methods","text":"In\u00a0[1]: Copied! <pre>def check_key(key):\n    '''\n    This method using for checking if the input index(key) is integer or not, if not, raise a TypeError\n    and the value could not be negative, otherwise raise a IndexError    \n    '''\n    if not isinstance(key,int): raise TypeError('index must be an integer')\n    if key &lt;0 : raise IndexError('index must be a positive number')\n        \nclass StringSeq:\n    def __init__(self):\n        self.__changed = {}\n        self.__deleted = {}\n    def __len__(self):\n        return 26 ** 3\n    def __getitem__(self,key):\n        '''\n        get the element from a list\n        '''\n        check_key(key)\n        if key in self.__changed:\n            return self.__changed[key]\n        if key in self.__deleted:\n            return None\n        three = key // (26 * 26)\n        two = (key - three * 26 * 26) // 26\n        one = key % 26\n        return chr(65 + three) + chr(65 + two) + chr(65 +one)\n    def __setitem__(self,key,value):\n        check_key(key)\n        self.__changed[key] = value\n    def __delitem__(self,key):\n        check_key(key)\n        if key not in self.__deleted: self.__deleted.append(key)\n        if key in self.__changed: del self.__changed[key]\n</pre> def check_key(key):     '''     This method using for checking if the input index(key) is integer or not, if not, raise a TypeError     and the value could not be negative, otherwise raise a IndexError         '''     if not isinstance(key,int): raise TypeError('index must be an integer')     if key &lt;0 : raise IndexError('index must be a positive number')          class StringSeq:     def __init__(self):         self.__changed = {}         self.__deleted = {}     def __len__(self):         return 26 ** 3     def __getitem__(self,key):         '''         get the element from a list         '''         check_key(key)         if key in self.__changed:             return self.__changed[key]         if key in self.__deleted:             return None         three = key // (26 * 26)         two = (key - three * 26 * 26) // 26         one = key % 26         return chr(65 + three) + chr(65 + two) + chr(65 +one)     def __setitem__(self,key,value):         check_key(key)         self.__changed[key] = value     def __delitem__(self,key):         check_key(key)         if key not in self.__deleted: self.__deleted.append(key)         if key in self.__changed: del self.__changed[key] In\u00a0[2]: Copied! <pre>sq = StringSeq()\nprint(len(sq))\nprint(sq[26*26])\nprint(sq[1])\nsq[1] = 'Python'\nprint(sq[1])\n</pre> sq = StringSeq() print(len(sq)) print(sq[26*26]) print(sq[1]) sq[1] = 'Python' print(sq[1]) <pre>17576\nBAA\nAAB\nPython\n</pre> In\u00a0[3]: Copied! <pre>class Fibs:\n    def __init__(self,len):\n        self.first = 0\n        self.sec = 1\n        self.__len = len\n    def __next__(self):\n        if self.__len == 0:\n            raise StopIteration\n        self.first, self.sec = self.sec, self.first + self.sec\n        self.__len -=1\n        return self.first\n    def __iter__(self):\n        return self\n    \nfibs = Fibs(10)\nprint(next(fibs))\nfor el in fibs:\n    print(el,end= ' ')\n</pre> class Fibs:     def __init__(self,len):         self.first = 0         self.sec = 1         self.__len = len     def __next__(self):         if self.__len == 0:             raise StopIteration         self.first, self.sec = self.sec, self.first + self.sec         self.__len -=1         return self.first     def __iter__(self):         return self      fibs = Fibs(10) print(next(fibs)) for el in fibs:     print(el,end= ' ') <pre>1\n1 2 3 5 8 13 21 34 55 </pre> In\u00a0[4]: Copied! <pre>def test(val,step):\n    print('----function excute!----')\n    cur = 0\n    for i in range(val):\n        cur += i * step\n        yield cur\n\nt = test(10,2)\nprint('============')\nprint(next(t))\nprint(next(t))\n</pre> def test(val,step):     print('----function excute!----')     cur = 0     for i in range(val):         cur += i * step         yield cur  t = test(10,2) print('============') print(next(t)) print(next(t)) <pre>============\n----function excute!----\n0\n2\n</pre> In\u00a0[5]: Copied! <pre>for ele in t:\n    print(ele,end = ' ')\n</pre> for ele in t:     print(ele,end = ' ') <pre>6 12 20 30 42 56 72 90 </pre> In\u00a0[6]: Copied! <pre>t = test(10,1)\nprint(list(t))\nt = test(10,3)\nprint(tuple(t))\n</pre> t = test(10,1) print(list(t)) t = test(10,3) print(tuple(t)) <pre>----function excute!----\n[0, 1, 3, 6, 10, 15, 21, 28, 36, 45]\n----function excute!----\n(0, 3, 9, 18, 30, 45, 63, 84, 108, 135)\n</pre> In\u00a0[9]: Copied! <pre>def square_gen(val):\n    i = 0\n    out_val = None\n    while True:\n        out_val = (yield out_val ** 2) if out_val is not None else (yield i ** 2)\n        if out_val is not None : print('====%d' %out_val)\n        i+= 1\n        \nsg = square_gen(5)\n# first time use send() method to get the value, must send None\nprint(sg.send(None))\nprint(next(sg))\nprint('----------')\nprint(sg.send(9))\nprint(next(sg))\nprint(next(sg))\n</pre> def square_gen(val):     i = 0     out_val = None     while True:         out_val = (yield out_val ** 2) if out_val is not None else (yield i ** 2)         if out_val is not None : print('====%d' %out_val)         i+= 1          sg = square_gen(5) # first time use send() method to get the value, must send None print(sg.send(None)) print(next(sg)) print('----------') print(sg.send(9)) print(next(sg)) print(next(sg)) <pre>0\n1\n----------\n====9\n81\n9\n16\n</pre> In\u00a0[14]: Copied! <pre>sg.throw(ValueError,'This is a ValueError')\n</pre> sg.throw(ValueError,'This is a ValueError') <pre>\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n&lt;ipython-input-14-96274c555b61&gt; in &lt;module&gt;\n----&gt; 1 sg.throw(ValueError,'This is a ValueError')\n\nValueError: This is a ValueError</pre> In\u00a0[15]: Copied! <pre>sg.close()\nnext(sg)\n</pre> sg.close() next(sg) <pre>\n---------------------------------------------------------------------------\nStopIteration                             Traceback (most recent call last)\n&lt;ipython-input-15-7d2cfcf3d23f&gt; in &lt;module&gt;\n      1 sg.close()\n----&gt; 2 next(sg)\n\nStopIteration: </pre>"},{"location":"Ch8-Special-functions/Sequence-related-methods/#seqeunce-related-magic-methods","title":"Seqeunce related magic methods\u00b6","text":"<ul> <li><code>__len__(self)</code>: return the number of elements</li> <li><code>__getitem__(self,key)</code> : return the corresponding element, the key should be an integer or slice object</li> <li><code>__contains__(self,item)</code></li> <li><code>__setitem__(self,key,value)</code></li> <li><code>__delitem__(self,key)</code></li> </ul>"},{"location":"Ch8-Special-functions/Sequence-related-methods/#1-build-a-character-sequence","title":"1. Build a character sequence\u00b6","text":"<ul> <li>elements in this sequence has 3 digits</li> <li>every digits composed with a character from A to Z</li> </ul>"},{"location":"Ch8-Special-functions/Sequence-related-methods/#2-build-a-iterator","title":"2. Build a iterator\u00b6","text":"<ul> <li><code>__iter__(self)</code> : return a iterator, which have to have <code>__next__()</code></li> <li><code>__reversed__(self)</code>: related to <code>reversed()</code></li> <li>Fibonacci numbers:  $f(0)=0, f(1) = 1, f(n) = f(n-1) + f(n-2)$</li> </ul>"},{"location":"Ch8-Special-functions/Sequence-related-methods/#3-build-a-generator","title":"3. Build a generator\u00b6","text":"<ul> <li>Step 1 : Define a function with <code>yield</code> statement</li> <li>Step 2 : Use this function to create a constructor</li> </ul>"},{"location":"Ch8-Special-functions/Sequence-related-methods/#yield-is-very-similar-to-return","title":"<code>yield</code> is very similar to <code>return</code>\u00b6","text":""},{"location":"Ch8-Special-functions/Sequence-related-methods/#4-generator-related-methods","title":"4. Generator related methods\u00b6","text":"<ul> <li>Within a generator, we could use <code>yield</code> statement to receive data</li> <li>The outside program could use <code>send()</code> to send data when <code>yield</code> in <code>if</code> statement, only work for one side</li> </ul>"},{"location":"Ch8-Special-functions/Sequence-related-methods/#generator-also-provide-two-common-methods","title":"Generator also provide two common methods\u00b6","text":"<ul> <li><code>close()</code></li> <li><code>throw()</code>: raise a error</li> </ul>"},{"location":"Ch9-Module/Module/","title":"Module","text":"In\u00a0[1]: Copied! <pre>import sys as s\nprint(s.argv[0])\n</pre> import sys as s print(s.argv[0]) <pre>E:\\Anaconda\\envs\\tf-gpu\\lib\\site-packages\\ipykernel_launcher.py\n</pre> In\u00a0[5]: Copied! <pre>import sys as s,os as o\nprint(s.argv[0])\nprint(o.pardir)\n</pre> import sys as s,os as o print(s.argv[0]) print(o.pardir) <pre>E:\\Anaconda\\envs\\tf-gpu\\lib\\site-packages\\ipykernel_launcher.py\n..\n</pre> In\u00a0[6]: Copied! <pre>from sys import argv as v\nprint(v[0])\n</pre> from sys import argv as v print(v[0]) <pre>E:\\Anaconda\\envs\\tf-gpu\\lib\\site-packages\\ipykernel_launcher.py\n</pre> In\u00a0[8]: Copied! <pre>import sys, pprint\nprint(sys.path)\n</pre> import sys, pprint print(sys.path) <pre>['G:\\\\Books\\\\Crazy_Python\\\\Module', 'E:\\\\Anaconda\\\\envs\\\\tf-gpu\\\\python37.zip', 'E:\\\\Anaconda\\\\envs\\\\tf-gpu\\\\DLLs', 'E:\\\\Anaconda\\\\envs\\\\tf-gpu\\\\lib', 'E:\\\\Anaconda\\\\envs\\\\tf-gpu', '', 'E:\\\\Anaconda\\\\envs\\\\tf-gpu\\\\lib\\\\site-packages', 'E:\\\\Anaconda\\\\envs\\\\tf-gpu\\\\lib\\\\site-packages\\\\win32', 'E:\\\\Anaconda\\\\envs\\\\tf-gpu\\\\lib\\\\site-packages\\\\win32\\\\lib', 'E:\\\\Anaconda\\\\envs\\\\tf-gpu\\\\lib\\\\site-packages\\\\Pythonwin', 'E:\\\\Anaconda\\\\envs\\\\tf-gpu\\\\lib\\\\site-packages\\\\IPython\\\\extensions', 'C:\\\\Users\\\\yyang\\\\.ipython']\n</pre> In\u00a0[9]: Copied! <pre>pprint.pprint(sys.path)\n</pre> pprint.pprint(sys.path) <pre>['G:\\\\Books\\\\Crazy_Python\\\\Module',\n 'E:\\\\Anaconda\\\\envs\\\\tf-gpu\\\\python37.zip',\n 'E:\\\\Anaconda\\\\envs\\\\tf-gpu\\\\DLLs',\n 'E:\\\\Anaconda\\\\envs\\\\tf-gpu\\\\lib',\n 'E:\\\\Anaconda\\\\envs\\\\tf-gpu',\n '',\n 'E:\\\\Anaconda\\\\envs\\\\tf-gpu\\\\lib\\\\site-packages',\n 'E:\\\\Anaconda\\\\envs\\\\tf-gpu\\\\lib\\\\site-packages\\\\win32',\n 'E:\\\\Anaconda\\\\envs\\\\tf-gpu\\\\lib\\\\site-packages\\\\win32\\\\lib',\n 'E:\\\\Anaconda\\\\envs\\\\tf-gpu\\\\lib\\\\site-packages\\\\Pythonwin',\n 'E:\\\\Anaconda\\\\envs\\\\tf-gpu\\\\lib\\\\site-packages\\\\IPython\\\\extensions',\n 'C:\\\\Users\\\\yyang\\\\.ipython']\n</pre> <p>A module should look like</p> In\u00a0[12]: Copied! <pre>\"\"\"\nA module test, including\nmy_list: store list variable\nprint_triangle: use '*' to form a triangle \n\"\"\"\n\nmy_list = ['Python','Kotlin','Swift']\n\ndef print_triangle(n):\n    '''Print triangle formed with star'''\n    if n &lt; 0:\n        raise ValueError('n must larger than 0')\n    for i in range(n):\n        print(' ' * (n - i - 1), end = '')\n        print('*' * (2 * i + 1), end = '')\n        print('')\n        \n# ===== following is testing scripts =====\n\ndef test_print_triangle():\n    print_triangle(3)\n    print_triangle(7)\n    \n# if __name___ == '__main__':\n#     test_print_triangle()\n</pre> \"\"\" A module test, including my_list: store list variable print_triangle: use '*' to form a triangle  \"\"\"  my_list = ['Python','Kotlin','Swift']  def print_triangle(n):     '''Print triangle formed with star'''     if n &lt; 0:         raise ValueError('n must larger than 0')     for i in range(n):         print(' ' * (n - i - 1), end = '')         print('*' * (2 * i + 1), end = '')         print('')          # ===== following is testing scripts =====  def test_print_triangle():     print_triangle(3)     print_triangle(7)      # if __name___ == '__main__': #     test_print_triangle() <p>Use <code>__doc__</code> to see the descrition in modules</p> In\u00a0[13]: Copied! <pre>print(sys.__doc__)\n</pre> print(sys.__doc__) <pre>This module provides access to some objects used or maintained by the\ninterpreter and to functions that interact strongly with the interpreter.\n\nDynamic objects:\n\nargv -- command line arguments; argv[0] is the script pathname if known\npath -- module search path; path[0] is the script directory, else ''\nmodules -- dictionary of loaded modules\n\ndisplayhook -- called to show results in an interactive session\nexcepthook -- called to handle any uncaught exception other than SystemExit\n  To customize printing in an interactive session or to install a custom\n  top-level exception handler, assign other functions to replace these.\n\nstdin -- standard input file object; used by input()\nstdout -- standard output file object; used by print()\nstderr -- standard error object; used for error messages\n  By assigning other file objects (or objects that behave like files)\n  to these, it is possible to redirect all of the interpreter's I/O.\n\nlast_type -- type of last uncaught exception\nlast_value -- value of last uncaught exception\nlast_traceback -- traceback of last uncaught exception\n  These three are only available in an interactive session after a\n  traceback has been printed.\n\nStatic objects:\n\nbuiltin_module_names -- tuple of module names built into this interpreter\ncopyright -- copyright notice pertaining to this interpreter\nexec_prefix -- prefix used to find the machine-specific Python library\nexecutable -- absolute path of the executable binary of the Python interpreter\nfloat_info -- a named tuple with information about the float implementation.\nfloat_repr_style -- string indicating the style of repr() output for floats\nhash_info -- a named tuple with information about the hash algorithm.\nhexversion -- version information encoded as a single integer\nimplementation -- Python implementation information.\nint_info -- a named tuple with information about the int implementation.\nmaxsize -- the largest supported length of containers.\nmaxunicode -- the value of the largest Unicode code point\nplatform -- platform identifier\nprefix -- prefix used to find the Python library\nthread_info -- a named tuple with information about the thread implementation.\nversion -- the version of this interpreter as a string\nversion_info -- version information as a named tuple\ndllhandle -- [Windows only] integer handle of the Python DLL\nwinver -- [Windows only] version number of the Python DLL\n_enablelegacywindowsfsencoding -- [Windows only] \n__stdin__ -- the original stdin; don't touch!\n__stdout__ -- the original stdout; don't touch!\n__stderr__ -- the original stderr; don't touch!\n__displayhook__ -- the original displayhook; don't touch!\n__excepthook__ -- the original excepthook; don't touch!\n\nFunctions:\n\ndisplayhook() -- print an object to the screen, and save it in builtins._\nexcepthook() -- print an exception and its traceback to sys.stderr\nexc_info() -- return thread-safe information about the current exception\nexit() -- exit the interpreter by raising SystemExit\ngetdlopenflags() -- returns flags to be used for dlopen() calls\ngetprofile() -- get the global profiling function\ngetrefcount() -- return the reference count for an object (plus one :-)\ngetrecursionlimit() -- return the max recursion depth for the interpreter\ngetsizeof() -- return the size of an object in bytes\ngettrace() -- get the global debug tracing function\nsetcheckinterval() -- control how often the interpreter checks for events\nsetdlopenflags() -- set the flags to be used for dlopen() calls\nsetprofile() -- set the global profiling function\nsetrecursionlimit() -- set the max recursion depth for the interpreter\nsettrace() -- set the global debug tracing function\n\n</pre> In\u00a0[14]: Copied! <pre>from all_module import *\nhello()\nworld()\n</pre> from all_module import * hello() world() <pre>Hello, Python\nPython World is funny\n</pre> In\u00a0[15]: Copied! <pre>#Since test not in __all__ list\ntest()\n</pre> #Since test not in __all__ list test() <pre>\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\n&lt;ipython-input-15-2a1f9b456c9b&gt; in &lt;module&gt;\n      1 #Since test not in __all__ list\n----&gt; 2 test()\n\nNameError: name 'test' is not defined</pre> In\u00a0[17]: Copied! <pre>import fk_package\nimport fk_package.arithmetic_chart\nfrom fk_package import billing\n\nim = billing.Item(4.5)\nprint(im)\nfk_package.arithmetic_chart.print_multiple_chart(9)\n</pre> import fk_package import fk_package.arithmetic_chart from fk_package import billing  im = billing.Item(4.5) print(im) fk_package.arithmetic_chart.print_multiple_chart(9) <pre>Item[price = 4.5]\n1 * 1 =  1  \n1 * 2 =  2  2 * 2 =  4  \n1 * 3 =  3  2 * 3 =  6  3 * 3 =  9  \n1 * 4 =  4  2 * 4 =  8  3 * 4 = 12  4 * 4 = 16  \n1 * 5 =  5  2 * 5 = 10  3 * 5 = 15  4 * 5 = 20  5 * 5 = 25  \n1 * 6 =  6  2 * 6 = 12  3 * 6 = 18  4 * 6 = 24  5 * 6 = 30  6 * 6 = 36  \n1 * 7 =  7  2 * 7 = 14  3 * 7 = 21  4 * 7 = 28  5 * 7 = 35  6 * 7 = 42  7 * 7 = 49  \n1 * 8 =  8  2 * 8 = 16  3 * 8 = 24  4 * 8 = 32  5 * 8 = 40  6 * 8 = 48  7 * 8 = 56  8 * 8 = 64  \n1 * 9 =  9  2 * 9 = 18  3 * 9 = 27  4 * 9 = 36  5 * 9 = 45  6 * 9 = 54  7 * 9 = 63  8 * 9 = 72  9 * 9 = 81  \n</pre> <p>Although we import our package successfully,  the module name is too complicated. By changing <code>__init__.py</code> to make them more convenient.</p> <p>The content within <code>__init__.py</code> \"# from fk_package import billing\" from . import billing</p> <p>\"# from fk_package.billing import all\" from .billing import *</p> <p>\"# from fk_package import arithmetic_chart\" from . import arithmetic_chart</p> <p>\"# from fk_package.arithmetic_chart import all\" from .arithmetic_chart import *</p> In\u00a0[25]: Copied! <pre>import string\ndir(string)\n</pre> import string dir(string) Out[25]: <pre>['Formatter',\n 'Template',\n '_ChainMap',\n '_TemplateMetaclass',\n '__all__',\n '__builtins__',\n '__cached__',\n '__doc__',\n '__file__',\n '__loader__',\n '__name__',\n '__package__',\n '__spec__',\n '_re',\n '_string',\n 'ascii_letters',\n 'ascii_lowercase',\n 'ascii_uppercase',\n 'capwords',\n 'digits',\n 'hexdigits',\n 'octdigits',\n 'printable',\n 'punctuation',\n 'whitespace']</pre> <p>Find function do not start with '__' since those functions do not want to be used outside of module</p> In\u00a0[26]: Copied! <pre>[e for e in dir(string) if not e.startswith(\"_\")]\n</pre> [e for e in dir(string) if not e.startswith(\"_\")] Out[26]: <pre>['Formatter',\n 'Template',\n 'ascii_letters',\n 'ascii_lowercase',\n 'ascii_uppercase',\n 'capwords',\n 'digits',\n 'hexdigits',\n 'octdigits',\n 'printable',\n 'punctuation',\n 'whitespace']</pre> In\u00a0[27]: Copied! <pre>string.__all__\n</pre> string.__all__ Out[27]: <pre>['ascii_letters',\n 'ascii_lowercase',\n 'ascii_uppercase',\n 'capwords',\n 'digits',\n 'hexdigits',\n 'octdigits',\n 'printable',\n 'punctuation',\n 'whitespace',\n 'Formatter',\n 'Template']</pre> In\u00a0[28]: Copied! <pre>help(string.capwords)\n</pre> help(string.capwords) <pre>Help on function capwords in module string:\n\ncapwords(s, sep=None)\n    capwords(s [,sep]) -&gt; string\n    \n    Split the argument into words using split, capitalize each\n    word using capitalize, and join the capitalized words using\n    join.  If the optional second argument sep is absent or None,\n    runs of whitespace characters are replaced by a single space\n    and leading and trailing whitespace are removed, otherwise\n    sep is used to split and join the words.\n\n</pre> In\u00a0[31]: Copied! <pre>print(string.capwords.__doc__)\n</pre> print(string.capwords.__doc__) <pre>capwords(s [,sep]) -&gt; string\n\n    Split the argument into words using split, capitalize each\n    word using capitalize, and join the capitalized words using\n    join.  If the optional second argument sep is absent or None,\n    runs of whitespace characters are replaced by a single space\n    and leading and trailing whitespace are removed, otherwise\n    sep is used to split and join the words.\n\n    \n</pre> In\u00a0[29]: Copied! <pre>string.capwords('abc xyz')\n</pre> string.capwords('abc xyz') Out[29]: <pre>'Abc Xyz'</pre> In\u00a0[30]: Copied! <pre>string.capwords('abc xyz',sep= \";\")\n</pre> string.capwords('abc xyz',sep= \";\") Out[30]: <pre>'Abc xyz'</pre> In\u00a0[32]: Copied! <pre>string.__file__\n</pre> string.__file__ Out[32]: <pre>'E:\\\\Anaconda\\\\envs\\\\tf-gpu\\\\lib\\\\string.py'</pre> In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"Ch9-Module/Module/#1-modularize-programming","title":"1. Modularize programming\u00b6","text":""},{"location":"Ch9-Module/Module/#11-import-module","title":"1.1 Import Module\u00b6","text":""},{"location":"Ch9-Module/Module/#12-define-module","title":"1.2 Define Module\u00b6","text":"<p>Any Python file could be imported as a module</p>"},{"location":"Ch9-Module/Module/#13-description-for-modules","title":"1.3 Description for Modules\u00b6","text":"<p>\"\"\" Objective: Function: Class \"\"\" add those description to the first line of module</p>"},{"location":"Ch9-Module/Module/#14-remember-write-test-script-for-modules","title":"1.4 Remember write test script for modules\u00b6","text":"<p>Each class and function should have a corresponding test method. And run those test methods in main() body</p>"},{"location":"Ch9-Module/Module/#2-load-modules","title":"2. Load Modules\u00b6","text":""},{"location":"Ch9-Module/Module/#21-using-system-path","title":"2.1 Using System Path\u00b6","text":"<p>Add the module file direction to your system path</p>"},{"location":"Ch9-Module/Module/#22-using-the-default-module-loading-path","title":"2.2 Using the default module loading path\u00b6","text":"<p><code>sys.path</code> represents the default module loading path for python</p>"},{"location":"Ch9-Module/Module/#23-__all__-parameter","title":"2.3 <code>__all__</code> Parameter\u00b6","text":"<p><code>__all__</code> contains paramter that could be used by other project</p>"},{"location":"Ch9-Module/Module/#3-using-package","title":"3. Using Package\u00b6","text":""},{"location":"Ch9-Module/Module/#31-what-is-package","title":"3.1 What is Package\u00b6","text":"<p>A package is a file folder which contains one <code>__init__.py</code> document, it could contain multiple modules In fact, the package is also a specific module, so within a package, you could also put another package.</p>"},{"location":"Ch9-Module/Module/#32-define-a-package","title":"3.2 Define a Package\u00b6","text":"<p>Define a fk_package, which has the following structure. fk_package:</p> <ul> <li><code>arithmetic_chart.py</code></li> <li><code>billing.py</code></li> <li><code>print_shape.py</code></li> <li><code>__init__.py</code></li> </ul>"},{"location":"Ch9-Module/Module/#33-import-fk_package","title":"3.3 Import <code>fk_package</code>\u00b6","text":""},{"location":"Ch9-Module/Module/#3-content-in-module","title":"3. Content in Module\u00b6","text":""},{"location":"Ch9-Module/Module/#31-how-to-see-what-in-a-module","title":"3.1 How to see what in a module\u00b6","text":"<ul> <li>use <code>dir()</code> function</li> <li>use <code>__all__</code> variable</li> </ul>"},{"location":"Ch9-Module/Module/#32-use-__doc__-to-check-module-information","title":"3.2 Use <code>__doc__</code> to check module information\u00b6","text":""},{"location":"Ch9-Module/Module/#use-__file__-parameter-to-check-module-path","title":"Use <code>__file__</code> parameter to check module path\u00b6","text":""},{"location":"Ch9-Module/all_module/","title":"All module","text":"In\u00a0[\u00a0]: Copied! <pre>'test __all__ parameter in module'\n</pre> 'test __all__ parameter in module' In\u00a0[\u00a0]: Copied! <pre>def hello():\n    print(\"Hello, Python\")\ndef world():\n    print(\"Python World is funny\")\ndef test():\n    print('--test--')\n</pre> def hello():     print(\"Hello, Python\") def world():     print(\"Python World is funny\") def test():     print('--test--') In\u00a0[\u00a0]: Copied! <pre># Define __all__ parameter, default only import hello and world two unit\n__all__ = ['hello','world']\n</pre> # Define __all__ parameter, default only import hello and world two unit __all__ = ['hello','world']"},{"location":"Ch9-Module/fk_package/__init__/","title":"init","text":"<p>from fk_package import billing from . import billing</p> In\u00a0[\u00a0]: Copied! <pre># from fk_package.billing import all\nfrom billing import *\n</pre> # from fk_package.billing import all from billing import * <p>from fk_package import arithmetic_chart from . import arithmetic_chart</p> In\u00a0[\u00a0]: Copied! <pre># from fk_package.arithmetic_chart import all\nfrom arithmetic_chart import *\n</pre> # from fk_package.arithmetic_chart import all from arithmetic_chart import *"},{"location":"Ch9-Module/fk_package/arithmetic_chart/","title":"Arithmetic chart","text":"In\u00a0[\u00a0]: Copied! <pre>def print_multiple_chart(n):\n    'Print the arithmetic chart'\n    for i in range(n):\n        for j in range(i + 1):\n            print('%d * %d = %2d' %((j+1),(i+1),(j+1) * (i+1)), end = '  ')\n        print('')\n</pre> def print_multiple_chart(n):     'Print the arithmetic chart'     for i in range(n):         for j in range(i + 1):             print('%d * %d = %2d' %((j+1),(i+1),(j+1) * (i+1)), end = '  ')         print('') In\u00a0[\u00a0]: Copied! <pre>def test():\n    print_multiple_chart(9)\n</pre> def test():     print_multiple_chart(9) In\u00a0[\u00a0]: Copied! <pre>__all__ = ['print_multiple_chart']\n</pre> __all__ = ['print_multiple_chart'] In\u00a0[\u00a0]: Copied! <pre>if __name__ == '__main__':\n    test()\n</pre> if __name__ == '__main__':     test()"},{"location":"Ch9-Module/fk_package/billing/","title":"Billing","text":"In\u00a0[\u00a0]: Copied! <pre>class Item:\n    'define the item class for representing commodities'\n    def __init__(self,price):\n        self.price = price\n    def __repr__(self):\n        return  'Item[price = %g]' %self.price\n</pre> class Item:     'define the item class for representing commodities'     def __init__(self,price):         self.price = price     def __repr__(self):         return  'Item[price = %g]' %self.price In\u00a0[\u00a0]: Copied! <pre>def test():\n    goods = Item(500)\n    print(goods.__repr__())\n</pre> def test():     goods = Item(500)     print(goods.__repr__()) In\u00a0[\u00a0]: Copied! <pre>__all__ = ['Item']\n</pre> __all__ = ['Item'] In\u00a0[\u00a0]: Copied! <pre>if __name__ == '__main__':\n    test()\n</pre> if __name__ == '__main__':     test()"},{"location":"Ch9-Module/fk_package/generate_init/","title":"Generate init","text":"In\u00a0[\u00a0]: Copied! <pre>from os.path import isdir, join,abspath\nfrom os import walk\n</pre> from os.path import isdir, join,abspath from os import walk In\u00a0[\u00a0]: Copied! <pre>root = abspath('.')\nfinit = '__init__.py'\n</pre> root = abspath('.') finit = '__init__.py' In\u00a0[\u00a0]: Copied! <pre>def visitor(arg, dirname, fnames):\n    fnames = [fname for fname in fnames if isdir(fname)]\n    # here you could do some additional checks ...\n    print(\"adding %s to : %s\" %(finit, dirname))\n    with open(join(dirname, finit), 'w') as file_: file_.write('')\n</pre> def visitor(arg, dirname, fnames):     fnames = [fname for fname in fnames if isdir(fname)]     # here you could do some additional checks ...     print(\"adding %s to : %s\" %(finit, dirname))     with open(join(dirname, finit), 'w') as file_: file_.write('') In\u00a0[\u00a0]: Copied! <pre>walk(root,visitor, None)\n</pre> walk(root,visitor, None)"},{"location":"Django/01-Web-Application-Technologies-and-Django/Certificate/","title":"Certificate","text":""},{"location":"Django/01-Web-Application-Technologies-and-Django/Week1/Week1/","title":"Week 1 Notes","text":"Table of Contents <ul><li>1\u00a0\u00a0Introduction to Dynamic Web Content</li><li>2\u00a0\u00a0Network Sockets and Connections</li><li>3\u00a0\u00a0HyperText Transfer Protocol</li><li>4\u00a0\u00a0Building a Simple Web Browser in Python</li><li>5\u00a0\u00a0Building a Simple HTTP Server in Python</li></ul> In\u00a0[1]: Copied! <pre>import socket\n</pre> import socket In\u00a0[2]: Copied! <pre>mysock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nmysock.connect(('data.pr4e.org',80))\ncmd = 'GET http://data.pr4e.org/page1.htm HTTP/1.0\\r\\n\\r\\n'.encode() # indicates no headers \nmysock.send(cmd)\n\nwhile True:\n    data = mysock.recv(512)\n    if len(data) &lt; 1:\n        break\n    print(data.decode(),end = '')\n\nmysock.close()\n</pre> mysock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) mysock.connect(('data.pr4e.org',80)) cmd = 'GET http://data.pr4e.org/page1.htm HTTP/1.0\\r\\n\\r\\n'.encode() # indicates no headers  mysock.send(cmd)  while True:     data = mysock.recv(512)     if len(data) &lt; 1:         break     print(data.decode(),end = '')  mysock.close() <pre>HTTP/1.1 200 OK\r\nDate: Wed, 30 Jun 2021 01:09:34 GMT\r\nServer: Apache/2.4.18 (Ubuntu)\r\nLast-Modified: Mon, 15 May 2017 11:11:47 GMT\r\nETag: \"80-54f8e1f004857\"\r\nAccept-Ranges: bytes\r\nContent-Length: 128\r\nCache-Control: max-age=0, no-cache, no-store, must-revalidate\r\nPragma: no-cache\r\nExpires: Wed, 11 Jan 1984 05:00:00 GMT\r\nConnection: close\r\nContent-Type: text/html\r\n\r\n&lt;h1&gt;The First Page&lt;/h1&gt;\n&lt;p&gt;\nIf you like, you can switch to the \n&lt;a href=\"http://data.pr4e.org/page2.htm\"&gt;\nSecond Page&lt;/a&gt;.\n&lt;/p&gt;\n</pre> In\u00a0[\u00a0]: Copied! <pre>from socket import *\n\ndef createServer():\n    serversocket = socket(AF_INET,SOCK_STREAM)\n    try:\n        serversocket.bind(('localhost',9000))\n        serversocket.listen(5)\n        while(1):\n            (clientsocket,address) = serversocket.accept()\n\n            rd = clientsocket.recv(5000).decode()\n            pieces = rd.split('\\n')\n            if (len(pieces) &gt; 0) : print(pieces[0])\n\n            data = 'HTTP/1.1 200 OK \\r\\n'\n            data += \"Content-Type: text/html; charset=utf-8\\r\\n\"\n            data += '\\r\\n'\n            data += '&lt;html&gt;&lt;body&gt;Hello World&lt;/body&gt;&lt;/html&gt;\\r\\n\\r\\n'\n            clientsocket.sendall(data.encode())\n            clientsocket.shutdown(SHUT_WR)\n        \n    except KeyboardInterrupt:\n        print('\\n Shutting down....\\n')\n    except Exception as e:\n        print('Error')\n        print(e)\n        \n    serversocket.close()\n    \nprint('Access http://localhost:9000')\ncreateServer()\n</pre> from socket import *  def createServer():     serversocket = socket(AF_INET,SOCK_STREAM)     try:         serversocket.bind(('localhost',9000))         serversocket.listen(5)         while(1):             (clientsocket,address) = serversocket.accept()              rd = clientsocket.recv(5000).decode()             pieces = rd.split('\\n')             if (len(pieces) &gt; 0) : print(pieces[0])              data = 'HTTP/1.1 200 OK \\r\\n'             data += \"Content-Type: text/html; charset=utf-8\\r\\n\"             data += '\\r\\n'             data += 'Hello World\\r\\n\\r\\n'             clientsocket.sendall(data.encode())             clientsocket.shutdown(SHUT_WR)              except KeyboardInterrupt:         print('\\n Shutting down....\\n')     except Exception as e:         print('Error')         print(e)              serversocket.close()      print('Access http://localhost:9000') createServer()                 <pre>Access http://localhost:9000\nGET / HTTP/1.1\nGET /favicon.ico HTTP/1.1\n\n Shutting down....\n\n</pre> In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"Django/01-Web-Application-Technologies-and-Django/Week1/Week1/#introduction-to-dynamic-web-content","title":"Introduction to Dynamic Web Content\u00b6","text":""},{"location":"Django/01-Web-Application-Technologies-and-Django/Week1/Week1/#network-sockets-and-connections","title":"Network Sockets and Connections\u00b6","text":""},{"location":"Django/01-Web-Application-Technologies-and-Django/Week1/Week1/#hypertext-transfer-protocol","title":"HyperText Transfer Protocol\u00b6","text":""},{"location":"Django/01-Web-Application-Technologies-and-Django/Week1/Week1/#building-a-simple-web-browser-in-python","title":"Building a Simple Web Browser in Python\u00b6","text":""},{"location":"Django/01-Web-Application-Technologies-and-Django/Week1/Week1/#building-a-simple-http-server-in-python","title":"Building a Simple HTTP Server in Python\u00b6","text":""},{"location":"Django/02-Building-Web-Applications-in-Django/Certificate/","title":"Certificate","text":""},{"location":"Django/02-Building-Web-Applications-in-Django/Week3/test/","title":"Test","text":"In\u00a0[\u00a0]: Copied! <pre>class PartyAnimal:\n  x = 0\n  id = 0\n\n  def __init__(self) -&gt; None:\n      PartyAnimal.id += 1\n  def party(self) :\n    self.x = self.x + 1\n    print(\"So far\",self.x)\n</pre> class PartyAnimal:   x = 0   id = 0    def __init__(self) -&gt; None:       PartyAnimal.id += 1   def party(self) :     self.x = self.x + 1     print(\"So far\",self.x) In\u00a0[\u00a0]: Copied! <pre>an = PartyAnimal()\nbn = PartyAnimal()\n</pre> an = PartyAnimal() bn = PartyAnimal() In\u00a0[\u00a0]: Copied! <pre>an.party()\nan.party()\nan.party()\n</pre> an.party() an.party() an.party() In\u00a0[\u00a0]: Copied! <pre>print(PartyAnimal.x)\nprint(PartyAnimal.id)\n</pre> print(PartyAnimal.x) print(PartyAnimal.id)"},{"location":"Django/03-Django-Oracle/01-MVC-And-ORM/","title":"MVC and ORM","text":""},{"location":"Django/03-Django-Oracle/01-MVC-And-ORM/#model-view-controller-mvc","title":"Model-View-Controller (MVC)\u00b6","text":"<ul> <li>In MVC, the <code>model</code> represents the information (the data) of the application and the business rules used to manipulate the data</li> <li>The <code>view</code> corresponds to elements of the user interface such as text, checkbox items, and so forth;</li> <li>The <code>controller</code> manages details involving the communication to the model of user actions.</li> </ul>"},{"location":"Django/03-Django-Oracle/01-MVC-And-ORM/#model","title":"Model\u00b6","text":"<ul> <li>It defines the schema of the database, including tables, fields, and relationships.</li> <li><code>Models</code> are typically defined in <code>models.py</code> files within Django apps.</li> <li>We call the Data bit - the \u201cModel\u201d or Data Model</li> </ul>"},{"location":"Django/03-Django-Oracle/01-MVC-And-ORM/#view","title":"View\u00b6","text":"<ul> <li>The HTML, CSS, etc. which makes up the look and feel of the application.</li> <li><code>Views</code> in Django are typically functions or classes defined in <code>views.py</code> files within Django apps.</li> <li>We call the \u201cmaking the next HTML\u201d bit the \u201cView\u201d or \u201cPresentation Layer\u201d</li> </ul>"},{"location":"Django/03-Django-Oracle/01-MVC-And-ORM/#template","title":"Template\u00b6","text":"<ul> <li><code>Templates</code> in Django are responsible for the user interface.</li> <li>They define the structure and presentation of the data to be displayed to the user. Django uses its built-in templating engine to render dynamic content based on data provided by views.</li> </ul>"},{"location":"Django/03-Django-Oracle/01-MVC-And-ORM/#controller","title":"Controller\u00b6","text":"<ul> <li>The code that does the thinking and decision making</li> <li>We call the handling of input and the general orchestration of it all the \u201cController\u201d</li> </ul>"},{"location":"Django/03-Django-Oracle/01-MVC-And-ORM/#object-relational-mapping-orm","title":"Object Relational Mapping (ORM)\u00b6","text":"<ul> <li><code>Object-Relational Mapping (ORM)</code> in Django allows you to interact with your database using high-level object-oriented constructs instead of directly writing SQL queries.</li> </ul>"},{"location":"Django/03-Django-Oracle/01-MVC-And-ORM/#1define-a-model-table","title":"1.Define a model (table)\u00b6","text":"<pre>from django.db import models\n\nclass Book(models.Model):\n    title = models.CharField(max_length=100)\n    author = models.CharField(max_length=50)\n    publication_date = models.DateField()\n</pre>"},{"location":"Django/03-Django-Oracle/01-MVC-And-ORM/#2create-migration-and-apply-to-database","title":"2.Create Migration and Apply to Database\u00b6","text":"<ul> <li><code>Django</code> provides a command-line interface to generate database migrations based on your model definitions.</li> </ul> <pre><code>cmd\npython manage.py makemigrations\npython manage.py migrate\n</code></pre> <ul> <li>This creates the necessary database tables based on your models.</li> </ul>"},{"location":"Django/03-Django-Oracle/01-MVC-And-ORM/#3a-input-to-table-database","title":"3.a Input to table / database\u00b6","text":"<p>Now, you can use the <code>Book</code> model in your Python code.</p> <ul> <li>For example, to create a new book:</li> </ul> <pre>from myapp.models import Book\nfrom datetime import date\n\n# Create a new book\nbook = Book.objects.create(\n    title='Python Programming',\n    author='Guido van Rossum',\n    publication_date=date(1995, 1, 1)\n)\n</pre>"},{"location":"Django/03-Django-Oracle/01-MVC-And-ORM/#3b-query-the-database","title":"3.b Query the database\u00b6","text":"<p>You can query the database using Django's <code>ORM</code> to retrieve objects.</p> <ul> <li>For example, to retrieve all books written by a specific author:</li> </ul> <pre># Query all books by a specific author\nbooks = Book.objects.filter(author='Guido van Rossum')\n\nfor book in books:\n    print(book.title)\n</pre>"},{"location":"Django/03-Django-Oracle/01-MVC-And-ORM/#3c-create-read-update-and-delete-crud-in-the-orm","title":"3.c CREATE, READ, UPDATE and DELETE (CRUD) in the ORM\u00b6","text":"<pre># Create a new user and save it to the database\nu = User(name = \"Sally\", email = \"a2@umich.edu\")\nu.save()\n\n# Retrieve all users from the database and display their values\nUser.objects.values()\n\n# Filter users by email and display their values\nUser.objects.filter(email = \"ted@umich.edu\").values()\nUser.objects.filter(email = \"ted@umich.edu\").delete()\nUser.objects.values()\n\n# Update the name of the user(s) with a specific email\nUser.objects.filter(email = \"csev@umich.edu\").update(name = 'Charles')\nUser.objects.values()\n\n# Retrieve all users from the database, order them by email, and display their values\nUser.objects.values().order_by(\"email\")\n\n# Retrieve all users from the database, order them by name in descending order, and display their values\nUser.objects.values().order_by(\"-name\")\n</pre>"},{"location":"Django/03-Django-Oracle/01-MVC-And-ORM/#migrations-from-model-to-database","title":"Migrations: From model to Database\u00b6","text":"<ul> <li><p>The <code>make migrations</code> command reads all the <code>models.py </code>files in all the applications, end creates / evolves the migration files</p> </li> <li><p>Guided by the applications listed in <code>settings.py</code></p> <p></p> <p></p> </li> </ul>"},{"location":"Django/03-Django-Oracle/02-getting-start-with-django/","title":"02 getting start with django","text":"In\u00a0[\u00a0]: Copied!"},{"location":"Django/03-Django-Oracle/02-getting-start-with-django/#writing-your-first-django-app","title":"Writing your first Django app\u00b6","text":"<ul> <li>Reference Material</li> </ul> <p>Django is a high-level Python web framework that encourages rapid development and clean, pragmatic design.</p> <p>Throughout this tutorial, we\u2019ll walk you through the creation of a basic poll application.</p> <p>It\u2019ll consist of two parts:</p> <ul> <li>A public site that lets people view polls and vote in them.</li> <li>An admin site that lets you add, change, and delete polls</li> </ul>"},{"location":"Django/03-Django-Oracle/02-getting-start-with-django/#create-a-django-project","title":"Create a Django Project\u00b6","text":"<ul> <li><p>From the command line, cd into a directory where you\u2019d like to store your code, then run the following command:</p> <pre>django-admin startproject mysite\n</pre> </li> <li><p>Let\u2019s look at what <code>startproject</code> created:</p> <pre>mysite/\n    manage.py\n    mysite/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\n</pre> </li> <li><p>These files are:</p> <ol> <li>The <code>outer mysite/</code> root directory is a container for your project. Its name doesn\u2019t matter to Django;<ul> <li>you can rename it to anything you like.</li> </ul> </li> <li><code>manage.py</code>: A command-line utility that lets you interact with this Django project in various ways.<ul> <li>You can read all the details about manage.py in django-admin and manage.py.</li> </ul> </li> <li>The <code>inner mysite/</code> directory is the actual Python package for your project.<ul> <li>Its name is the Python package name you\u2019ll need to use to import anything inside it (e.g. <code>mysite.urls</code>).</li> </ul> </li> <li><code>mysite/__init__.py</code>: An empty file that tells Python that this directory should be considered a Python package</li> <li><code>mysite/settings.py</code>: Settings/configuration for this Django project.<ul> <li>Django settings will tell you all about how settings work.</li> </ul> </li> <li><code>mysite/urls.py</code>: The URL declarations for this Django project; a <code>table of contents</code> of your Django-powered site.<ul> <li>You can read more about URLs in URL dispatcher.</li> </ul> </li> <li><code>mysite/asgi.py</code>: An entry-point for ASGI-compatible web servers to serve your project.<ul> <li>See How to deploy with ASGI for more details.</li> </ul> </li> <li><code>mysite/wsgi.py</code>: An entry-point for WSGI-compatible web servers to serve your project.<ul> <li>See How to deploy with WSGI for more details.</li> </ul> </li> </ol> </li> </ul>"},{"location":"Django/03-Django-Oracle/02-getting-start-with-django/#run-the-development-server","title":"Run the Development Server\u00b6","text":"<ul> <li><p>Let\u2019s verify your Django project works. Change into the <code>outer mysite</code> directory, if you haven\u2019t already, and run the following commands:</p> <pre>python manage.py runserver\n</pre> </li> <li><p>You\u2019ll see the following output on the command line:</p> <pre>Watching for file changes with StatReloader\nPerforming system checks...\n\nSystem check identified no issues (0 silenced).\n\nYou have 18 unapplied migration(s). Your project may not work properly until you apply the migrations for app(s): admin, auth, contenttypes, sessions.\nRun 'python manage.py migrate' to apply them.\nMay 16, 2024 - 08:34:40\nDjango version 5.0.6, using settings 'mysite.settings'\nStarting development server at http://127.0.0.1:8000/\nQuit the server with CTRL-BREAK.\n</pre> </li> </ul>"},{"location":"Django/03-Django-Oracle/mysite/manage/","title":"Manage","text":"In\u00a0[\u00a0]: Copied! <pre>\"\"\"Django's command-line utility for administrative tasks.\"\"\"\nimport os\nimport sys\n</pre> \"\"\"Django's command-line utility for administrative tasks.\"\"\" import os import sys In\u00a0[\u00a0]: Copied! <pre>def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"mysite.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n</pre> def main():     \"\"\"Run administrative tasks.\"\"\"     os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"mysite.settings\")     try:         from django.core.management import execute_from_command_line     except ImportError as exc:         raise ImportError(             \"Couldn't import Django. Are you sure it's installed and \"             \"available on your PYTHONPATH environment variable? Did you \"             \"forget to activate a virtual environment?\"         ) from exc     execute_from_command_line(sys.argv) In\u00a0[\u00a0]: Copied! <pre>if __name__ == \"__main__\":\n    main()\n</pre> if __name__ == \"__main__\":     main()"},{"location":"Django/03-Django-Oracle/mysite/mysite/__init__/","title":"init","text":""},{"location":"Django/03-Django-Oracle/mysite/mysite/asgi/","title":"Asgi","text":"In\u00a0[\u00a0]: Copied! <pre>\"\"\"\nASGI config for mysite project.\n\nIt exposes the ASGI callable as a module-level variable named ``application``.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/4.2/howto/deployment/asgi/\n\"\"\"\n</pre> \"\"\" ASGI config for mysite project.  It exposes the ASGI callable as a module-level variable named ``application``.  For more information on this file, see https://docs.djangoproject.com/en/4.2/howto/deployment/asgi/ \"\"\" In\u00a0[\u00a0]: Copied! <pre>import os\n</pre> import os In\u00a0[\u00a0]: Copied! <pre>from django.core.asgi import get_asgi_application\n</pre> from django.core.asgi import get_asgi_application In\u00a0[\u00a0]: Copied! <pre>os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"mysite.settings\")\n</pre> os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"mysite.settings\") In\u00a0[\u00a0]: Copied! <pre>application = get_asgi_application()\n</pre> application = get_asgi_application()"},{"location":"Django/03-Django-Oracle/mysite/mysite/settings/","title":"Settings","text":"In\u00a0[\u00a0]: Copied! <pre>\"\"\"\nDjango settings for mysite project.\n\nGenerated by 'django-admin startproject' using Django 4.2.7.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/4.2/topics/settings/\n\nFor the full list of settings and their values, see\nhttps://docs.djangoproject.com/en/4.2/ref/settings/\n\"\"\"\n</pre> \"\"\" Django settings for mysite project.  Generated by 'django-admin startproject' using Django 4.2.7.  For more information on this file, see https://docs.djangoproject.com/en/4.2/topics/settings/  For the full list of settings and their values, see https://docs.djangoproject.com/en/4.2/ref/settings/ \"\"\" In\u00a0[\u00a0]: Copied! <pre>from pathlib import Path\n</pre> from pathlib import Path In\u00a0[\u00a0]: Copied! <pre># Build paths inside the project like this: BASE_DIR / 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent\n</pre> # Build paths inside the project like this: BASE_DIR / 'subdir'. BASE_DIR = Path(__file__).resolve().parent.parent <p>Quick-start development settings - unsuitable for production See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/</p> In\u00a0[\u00a0]: Copied! <pre># SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = \"django-insecure-5tg1!zpx+%57!9lsmb=su-s1l(2b3r7p)(g&amp;ouz5)&amp;ykh8cp@1\"\n</pre> # SECURITY WARNING: keep the secret key used in production secret! SECRET_KEY = \"django-insecure-5tg1!zpx+%57!9lsmb=su-s1l(2b3r7p)(g&amp;ouz5)&amp;ykh8cp@1\" In\u00a0[\u00a0]: Copied! <pre># SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n</pre> # SECURITY WARNING: don't run with debug turned on in production! DEBUG = True In\u00a0[\u00a0]: Copied! <pre>ALLOWED_HOSTS = []\n</pre> ALLOWED_HOSTS = [] <p>Application definition</p> In\u00a0[\u00a0]: Copied! <pre>INSTALLED_APPS = [\n    \"polls.apps.PollsConfig\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    # Extensions \n    'django_extensions',\n    'crispy_forms',\n]\n</pre> INSTALLED_APPS = [     \"polls.apps.PollsConfig\",     \"django.contrib.admin\",     \"django.contrib.auth\",     \"django.contrib.contenttypes\",     \"django.contrib.sessions\",     \"django.contrib.messages\",     \"django.contrib.staticfiles\",     # Extensions      'django_extensions',     'crispy_forms', ] In\u00a0[\u00a0]: Copied! <pre>MIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n]\n</pre> MIDDLEWARE = [     \"django.middleware.security.SecurityMiddleware\",     \"django.contrib.sessions.middleware.SessionMiddleware\",     \"django.middleware.common.CommonMiddleware\",     \"django.middleware.csrf.CsrfViewMiddleware\",     \"django.contrib.auth.middleware.AuthenticationMiddleware\",     \"django.contrib.messages.middleware.MessageMiddleware\",     \"django.middleware.clickjacking.XFrameOptionsMiddleware\", ] In\u00a0[\u00a0]: Copied! <pre>ROOT_URLCONF = \"mysite.urls\"\n</pre> ROOT_URLCONF = \"mysite.urls\" In\u00a0[\u00a0]: Copied! <pre>TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",\n                \"django.contrib.messages.context_processors.messages\",\n            ],\n        },\n    },\n]\n</pre> TEMPLATES = [     {         \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",         \"DIRS\": [],         \"APP_DIRS\": True,         \"OPTIONS\": {             \"context_processors\": [                 \"django.template.context_processors.debug\",                 \"django.template.context_processors.request\",                 \"django.contrib.auth.context_processors.auth\",                 \"django.contrib.messages.context_processors.messages\",             ],         },     }, ] In\u00a0[\u00a0]: Copied! <pre>WSGI_APPLICATION = \"mysite.wsgi.application\"\n</pre> WSGI_APPLICATION = \"mysite.wsgi.application\" <p>Database https://docs.djangoproject.com/en/4.2/ref/settings/#databases</p> In\u00a0[\u00a0]: Copied! <pre>DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\n</pre> DATABASES = {     \"default\": {         \"ENGINE\": \"django.db.backends.sqlite3\",         \"NAME\": BASE_DIR / \"db.sqlite3\",     } } <p>Password validation https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators</p> In\u00a0[\u00a0]: Copied! <pre>AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.NumericPasswordValidator\",\n    },\n]\n</pre> AUTH_PASSWORD_VALIDATORS = [     {         \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",     },     {         \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",     },     {         \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",     },     {         \"NAME\": \"django.contrib.auth.password_validation.NumericPasswordValidator\",     }, ] <p>Internationalization https://docs.djangoproject.com/en/4.2/topics/i18n/</p> In\u00a0[\u00a0]: Copied! <pre>LANGUAGE_CODE = \"en-us\"\n</pre> LANGUAGE_CODE = \"en-us\" In\u00a0[\u00a0]: Copied! <pre>TIME_ZONE = \"UTC\"\n</pre> TIME_ZONE = \"UTC\" In\u00a0[\u00a0]: Copied! <pre>USE_I18N = True\n</pre> USE_I18N = True In\u00a0[\u00a0]: Copied! <pre>USE_TZ = True\n</pre> USE_TZ = True <p>Static files (CSS, JavaScript, Images) https://docs.djangoproject.com/en/4.2/howto/static-files/</p> In\u00a0[\u00a0]: Copied! <pre>STATIC_URL = \"static/\"\n</pre> STATIC_URL = \"static/\" <p>Default primary key field type https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field</p> In\u00a0[\u00a0]: Copied! <pre>DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n</pre> DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\""},{"location":"Django/03-Django-Oracle/mysite/mysite/urls/","title":"Urls","text":"In\u00a0[\u00a0]: Copied! <pre>\"\"\"\nURL configuration for mysite project.\n\nThe `urlpatterns` list routes URLs to views. For more information please see:\n    https://docs.djangoproject.com/en/4.2/topics/http/urls/\nExamples:\nFunction views\n    1. Add an import:  from my_app import views\n    2. Add a URL to urlpatterns:  path('', views.home, name='home')\nClass-based views\n    1. Add an import:  from other_app.views import Home\n    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')\nIncluding another URLconf\n    1. Import the include() function: from django.urls import include, path\n    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))\n\"\"\"\nfrom django.contrib import admin\nfrom django.urls import path, include\n</pre> \"\"\" URL configuration for mysite project.  The `urlpatterns` list routes URLs to views. For more information please see:     https://docs.djangoproject.com/en/4.2/topics/http/urls/ Examples: Function views     1. Add an import:  from my_app import views     2. Add a URL to urlpatterns:  path('', views.home, name='home') Class-based views     1. Add an import:  from other_app.views import Home     2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home') Including another URLconf     1. Import the include() function: from django.urls import include, path     2. Add a URL to urlpatterns:  path('blog/', include('blog.urls')) \"\"\" from django.contrib import admin from django.urls import path, include In\u00a0[\u00a0]: Copied! <pre>urlpatterns = [\n    path(\"polls/\", include(\"polls.urls\")),\n    path(\"admin/\", admin.site.urls),\n    path(\"accounts/\", include('django.contrib.auth.urls')),\n]\n</pre> urlpatterns = [     path(\"polls/\", include(\"polls.urls\")),     path(\"admin/\", admin.site.urls),     path(\"accounts/\", include('django.contrib.auth.urls')), ]"},{"location":"Django/03-Django-Oracle/mysite/mysite/wsgi/","title":"Wsgi","text":"In\u00a0[\u00a0]: Copied! <pre>\"\"\"\nWSGI config for mysite project.\n\nIt exposes the WSGI callable as a module-level variable named ``application``.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/4.2/howto/deployment/wsgi/\n\"\"\"\n</pre> \"\"\" WSGI config for mysite project.  It exposes the WSGI callable as a module-level variable named ``application``.  For more information on this file, see https://docs.djangoproject.com/en/4.2/howto/deployment/wsgi/ \"\"\" In\u00a0[\u00a0]: Copied! <pre>import os\n</pre> import os In\u00a0[\u00a0]: Copied! <pre>from django.core.wsgi import get_wsgi_application\n</pre> from django.core.wsgi import get_wsgi_application In\u00a0[\u00a0]: Copied! <pre>os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"mysite.settings\")\n</pre> os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"mysite.settings\") In\u00a0[\u00a0]: Copied! <pre>application = get_wsgi_application()\n</pre> application = get_wsgi_application()"},{"location":"Django/03-Django-Oracle/mysite/polls/__init__/","title":"init","text":""},{"location":"Django/03-Django-Oracle/mysite/polls/admin/","title":"Admin","text":"In\u00a0[\u00a0]: Copied! <pre>from django.contrib import admin\n</pre> from django.contrib import admin In\u00a0[\u00a0]: Copied! <pre>from .models import Question\n</pre> from .models import Question In\u00a0[\u00a0]: Copied! <pre>admin.site.register(Question)\n</pre> admin.site.register(Question) <p>Register your models here.</p>"},{"location":"Django/03-Django-Oracle/mysite/polls/apps/","title":"Apps","text":"In\u00a0[\u00a0]: Copied! <pre>from django.apps import AppConfig\n</pre> from django.apps import AppConfig In\u00a0[\u00a0]: Copied! <pre>class PollsConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"polls\"\n</pre> class PollsConfig(AppConfig):     default_auto_field = \"django.db.models.BigAutoField\"     name = \"polls\""},{"location":"Django/03-Django-Oracle/mysite/polls/models/","title":"Models","text":"In\u00a0[\u00a0]: Copied! <pre>from django.db import models\nfrom django.utils import timezone\nimport datetime\n</pre> from django.db import models from django.utils import timezone import datetime In\u00a0[\u00a0]: Copied! <pre># Create your models here.\nclass Question(models.Model):\n    question_text = models.CharField(max_length=200)\n    pub_date = models.DateTimeField(\"date published\")\n    \n    def __str__(self) -&gt; str:\n        return self.question_text\n    \n    def was_published_recently(self):\n        return self.pub_date &gt;= timezone.now() - datetime.timedelta(days=15)\n</pre> # Create your models here. class Question(models.Model):     question_text = models.CharField(max_length=200)     pub_date = models.DateTimeField(\"date published\")          def __str__(self) -&gt; str:         return self.question_text          def was_published_recently(self):         return self.pub_date &gt;= timezone.now() - datetime.timedelta(days=15) In\u00a0[\u00a0]: Copied! <pre>class Choice(models.Model):\n    question = models.ForeignKey(Question, on_delete= models.CASCADE)\n    choice_text = models.CharField(max_length=200)\n    votes = models.IntegerField(default= 0)\n    \n    def __str__(self) -&gt; str:\n        return self.choice_text\n</pre> class Choice(models.Model):     question = models.ForeignKey(Question, on_delete= models.CASCADE)     choice_text = models.CharField(max_length=200)     votes = models.IntegerField(default= 0)          def __str__(self) -&gt; str:         return self.choice_text"},{"location":"Django/03-Django-Oracle/mysite/polls/tests/","title":"Tests","text":"In\u00a0[\u00a0]: Copied! <pre>from django.test import TestCase\n</pre> from django.test import TestCase <p>Create your tests here.</p>"},{"location":"Django/03-Django-Oracle/mysite/polls/urls/","title":"Urls","text":"In\u00a0[\u00a0]: Copied! <pre>from django.urls import path\n</pre> from django.urls import path In\u00a0[\u00a0]: Copied! <pre>from . import views\n</pre> from . import views In\u00a0[\u00a0]: Copied! <pre>app_name = \"polls\"\nurlpatterns = [\n    # ex: /polls/\n    path(\"\", views.index, name=\"index\"),\n    # ex: /polls/5/\n    # path(\"&lt;int:question_id&gt;/\", views.detail, name=\"detail\"),\n    # ex: /polls/5/results/\n    path(\"&lt;int:question_id&gt;/results/\", views.results, name=\"results\"),\n    # ex: /polls/5/vote/\n    path(\"&lt;int:question_id&gt;/vote/\", views.vote, name=\"vote\"),\n    \n    path(\"specifics/&lt;int:question_id&gt;/\", views.detail, name=\"detail\"),\n]\n</pre> app_name = \"polls\" urlpatterns = [     # ex: /polls/     path(\"\", views.index, name=\"index\"),     # ex: /polls/5/     # path(\"/\", views.detail, name=\"detail\"),     # ex: /polls/5/results/     path(\"/results/\", views.results, name=\"results\"),     # ex: /polls/5/vote/     path(\"/vote/\", views.vote, name=\"vote\"),          path(\"specifics//\", views.detail, name=\"detail\"), ]"},{"location":"Django/03-Django-Oracle/mysite/polls/views/","title":"Views","text":"In\u00a0[\u00a0]: Copied! <pre>from django.shortcuts import render, get_object_or_404\nfrom django.http import HttpResponse,Http404,HttpResponseRedirect\nfrom django.template import loader\nfrom .models import Question,Choice\nfrom django.urls import reverse\n</pre> from django.shortcuts import render, get_object_or_404 from django.http import HttpResponse,Http404,HttpResponseRedirect from django.template import loader from .models import Question,Choice from django.urls import reverse <p>Create your views here.</p> In\u00a0[\u00a0]: Copied! <pre>def index(request):\n    # return HttpResponse(\"Hello, World. You're at the polls index.\")\n    latest_question_list = Question.objects.order_by(\"-pub_date\")[:5]\n    # template = loader.get_template(\"polls/index.htm\")\n    # output = \"\\n\".join([q.question_text for q in latest_question_list])\n    context = {\n        \"latest_question_list\" : latest_question_list,\n    }\n    # return HttpResponse(template.render(context,request))\n    return render(request,\"polls/index.htm\",context)\n</pre> def index(request):     # return HttpResponse(\"Hello, World. You're at the polls index.\")     latest_question_list = Question.objects.order_by(\"-pub_date\")[:5]     # template = loader.get_template(\"polls/index.htm\")     # output = \"\\n\".join([q.question_text for q in latest_question_list])     context = {         \"latest_question_list\" : latest_question_list,     }     # return HttpResponse(template.render(context,request))     return render(request,\"polls/index.htm\",context) In\u00a0[\u00a0]: Copied! <pre>def detail(request, question_id):\n    # return HttpResponse(\"You're looking at question %s.\" % question_id)\n    try:\n        question = Question.objects.get(pk = question_id)\n        question_choice_set = question.choice_set.all()\n    except Question.DoesNotExist:\n        raise Http404(\"Question does not exist\")\n    return render(request, \"polls/detail.htm\",{\"question\":question,\"choice_set\":question_choice_set})\n</pre> def detail(request, question_id):     # return HttpResponse(\"You're looking at question %s.\" % question_id)     try:         question = Question.objects.get(pk = question_id)         question_choice_set = question.choice_set.all()     except Question.DoesNotExist:         raise Http404(\"Question does not exist\")     return render(request, \"polls/detail.htm\",{\"question\":question,\"choice_set\":question_choice_set}) In\u00a0[\u00a0]: Copied! <pre>def results(request, question_id):\n    # response = f\"You're looking at the results of {question_id}\"\n    # return HttpResponse(response)\n    question = get_object_or_404(Question,pk = question_id)\n    return render(request,\"polls/results.htm\",{\"question\": question})\n</pre> def results(request, question_id):     # response = f\"You're looking at the results of {question_id}\"     # return HttpResponse(response)     question = get_object_or_404(Question,pk = question_id)     return render(request,\"polls/results.htm\",{\"question\": question}) In\u00a0[\u00a0]: Copied! <pre>def vote(request, question_id):\n    question = get_object_or_404(Question, pk=question_id)\n    try:\n        selected_choice = question.choice_set.get(pk=request.POST[\"choice\"])\n    except (KeyError, Choice.DoesNotExist):\n        # Redisplay the question voting form.\n        return render(\n            request,\n            \"polls/detail.htm\",\n            {\n                \"question\": question,\n                \"error_message\": \"You didn't select a choice.\",\n            },\n        )\n    else:\n        selected_choice.votes += 1\n        selected_choice.save()\n        # Always return an HttpResponseRedirect after successfully dealing\n        # with POST data. This prevents data from being posted twice if a\n        # user hits the Back button.\n        return HttpResponseRedirect(reverse(\"polls:results\", args=(question.id,)))\n</pre> def vote(request, question_id):     question = get_object_or_404(Question, pk=question_id)     try:         selected_choice = question.choice_set.get(pk=request.POST[\"choice\"])     except (KeyError, Choice.DoesNotExist):         # Redisplay the question voting form.         return render(             request,             \"polls/detail.htm\",             {                 \"question\": question,                 \"error_message\": \"You didn't select a choice.\",             },         )     else:         selected_choice.votes += 1         selected_choice.save()         # Always return an HttpResponseRedirect after successfully dealing         # with POST data. This prevents data from being posted twice if a         # user hits the Back button.         return HttpResponseRedirect(reverse(\"polls:results\", args=(question.id,)))"},{"location":"Django/03-Django-Oracle/mysite/polls/migrations/0001_initial/","title":"0001 initial","text":"<p>Generated by Django 4.2.7 on 2024-05-21 13:45</p> In\u00a0[\u00a0]: Copied! <pre>from django.db import migrations, models\nimport django.db.models.deletion\n</pre> from django.db import migrations, models import django.db.models.deletion In\u00a0[\u00a0]: Copied! <pre>class Migration(migrations.Migration):\n    initial = True\n\n    dependencies = []\n\n    operations = [\n        migrations.CreateModel(\n            name=\"Question\",\n            fields=[\n                (\n                    \"id\",\n                    models.BigAutoField(\n                        auto_created=True,\n                        primary_key=True,\n                        serialize=False,\n                        verbose_name=\"ID\",\n                    ),\n                ),\n                (\"question_text\", models.CharField(max_length=200)),\n                (\"pub_date\", models.DateTimeField(verbose_name=\"date published\")),\n            ],\n        ),\n        migrations.CreateModel(\n            name=\"Choice\",\n            fields=[\n                (\n                    \"id\",\n                    models.BigAutoField(\n                        auto_created=True,\n                        primary_key=True,\n                        serialize=False,\n                        verbose_name=\"ID\",\n                    ),\n                ),\n                (\"choice_text\", models.CharField(max_length=200)),\n                (\"votes\", models.IntegerField(default=0)),\n                (\n                    \"question\",\n                    models.ForeignKey(\n                        on_delete=django.db.models.deletion.CASCADE, to=\"polls.question\"\n                    ),\n                ),\n            ],\n        ),\n    ]\n</pre> class Migration(migrations.Migration):     initial = True      dependencies = []      operations = [         migrations.CreateModel(             name=\"Question\",             fields=[                 (                     \"id\",                     models.BigAutoField(                         auto_created=True,                         primary_key=True,                         serialize=False,                         verbose_name=\"ID\",                     ),                 ),                 (\"question_text\", models.CharField(max_length=200)),                 (\"pub_date\", models.DateTimeField(verbose_name=\"date published\")),             ],         ),         migrations.CreateModel(             name=\"Choice\",             fields=[                 (                     \"id\",                     models.BigAutoField(                         auto_created=True,                         primary_key=True,                         serialize=False,                         verbose_name=\"ID\",                     ),                 ),                 (\"choice_text\", models.CharField(max_length=200)),                 (\"votes\", models.IntegerField(default=0)),                 (                     \"question\",                     models.ForeignKey(                         on_delete=django.db.models.deletion.CASCADE, to=\"polls.question\"                     ),                 ),             ],         ),     ]"},{"location":"Django/03-Django-Oracle/mysite/polls/migrations/__init__/","title":"init","text":""},{"location":"Django/03-Django-Oracle/mysite/scripts/__init__/","title":"init","text":""},{"location":"Django/03-Django-Oracle/script/01-simple-browser/","title":"01 simple browser","text":"In\u00a0[\u00a0]: Copied! <pre># Import the socket module, which provides access to the BSD socket interface.\nimport socket\n</pre> # Import the socket module, which provides access to the BSD socket interface. import socket In\u00a0[\u00a0]: Copied! <pre># Create a socket object 'mysock' using IPv4 addressing (AF_INET) and TCP protocol (SOCK_STREAM).\nmysock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n</pre> # Create a socket object 'mysock' using IPv4 addressing (AF_INET) and TCP protocol (SOCK_STREAM). mysock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) In\u00a0[\u00a0]: Copied! <pre># Connect the socket to the server specified by the tuple ('data.pr4e.org', 80).\nmysock.connect((\"data.pr4e.org\", 80))\n</pre> # Connect the socket to the server specified by the tuple ('data.pr4e.org', 80). mysock.connect((\"data.pr4e.org\", 80)) In\u00a0[\u00a0]: Copied! <pre># Define the HTTP command to send to the server. Here, we're requesting the page 'page1.htm'.\n# The 'GET' method is used to retrieve data from the specified URL.\n# HTTP version is specified as 1.0. '\\r\\n' signifies the end of a line in HTTP, and '\\r\\n\\r\\n' signifies the end of the header section.\ncmd = 'GET http://data.pr4e.org/page1.htm HTTP/1.0\\r\\n\\r\\n'.encode()\n</pre> # Define the HTTP command to send to the server. Here, we're requesting the page 'page1.htm'. # The 'GET' method is used to retrieve data from the specified URL. # HTTP version is specified as 1.0. '\\r\\n' signifies the end of a line in HTTP, and '\\r\\n\\r\\n' signifies the end of the header section. cmd = 'GET http://data.pr4e.org/page1.htm HTTP/1.0\\r\\n\\r\\n'.encode() In\u00a0[\u00a0]: Copied! <pre># Send the HTTP command encoded as bytes to the server.\nmysock.send(cmd)\n</pre> # Send the HTTP command encoded as bytes to the server. mysock.send(cmd) In\u00a0[\u00a0]: Copied! <pre># Continuously receive data (in chunks of 512 bytes) from the server until there's no more data.\nwhile True:\n    # Receive data (up to 512 bytes) from the server and store it in 'data'.\n    data = mysock.recv(512)\n    \n    # If the length of 'data' is less than 1, it means there's no more data to receive, so break out of the loop.\n    if len(data) &lt; 1:\n        break\n    \n    # Decode the received data (which is in bytes) into a string and print it.\n    print(data.decode(), end=\"\")\n</pre> # Continuously receive data (in chunks of 512 bytes) from the server until there's no more data. while True:     # Receive data (up to 512 bytes) from the server and store it in 'data'.     data = mysock.recv(512)          # If the length of 'data' is less than 1, it means there's no more data to receive, so break out of the loop.     if len(data) &lt; 1:         break          # Decode the received data (which is in bytes) into a string and print it.     print(data.decode(), end=\"\") In\u00a0[\u00a0]: Copied! <pre># Close the socket connection.\nmysock.close()\n</pre> # Close the socket connection. mysock.close()"},{"location":"Django/03-Django-Oracle/script/02-simple-webServer/","title":"02 simple webServer","text":"In\u00a0[\u00a0]: Copied! <pre># Importing everything (*) from the socket module.\nfrom socket import *\n</pre> # Importing everything (*) from the socket module. from socket import * In\u00a0[\u00a0]: Copied! <pre># Function to create a server.\ndef createServer():\n    # Create a socket object 'serversocket' using IPv4 addressing (AF_INET) and TCP protocol (SOCK_STREAM).\n    serversocket = socket(AF_INET, SOCK_STREAM)\n    \n    try:\n        # Bind the socket to the address ('localhost', 8888).\n        serversocket.bind(('localhost', 8888))\n        \n        # Listen for incoming connections with a backlog queue size of 5.\n        serversocket.listen(5)\n        \n        # Loop to continuously accept connections.\n        while(1):\n            # Accept a new connection and store the client socket and its address.\n            (clientsocket, address) = serversocket.accept()\n            \n            # Receive data (up to 5000 bytes) from the client and decode it from bytes to a string.\n            rd = clientsocket.recv(5000).decode()\n            \n            # Split the received data into lines.\n            pieces = rd.split(\"\\n\")\n            \n            # If there are pieces (lines) of data, print the first line.\n            if len(pieces) &gt; 0:\n                print(pieces[0])\n            \n            # Prepare the response data with HTTP headers.\n            data = \"HTTP/1.1 200 OK\\r\\n\"\n            data += \"Content-Type: text/html; charset=utf-8\\r\\n\"\n            data += \"\\r\\n\"  # Empty line indicates the end of HTTP headers.\n            data += \"&lt;html&gt;&lt;body&gt;Hello World&lt;/body&gt;&lt;/html&gt;\\r\\n\\r\\n\"  # HTML response body.\n            \n            # Send the response data to the client, encoded as bytes.\n            clientsocket.sendall(data.encode())\n            \n            # Shutdown the writing portion of the client socket.\n            clientsocket.shutdown(SHUT_WR)\n    \n    # Handle keyboard interrupt (Ctrl+C).\n    except KeyboardInterrupt:\n        print(\"\\nShutting down...\\n\")\n    \n    # Handle other exceptions.\n    except Exception as e:\n        print(\"Error\")\n        print(e)\n    \n    # Close the server socket.\n    serversocket.close()\n</pre> # Function to create a server. def createServer():     # Create a socket object 'serversocket' using IPv4 addressing (AF_INET) and TCP protocol (SOCK_STREAM).     serversocket = socket(AF_INET, SOCK_STREAM)          try:         # Bind the socket to the address ('localhost', 8888).         serversocket.bind(('localhost', 8888))                  # Listen for incoming connections with a backlog queue size of 5.         serversocket.listen(5)                  # Loop to continuously accept connections.         while(1):             # Accept a new connection and store the client socket and its address.             (clientsocket, address) = serversocket.accept()                          # Receive data (up to 5000 bytes) from the client and decode it from bytes to a string.             rd = clientsocket.recv(5000).decode()                          # Split the received data into lines.             pieces = rd.split(\"\\n\")                          # If there are pieces (lines) of data, print the first line.             if len(pieces) &gt; 0:                 print(pieces[0])                          # Prepare the response data with HTTP headers.             data = \"HTTP/1.1 200 OK\\r\\n\"             data += \"Content-Type: text/html; charset=utf-8\\r\\n\"             data += \"\\r\\n\"  # Empty line indicates the end of HTTP headers.             data += \"Hello World\\r\\n\\r\\n\"  # HTML response body.                          # Send the response data to the client, encoded as bytes.             clientsocket.sendall(data.encode())                          # Shutdown the writing portion of the client socket.             clientsocket.shutdown(SHUT_WR)          # Handle keyboard interrupt (Ctrl+C).     except KeyboardInterrupt:         print(\"\\nShutting down...\\n\")          # Handle other exceptions.     except Exception as e:         print(\"Error\")         print(e)          # Close the server socket.     serversocket.close() In\u00a0[\u00a0]: Copied! <pre># Print a message to indicate how to access the server.\nprint(\"Access http://localhost:8888\")\n</pre> # Print a message to indicate how to access the server. print(\"Access http://localhost:8888\") In\u00a0[\u00a0]: Copied! <pre># Call the createServer function to start the server.\ncreateServer()\n</pre> # Call the createServer function to start the server. createServer()"},{"location":"Django/03-Django-Oracle/script/03-simpler-webclient/","title":"03 simpler webclient","text":"In\u00a0[\u00a0]: Copied! <pre>import requests\nresult = requests.get(\"http://127.0.0.1:8888/remeo.txt\")\nprint(result.text)\n</pre> import requests result = requests.get(\"http://127.0.0.1:8888/remeo.txt\") print(result.text)"},{"location":"Django/04-Django-Blog/01-get-started/","title":"Blog Project 01","text":""},{"location":"Django/04-Django-Blog/01-get-started/#blog-get-started-django","title":"Blog-get started (Django)\u00b6","text":""},{"location":"Django/04-Django-Blog/01-get-started/#intro","title":"Intro\u00b6","text":"<p><code>Django</code> is a high-level <code>Python</code> web framework that encourages rapid development and clean, pragmatic design. In this tutorial, we'll cover the basics of <code>Django</code>, including setting up a project, creating applications, handling databases, and more.</p> <p>Tools Needed</p> <ul> <li>Python (version 3.6 or higher)</li> <li>Django (latest version)</li> <li>Text editor or IDE (VS Code, PyCharm, etc.)</li> </ul>"},{"location":"Django/04-Django-Blog/01-get-started/#setting-up-django","title":"Setting Up Django\u00b6","text":""},{"location":"Django/04-Django-Blog/01-get-started/#step-1-install-django","title":"Step 1: Install Django\u00b6","text":"<pre>pip install django\n</pre>"},{"location":"Django/04-Django-Blog/01-get-started/#step-2-create-a-django-project","title":"Step 2: Create a Django Project\u00b6","text":"<pre>django-admin startproject django_project\ncd django_project\n</pre>"},{"location":"Django/04-Django-Blog/01-get-started/#step-3-run-the-development-server","title":"Step 3: Run the Development Server\u00b6","text":"<ul> <li>Visit <code>http://127.0.0.1:8000/</code> to see your project running.</li> </ul> <pre>python manage.py runserver\n</pre>"},{"location":"Django/04-Django-Blog/01-get-started/#check-the-project-structure-using-tree","title":"Check the project structure using <code>tree</code>\u00b6","text":""},{"location":"Django/04-Django-Blog/01-get-started/#creating-a-django-application","title":"Creating a Django Application\u00b6","text":"<ul> <li>Reference</li> </ul>"},{"location":"Django/04-Django-Blog/01-get-started/#start-an-app","title":"Start an App\u00b6","text":"<pre>python manage.py startapp blog\n</pre>"},{"location":"Django/04-Django-Blog/01-get-started/#register-the-app","title":"Register the App\u00b6","text":"<ul> <li><p>It's important for Django to search <code>templates</code> and register database [<code>Models</code>]</p> </li> <li><p>Add <code>blog.apps.BlogConfig</code> to the <code>INSTALLED_APPS</code> list in <code>django_project/settings.py</code>:</p> <pre>INSTALLED_APPS = [\n    \"blog.apps.BlogConfig\",\n    ...\n]\n</pre> </li> </ul>"},{"location":"Django/04-Django-Blog/01-get-started/#creating-new-table-model-in-database","title":"Creating new table [Model] in Database\u00b6","text":"<ol> <li><p>Construct database schema at <code>blog/models.py</code></p> <pre>from django.db import models\n\nclass Post(models.Model):\n    title = models.CharField(max_length=50)\n    content = models.TextField()\n    date_posted = models.DateTimeField(auto_now_add=True)\n\n    def __str__(self):\n        return self.title\n</pre> </li> <li><p>Register <code>Models</code> in <code>Admin</code> using <code>blog/admin.py</code></p> <pre>from django.contrib import admin\nfrom .models import Post\n\nadmin.site.register(Post)\n</pre> </li> <li><p>Sync the database modification (Make Migrations)</p> <pre>python manage.py makemigrations\npython manage.py migrate\n</pre> </li> </ol>"},{"location":"Django/04-Django-Blog/01-get-started/#creating-views","title":"Creating Views\u00b6","text":"<ul> <li><p>In <code>blog/views.py</code></p> <pre>from django.shortcuts import render\nfrom .models import Post\n\ndef home(request):\n    context = {\n        'posts': Post.objects.all()\n    }\n    return render(request, 'blog/home.html', context)\n</pre> </li> <li><p>Create a <code>templates/blog</code> directory under <code>blog</code> and add <code>base.html</code></p> <ul> <li><p>In this tutorial, we use <code>bootstrap@5.0</code></p> <pre>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n\n&lt;head&gt;\n    &lt;!-- Required meta tags --&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" /&gt;\n\n    &lt;!-- Bootstrap CSS --&gt;\n    &lt;link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\"\n        integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\" /&gt;\n\n    {% if title %}\n    &lt;title&gt;Django Blog - {{title}}&lt;/title&gt;\n    {% else %}\n    &lt;title&gt;Django Blog&lt;/title&gt;\n    {% endif %}\n\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;div class=\"container\"&gt;\n        {% block blog-content%} {% endblock %}\n    &lt;/div&gt;\n\n    &lt;script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\"\n        integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\"\n        crossorigin=\"anonymous\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre> </li> </ul> </li> <li><p>Extend (inherent) <code>base.html</code> to <code>home.html</code> and replace <code>blog-content</code></p> <pre>{% extends 'blog/base.html' %}\n\n{% block blog-content%}\n\n{% if posts %} {% for post in posts %}\n&lt;div&gt;\n    &lt;h2&gt;{{ post.title }}&lt;/h2&gt;\n    &lt;p&gt;By {{ post.author }} on {{ post.date_posted }}&lt;/p&gt;\n    &lt;p&gt;{{ post.content }}&lt;/p&gt;\n&lt;/div&gt;\n{% endfor %} {% endif %}\n\n{% endblock blog-content%}\n</pre> </li> </ul>"},{"location":"Django/04-Django-Blog/01-get-started/#configuring-urls","title":"Configuring URLs\u00b6","text":"<ol> <li><p>In <code>blog/urls.py</code>:</p> <pre>from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='blog-home'),\n]\n</pre> </li> <li><p>In <code>django_project/urls.py</code></p> <pre>from django.contrib import admin\nfrom django.urls import include, path\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('blog.urls')),\n]\n</pre> </li> </ol>"},{"location":"Django/04-Django-Blog/01-get-started/#creating-views-using-templates","title":"Creating views using templates\u00b6","text":"<ul> <li>In Django, <code>templates</code> are used to generate <code>HTML</code> dynamically.</li> <li>The <code>template</code> system allows you to use <code>inheritance</code> and <code>includes</code> to manage common layouts and components.</li> </ul>"},{"location":"Django/04-Django-Blog/01-get-started/#template-inheritance-and-structure","title":"Template Inheritance and Structure\u00b6","text":"<ul> <li><p>Django templates support <code>inheritance</code>, allowing you to define a base template and extend it in other templates.</p> Template Extends Blocks Defined Blocks Filled base.html - extra_styles, main - navigation.html - - - main.html base.html blog-content extra_styles, main home.html main.html - blog-content </li> </ul>"},{"location":"Django/04-Django-Blog/01-get-started/#base-template-basehtml","title":"Base Template (<code>base.html</code>)\u00b6","text":"<ul> <li>The base template defines the common structure of your web pages.</li> <li>Key points<ul> <li><p>Inheritance: Defines a base layout with <code>head</code> and <code>body</code> sections.</p> </li> <li><p>Blocks: Defines <code>extra_styles</code> and <code>main</code> blocks that child templates can override.</p> </li> <li><p>Conditional Rendering: Uses <code>{% if title %}</code> to conditionally set the page title.</p> </li> <li><p>Include: Includes a separate <code>navigation.html</code> template.</p> <pre>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n\n&lt;head&gt;\n    &lt;!-- Required meta tags --&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" /&gt;\n\n    &lt;!-- Bootstrap CSS --&gt;\n    &lt;link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" /&gt;\n\n    {% if title %}\n    &lt;title&gt;Django Blog - {{title}}&lt;/title&gt;\n    {% else %}\n    &lt;title&gt;Django Blog&lt;/title&gt;\n    {% endif %}\n\n    {% block extra_styles %}\n    {% endblock %}\n&lt;/head&gt;\n\n&lt;body&gt;\n    {% include 'blog/navigation.html' %}\n\n    {% block main %}\n    {% endblock %}\n\n    &lt;script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre> </li> </ul> </li> </ul>"},{"location":"Django/04-Django-Blog/01-get-started/#navigation-template-navigationhtml","title":"Navigation Template (<code>navigation.html</code>)\u00b6","text":"<ul> <li><p>The navigation bar included in the base template.</p> </li> <li><p>Bootstrap Navbar: Uses <code>Bootstrap</code> classes for responsive navigation.</p> </li> <li><p>Links: Provides links for navigation, including Django's <code>{% url %}</code> template tag for dynamic URL handling.</p> <pre>&lt;header class=\"site-header\"&gt;\n  &lt;nav class=\"navbar navbar-expand-md navbar-dark bg-steel fixed-top\"&gt;\n    &lt;div class=\"container\"&gt;\n      &lt;a class=\"navbar-brand mr-4\" href=\"{% url 'blog-home' %}\"&gt;Django Blog&lt;/a&gt;\n      &lt;button\n        class=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarToggle\"\n        aria-controls=\"navbarToggle\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      &gt;\n        &lt;span class=\"navbar-toggler-icon\"&gt;&lt;/span&gt;\n      &lt;/button&gt;\n      &lt;div class=\"collapse navbar-collapse\" id=\"navbarToggle\"&gt;\n        &lt;div class=\"navbar-nav mr-auto\"&gt;\n          &lt;a class=\"nav-item nav-link\" href=\"{% url 'blog-home' %}\"&gt;Home&lt;/a&gt;\n          &lt;a class=\"nav-item nav-link\" href=\"{% url 'blog-about' %}\"&gt;About&lt;/a&gt;\n        &lt;/div&gt;\n        &lt;!-- Navbar Right Side --&gt;\n        &lt;div class=\"navbar-nav\"&gt;\n          &lt;a class=\"nav-item nav-link\" href=\"#\"&gt;Login&lt;/a&gt;\n          &lt;a class=\"nav-item nav-link\" href=\"#\"&gt;Register&lt;/a&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/nav&gt;\n&lt;/header&gt;\n</pre> </li> </ul>"},{"location":"Django/04-Django-Blog/01-get-started/#main-template-mainhtml","title":"Main Template (<code>main.html</code>)\u00b6","text":"<ul> <li>Extends the base template and adds extra styles and a main content area.</li> <li>Key points<ul> <li><p>Extends Base Template: Inherits the structure from <code>base.html</code>.</p> </li> <li><p>Static Files: Loads static CSS file with <code>{% load static %}</code> and <code>{% static 'blog/main.css' %}</code>.</p> </li> <li><p>Blocks: Adds <code>blog-content</code> block inside the <code>main</code> block.</p> <pre>{% extends 'blog/base.html' %}\n\n{% load static %}\n\n{% block extra_styles %}\n&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"{% static 'blog/main.css' %}\"&gt;\n{% endblock %}\n\n{% block main %}\n&lt;main role=\"main\" class=\"container\"&gt;\n    &lt;div class=\"row\"&gt;\n        &lt;div class=\"col-md-8\"&gt;\n            {% block blog-content %}\n            {% endblock %}\n        &lt;/div&gt;\n        &lt;div class=\"col-md-4\"&gt;\n            &lt;div class=\"content-section\"&gt;\n                &lt;h3&gt;Sidebar&lt;/h3&gt;\n                &lt;p class='text-muted'&gt;You can put any information here you'd like.\n                &lt;ul class=\"list-group\"&gt;\n                    &lt;li class=\"list-group-item list-group-item-light\"&gt;Latest Posts&lt;/li&gt;\n                    &lt;li class=\"list-group-item list-group-item-light\"&gt;Announcements&lt;/li&gt;\n                    &lt;li class=\"list-group-item list-group-item-light\"&gt;Calendars&lt;/li&gt;\n                    &lt;li class=\"list-group-item list-group-item-light\"&gt;etc&lt;/li&gt;\n                &lt;/ul&gt;\n                &lt;/p&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/main&gt;\n{% endblock %}\n</pre> </li> </ul> </li> </ul>"},{"location":"Django/04-Django-Blog/01-get-started/#home-template-homehtml","title":"Home Template (<code>home.html</code>)\u00b6","text":"<ul> <li><p>Extends the <code>main</code> template and provides content for the <code>blog-content</code> block.</p> <pre>{% extends 'blog/main.html' %}\n\n{% block blog-content%}\n\n{% if posts %} {% for post in posts %}\n&lt;div&gt;\n    &lt;article class=\"media content-section\"&gt;\n        &lt;div class=\"media-body\"&gt;\n            &lt;div class=\"article-metadata\"&gt;\n                &lt;a class=\"mr-2\" href=\"#\"&gt;{{ post.author }}&lt;/a&gt;\n                &lt;small class=\"text-muted\"&gt;{{ post.date_posted }}&lt;/small&gt;\n            &lt;/div&gt;\n            &lt;h2&gt;&lt;a class=\"article-title\" href=\"#\"&gt;{{ post.title }}&lt;/a&gt;&lt;/h2&gt;\n            &lt;p class=\"article-content\"&gt;{{ post.content }}&lt;/p&gt;\n        &lt;/div&gt;\n    &lt;/article&gt;\n&lt;/div&gt;\n{% endfor %} {% endif %}\n\n{% endblock blog-content%}\n</pre> </li> </ul>"},{"location":"Django/04-Django-Blog/01-get-started/#django-admin","title":"Django Admin\u00b6","text":"<p>Django's <code>admin</code> interface is a powerful tool for managing application data.</p> <ul> <li>It provides a web-based interface for <code>CRUD</code> (Create, Read, Update, Delete) operations.</li> </ul>"},{"location":"Django/04-Django-Blog/01-get-started/#enable-the-admin-interface","title":"Enable the Admin Interface\u00b6","text":"<ul> <li>Ensure the following in your <code>django_project/settings.py</code>:<ul> <li><p><code>django.contrib.admin</code>: Enables the admin site.</p> </li> <li><p><code>django.contrib.auth</code>: Provides authentication framework.</p> </li> <li><p><code>django.contrib.contenttypes</code>: Provides content type framework.</p> </li> <li><p><code>django.contrib.sessions</code>: Manages user sessions.</p> </li> <li><p><code>django.contrib.messages</code>: Provides messaging framework.</p> </li> <li><p><code>django.contrib.staticfiles</code>: Manages static files.</p> <pre>INSTALLED_APPS = [\n    ...\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    ...\n]\n</pre> </li> </ul> </li> </ul>"},{"location":"Django/04-Django-Blog/01-get-started/#create-a-superuser","title":"Create a Superuser\u00b6","text":"<ul> <li>To access the admin site, create a superuser:</li> </ul> <pre>python manage.py createsuperuser\n</pre> <ul> <li>Follow the prompts to set a username, email, and password.</li> </ul>"},{"location":"Django/04-Django-Blog/01-get-started/#add-models-to-the-admin","title":"Add Models to the Admin\u00b6","text":"<ul> <li>To manage your models in the <code>admin</code> interface, register them in <code>admin.py</code>.</li> <li>Example (<code>blog/admin.py</code>)<ul> <li><p><code>admin.site.register(Model)</code>: Registers the model with the admin interface.</p> <pre>from django.contrib import admin\nfrom .models import Post, Comment\n\nadmin.site.register(Post)\n</pre> </li> </ul> </li> </ul>"},{"location":"Django/04-Django-Blog/02-database-and-admin/","title":"Blog Project 02","text":"<ul> <li>If you facing any problem, you can re-create database, but your all data will be gone (including super-user)<ul> <li><p>In default, Django use <code>db.sqlite3</code> to store all data</p> <pre>rm db.sqlite3\n</pre> </li> </ul> </li> </ul>"},{"location":"Django/04-Django-Blog/02-database-and-admin/#database-and-migrations","title":"Database and Migrations\u00b6","text":"<ul> <li><p>Reference</p> </li> <li><p>Django's <code>ORM</code> (Object-Relational Mapping) provides a powerful and flexible way to interact with databases.</p> </li> <li><p>This tutorial will guide you through setting up models, creating and applying <code>migrations</code>, and managing your database schema. We'll use a blogging application with <code>Post</code>, <code>User</code>, and <code>Comment</code> models as examples.</p> </li> </ul>"},{"location":"Django/04-Django-Blog/02-database-and-admin/#setting-up-your-models","title":"Setting Up Your Models\u00b6","text":"<ul> <li><p>Let's start by defining our models in <code>blog/models.py</code>.</p> </li> <li><p>Here is a table listing the <code>supported field types</code> in <code>Django's django.db.models</code> module along with examples for each</p> Field Type Description Example CharField A string field, for small- to large-sized strings. name = models.CharField(max_length=100) TextField A large text field. Use this for large amounts of text. description = models.TextField() IntegerField An integer field. age = models.IntegerField() FloatField A floating-point number field. price = models.FloatField() BooleanField A boolean field. is_active = models.BooleanField(default=True) DateField A date field. birth_date = models.DateField() DateTimeField A date and time field. created_at = models.DateTimeField(auto_now_add=True) TimeField A time field. start_time = models.TimeField() EmailField An Email field. email = models.EmailField() URLField A URL field. website = models.URLField() SlugField A slug field. slug = models.SlugField() FileField A file upload field. file = models.FileField(upload_to='uploads/') ImageField An image upload field. image = models.ImageField(upload_to='images/') ForeignKey A many-to-one relationship. author = models.ForeignKey(Author, on_delete=models.CASCADE) OneToOneField A one-to-one relationship. profile = models.OneToOneField(Profile, on_delete=models.CASCADE) ManyToManyField A many-to-many relationship. categories = models.ManyToManyField(Category) DecimalField A fixed-precision decimal number field. price = models.DecimalField(max_digits=10, decimal_places=2) PositiveIntegerField An integer field for positive values only. quantity = models.PositiveIntegerField() PositiveSmallIntegerField A small integer field for positive values only. rank = models.PositiveSmallIntegerField() SmallIntegerField A small integer field. votes = models.SmallIntegerField() DurationField A field for storing periods of time. duration = models.DurationField() UUIDField A field for storing universally unique identifiers. uuid = models.UUIDField(default=uuid.uuid4, editable=False) BinaryField A field for storing binary data. data = models.BinaryField() JSONField A field for storing JSON data. metadata = models.JSONField() </li> </ul>"},{"location":"Django/04-Django-Blog/02-database-and-admin/#post-model","title":"Post Model\u00b6","text":"<ul> <li><p>CharField: Represents a short-to-mid-sized string.</p> </li> <li><p>ForeignKey: Creates a <code>many-to-one</code> relationship to the <code>User</code> model.</p> </li> <li><p>TextField: Represents large text fields.</p> </li> <li><p>DateTimeField: Represents a <code>date</code> and <code>time</code> field, with default set to the current time.</p> <pre>from django.db import models\nfrom django.utils import timezone\nfrom django.contrib.auth.models import User\n\nclass Post(models.Model):\n    title = models.CharField(max_length=80)\n    author = models.ForeignKey(User, on_delete=models.CASCADE)\n    content = models.TextField()\n    date_posted = models.DateTimeField(default=timezone.now)\n\n    def __str__(self):\n        return self.title\n</pre> </li> </ul>"},{"location":"Django/04-Django-Blog/02-database-and-admin/#comment-model","title":"Comment Model\u00b6","text":"<ul> <li><p>ForeignKey to Post and User: Each comment is associated with a specific post and user.</p> <pre>class Comment(models.Model):\n    post = models.ForeignKey(Post, on_delete=models.CASCADE)\n    author = models.ForeignKey(User, on_delete=models.CASCADE)\n    content = models.TextField()\n    date_posted = models.DateTimeField(default=timezone.now)\n\n    def __str__(self):\n        return f'Comment by {self.author} on {self.post}'\n</pre> </li> </ul>"},{"location":"Django/04-Django-Blog/02-database-and-admin/#creating-and-applying-migrations","title":"Creating and Applying Migrations\u00b6","text":"<ul> <li>After defining your models, you need to create and apply <code>migrations</code> to update the database schema.</li> </ul>"},{"location":"Django/04-Django-Blog/02-database-and-admin/#creating-migrations","title":"Creating Migrations\u00b6","text":"<ul> <li><p>Run the following command to create <code>migrations</code> based on the changes in your models</p> </li> <li><p>This command generates a migration file in the <code>blog/migrations</code> directory.</p> <pre>python manage.py makemigrations\n</pre> </li> </ul>"},{"location":"Django/04-Django-Blog/02-database-and-admin/#applying-migrations","title":"Applying Migrations\u00b6","text":"<ul> <li>To apply the migrations and update the database schema, run:</li> <li>This command applies the <code>migrations</code> to your database, creating the necessary <code>tables</code> and <code>fields</code>.<pre>python manage.py migrate\n</pre> </li> </ul>"},{"location":"Django/04-Django-Blog/02-database-and-admin/#creating-demo-data","title":"Creating Demo Data\u00b6","text":"<ul> <li><p>First, ensure you have access to Django's <code>shell</code> to execute Python code within the context of your Django project. Run the following command:</p> <pre>python manage.py shell\n</pre> </li> <li><p>Within the shell, you can create instances of your models.</p> <pre>from django.contrib.auth.models import User\nfrom blog.models import Post, Comment\nfrom django.utils import timezone\n\n# Create a user\nuser = User.objects.create_user(username='john_doe', email='john@example.com', password='password123')\n\n# Create some posts\npost1 = Post.objects.create(title='First Post', author=user, content='This is the content of the first post', date_posted=timezone.now())\npost2 = Post.objects.create(title='Second Post', author=user, content='This is the content of the second post', date_posted=timezone.now())\n\n# Create comments for post1\ncomment1 = Comment.objects.create(post=post1, author=user, content='This is the first comment on the first post', date_posted=timezone.now())\ncomment2 = Comment.objects.create(post=post1, author=user, content='This is the second comment on the first post', date_posted=timezone.now())\n\n# Create a comment for post2\ncomment3 = Comment.objects.create(post=post2, author=user, content='This is the first comment on the second post', date_posted=timezone.now())\n</pre> </li> </ul>"},{"location":"Django/04-Django-Blog/02-database-and-admin/#orm-queries","title":"ORM Queries\u00b6","text":""},{"location":"Django/04-Django-Blog/02-database-and-admin/#basic-queries","title":"Basic Queries\u00b6","text":"<ol> <li><p>Retrieve all posts</p> </li> <li><p>Filter posts by author</p> </li> <li><p>Get a single post by ID</p> <pre># Retrieve all posts\nall_posts = Post.objects.all()\n# Filter posts by author\nauthor_posts = Post.objects.filter(author=user)\n# Get a single post by ID\nsingle_post = Post.objects.get(id=1)\n</pre> </li> </ol>"},{"location":"Django/04-Django-Blog/02-database-and-admin/#related-object-queries","title":"Related Object Queries\u00b6","text":"<ol> <li><p>Get all comments for a specific post</p> </li> <li><p>Access related objects using reverse relationships</p> <pre># Get all comments for a specific post\npost_comments = Comment.objects.filter(post=post1)\n# Access related objects using reverse relationships\npost_comments = post1.comment_set.all()\n</pre> </li> </ol>"},{"location":"Django/04-Django-Blog/02-database-and-admin/#advanced-queries-field-lookups","title":"Advanced Queries [field lookups]\u00b6","text":"<ul> <li><p>Django's <code>ORM</code> uses <code>field lookups</code>, which are used to create complex queries.</p> </li> <li><p>Here's a table of common <code>field lookups</code> with their purpose and examples:</p> Function Purpose Example exact Exact match Post.objects.filter(title__exact='First Post') iexact Case-insensitive exact match Post.objects.filter(title__iexact='first post') contains Contains substring Post.objects.filter(content__contains='Django') icontains Case-insensitive contains Post.objects.filter(content__icontains='django') in Value is in a given list Post.objects.filter(id__in=[1, 2, 3]) gt Greater than Post.objects.filter(date_posted__gt=timezone.now() - timedelta(days=7)) gte Greater than or equal to Post.objects.filter(date_posted__gte=timezone.now() - timedelta(days=7)) lt Less than Post.objects.filter(date_posted__lt=timezone.now()) lte Less than or equal to Post.objects.filter(date_posted__lte=timezone.now()) startswith Starts with substring Post.objects.filter(title__startswith='Fir') istartswith Case-insensitive starts with substring Post.objects.filter(title__istartswith='fir') endswith Ends with substring Post.objects.filter(title__endswith='Post') iendswith Case-insensitive ends with substring Post.objects.filter(title__iendswith='post') range Value is within a range Post.objects.filter(date_posted__range=[start_date, end_date]) date Match a specific date Post.objects.filter(date_posted__date=datetime.date(2023, 6, 17)) year Match a specific year Post.objects.filter(date_posted__year=2023) month Match a specific month Post.objects.filter(date_posted__month=6) day Match a specific day Post.objects.filter(date_posted__day=17) week_day Match a specific day of the week Post.objects.filter(date_posted__week_day=2) isnull Check for NULL (or not NULL) Post.objects.filter(author__isnull=True) </li> </ul> <ol> <li><p>Retrieve posts containing a keyword</p> </li> <li><p>Retrieve posts published in the last 7 days</p> </li> <li><p>Order posts by date posted (newest first)</p> <pre># Retrieve posts containing a keyword\nkeyword_posts = Post.objects.filter(content__icontains='content')\n# Retrieve posts published in the last 7 days\nrecent_posts = Post.objects.filter(date_posted__gte=timezone.now() - timezone.timedelta(days=7))\n# Order posts by date posted (newest first)\nordered_posts = Post.objects.all().order_by('-date_posted')\n</pre> </li> </ol>"},{"location":"Django/04-Django-Blog/02-database-and-admin/#working-with-the-admin-interface","title":"Working with the Admin Interface\u00b6","text":"<ul> <li>Register your models with the <code>admin</code> interface to manage them through Django's admin panel.</li> </ul>"},{"location":"Django/04-Django-Blog/02-database-and-admin/#registering-models","title":"Registering Models\u00b6","text":"<ul> <li><p>In <code>blog/admin.py</code>, register your models:</p> </li> <li><p>This will make the <code>Post</code> and <code>Comment</code> models accessible in the <code>admin</code> interface.</p> <pre>from django.contrib import admin\nfrom .models import Post, Comment\n\nadmin.site.register(Post)\nadmin.site.register(Comment)\n</pre> </li> </ul>"},{"location":"Django/04-Django-Blog/03-user-registration/","title":"Blog Project 03","text":""},{"location":"Django/04-Django-Blog/03-user-registration/#user-authentication-tutorial","title":"User Authentication Tutorial\u00b6","text":"<ul> <li><p>Reference</p> </li> <li><p><code>Django</code> provides a robust authentication system that handles user accounts, groups, permissions, and cookie-based user sessions.</p> </li> <li><p>In this tutorial, we will learn how to create an <code>authentication system</code> for a Django application. This involves setting up user registration, login, and logout functionality, and restricting access to certain pages.</p> </li> </ul>"},{"location":"Django/04-Django-Blog/03-user-registration/#set-up-user-authentication-app","title":"Set up User Authentication app\u00b6","text":""},{"location":"Django/04-Django-Blog/03-user-registration/#register-app","title":"Register app\u00b6","text":"<ol> <li><p>First, create a new app named <code>users</code>:</p> <pre>python manage.py startapp users\n</pre> </li> <li><p>Add the app to <code>INSTALLED_APPS</code> in <code>django_project/settings.py</code>:</p> <pre>INSTALLED_APPS = [\n    \"users.apps.UsersConfig\",\n    ...\n]\n</pre> </li> </ol>"},{"location":"Django/04-Django-Blog/03-user-registration/#create-user-models-and-forms","title":"Create User Models and Forms\u00b6","text":"<p>This section focuses on defining the <code>user profile model</code> and creating <code>forms</code> for user registration and profile updates.</p>"},{"location":"Django/04-Django-Blog/03-user-registration/#setup-crispy-environment","title":"Setup Crispy environment\u00b6","text":"<ol> <li><p>install the required libraries</p> <pre>pip install django-crispy-forms\npip install crispy-bootstrap4\n</pre> </li> <li><p>Add the app to <code>INSTALLED_APPS</code> in <code>django_project/settings.py</code>:</p> <pre>INSTALLED_APPS = [\n    \"crispy_forms\",\n    \"crispy_bootstrap4\",\n    ...\n]\n</pre> </li> <li><p>Set up the crispy environment in <code>django_project/settings.py</code>:</p> <pre>CRISPY_ALLOWED_TEMPLATE_PACKS = \"bootstrap4\"\nCRISPY_TEMPLATE_PACK = 'bootstrap4'\n</pre> </li> </ol>"},{"location":"Django/04-Django-Blog/03-user-registration/#create-forms-in-usersformspy","title":"Create forms in <code>users/forms.py</code>\u00b6","text":"<ul> <li>Since <code>User</code> is a build-in model in <code>django.contrib.auth</code>, we do not need to construct our own model again.</li> <li><code>Meta</code> Class: The <code>Meta</code> class is used to specify which model the form is associated with (<code>User</code>) and which fields should be included in the form.</li> </ul> <pre>from django import forms\nfrom django.contrib.auth.models import User\nfrom django.contrib.auth.forms import UserCreationForm\nfrom .models import UserProfile\nfrom crispy_forms.helper import FormHelper\nfrom crispy_forms.layout import Submit\n\nclass UserRegisterForm(UserCreationForm):\n    email = forms.EmailField()\n\n    class Meta:\n        model = User\n        fields = ['username', 'email', 'password1', 'password2']\n</pre> <ul> <li><p>Here is a table listing the <code>supported fields</code> in <code>Django forms</code> along with a brief description and an example</p> Field Type Description Example CharField A field for small- to large-sized strings. name = forms.CharField(max_length=100) EmailField A field for email addresses. email = forms.EmailField() IntegerField A field for integer values. age = forms.IntegerField() FloatField A field for floating-point numbers. price = forms.FloatField() BooleanField A field for boolean values. is_active = forms.BooleanField() DateField A field for date values. birth_date = forms.DateField() DateTimeField A field for date and time values. created_at = forms.DateTimeField() TimeField A field for time values. start_time = forms.TimeField() URLField A field for URL values. website = forms.URLField() SlugField A field for slug values. slug = forms.SlugField() ChoiceField A field for selecting a choice from a set of options. choice = forms.ChoiceField(choices=[('1', 'Option 1'), ('2', 'Option 2')]) MultipleChoiceField A field for selecting multiple choices from a set of options. choices = forms.MultipleChoiceField(choices=[('1', 'Option 1'), ('2', 'Option 2')]) FileField A field for uploading files. file = forms.FileField() ImageField A field for uploading image files. image = forms.ImageField() DecimalField A field for decimal values with fixed precision. price = forms.DecimalField(max_digits=10, decimal_places=2) DurationField A field for storing durations of time. duration = forms.DurationField() UUIDField A field for storing universally unique identifiers. uuid = forms.UUIDField() JSONField A field for storing JSON-encoded data. metadata = forms.JSONField() ModelChoiceField A field for selecting a single model instance. author = forms.ModelChoiceField(queryset=Author.objects.all()) ModelMultipleChoiceField A field for selecting multiple model instances. authors = forms.ModelMultipleChoiceField(queryset=Author.objects.all()) RegexField A field for validating input against a regular expression. zip_code = forms.RegexField(regex=r'^\\d{5}$') IPAddressField A field for validating IPv4 addresses. ip_address = forms.IPAddressField() GenericIPAddressField A field for validating IPv4 and IPv6 addresses. ip_address = forms.GenericIPAddressField(protocol='both') TypedChoiceField A field like `ChoiceField`, but returns a value of a specific type. choice = forms.TypedChoiceField(choices=[('1', 'Option 1'), ('2', 'Option 2')], coerce=int) TypedMultipleChoiceField A field like `MultipleChoiceField`, but returns values of a specific type. choices = forms.TypedMultipleChoiceField(choices=[('1', 'Option 1'), ('2', 'Option 2')], coerce=int) SplitDateTimeField A field for entering date and time separately. appointment = forms.SplitDateTimeField() ComboField A field that combines multiple fields into one. combo = forms.ComboField(fields=[forms.CharField(max_length=10), forms.EmailField()]) MultiValueField A field that validates multiple values. multi = forms.MultiValueField(fields=[forms.CharField(), forms.CharField()]) SplitHiddenDateTimeField A field like `SplitDateTimeField`, but renders as hidden widgets. hidden = forms.SplitHiddenDateTimeField() </li> </ul>"},{"location":"Django/04-Django-Blog/03-user-registration/#create-views-for-user-authentication","title":"Create Views for User Authentication\u00b6","text":""},{"location":"Django/04-Django-Blog/03-user-registration/#create-register-view","title":"Create <code>register</code> view\u00b6","text":"<ul> <li><p>If <code>request.method == POST</code>, we get the POST data and check the validation, if passed, we use <code>form.save</code> to push data into our database.</p> </li> <li><p>If it's a <code>GET</code> request, we just render the <code>register.html</code> template</p> <pre>from django.contrib import messages\nfrom .forms import UserRegisterForm\n\n# Create your views here.\ndef register(request):\n    if request.method == 'POST':\n        form = UserRegisterForm(request.POST)\n\n        if form.is_valid():\n            form.save()\n            username = form.cleaned_data.get('username')\n            messages.success(request, f'Account created for {username}!')\n            return redirect('blog-home')\n    else:\n        form = UserRegisterForm()\n    return render(request, 'users/register.html', {'form': form})\n</pre> </li> <li><p><code>Django's messages framework</code> allows you to store messages in one request and retrieve them for display in a subsequent request. It's often used to provide feedback to the user.</p> <ul> <li><p>Example in Views</p> <pre># Example in a view\nmessages.success(request, 'Your message here')\n</pre> </li> <li><p>Handling Messages in Templates:</p> <pre>{% for message in messages %}\n&lt;div class=\"alert alert-{{ message.tags }}\"&gt;\n    {{ message }}\n&lt;/div&gt;\n{% endfor %}\n</pre> </li> <li><p>Message Levels:</p> <ul> <li><code>messages.debug</code></li> <li><code>messages.info</code></li> <li><code>messages.success</code></li> <li><code>messages.warning</code></li> <li><code>messages.error</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"Django/04-Django-Blog/03-user-registration/#setting-up-url-patterns","title":"Setting Up URL Patterns\u00b6","text":"<ol> <li><p>Define URLs in <code>users/urls.py</code>:</p> <pre>from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('register/', views.register, name='register'),\n    # path('profile/', views.profile, name='profile'),\n]\n</pre> </li> <li><p>Include users URLs in your project's <code>django_project/urls.py</code>:</p> <pre>urlpatterns = [\n    ...,\n    path('users/', include('users.urls')),\n    ...,\n]\n</pre> </li> </ol>"},{"location":"Django/04-Django-Blog/03-user-registration/#creating-templates","title":"Creating Templates\u00b6","text":"<ul> <li><p>Create <code>register.html</code> in <code>users/templates/users/register.html</code>:</p> <pre>{% extends \"blog/main.html\" %}\n{% load crispy_forms_tags %}\n\n{% block main-content %}\n\n&lt;div class=\"container\"&gt;\n    &lt;h2&gt;Join Today&lt;/h2&gt;\n    {% for message in messages %}\n    &lt;div class=\"alert alert-{{ message.tags }}\"&gt;\n        {{ message }}\n    &lt;/div&gt;\n    {% endfor %}\n    &lt;form method=\"POST\"&gt;\n        {% csrf_token %}\n        {{ form|crispy }}\n        &lt;div class=\"d-flex justify-content-end\"&gt;\n            &lt;button type=\"submit\" class=\"btn btn-primary me-2\"&gt;Register&lt;/button&gt;\n            &lt;a href=\"{% url 'blog-home' %}\" class=\"btn btn-danger\"&gt;Cancel&lt;/a&gt;\n        &lt;/div&gt;\n    &lt;/form&gt;\n    &lt;div class=\"border-top mt-3\"&gt;\n        &lt;small class=\"text-muted\"&gt;\n            Already Have An Account? &lt;a class=\"ml-2\" href=\"#\"&gt;Sign In&lt;/a&gt;\n        &lt;/small&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n\n{% endblock main-content %}\n</pre> </li> <li><p>Button Alignment: The <code>d-flex justify-content-end</code> class places both buttons on the right side of the form row.</p> </li> <li><p>Button Spacing: The <code>me-2</code> class adds a margin to the right of the Register button, creating space between the buttons.</p> </li> <li><p>Cancel Button: The cancel button is styled as a danger button (<code>btn btn-danger</code>) to differentiate it from the primary action.</p> </li> </ul>"},{"location":"Django/04-Django-Blog/03-user-registration/#login-and-logout-page","title":"Login and Logout Page\u00b6","text":""},{"location":"Django/04-Django-Blog/03-user-registration/#step-1-construct-the-url-patterns","title":"Step 1: Construct the URL Patterns\u00b6","text":"<ul> <li><p>First, you'll need to define the URL patterns for the login and logout views using Django's built-in views.</p> <pre># users/urls.py\nfrom django.urls import path\nfrom django.contrib.auth.views import LoginView, LogoutView\n\nurlpatterns = [\n    ...\n    path('login/', LoginView.as_view(template_name='users/login.html'), name='login'),\n    path('logout/', LogoutView.as_view(template_name='users/logout.html'), name='logout'),\n    ...\n]\n</pre> </li> <li><p><code>LoginView</code> is used to handle user login. It displays a login form and processes the login request.</p> Parameter Description Default Value Example Value template_name The name of the template to use for displaying the login form. 'registration/login.html' 'users/login.html' authentication_form The form class to use for validating the login. AuthenticationForm MyCustomAuthenticationForm redirect_authenticated_user Whether to redirect authenticated users who access the login page. False True extra_context A dictionary of context data to add to the default context. {} {'next': 'somewhere'} redirect_field_name The name of a GET parameter that contains the URL to redirect to after login. 'next' 'next_page' success_url URL to redirect to after a successful login. None '/profile/' </li> </ul> <ul> <li><p><code>LogoutView</code> is used to handle user logout. It logs the user out and redirects them to a specified URL.</p> Parameter Description Default Value Example Value template_name The name of the template to use for displaying a post-logout message (if any). None 'users/logout.html' next_page URL to redirect to after logging out. None '/login/' redirect_field_name The name of a GET parameter that contains the URL to redirect to after logout. 'next' 'next_page' extra_context A dictionary of context data to add to the default context. {} {'info': 'You have been logged out.'} </li> </ul>"},{"location":"Django/04-Django-Blog/03-user-registration/#step-2-create-the-templates-for-login-and-logout-pages","title":"Step 2: Create the Templates for Login and Logout Pages\u00b6","text":"<ul> <li><p>Next, create the templates for the login and logout pages. Use Django's template inheritance and crispy forms for better styling.</p> </li> <li><p><code>users/templates/users/login.html</code></p> <pre>{% extends \"blog/main.html\" %} {% load crispy_forms_tags %} {% block\nmain-content %}\n&lt;div class=\"container\"&gt;\n  &lt;h2&gt;Log In&lt;/h2&gt;\n  {% for message in messages %}\n  &lt;div class=\"alert alert-{{ message.tags }}\"&gt;{{ message }}&lt;/div&gt;\n  {% endfor %}\n  &lt;form method=\"POST\"&gt;\n    {% csrf_token %} {{ form|crispy }}\n    &lt;div class=\"d-flex justify-content-end\"&gt;\n      &lt;button type=\"submit\" class=\"btn btn-primary me-2 mt-2\"&gt;Login&lt;/button&gt;\n      &lt;a href=\"{% url 'blog-home' %}\" class=\"btn btn-danger mt-2\"&gt;Cancel&lt;/a&gt;\n    &lt;/div&gt;\n  &lt;/form&gt;\n  &lt;div class=\"border-top mt-3\"&gt;\n    &lt;small class=\"text-muted\"&gt;\n      Need an account?\n      &lt;a class=\"ml-2\" href=\"{% url 'register' %}\"&gt;Sign Up Now&lt;/a&gt;\n    &lt;/small&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n{% endblock main-content %}\n</pre> </li> <li><p><code>users/templates/users/logout.html</code></p> <pre>{% extends \"blog/main.html\" %} {% block main-content %}\n&lt;div class=\"container\"&gt;\n&lt;h2&gt;You have been logged out&lt;/h2&gt;\n&lt;a href=\"{% url 'login' %}\" class=\"btn btn-primary mt-2\"&gt;Log In Again&lt;/a&gt;\n&lt;/div&gt;\n{% endblock main-content %}\n</pre> </li> </ul>"},{"location":"Django/04-Django-Blog/03-user-registration/#step-3-add-conditional-statements-in-the-navigation-bar","title":"Step 3: Add Conditional Statements in the Navigation Bar\u00b6","text":"<ul> <li><p>Update your navigation bar template to show different options based on the user's authentication status.</p> <pre>&lt;!-- Navbar template --&gt;\n...\n&lt;div class=\"navbar-nav ml-auto\"&gt;\n  {% if user.is_authenticated %}\n  &lt;a class=\"nav-item nav-link\" href=\"{% url 'profile' %}\"&gt;Profile&lt;/a&gt;\n  &lt;a class=\"nav-item nav-link\" href=\"{% url 'logout' %}\"&gt;Logout&lt;/a&gt;\n  {% else %}\n  &lt;a class=\"nav-item nav-link\" href=\"{% url 'login' %}\"&gt;Login&lt;/a&gt;\n  &lt;a class=\"nav-item nav-link\" href=\"{% url 'register' %}\"&gt;Register&lt;/a&gt;\n  {% endif %}\n&lt;/div&gt;\n...\n</pre> </li> </ul> <ul> <li>In Django, the <code>user</code> object, typically an instance of <code>django.contrib.auth.models.User</code>, has various attributes and methods that provide information about the user and enable interaction with user data.</li> </ul>"},{"location":"Django/04-Django-Blog/03-user-registration/#attributes-parameters","title":"Attributes (Parameters)\u00b6","text":"Attribute Purpose Example Usage username The username of the user. {{ user.username }} first_name The first name of the user. {{ user.first_name }} last_name The last name of the user. {{ user.last_name }} email The email address of the user. {{ user.email }} is_staff True if the user is allowed to access the admin site. {{ user.is_staff }} is_active True if the user account is active. {{ user.is_active }} is_superuser True if the user has all permissions without explicitly assigning them. {{ user.is_superuser }} last_login The date and time of the user's last login. {{ user.last_login }} date_joined The date and time when the user account was created. {{ user.date_joined }} groups A related manager for handling the groups the user belongs to. {{ user.groups.all }} user_permissions A related manager for handling the permissions the user has. {{ user.user_permissions.all }}"},{"location":"Django/04-Django-Blog/03-user-registration/#methods-functions","title":"Methods (Functions)\u00b6","text":"Method Purpose Example Usage get_username() Returns the username for the user. {{ user.get_username }} get_full_name() Returns the first name and the last name with a space in between. {{ user.get_full_name }} get_short_name() Returns the first name of the user. {{ user.get_short_name }} set_password(raw_password) Sets the user's password to the given raw string, taking care of the password hashing. user.set_password('new_password') check_password(raw_password) Returns True if the given raw string is the correct password for the user. user.check_password('password') set_unusable_password() Marks the user as having no password set. user.set_unusable_password() has_usable_password() Returns True if the user has a usable password. user.has_usable_password() email_user(subject, message, from_email=None, **kwargs) Sends an email to the user. user.email_user('Subject', 'Message') get_group_permissions(obj=None) Returns a list of permission strings that this user has through their groups. user.get_group_permissions() get_all_permissions(obj=None) Returns a list of permission strings that this user has, both through group and user permissions. user.get_all_permissions() has_perm(perm, obj=None) Returns True if the user has the specified permission. user.has_perm('app_label.permission_code') has_perms(perms, obj=None) Returns True if the user has each of the specified permissions. user.has_perms(['app_label.perm1', 'perm2']) has_module_perms(app_label) Returns True if the user has any permissions in the given app label. user.has_module_perms('app_label') is_authenticated (property) Always True for any user. This is a way to tell if the user has been authenticated. {% if user.is_authenticated %}...{% endif %} is_anonymous (property) Always False for any user. This is a way to tell if the user is not authenticated. {% if user.is_anonymous %}...{% endif %}"},{"location":"Django/04-Django-Blog/03-user-registration/#step-4-configure-settings","title":"Step 4: Configure Settings\u00b6","text":"<ul> <li><p>Set the login redirect URL and the login URL in your <code>django_project/setting.py</code></p> </li> <li><p><code>LOGIN_URL</code>: This setting defines the URL where users will be redirected if they need to log in. For instance, if a user tries to access a page that requires authentication without being logged in, they will be redirected to this URL.</p> </li> <li><p><code>LOGIN_REDIRECT_URL</code>: This setting defines the URL where users will be redirected after successfully logging in.</p> <pre># settings.py\nLOGIN_REDIRECT_URL = 'profile'\nLOGIN_URL = 'login'\n</pre> </li> </ul>"},{"location":"Django/04-Django-Blog/03-user-registration/#profile-and-picture-customize-forms","title":"Profile and Picture (Customize forms)\u00b6","text":"<ul> <li><p>Install <code>pillow</code> for image processing</p> <pre>pip install pillow\n</pre> </li> </ul>"},{"location":"Django/04-Django-Blog/03-user-registration/#step-1-create-userprofile-model-and-configure-media-settings","title":"Step 1: Create UserProfile Model and configure Media settings\u00b6","text":"<ul> <li><p>The <code>UserProfile</code> model is an extension of the default Django <code>User</code> model.</p> </li> <li><p>It allows us to store additional information about the <code>user</code>, such as a bio, profile picture, and birth date.</p> <pre>## users/models.py\nfrom django.db import models\nfrom django.contrib.auth.models import User\n\nclass UserProfile(models.Model):\n    user = models.OneToOneField(User, on_delete=models.CASCADE)\n    bio = models.TextField(default=\"This user does not have a bio\", blank=True)\n    image = models.ImageField(default='default.png', upload_to='profile_pics')\n    birth_date = models.DateField(null=True, blank=True)\n\n    def __str__(self):\n        return f'{self.user.username} Profile'\n</pre> </li> <li><p>Define where uploaded media files (like profile pictures) are stored and how they are accessed.</p> <pre># django_project/settings.py\n\nimport os\n...\n\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\nMEDIA_URL = '/media/'\n</pre> </li> </ul>"},{"location":"Django/04-Django-Blog/03-user-registration/#step-2-construct-the-url-pattern","title":"Step 2: Construct the URL Pattern\u00b6","text":"<ul> <li><p>Define the URL pattern to access the user's profile page.</p> <pre>## users/urls.py\nfrom django.urls import path\nfrom . import views\n\nurlpatterns = [\n    ...,\n    path('profile/', views.profile, name='profile'),\n]\n</pre> </li> </ul>"},{"location":"Django/04-Django-Blog/03-user-registration/#step-3-create-profile-view","title":"Step 3: Create Profile View\u00b6","text":"<ul> <li><p>The view handles the logic of rendering the user profile page.</p> </li> <li><p>It ensures that only <code>authenticated users</code> can access the profile page.</p> <pre>## users/views.py\nfrom django.contrib.auth.decorators import login_required\nfrom django.shortcuts import render\n\n...\n\n@login_required\ndef profile(request):\n    return render(request, 'users/profile.html')\n</pre> </li> </ul>"},{"location":"Django/04-Django-Blog/03-user-registration/#step-4-construct-the-template","title":"Step 4: Construct the Template\u00b6","text":"<ul> <li><p>It displays the user's information and provides a form for updating the profile.</p> <pre>&lt;!-- templates/users/profile.html --&gt;\n{% extends \"blog/main.html\" %}\n{% load crispy_forms_tags %}\n\n{% block main-content %}\n\n&lt;h2&gt;User Profile&lt;/h2&gt;\n\n&lt;div class=\"content-section\"&gt;\n    &lt;div class=\"row\"&gt;\n        &lt;div class=\"col-md-3\"&gt;\n            &lt;img class=\"rounded-circle account-img\" src=\"{{ user.userprofile.image.url }}\" /&gt;\n        &lt;/div&gt;\n        &lt;div class=\"col-md-9\"&gt;\n            &lt;h2 class=\"account-heading\"&gt;{{ user.username }}&lt;/h2&gt;\n            &lt;p class=\"text-secondary\"&gt;{{ user.email }}&lt;/p&gt;\n            &lt;ul class=\"list-group\"&gt;\n                &lt;li class=\"list-group-item\"&gt;\n                    &lt;strong&gt;Bio:&lt;/strong&gt; {{ user.userprofile.bio }}\n                &lt;/li&gt;\n                &lt;li class=\"list-group-item\"&gt;\n                    &lt;strong&gt;Birth Date:&lt;/strong&gt; {{ user.userprofile.birth_date|date:\"F d, Y\" }}\n                &lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;!-- FORM HERE --&gt;\n&lt;/div&gt;\n\n{% endblock main-content %}\n</pre> </li> </ul>"},{"location":"Django/04-Django-Blog/03-user-registration/#step-5-create-signals","title":"Step 5: Create Signals\u00b6","text":"<ul> <li><p>Use <code>Django signals</code> to automatically create and save a <code>UserProfile</code> instance whenever a new User instance is created.</p> </li> <li><p>This ensures that every user has a profile.</p> <pre># users/signals.py\n\nfrom django.db.models.signals import post_save\nfrom django.contrib.auth.models import User\nfrom django.dispatch import receiver\nfrom .models import UserProfile\n\n@receiver(post_save, sender=User)\ndef create_profile(sender, instance, created, **kwargs):\n    if created:\n        UserProfile.objects.create(user=instance)\n\n@receiver(post_save, sender=User)\ndef save_profile(sender, instance, **kwargs):\n    instance.userprofile.save()\n</pre> </li> </ul>"},{"location":"Django/04-Django-Blog/03-user-registration/#step-6-construct-two-forms-user-and-userprofile","title":"Step 6: Construct Two Forms (User and UserProfile)\u00b6","text":"<ul> <li><p>Purpose: Create forms for updating user information and user profile information.</p> </li> <li><p>These forms will be used to handle the input from the profile page.</p> <pre># users/forms.py\nfrom django import forms\nfrom django.contrib.auth.models import User\nfrom .models import UserProfile\nfrom crispy_forms.helper import FormHelper\nfrom crispy_forms.layout import Submit\n\n...\n\nclass UserUpdateForm(forms.ModelForm):\n    email = forms.EmailField()\n\n    class Meta:\n        model = User\n        fields = ['username', 'email']\n\nclass UserProfileForm(forms.ModelForm):\n    class Meta:\n        model = UserProfile\n        fields = ['bio', 'image', 'birth_date']\n\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n        self.helper = FormHelper()\n        self.helper.add_input(Submit('update', 'Update'))\n</pre> </li> </ul>"},{"location":"Django/04-Django-Blog/03-user-registration/#step-7-update-the-profile-view","title":"Step 7: Update the Profile View\u00b6","text":"<ul> <li><p>Modify the profile view to handle POST requests for form submission and update user and user profile data.</p> <pre># users/views.py\n\nfrom django.contrib import messages\nfrom django.shortcuts import redirect\n\n...\n\n@login_required\ndef profile(request):\n    if request.method == 'POST':\n        u_form = UserUpdateForm(request.POST, instance=request.user)\n        p_form = UserProfileForm(request.POST, request.FILES, instance=request.user.userprofile)\n        if u_form.is_valid() and p_form.is_valid():\n            u_form.save()\n            p_form.save()\n            messages.success(request, f'Your account has been updated')\n            return redirect('profile')\n    else:\n        u_form = UserUpdateForm(instance=request.user)\n        p_form = UserProfileForm(instance=request.user.userprofile)\n\n    context = {\n        'u_form': u_form,\n        'p_form': p_form\n    }\n\n    return render(request, 'users/profile.html', context=context)\n</pre> </li> </ul>"},{"location":"Django/04-Django-Blog/03-user-registration/#step-8-update-the-template","title":"Step 8: Update the Template\u00b6","text":"<ul> <li><p>Modify the template to include forms for updating the user and user profile information.</p> <pre>&lt;!-- users/templates/users/profile.html --&gt;\n{% extends \"blog/main.html\" %}\n{% load crispy_forms_tags %}\n\n{% block main-content %}\n\n&lt;h2&gt;{{ user.username }}'s Profile&lt;/h2&gt;\n\n&lt;div class=\"content-section\"&gt;\n    &lt;div class=\"media\"&gt;\n        &lt;img class=\"rounded-circle account-img\" src=\"{{ user.userprofile.image.url }}\" /&gt;\n        &lt;div class=\"media-body\"&gt;\n            &lt;h2 class=\"account-heading\"&gt;{{ user.username }}&lt;/h2&gt;\n            &lt;p class=\"text-secondary\"&gt;{{ user.email }}&lt;/p&gt;\n            &lt;ul class=\"list-group\"&gt;\n                &lt;li class=\"list-group-item\"&gt;\n                    &lt;strong&gt;Bio:&lt;/strong&gt; {{ user.userprofile.bio }}\n                &lt;/li&gt;\n                &lt;li class=\"list-group-item\"&gt;\n                    &lt;strong&gt;Birth Date:&lt;/strong&gt; {{ user.userprofile.birth_date|date:\"F d, Y\" }}\n                &lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;form method=\"POST\" enctype=\"multipart/form-data\"&gt;\n        {% csrf_token %}\n        &lt;fieldset class=\"form-group\"&gt;\n            &lt;legend class=\"border-bottom mb-4\"&gt;Update Profile&lt;/legend&gt;\n            {{ u_form|crispy }}\n            {{ p_form|crispy }}\n        &lt;/fieldset&gt;\n        &lt;div class=\"form-group\"&gt;\n            &lt;button class=\"btn btn-outline-info\" type=\"submit\"&gt;Update&lt;/button&gt;\n        &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/div&gt;\n\n{% endblock main-content %}\n</pre> </li> </ul>"},{"location":"Django/04-Django-Blog/03-user-registration/#step-9-modify-the-userprofile-model-to-resize-images","title":"Step 9: Modify the UserProfile Model to Resize Images\u00b6","text":"<ul> <li><p>Update the UserProfile model to resize profile images to a maximum of 300x300 pixels to ensure uniformity and optimize storage space.</p> <pre># users/models.py\n\nfrom django.db import models\nfrom django.contrib.auth.models import User\nfrom PIL import Image\n\nclass UserProfile(models.Model):\n    user = models.OneToOneField(User, on_delete=models.CASCADE)\n    bio = models.TextField(default=\"This user does not have a bio\", blank=True)\n    image = models.ImageField(default='default.png', upload_to='profile_pics')\n    birth_date = models.DateField(null=True, blank=True)\n\n    def __str__(self):\n        return f'{self.user.username} Profile'\n\n    def save(self, *args, **kwargs):\n        super().save(*args, **kwargs)\n\n        # Resize uploaded image\n        img = Image.open(self.image.path)\n        if img.height &gt; 300 or img.width &gt; 300:\n            output_size = (300, 300)\n            img.thumbnail(output_size)\n            img.save(self.image.path)\n</pre> </li> </ul>"},{"location":"Django/04-Django-Blog/03-user-registration/#additional-resource","title":"Additional Resource\u00b6","text":""},{"location":"Django/04-Django-Blog/03-user-registration/#commonly-used-decorators","title":"Commonly Used Decorators\u00b6","text":"Decorator Purpose Use Example @login_required Ensures that the user is authenticated before accessing the view. @login_requireddef profile(request):\u00a0\u00a0\u00a0\u00a0return render(request, 'profile.html') @permission_required Ensures that the user has a specific permission before accessing the view. @permission_required('app_label.permission_code')def my_view(request):\u00a0\u00a0\u00a0\u00a0... @user_passes_test Allows access to the view if a given test is passed (e.g., custom check). @user_passes_test(lambda u: u.is_superuser)def my_view(request):\u00a0\u00a0\u00a0\u00a0... @csrf_exempt Exempts the view from CSRF verification. @csrf_exemptdef my_view(request):\u00a0\u00a0\u00a0\u00a0... @require_http_methods Restricts the allowed HTTP methods for the view. @require_http_methods([\"GET\", \"POST\"])def my_view(request):\u00a0\u00a0\u00a0\u00a0... @require_GET Restricts the view to handle only GET requests. @require_GETdef my_view(request):\u00a0\u00a0\u00a0\u00a0... @require_POST Restricts the view to handle only POST requests. @require_POSTdef my_view(request):\u00a0\u00a0\u00a0\u00a0... @cache_page Caches the view\u2019s response for a specified amount of time. @cache_page(60 * 15)def my_view(request):\u00a0\u00a0\u00a0\u00a0... @never_cache Prevents caching of the view\u2019s response. @never_cachedef my_view(request):\u00a0\u00a0\u00a0\u00a0... @vary_on_headers Varies the cache based on specific headers. @vary_on_headers('User-Agent')def my_view(request):\u00a0\u00a0\u00a0\u00a0... @method_decorator Applies a decorator to a class-based view method. @method_decorator(login_required, name='dispatch')class MyView(View):\u00a0\u00a0\u00a0\u00a0..."},{"location":"Django/04-Django-Blog/03-user-registration/#commonly-used-signals","title":"Commonly used Signals\u00b6","text":"Signal Purpose Example post_save Sent after a model\u2019s save() method is called.        Automatically create a profile for new users: <pre>\nfrom django.db.models.signals import post_save\nfrom django.contrib.auth.models import User\nfrom django.dispatch import receiver\nfrom .models import UserProfile\n\n<p>@receiver(post_save, sender=User)\ndef create_profile(sender, instance, created, **kwargs):\nif created:\nUserProfile.objects.create(user=instance)\n</p></pre> pre_save Sent before a model\u2019s save() method is called.        Auto-populate a field before saving: <pre>\nfrom django.db.models.signals import pre_save\nfrom django.dispatch import receiver\nfrom .models import MyModel\n\n<p>@receiver(pre_save, sender=MyModel)\ndef pre_save_handler(sender, instance, **kwargs):\ninstance.slug = slugify(instance.name)\n</p></pre> post_delete Sent after a model\u2019s delete() method is called.        Clean up related records after deletion: <pre>\nfrom django.db.models.signals import post_delete\nfrom django.dispatch import receiver\nfrom .models import MyModel\n\n<p>@receiver(post_delete, sender=MyModel)\ndef post_delete_handler(sender, instance, **kwargs):\ninstance.related_record.delete()\n</p></pre> pre_delete Sent before a model\u2019s delete() method is called.        Perform actions before deletion: <pre>\nfrom django.db.models.signals import pre_delete\nfrom django.dispatch import receiver\nfrom .models import MyModel\n\n<p>@receiver(pre_delete, sender=MyModel)\ndef pre_delete_handler(sender, instance, **kwargs):\nprint(f'Deleting: {instance}')\n</p></pre> m2m_changed Sent when a ManyToManyField is changed.        Log changes to many-to-many relationships: <pre>\nfrom django.db.models.signals import m2m_changed\nfrom django.dispatch import receiver\nfrom .models import MyModel\n\n<p>@receiver(m2m_changed, sender=MyModel.many_to_many_field.through)\ndef m2m_changed_handler(sender, instance, action, **kwargs):\nif action == \"post_add\":\nprint(f'Added to {instance}')\n</p></pre> request_started Sent when Django starts processing an HTTP request.        Initialize per-request data: <pre>\nfrom django.core.signals import request_started\nfrom django.dispatch import receiver\n\n<p>@receiver(request_started)\ndef request_started_handler(sender, **kwargs):\nprint('Request started')\n</p></pre> request_finished Sent when Django finishes processing an HTTP request.        Clean up after request processing: <pre>\nfrom django.core.signals import request_finished\nfrom django.dispatch import receiver\n\n<p>@receiver(request_finished)\ndef request_finished_handler(sender, **kwargs):\nprint('Request finished')\n</p></pre> user_logged_in Sent when a user logs in.        Track user login activities: <pre>\nfrom django.contrib.auth.signals import user_logged_in\nfrom django.dispatch import receiver\n\n<p>@receiver(user_logged_in)\ndef user_logged_in_handler(sender, request, user, **kwargs):\nprint(f'User {user} logged in')\n</p></pre> user_logged_out Sent when a user logs out.        Track user logout activities: <pre>\nfrom django.contrib.auth.signals import user_logged_out\nfrom django.dispatch import receiver\n\n<p>@receiver(user_logged_out)\ndef user_logged_out_handler(sender, request, user, **kwargs):\nprint(f'User {user} logged out')\n</p></pre> user_signup Custom signal, often used to handle user sign-up events.        Handle additional sign-up logic: <pre>\nfrom django.dispatch import Signal\n\n<p>user_signup = Signal(providing_args=[\"user\", \"request\"])</p>\n<p>@receiver(user_signup)\ndef user_signup_handler(sender, user, request, **kwargs):\nprint(f'User {user} signed up')\n</p></pre>"},{"location":"Django/04-Django-Blog/04-post-crud/","title":"Blog Project 04","text":""},{"location":"Django/04-Django-Blog/04-post-crud/#post-create-read-update-and-delete-crud","title":"POST Create, Read, Update and Delete (CRUD)\u00b6","text":"<ul> <li>In this chapter, we will use class based view to implement Post Create, Detail, Update and Delete functions</li> </ul>"},{"location":"Django/04-Django-Blog/04-post-crud/#introduction-to-class-based-views-cbvs-vs-function-based-views-fbvs","title":"Introduction to Class-Based Views (CBVs) vs. Function-Based Views (FBVs)\u00b6","text":""},{"location":"Django/04-Django-Blog/04-post-crud/#class-based-views-cbvs","title":"Class-Based Views (CBVs):\u00b6","text":"<p>Advantages:</p> <ul> <li>Reusable: You can inherit and reuse views.</li> <li>Organized: Code is more structured, separating concerns into methods.</li> <li>Built-in functionality: CBVs provide built-in methods for common tasks. Disadvantages:</li> <li>Complexity: More complex to understand initially.</li> <li>Less control: Overriding built-in behavior can be complex.</li> </ul>"},{"location":"Django/04-Django-Blog/04-post-crud/#function-based-views-fbvs","title":"Function-Based Views (FBVs):\u00b6","text":"<p>Advantages:</p> <ul> <li>Simplicity: Easier to understand and use.</li> <li>Flexibility: More straightforward for simple views. Disadvantages:</li> <li>Less reusable: Harder to reuse and extend.</li> <li>Less organized: Can become cluttered with increasing complexity.</li> </ul>"},{"location":"Django/04-Django-Blog/04-post-crud/#step-1-create-post-create-view","title":"Step 1: Create Post Create View\u00b6","text":"<ul> <li><p>To create a new post with fields for the title and content.</p> </li> <li><p>The view will ensure that the post is associated with the logged-in <code>user</code>.</p> <pre>from django.views.generic import CreateView\nfrom django.contrib.auth.mixins import LoginRequiredMixin\nfrom .models import Post\n\nclass PostCreateView(LoginRequiredMixin, CreateView):\n    model = Post\n    fields = ['title', 'content']\n\n    def form_valid(self, form):\n        form.instance.author = self.request.user\n        return super().form_valid(form)\n</pre> </li> </ul>"},{"location":"Django/04-Django-Blog/04-post-crud/#notes","title":"Notes:\u00b6","text":"<ul> <li>Form Validation: The <code>form_valid</code> method ensures the form is valid and associates the post with the logged-in user.</li> <li>Template Naming Convention: The template for this view should be named <code>post_form.html</code> by default.</li> </ul>"},{"location":"Django/04-Django-Blog/04-post-crud/#step-2-create-post-update-view","title":"Step 2: Create Post Update View\u00b6","text":"<ul> <li><p>To update an existing post.</p> </li> <li><p>This view uses the same template as the create view and includes privilege checks to ensure only the post author can update the post.</p> <pre>from django.views.generic import UpdateView\nfrom django.contrib.auth.mixins import UserPassesTestMixin\n\n...\n\nclass PostUpdateView(LoginRequiredMixin, UserPassesTestMixin, UpdateView):\n    model = Post\n    fields = ['title', 'content']\n\n    def form_valid(self, form):\n        form.instance.author = self.request.user\n        return super().form_valid(form)\n\n    def test_func(self):\n        post = self.get_object()\n        if post.author == self.request.user:\n            return True\n        return False\n</pre> </li> </ul>"},{"location":"Django/04-Django-Blog/04-post-crud/#notes","title":"Notes:\u00b6","text":"<ul> <li>Privilege Check: The <code>test_func</code> method ensures that only the post author can update the post.</li> </ul>"},{"location":"Django/04-Django-Blog/04-post-crud/#step-3-set-template-for-post-create-and-update-views","title":"Step 3: Set Template for Post Create and Update Views\u00b6","text":"<ul> <li><p><code>users/templates/post_form.html</code></p> <pre>{% extends \"blog/main.html\" %}\n{% load crispy_forms_tags %}\n\n{% block main-content %}\n\n&lt;div class=\"container\"&gt;\n    &lt;h2&gt;Post a Blog&lt;/h2&gt;\n    {% for message in messages %}\n    &lt;div class=\"alert alert-{{ message.tags }}\"&gt;\n        {{ message }}\n    &lt;/div&gt;\n    {% endfor %}\n    &lt;form method=\"POST\"&gt;\n        {% csrf_token %}\n        {{ form|crispy }}\n        &lt;div class=\"d-flex justify-content-end mt-2\"&gt;\n            &lt;button type=\"submit\" class=\"btn btn-primary me-2\"&gt;Post&lt;/button&gt;\n            &lt;a href=\"{% url 'blog-home' %}\" class=\"btn btn-danger\"&gt;Cancel&lt;/a&gt;\n        &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/div&gt;\n\n{% endblock main-content %}\n</pre> </li> </ul>"},{"location":"Django/04-Django-Blog/04-post-crud/#step4-set-post-delete-view","title":"Step4: Set Post Delete View\u00b6","text":"<ul> <li><p>To delete an existing post.</p> </li> <li><p>The view ensures only the post author can delete the <code>post</code>.</p> <pre>from django.views.generic import DeleteView\nfrom django.urls import reverse_lazy\n\nclass PostDeleteView(LoginRequiredMixin, UserPassesTestMixin, DeleteView):\n    model = Post\n    success_url = reverse_lazy('blog-home')\n\n    def test_func(self):\n        post = self.get_object()\n        if post.author == self.request.user:\n            return True\n        return False\n</pre> </li> </ul>"},{"location":"Django/04-Django-Blog/04-post-crud/#notes","title":"Notes:\u00b6","text":"<ul> <li>Success URL: The <code>success_url</code> attribute defines the URL to redirect to after successful deletion.</li> </ul>"},{"location":"Django/04-Django-Blog/04-post-crud/#step-5-construct-post-confirm-delete-template","title":"Step 5: Construct Post Confirm Delete Template\u00b6","text":"<ul> <li><p><code>users/templates/post_confirm_delete.html</code></p> <pre>{% extends \"blog/main.html\" %}\n{% load crispy_forms_tags %}\n\n{% block main-content %}\n\n&lt;div class=\"container\"&gt;\n    &lt;h2&gt;Delete Blog&lt;/h2&gt;\n    {% for message in messages %}\n    &lt;div class=\"alert alert-{{ message.tags }}\"&gt;\n        {{ message }}\n    &lt;/div&gt;\n    {% endfor %}\n    &lt;h2&gt;Are you sure you want to delete the post \"{{ object.title }}?\"&lt;/h2&gt;\n    &lt;form method=\"POST\"&gt;\n        {% csrf_token %}\n        {{ form|crispy }}\n        &lt;div class=\"d-flex justify-content-end mt-2\"&gt;\n            &lt;button type=\"submit\" class=\"btn btn-danger me-2\"&gt;Delete&lt;/button&gt;\n            &lt;a href=\"{% url 'post-detail' object.pk %}\" class=\"btn btn-secondary\"&gt;Cancel&lt;/a&gt;\n        &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/div&gt;\n\n{% endblock main-content %}\n</pre> </li> </ul>"},{"location":"Django/04-Django-Blog/04-post-crud/#step-6-set-post-detail-view","title":"Step 6: Set Post Detail View\u00b6","text":"<ul> <li><p>To display the details of a specific post.</p> <pre>from django.views.generic import DetailView\nfrom .models import Post\n\nclass PostDetailView(DetailView):\n    model = Post\n</pre> </li> </ul>"},{"location":"Django/04-Django-Blog/04-post-crud/#step-7-construct-post-detail-template","title":"Step 7: Construct Post Detail Template\u00b6","text":"<ul> <li><p><code>users/templates/users/post_detail.html</code></p> <pre>{% extends 'blog/main.html' %} {% block main-content%}\n\n&lt;article class=\"media content-section\"&gt;\n    &lt;img class=\"rounded-circle article-img\" src=\"{{ object.author.userprofile.image.url }}\" /&gt;\n    &lt;div class=\"media-body\"&gt;\n        &lt;div class=\"article-metadata\"&gt;\n            &lt;a class=\"mr-2\" href=\"#\"&gt;{{ object.author }}&lt;/a&gt;\n            &lt;small class=\"text-muted\"&gt;{{ object.date_posted|date:\"F d, Y\" }}&lt;/small&gt;\n\n            {% if object.author == user %}\n            &lt;a class=\"btn btn-secondary btn-sm mt-1 mb-1\" href=\"{% url 'post-update' object.pk %}\"&gt;Update&lt;/a&gt;\n            &lt;a class=\"btn btn-danger btn-sm mt-1 mb-1\" href=\"{% url 'post-delete' object.pk %}\"&gt;Delete&lt;/a&gt;\n            {% endif %}\n\n        &lt;/div&gt;\n        &lt;h2 class=\"article-title\"&gt;{{ object.title }}&lt;/h2&gt;\n        &lt;p class=\"article-content\"&gt;{{ object.content }}&lt;/p&gt;\n    &lt;/div&gt;\n&lt;/article&gt;\n\n{% endblock main-content %}\n</pre> </li> </ul>"},{"location":"Django/04-Django-Blog/04-post-crud/#notes","title":"Notes:\u00b6","text":"<ul> <li>Privilege Check: Ensure that only the author can see the update and delete options.</li> </ul>"},{"location":"Django/04-Django-Blog/04-post-crud/#step-8-construct-url-patterns","title":"Step 8: Construct URL Patterns\u00b6","text":"<ul> <li><p>Define the URL patterns for the post CRUD operations.</p> <pre>from django.urls import path\nfrom .views import (\n    PostDetailView,\n    PostCreateView,\n    PostUpdateView,\n    PostDeleteView\n)\nfrom . import views\n\nurlpatterns = [\n    ...\n    path(\"post/&lt;int:pk&gt;\", PostDetailView.as_view(), name='post-detail'),\n    path(\"post/&lt;int:pk&gt;/update\", PostUpdateView.as_view(), name='post-update'),\n    path(\"post/&lt;int:pk&gt;/delete\", PostDeleteView.as_view(), name='post-delete'),\n    path(\"post/new\", PostCreateView.as_view(), name='post-create'),\n    ...\n]\n</pre> </li> </ul> <ul> <li><p>Write <code>get_absolute_url</code> in Post Model</p> <ul> <li>The <code>get_absolute_url</code> method provides a way to generate a URL for the detail view of the object.</li> <li>This is particularly useful in <code>templates</code> and <code>views</code> where you need to link to the detailed view of a model instance.</li> <li>The <code>get_absolute_url</code> method uses the <code>reverse</code> function to generate the URL for the detailed view of the post.</li> <li>The <code>reverse</code> function takes the name of the URL pattern (<code>post-detail</code>) and the <code>primary key</code> of the post as arguments.</li> </ul> <pre>from django.db import models\nfrom django.contrib.auth.models import User\nfrom django.utils import timezone\nfrom django.urls import reverse\n\nclass Post(models.Model):\n    title = models.CharField(max_length=80)\n    author = models.ForeignKey(User, on_delete=models.CASCADE)\n    content = models.TextField()\n    date_posted = models.DateTimeField(default=timezone.now)\n\n    def __str__(self):\n        return self.title\n\n    def get_absolute_url(self):\n        return reverse('post-detail', kwargs={'pk': self.pk})\n</pre> </li> </ul>"},{"location":"Django/04-Django-Blog/04-post-crud/#additional-resource","title":"Additional Resource\u00b6","text":""},{"location":"Django/04-Django-Blog/04-post-crud/#built-in-generic-views","title":"Built-in generic views\u00b6","text":"View Description Parameters Example TemplateView Renders a template. <ul> <li>template_name: The name of the template to use.</li> <li>extra_context: A dictionary of context data to add to the template context.</li> </ul> <pre>\npython\nfrom django.views.generic import TemplateView\nclass HomePageView(TemplateView):\n    template_name = 'home.html'\n      </pre> ListView Displays a list of objects. <ul> <li>model: The model to query.</li> <li>template_name: The name of the template to use.</li> <li>context_object_name: The name of the context variable to use.</li> <li>paginate_by: Number of objects per page.</li> </ul> <pre>\npython\nfrom django.views.generic import ListView\nfrom .models import Post\nclass PostListView(ListView):\n    model = Post\n    template_name = 'posts/post_list.html'\n    context_object_name = 'posts'\n      </pre> DetailView Displays a detail page for a single object. <ul> <li>model: The model to query.</li> <li>template_name: The name of the template to use.</li> <li>context_object_name: The name of the context variable to use.</li> </ul> <pre>\npython\nfrom django.views.generic import DetailView\nfrom .models import Post\nclass PostDetailView(DetailView):\n    model = Post\n    template_name = 'posts/post_detail.html'\n    context_object_name = 'post'\n      </pre> CreateView Displays a form for creating a new object and saves the object. <ul> <li>model: The model to query.</li> <li>form_class: The form class to use.</li> <li>template_name: The name of the template to use.</li> <li>success_url: URL to redirect to after success.</li> </ul> <pre>\npython\nfrom django.views.generic import CreateView\nfrom .models import Post\nfrom .forms import PostForm\nclass PostCreateView(CreateView):\n    model = Post\n    form_class = PostForm\n    template_name = 'posts/post_form.html'\n    success_url = '/posts/'\n      </pre> UpdateView Displays a form for updating an existing object and saves the changes. <ul> <li>model: The model to query.</li> <li>form_class: The form class to use.</li> <li>template_name: The name of the template to use.</li> <li>success_url: URL to redirect to after success.</li> </ul> <pre>\npython\nfrom django.views.generic import UpdateView\nfrom .models import Post\nfrom .forms import PostForm\nclass PostUpdateView(UpdateView):\n    model = Post\n    form_class = PostForm\n    template_name = 'posts/post_form.html'\n    success_url = '/posts/'\n      </pre> DeleteView Displays a confirmation page and deletes an existing object. <ul> <li>model: The model to query.</li> <li>template_name: The name of the template to use.</li> <li>success_url: URL to redirect to after success.</li> </ul> <pre>\npython\nfrom django.views.generic import DeleteView\nfrom .models import Post\nclass PostDeleteView(DeleteView):\n    model = Post\n    template_name = 'posts/post_confirm_delete.html'\n    success_url = '/posts/'\n      </pre>"},{"location":"Django/04-Django-Blog/django_project/manage/","title":"Manage","text":"In\u00a0[\u00a0]: Copied! <pre>\"\"\"Django's command-line utility for administrative tasks.\"\"\"\nimport os\nimport sys\n</pre> \"\"\"Django's command-line utility for administrative tasks.\"\"\" import os import sys In\u00a0[\u00a0]: Copied! <pre>def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"django_project.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n</pre> def main():     \"\"\"Run administrative tasks.\"\"\"     os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"django_project.settings\")     try:         from django.core.management import execute_from_command_line     except ImportError as exc:         raise ImportError(             \"Couldn't import Django. Are you sure it's installed and \"             \"available on your PYTHONPATH environment variable? Did you \"             \"forget to activate a virtual environment?\"         ) from exc     execute_from_command_line(sys.argv) In\u00a0[\u00a0]: Copied! <pre>if __name__ == \"__main__\":\n    main()\n</pre> if __name__ == \"__main__\":     main()"},{"location":"Django/04-Django-Blog/django_project/blog/__init__/","title":"init","text":""},{"location":"Django/04-Django-Blog/django_project/blog/admin/","title":"Admin","text":"In\u00a0[\u00a0]: Copied! <pre>from django.contrib import admin\nfrom .models import Post,Comment\n</pre> from django.contrib import admin from .models import Post,Comment In\u00a0[\u00a0]: Copied! <pre># Register your models here.\nadmin.site.register(Post)\nadmin.site.register(Comment)\n</pre> # Register your models here. admin.site.register(Post) admin.site.register(Comment) <p>@admin.register(Post) class PostAdmin(admin.ModelAdmin): list_display = ('title', 'author', 'date_posted') list_filter = ('date_posted', 'author') search_fields = ('title', 'content', 'author')</p>"},{"location":"Django/04-Django-Blog/django_project/blog/apps/","title":"Apps","text":"In\u00a0[\u00a0]: Copied! <pre>from django.apps import AppConfig\n</pre> from django.apps import AppConfig In\u00a0[\u00a0]: Copied! <pre>class BlogConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"blog\"\n</pre> class BlogConfig(AppConfig):     default_auto_field = \"django.db.models.BigAutoField\"     name = \"blog\""},{"location":"Django/04-Django-Blog/django_project/blog/models/","title":"Models","text":"In\u00a0[\u00a0]: Copied! <pre>from django.db import models\nfrom django.utils import timezone\nfrom django.contrib.auth.models import User\nfrom django.urls import reverse\n</pre> from django.db import models from django.utils import timezone from django.contrib.auth.models import User from django.urls import reverse In\u00a0[\u00a0]: Copied! <pre># Create your models here.\nclass Post(models.Model):\n    title = models.CharField(max_length=80)\n    author = models.ForeignKey(User, on_delete= models.CASCADE)\n    content = models.TextField()\n    date_posted = models.DateTimeField(default=timezone.now)\n\n    def __str__(self):\n        return self.title\n    \n    def get_absolute_url(self):\n        return reverse('post-detail', kwargs={'pk': self.pk})\n</pre> # Create your models here. class Post(models.Model):     title = models.CharField(max_length=80)     author = models.ForeignKey(User, on_delete= models.CASCADE)     content = models.TextField()     date_posted = models.DateTimeField(default=timezone.now)      def __str__(self):         return self.title          def get_absolute_url(self):         return reverse('post-detail', kwargs={'pk': self.pk}) In\u00a0[\u00a0]: Copied! <pre>class Comment(models.Model):\n    post = models.ForeignKey(Post, on_delete=models.CASCADE)\n    author = models.ForeignKey(User, on_delete=models.CASCADE)\n    content = models.TextField()\n    date_posted = models.DateTimeField(default=timezone.now)\n\n    def __str__(self):\n        return f'Comment by {self.author} on {self.post}'\n</pre> class Comment(models.Model):     post = models.ForeignKey(Post, on_delete=models.CASCADE)     author = models.ForeignKey(User, on_delete=models.CASCADE)     content = models.TextField()     date_posted = models.DateTimeField(default=timezone.now)      def __str__(self):         return f'Comment by {self.author} on {self.post}'"},{"location":"Django/04-Django-Blog/django_project/blog/tests/","title":"Tests","text":"In\u00a0[\u00a0]: Copied! <pre>from django.test import TestCase\n</pre> from django.test import TestCase <p>Create your tests here.</p>"},{"location":"Django/04-Django-Blog/django_project/blog/urls/","title":"Urls","text":"In\u00a0[\u00a0]: Copied! <pre>from django.urls import path\nfrom . import views\nfrom .views import PostDetailView,PostCreateView,PostUpdateView,PostDeleteView\n</pre> from django.urls import path from . import views from .views import PostDetailView,PostCreateView,PostUpdateView,PostDeleteView In\u00a0[\u00a0]: Copied! <pre>urlpatterns = [\n    path(\"\",views.home, name = 'blog-home'),\n    path(\"post/&lt;int:pk&gt;\", PostDetailView.as_view(), name = 'post-detail'),\n    path(\"post/&lt;int:pk&gt;/update\", PostUpdateView.as_view(), name = 'post-update'),\n    path(\"post/&lt;int:pk&gt;/delete\", PostDeleteView.as_view(), name = 'post-delete'),\n    path(\"post/new\", PostCreateView.as_view(), name = 'post-create'),\n    path(\"about/\",views.about, name = 'blog-about'),\n]\n</pre> urlpatterns = [     path(\"\",views.home, name = 'blog-home'),     path(\"post/\", PostDetailView.as_view(), name = 'post-detail'),     path(\"post//update\", PostUpdateView.as_view(), name = 'post-update'),     path(\"post//delete\", PostDeleteView.as_view(), name = 'post-delete'),     path(\"post/new\", PostCreateView.as_view(), name = 'post-create'),     path(\"about/\",views.about, name = 'blog-about'), ]"},{"location":"Django/04-Django-Blog/django_project/blog/views/","title":"Views","text":"In\u00a0[\u00a0]: Copied! <pre>from django.forms import BaseModelForm\nfrom django.shortcuts import render,get_object_or_404\nfrom django.http import HttpResponse\nfrom django.contrib.auth.mixins import LoginRequiredMixin,UserPassesTestMixin\nfrom django.views.generic import CreateView,DeleteView,DetailView,UpdateView\nfrom django.urls import reverse_lazy\nfrom .models import Post\n</pre> from django.forms import BaseModelForm from django.shortcuts import render,get_object_or_404 from django.http import HttpResponse from django.contrib.auth.mixins import LoginRequiredMixin,UserPassesTestMixin from django.views.generic import CreateView,DeleteView,DetailView,UpdateView from django.urls import reverse_lazy from .models import Post In\u00a0[\u00a0]: Copied! <pre># Create your views here.\ndef home(request):\n    context = {\n        'posts': Post.objects.all().order_by('-date_posted')\n    }\n    return render(request, 'blog/home.html', context)\n</pre> # Create your views here. def home(request):     context = {         'posts': Post.objects.all().order_by('-date_posted')     }     return render(request, 'blog/home.html', context) In\u00a0[\u00a0]: Copied! <pre>class PostDetailView(DetailView):\n    model = Post\n</pre> class PostDetailView(DetailView):     model = Post In\u00a0[\u00a0]: Copied! <pre>class PostCreateView(LoginRequiredMixin,CreateView):\n    model = Post\n    fields = ['title','content']\n    \n    def form_valid(self,form):\n        form.instance.author = self.request.user\n        return super().form_valid(form)\n</pre> class PostCreateView(LoginRequiredMixin,CreateView):     model = Post     fields = ['title','content']          def form_valid(self,form):         form.instance.author = self.request.user         return super().form_valid(form) In\u00a0[\u00a0]: Copied! <pre>class PostUpdateView(LoginRequiredMixin,UserPassesTestMixin,UpdateView):\n    model = Post\n    fields = ['title','content']\n    \n    def form_valid(self,form):\n        form.instance.author = self.request.user\n        return super().form_valid(form)\n    \n    def test_func(self):\n        post = self.get_object()\n        if post.author == self.request.user:\n            return True\n        return False\n</pre> class PostUpdateView(LoginRequiredMixin,UserPassesTestMixin,UpdateView):     model = Post     fields = ['title','content']          def form_valid(self,form):         form.instance.author = self.request.user         return super().form_valid(form)          def test_func(self):         post = self.get_object()         if post.author == self.request.user:             return True         return False In\u00a0[\u00a0]: Copied! <pre>class PostDeleteView(DeleteView):\n    model = Post\n    success_url = reverse_lazy('blog-home')\n    \n    def test_func(self):\n        post = self.get_object()\n        if post.author == self.request.user:\n            return True\n        return False\n</pre> class PostDeleteView(DeleteView):     model = Post     success_url = reverse_lazy('blog-home')          def test_func(self):         post = self.get_object()         if post.author == self.request.user:             return True         return False In\u00a0[\u00a0]: Copied! <pre>def about(request):\n    return render(request,\"blog/about.html\")\n</pre> def about(request):     return render(request,\"blog/about.html\") In\u00a0[\u00a0]: Copied! <pre>\n</pre> In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"Django/04-Django-Blog/django_project/blog/migrations/0001_initial/","title":"0001 initial","text":"<p>Generated by Django 4.2 on 2024-06-18 20:38</p> In\u00a0[\u00a0]: Copied! <pre>from django.conf import settings\nfrom django.db import migrations, models\nimport django.db.models.deletion\nimport django.utils.timezone\n</pre> from django.conf import settings from django.db import migrations, models import django.db.models.deletion import django.utils.timezone In\u00a0[\u00a0]: Copied! <pre>class Migration(migrations.Migration):\n    initial = True\n\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n\n    operations = [\n        migrations.CreateModel(\n            name=\"Post\",\n            fields=[\n                (\n                    \"id\",\n                    models.BigAutoField(\n                        auto_created=True,\n                        primary_key=True,\n                        serialize=False,\n                        verbose_name=\"ID\",\n                    ),\n                ),\n                (\"title\", models.CharField(max_length=80)),\n                (\"content\", models.TextField()),\n                (\n                    \"date_posted\",\n                    models.DateTimeField(default=django.utils.timezone.now),\n                ),\n                (\n                    \"author\",\n                    models.ForeignKey(\n                        on_delete=django.db.models.deletion.CASCADE,\n                        to=settings.AUTH_USER_MODEL,\n                    ),\n                ),\n            ],\n        ),\n        migrations.CreateModel(\n            name=\"Comment\",\n            fields=[\n                (\n                    \"id\",\n                    models.BigAutoField(\n                        auto_created=True,\n                        primary_key=True,\n                        serialize=False,\n                        verbose_name=\"ID\",\n                    ),\n                ),\n                (\"content\", models.TextField()),\n                (\n                    \"date_posted\",\n                    models.DateTimeField(default=django.utils.timezone.now),\n                ),\n                (\n                    \"author\",\n                    models.ForeignKey(\n                        on_delete=django.db.models.deletion.CASCADE,\n                        to=settings.AUTH_USER_MODEL,\n                    ),\n                ),\n                (\n                    \"post\",\n                    models.ForeignKey(\n                        on_delete=django.db.models.deletion.CASCADE, to=\"blog.post\"\n                    ),\n                ),\n            ],\n        ),\n    ]\n</pre> class Migration(migrations.Migration):     initial = True      dependencies = [         migrations.swappable_dependency(settings.AUTH_USER_MODEL),     ]      operations = [         migrations.CreateModel(             name=\"Post\",             fields=[                 (                     \"id\",                     models.BigAutoField(                         auto_created=True,                         primary_key=True,                         serialize=False,                         verbose_name=\"ID\",                     ),                 ),                 (\"title\", models.CharField(max_length=80)),                 (\"content\", models.TextField()),                 (                     \"date_posted\",                     models.DateTimeField(default=django.utils.timezone.now),                 ),                 (                     \"author\",                     models.ForeignKey(                         on_delete=django.db.models.deletion.CASCADE,                         to=settings.AUTH_USER_MODEL,                     ),                 ),             ],         ),         migrations.CreateModel(             name=\"Comment\",             fields=[                 (                     \"id\",                     models.BigAutoField(                         auto_created=True,                         primary_key=True,                         serialize=False,                         verbose_name=\"ID\",                     ),                 ),                 (\"content\", models.TextField()),                 (                     \"date_posted\",                     models.DateTimeField(default=django.utils.timezone.now),                 ),                 (                     \"author\",                     models.ForeignKey(                         on_delete=django.db.models.deletion.CASCADE,                         to=settings.AUTH_USER_MODEL,                     ),                 ),                 (                     \"post\",                     models.ForeignKey(                         on_delete=django.db.models.deletion.CASCADE, to=\"blog.post\"                     ),                 ),             ],         ),     ]"},{"location":"Django/04-Django-Blog/django_project/blog/migrations/__init__/","title":"init","text":""},{"location":"Django/04-Django-Blog/django_project/django_project/__init__/","title":"init","text":""},{"location":"Django/04-Django-Blog/django_project/django_project/asgi/","title":"Asgi","text":"In\u00a0[\u00a0]: Copied! <pre>\"\"\"\nASGI config for django_project project.\n\nIt exposes the ASGI callable as a module-level variable named ``application``.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/4.2/howto/deployment/asgi/\n\"\"\"\n</pre> \"\"\" ASGI config for django_project project.  It exposes the ASGI callable as a module-level variable named ``application``.  For more information on this file, see https://docs.djangoproject.com/en/4.2/howto/deployment/asgi/ \"\"\" In\u00a0[\u00a0]: Copied! <pre>import os\n</pre> import os In\u00a0[\u00a0]: Copied! <pre>from django.core.asgi import get_asgi_application\n</pre> from django.core.asgi import get_asgi_application In\u00a0[\u00a0]: Copied! <pre>os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"django_project.settings\")\n</pre> os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"django_project.settings\") In\u00a0[\u00a0]: Copied! <pre>application = get_asgi_application()\n</pre> application = get_asgi_application()"},{"location":"Django/04-Django-Blog/django_project/django_project/settings/","title":"Settings","text":"In\u00a0[\u00a0]: Copied! <pre>\"\"\"\nDjango settings for django_project project.\n\nGenerated by 'django-admin startproject' using Django 4.2.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/4.2/topics/settings/\n\nFor the full list of settings and their values, see\nhttps://docs.djangoproject.com/en/4.2/ref/settings/\n\"\"\"\n</pre> \"\"\" Django settings for django_project project.  Generated by 'django-admin startproject' using Django 4.2.  For more information on this file, see https://docs.djangoproject.com/en/4.2/topics/settings/  For the full list of settings and their values, see https://docs.djangoproject.com/en/4.2/ref/settings/ \"\"\" In\u00a0[\u00a0]: Copied! <pre>from pathlib import Path\nimport os\n</pre> from pathlib import Path import os In\u00a0[\u00a0]: Copied! <pre># Build paths inside the project like this: BASE_DIR / 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent\n</pre> # Build paths inside the project like this: BASE_DIR / 'subdir'. BASE_DIR = Path(__file__).resolve().parent.parent <p>Quick-start development settings - unsuitable for production See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/</p> In\u00a0[\u00a0]: Copied! <pre># SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = \"django-insecure-2qq2ihovfk363qe*at(tl9vo)mosm^7pgmzpz++4xwg!rn8b13\"\n</pre> # SECURITY WARNING: keep the secret key used in production secret! SECRET_KEY = \"django-insecure-2qq2ihovfk363qe*at(tl9vo)mosm^7pgmzpz++4xwg!rn8b13\" In\u00a0[\u00a0]: Copied! <pre># SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n</pre> # SECURITY WARNING: don't run with debug turned on in production! DEBUG = True In\u00a0[\u00a0]: Copied! <pre>ALLOWED_HOSTS = []\n</pre> ALLOWED_HOSTS = [] <p>Application definition</p> In\u00a0[\u00a0]: Copied! <pre>INSTALLED_APPS = [\n    \"crispy_forms\",\n    \"crispy_bootstrap4\",\n    \"users.apps.UsersConfig\",\n    \"blog.apps.BlogConfig\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    'django.contrib.sites',  # Required for allauth\n    'allauth',\n    'allauth.account',\n    'allauth.socialaccount',\n    # Social providers\n    'allauth.socialaccount.providers.google',\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n]\n</pre> INSTALLED_APPS = [     \"crispy_forms\",     \"crispy_bootstrap4\",     \"users.apps.UsersConfig\",     \"blog.apps.BlogConfig\",     \"django.contrib.admin\",     \"django.contrib.auth\",     'django.contrib.sites',  # Required for allauth     'allauth',     'allauth.account',     'allauth.socialaccount',     # Social providers     'allauth.socialaccount.providers.google',     \"django.contrib.contenttypes\",     \"django.contrib.sessions\",     \"django.contrib.messages\",     \"django.contrib.staticfiles\", ] In\u00a0[\u00a0]: Copied! <pre>SITE_ID = 1\n</pre> SITE_ID = 1 In\u00a0[\u00a0]: Copied! <pre>MIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    'django.contrib.sites.middleware.CurrentSiteMiddleware',\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n    \"allauth.account.middleware.AccountMiddleware\",\n]\n</pre> MIDDLEWARE = [     \"django.middleware.security.SecurityMiddleware\",     \"django.contrib.sessions.middleware.SessionMiddleware\",     \"django.middleware.common.CommonMiddleware\",     \"django.middleware.csrf.CsrfViewMiddleware\",     \"django.contrib.auth.middleware.AuthenticationMiddleware\",     'django.contrib.sites.middleware.CurrentSiteMiddleware',     \"django.contrib.messages.middleware.MessageMiddleware\",     \"django.middleware.clickjacking.XFrameOptionsMiddleware\",     \"allauth.account.middleware.AccountMiddleware\", ] In\u00a0[\u00a0]: Copied! <pre>ROOT_URLCONF = \"django_project.urls\"\n</pre> ROOT_URLCONF = \"django_project.urls\" In\u00a0[\u00a0]: Copied! <pre>TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",\n                \"django.contrib.messages.context_processors.messages\",\n            ],\n        },\n    },\n]\n</pre> TEMPLATES = [     {         \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",         \"DIRS\": [],         \"APP_DIRS\": True,         \"OPTIONS\": {             \"context_processors\": [                 \"django.template.context_processors.debug\",                 \"django.template.context_processors.request\",                 \"django.contrib.auth.context_processors.auth\",                 \"django.contrib.messages.context_processors.messages\",             ],         },     }, ] In\u00a0[\u00a0]: Copied! <pre>WSGI_APPLICATION = \"django_project.wsgi.application\"\n</pre> WSGI_APPLICATION = \"django_project.wsgi.application\" <p>Database https://docs.djangoproject.com/en/4.2/ref/settings/#databases</p> In\u00a0[\u00a0]: Copied! <pre>DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\n</pre> DATABASES = {     \"default\": {         \"ENGINE\": \"django.db.backends.sqlite3\",         \"NAME\": BASE_DIR / \"db.sqlite3\",     } } <p>Password validation https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators</p> In\u00a0[\u00a0]: Copied! <pre>AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.NumericPasswordValidator\",\n    },\n]\n</pre> AUTH_PASSWORD_VALIDATORS = [     {         \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",     },     {         \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",     },     {         \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",     },     {         \"NAME\": \"django.contrib.auth.password_validation.NumericPasswordValidator\",     }, ] <p>Internationalization https://docs.djangoproject.com/en/4.2/topics/i18n/</p> In\u00a0[\u00a0]: Copied! <pre>LANGUAGE_CODE = \"en-us\"\n</pre> LANGUAGE_CODE = \"en-us\" In\u00a0[\u00a0]: Copied! <pre>TIME_ZONE = \"UTC\"\n</pre> TIME_ZONE = \"UTC\" In\u00a0[\u00a0]: Copied! <pre>USE_I18N = True\n</pre> USE_I18N = True In\u00a0[\u00a0]: Copied! <pre>USE_TZ = True\n</pre> USE_TZ = True <p>Static files (CSS, JavaScript, Images) https://docs.djangoproject.com/en/4.2/howto/static-files/</p> In\u00a0[\u00a0]: Copied! <pre>STATIC_URL = \"static/\"\n</pre> STATIC_URL = \"static/\" <p>Default primary key field type https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field</p> In\u00a0[\u00a0]: Copied! <pre>DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n</pre> DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\" In\u00a0[\u00a0]: Copied! <pre>CRISPY_ALLOWED_TEMPLATE_PACKS = \"bootstrap4\"\nCRISPY_TEMPLATE_PACK = 'bootstrap4'\n</pre> CRISPY_ALLOWED_TEMPLATE_PACKS = \"bootstrap4\" CRISPY_TEMPLATE_PACK = 'bootstrap4' In\u00a0[\u00a0]: Copied! <pre>LOGIN_REDIRECT_URL = \"blog-home\"\nLOGIN_URL = 'login'\n</pre> LOGIN_REDIRECT_URL = \"blog-home\" LOGIN_URL = 'login' In\u00a0[\u00a0]: Copied! <pre>MEDIA_ROOT = os.path.join(BASE_DIR,'media')\nMEDIA_URL = '/media/'\n</pre> MEDIA_ROOT = os.path.join(BASE_DIR,'media') MEDIA_URL = '/media/'"},{"location":"Django/04-Django-Blog/django_project/django_project/urls/","title":"Urls","text":"In\u00a0[\u00a0]: Copied! <pre>\"\"\"\nURL configuration for django_project project.\n\nThe `urlpatterns` list routes URLs to views. For more information please see:\n    https://docs.djangoproject.com/en/4.2/topics/http/urls/\nExamples:\nFunction views\n    1. Add an import:  from my_app import views\n    2. Add a URL to urlpatterns:  path('', views.home, name='home')\nClass-based views\n    1. Add an import:  from other_app.views import Home\n    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')\nIncluding another URLconf\n    1. Import the include() function: from django.urls import include, path\n    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))\n\"\"\"\nfrom django.contrib import admin\nfrom django.urls import path, include\nfrom django.conf import settings\nfrom django.conf.urls.static import static\n</pre> \"\"\" URL configuration for django_project project.  The `urlpatterns` list routes URLs to views. For more information please see:     https://docs.djangoproject.com/en/4.2/topics/http/urls/ Examples: Function views     1. Add an import:  from my_app import views     2. Add a URL to urlpatterns:  path('', views.home, name='home') Class-based views     1. Add an import:  from other_app.views import Home     2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home') Including another URLconf     1. Import the include() function: from django.urls import include, path     2. Add a URL to urlpatterns:  path('blog/', include('blog.urls')) \"\"\" from django.contrib import admin from django.urls import path, include from django.conf import settings from django.conf.urls.static import static In\u00a0[\u00a0]: Copied! <pre>urlpatterns = [\n    path(\"admin/\", admin.site.urls),\n    path('users/', include('users.urls')),\n    path('', include('blog.urls')),\n     path('accounts/', include('allauth.urls')),  # for django-allauth\n]\n</pre> urlpatterns = [     path(\"admin/\", admin.site.urls),     path('users/', include('users.urls')),     path('', include('blog.urls')),      path('accounts/', include('allauth.urls')),  # for django-allauth ]  In\u00a0[\u00a0]: Copied! <pre>if settings.DEBUG:\n    urlpatterns += static(settings.MEDIA_URL,document_root = settings.MEDIA_ROOT )\n</pre> if settings.DEBUG:     urlpatterns += static(settings.MEDIA_URL,document_root = settings.MEDIA_ROOT )"},{"location":"Django/04-Django-Blog/django_project/django_project/wsgi/","title":"Wsgi","text":"In\u00a0[\u00a0]: Copied! <pre>\"\"\"\nWSGI config for django_project project.\n\nIt exposes the WSGI callable as a module-level variable named ``application``.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/4.2/howto/deployment/wsgi/\n\"\"\"\n</pre> \"\"\" WSGI config for django_project project.  It exposes the WSGI callable as a module-level variable named ``application``.  For more information on this file, see https://docs.djangoproject.com/en/4.2/howto/deployment/wsgi/ \"\"\" In\u00a0[\u00a0]: Copied! <pre>import os\n</pre> import os In\u00a0[\u00a0]: Copied! <pre>from django.core.wsgi import get_wsgi_application\n</pre> from django.core.wsgi import get_wsgi_application In\u00a0[\u00a0]: Copied! <pre>os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"django_project.settings\")\n</pre> os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"django_project.settings\") In\u00a0[\u00a0]: Copied! <pre>application = get_wsgi_application()\n</pre> application = get_wsgi_application()"},{"location":"Django/04-Django-Blog/django_project/users/__init__/","title":"init","text":""},{"location":"Django/04-Django-Blog/django_project/users/admin/","title":"Admin","text":"In\u00a0[\u00a0]: Copied! <pre>from django.contrib import admin\nfrom .models import UserProfile\n</pre> from django.contrib import admin from .models import UserProfile In\u00a0[\u00a0]: Copied! <pre># Register your models here.\nadmin.site.register(UserProfile)\n</pre> # Register your models here. admin.site.register(UserProfile)"},{"location":"Django/04-Django-Blog/django_project/users/apps/","title":"Apps","text":"In\u00a0[\u00a0]: Copied! <pre>from django.apps import AppConfig\n</pre> from django.apps import AppConfig In\u00a0[\u00a0]: Copied! <pre>class UsersConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"users\"\n    \n    def ready(self) -&gt; None:\n        import users.signals\n</pre> class UsersConfig(AppConfig):     default_auto_field = \"django.db.models.BigAutoField\"     name = \"users\"          def ready(self) -&gt; None:         import users.signals"},{"location":"Django/04-Django-Blog/django_project/users/forms/","title":"Forms","text":"In\u00a0[\u00a0]: Copied! <pre>from django import forms\nfrom django.contrib.auth.models import User\nfrom django.contrib.auth.forms import UserCreationForm\nfrom .models import UserProfile\nfrom crispy_forms.helper import FormHelper\nfrom crispy_forms.layout import Submit\n</pre> from django import forms from django.contrib.auth.models import User from django.contrib.auth.forms import UserCreationForm from .models import UserProfile from crispy_forms.helper import FormHelper from crispy_forms.layout import Submit In\u00a0[\u00a0]: Copied! <pre>class UserRegisterForm(UserCreationForm):\n    email = forms.EmailField()\n\n    class Meta:\n        model = User\n        fields = ['username', 'email', 'password1', 'password2']\n\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n        self.helper = FormHelper()\n        self.helper.add_input(Submit('register', 'Register'))\n</pre> class UserRegisterForm(UserCreationForm):     email = forms.EmailField()      class Meta:         model = User         fields = ['username', 'email', 'password1', 'password2']      def __init__(self, *args, **kwargs):         super().__init__(*args, **kwargs)         self.helper = FormHelper()         self.helper.add_input(Submit('register', 'Register')) In\u00a0[\u00a0]: Copied! <pre>class UserUpdateForm(forms.ModelForm):\n    email = forms.EmailField()\n    \n    class Meta:\n        model = User\n        fields = ['username','email']\n</pre> class UserUpdateForm(forms.ModelForm):     email = forms.EmailField()          class Meta:         model = User         fields = ['username','email'] In\u00a0[\u00a0]: Copied! <pre>class UserProfileForm(forms.ModelForm):\n    class Meta:\n        model = UserProfile\n        fields = ['bio','image','birth_date']\n\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n        self.helper = FormHelper()\n        self.helper.add_input(Submit('update', 'Update'))\n</pre> class UserProfileForm(forms.ModelForm):     class Meta:         model = UserProfile         fields = ['bio','image','birth_date']      def __init__(self, *args, **kwargs):         super().__init__(*args, **kwargs)         self.helper = FormHelper()         self.helper.add_input(Submit('update', 'Update'))"},{"location":"Django/04-Django-Blog/django_project/users/models/","title":"Models","text":"In\u00a0[\u00a0]: Copied! <pre>from django.db import models\nfrom django.contrib.auth.models import User\nfrom PIL import Image\n</pre> from django.db import models from django.contrib.auth.models import User from PIL import Image In\u00a0[\u00a0]: Copied! <pre>class UserProfile(models.Model):\n    user = models.OneToOneField(User, on_delete=models.CASCADE)\n    bio = models.TextField(default=\"This user do not have a bio\",blank=True)\n    image = models.ImageField(default='default.png',upload_to='profile_pics')\n    birth_date = models.DateField(null=True, blank=True)\n\n    def __str__(self):\n        return f'{self.user.username} Profile'\n    \n    def save(self):\n        super().save()\n        \n        # resize uploaded image\n        img = Image.open(self.image.path)\n        if img.height &gt; 300 or img.width &gt; 300:\n            output_size = (300,300)\n            img.thumbnail(output_size)\n            img.save(self.image.path)\n</pre> class UserProfile(models.Model):     user = models.OneToOneField(User, on_delete=models.CASCADE)     bio = models.TextField(default=\"This user do not have a bio\",blank=True)     image = models.ImageField(default='default.png',upload_to='profile_pics')     birth_date = models.DateField(null=True, blank=True)      def __str__(self):         return f'{self.user.username} Profile'          def save(self):         super().save()                  # resize uploaded image         img = Image.open(self.image.path)         if img.height &gt; 300 or img.width &gt; 300:             output_size = (300,300)             img.thumbnail(output_size)             img.save(self.image.path) In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"Django/04-Django-Blog/django_project/users/signals/","title":"Signals","text":"In\u00a0[\u00a0]: Copied! <pre>from django.db.models.signals import post_save\nfrom django.contrib.auth.models import User\nfrom django.dispatch import receiver\nfrom .models import UserProfile\n</pre> from django.db.models.signals import post_save from django.contrib.auth.models import User from django.dispatch import receiver from .models import UserProfile In\u00a0[\u00a0]: Copied! <pre>@receiver(post_save,sender = User)\ndef create_profile(sender, instance, created, **kwargs):\n    if created:\n        UserProfile.objects.create(user = instance)\n</pre> @receiver(post_save,sender = User) def create_profile(sender, instance, created, **kwargs):     if created:         UserProfile.objects.create(user = instance) In\u00a0[\u00a0]: Copied! <pre>@receiver(post_save,sender = User)\ndef save_profile(sender, instance, **kwargs):\n    instance.userprofile.save()\n</pre> @receiver(post_save,sender = User) def save_profile(sender, instance, **kwargs):     instance.userprofile.save()"},{"location":"Django/04-Django-Blog/django_project/users/tests/","title":"Tests","text":"In\u00a0[\u00a0]: Copied! <pre>from django.test import TestCase\n</pre> from django.test import TestCase <p>Create your tests here.</p>"},{"location":"Django/04-Django-Blog/django_project/users/urls/","title":"Urls","text":"In\u00a0[\u00a0]: Copied! <pre>from django.urls import path\nfrom . import views\nfrom django.contrib.auth.views import LoginView,LogoutView\n</pre> from django.urls import path from . import views from django.contrib.auth.views import LoginView,LogoutView In\u00a0[\u00a0]: Copied! <pre>urlpatterns = [\n    path('register/', views.register, name='register'),\n    path('login/', LoginView.as_view(template_name = \"users/login.html\"), name='login'),\n    path('logout/', LogoutView.as_view(template_name = \"users/logout.html\"), name='logout'),\n    path('profile/',views.profile, name='profile'),\n]\n</pre> urlpatterns = [     path('register/', views.register, name='register'),     path('login/', LoginView.as_view(template_name = \"users/login.html\"), name='login'),     path('logout/', LogoutView.as_view(template_name = \"users/logout.html\"), name='logout'),     path('profile/',views.profile, name='profile'), ]"},{"location":"Django/04-Django-Blog/django_project/users/views/","title":"Views","text":"In\u00a0[\u00a0]: Copied! <pre>from django.shortcuts import render, redirect\nfrom django.contrib.auth.decorators import login_required\nfrom django.contrib import messages\nfrom .forms import UserRegisterForm,UserUpdateForm,UserProfileForm\n</pre> from django.shortcuts import render, redirect from django.contrib.auth.decorators import login_required from django.contrib import messages from .forms import UserRegisterForm,UserUpdateForm,UserProfileForm In\u00a0[\u00a0]: Copied! <pre># Create your views here.\ndef register(request):\n    if request.method == 'POST':\n        form = UserRegisterForm(request.POST)\n        \n        if form.is_valid():\n            form.save()\n            username = form.cleaned_data.get('username')\n            messages.success(request, f'Your account have been created. You\\'re now able to log in')\n            return redirect('login')\n    else:\n        form = UserRegisterForm()\n    return render(request, 'users/register.html', {'form': form})\n</pre> # Create your views here. def register(request):     if request.method == 'POST':         form = UserRegisterForm(request.POST)                  if form.is_valid():             form.save()             username = form.cleaned_data.get('username')             messages.success(request, f'Your account have been created. You\\'re now able to log in')             return redirect('login')     else:         form = UserRegisterForm()     return render(request, 'users/register.html', {'form': form}) In\u00a0[\u00a0]: Copied! <pre>@login_required\ndef profile(request):\n    if request.method == 'POST':\n        u_form = UserUpdateForm(request.POST,instance = request.user)\n        p_form = UserProfileForm(request.POST,request.FILES,instance = request.user.userprofile)\n        if u_form.is_valid() and p_form.is_valid():\n            u_form.save()\n            p_form.save()\n            messages.success(request, f'Your account have been updated')\n            return redirect('profile')\n    else:\n        u_form = UserUpdateForm(instance = request.user)\n        p_form = UserProfileForm(instance = request.user.userprofile)\n        \n    \n    context = {\n        'u_form': u_form,\n        'p_form': p_form\n    }\n    \n    return render(request,'users/profile.html',context=context)\n</pre> @login_required def profile(request):     if request.method == 'POST':         u_form = UserUpdateForm(request.POST,instance = request.user)         p_form = UserProfileForm(request.POST,request.FILES,instance = request.user.userprofile)         if u_form.is_valid() and p_form.is_valid():             u_form.save()             p_form.save()             messages.success(request, f'Your account have been updated')             return redirect('profile')     else:         u_form = UserUpdateForm(instance = request.user)         p_form = UserProfileForm(instance = request.user.userprofile)                   context = {         'u_form': u_form,         'p_form': p_form     }          return render(request,'users/profile.html',context=context)"},{"location":"Django/04-Django-Blog/django_project/users/migrations/0001_initial/","title":"0001 initial","text":"<p>Generated by Django 4.2 on 2024-06-20 19:59</p> In\u00a0[\u00a0]: Copied! <pre>from django.conf import settings\nfrom django.db import migrations, models\nimport django.db.models.deletion\n</pre> from django.conf import settings from django.db import migrations, models import django.db.models.deletion In\u00a0[\u00a0]: Copied! <pre>class Migration(migrations.Migration):\n    initial = True\n\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n\n    operations = [\n        migrations.CreateModel(\n            name=\"UserProfile\",\n            fields=[\n                (\n                    \"id\",\n                    models.BigAutoField(\n                        auto_created=True,\n                        primary_key=True,\n                        serialize=False,\n                        verbose_name=\"ID\",\n                    ),\n                ),\n                (\"bio\", models.TextField()),\n                (\"birth_date\", models.DateField(blank=True, null=True)),\n                (\n                    \"user\",\n                    models.OneToOneField(\n                        on_delete=django.db.models.deletion.CASCADE,\n                        to=settings.AUTH_USER_MODEL,\n                    ),\n                ),\n            ],\n        ),\n    ]\n</pre> class Migration(migrations.Migration):     initial = True      dependencies = [         migrations.swappable_dependency(settings.AUTH_USER_MODEL),     ]      operations = [         migrations.CreateModel(             name=\"UserProfile\",             fields=[                 (                     \"id\",                     models.BigAutoField(                         auto_created=True,                         primary_key=True,                         serialize=False,                         verbose_name=\"ID\",                     ),                 ),                 (\"bio\", models.TextField()),                 (\"birth_date\", models.DateField(blank=True, null=True)),                 (                     \"user\",                     models.OneToOneField(                         on_delete=django.db.models.deletion.CASCADE,                         to=settings.AUTH_USER_MODEL,                     ),                 ),             ],         ),     ]"},{"location":"Django/04-Django-Blog/django_project/users/migrations/0002_userprofile_image/","title":"0002 userprofile image","text":"<p>Generated by Django 4.2.13 on 2024-07-01 13:36</p> In\u00a0[\u00a0]: Copied! <pre>from django.db import migrations, models\n</pre> from django.db import migrations, models In\u00a0[\u00a0]: Copied! <pre>class Migration(migrations.Migration):\n    dependencies = [\n        (\"users\", \"0001_initial\"),\n    ]\n\n    operations = [\n        migrations.AddField(\n            model_name=\"userprofile\",\n            name=\"image\",\n            field=models.ImageField(default=\"default.jpg\", upload_to=\"profile_pics\"),\n        ),\n    ]\n</pre> class Migration(migrations.Migration):     dependencies = [         (\"users\", \"0001_initial\"),     ]      operations = [         migrations.AddField(             model_name=\"userprofile\",             name=\"image\",             field=models.ImageField(default=\"default.jpg\", upload_to=\"profile_pics\"),         ),     ]"},{"location":"Django/04-Django-Blog/django_project/users/migrations/0003_alter_userprofile_image/","title":"0003 alter userprofile image","text":"<p>Generated by Django 4.2.13 on 2024-07-01 14:26</p> In\u00a0[\u00a0]: Copied! <pre>from django.db import migrations, models\n</pre> from django.db import migrations, models In\u00a0[\u00a0]: Copied! <pre>class Migration(migrations.Migration):\n    dependencies = [\n        (\"users\", \"0002_userprofile_image\"),\n    ]\n\n    operations = [\n        migrations.AlterField(\n            model_name=\"userprofile\",\n            name=\"image\",\n            field=models.ImageField(default=\"default.png\", upload_to=\"profile_pics\"),\n        ),\n    ]\n</pre> class Migration(migrations.Migration):     dependencies = [         (\"users\", \"0002_userprofile_image\"),     ]      operations = [         migrations.AlterField(             model_name=\"userprofile\",             name=\"image\",             field=models.ImageField(default=\"default.png\", upload_to=\"profile_pics\"),         ),     ]"},{"location":"Django/04-Django-Blog/django_project/users/migrations/__init__/","title":"init","text":""},{"location":"Foundation/Ch2-Variable-In-Python/","title":"Ch2 Variables","text":"In\u00a0[1]: Copied! <pre># This is a single-line comment\nprint(\"Hello, World!\")  # This is a comment following a statement\n</pre> # This is a single-line comment print(\"Hello, World!\")  # This is a comment following a statement <pre>Hello, World!\n</pre> In\u00a0[2]: Copied! <pre>'''\nThis is a multi-line comment\nspanning multiple lines\n'''\n# This is another way to\n# write multi-line comments\n</pre> ''' This is a multi-line comment spanning multiple lines ''' # This is another way to # write multi-line comments Out[2]: <pre>'\\nThis is a multi-line comment\\nspanning multiple lines\\n'</pre> In\u00a0[20]: Copied! <pre>a = 5\na,type(a)\n</pre> a = 5 a,type(a) Out[20]: <pre>(5, int)</pre> In\u00a0[21]: Copied! <pre>a = 'Hello,Charlie'\na,type(a)\n</pre> a = 'Hello,Charlie' a,type(a) Out[21]: <pre>('Hello,Charlie', str)</pre> In\u00a0[22]: Copied! <pre>user_name = 'Charlie'\nuser_age = 8\nprint(\"Reader name:\",user_name, \"Age:\",user_age)\n</pre> user_name = 'Charlie' user_age = 8 print(\"Reader name:\",user_name, \"Age:\",user_age) <pre>Reader name: Charlie Age: 8\n</pre> In\u00a0[25]: Copied! <pre>print(f\"Reader name: {user_name}, Age:{user_age}\")\n</pre> print(f\"Reader name: {user_name}, Age:{user_age}\") <pre>Reader name: Charlie, Age:8\n</pre> <p>Using the given characters as the delimiter</p> In\u00a0[26]: Copied! <pre>print(\"Reader name\",user_name, \"Age\",user_age,sep= ' : ')\n</pre> print(\"Reader name\",user_name, \"Age\",user_age,sep= ' : ') <pre>Reader name : Charlie : Age : 8\n</pre> <p>Setting the <code>end</code> parameter</p> In\u00a0[27]: Copied! <pre>print(40,'\\t',end = '')\nprint(50,'\\t',end = '')\n</pre> print(40,'\\t',end = '') print(50,'\\t',end = '') <pre>40 \t50 \t</pre> In\u00a0[28]: Copied! <pre>with open(\"poem.txt\",\"w\") as f:\n    print('In the end she just wanted the house',file = f)\n    print('and a horse not much more what',file = f)\n    print('if \u200ahe didn\u2019t own the house or worse',file = f)\n    print('not even a horse how do we',file = f)\n</pre> with open(\"poem.txt\",\"w\") as f:     print('In the end she just wanted the house',file = f)     print('and a horse not much more what',file = f)     print('if \u200ahe didn\u2019t own the house or worse',file = f)     print('not even a horse how do we',file = f) In\u00a0[29]: Copied! <pre>with open(\"poem.txt\", \"r\") as file:\n    content = file.read()\n\ncontent\n</pre> with open(\"poem.txt\", \"r\") as file:     content = file.read()  content Out[29]: <pre>'In the end she just wanted the house\\nand a horse not much more what\\nif \\u200ahe didn\u2019t own the house or worse\\nnot even a horse how do we\\n'</pre> In\u00a0[6]: Copied! <pre>a = 56\nprint(a)\n# set a as a very large number\na = 9999999999999999999999\nprint(a)\nprint(type(a))\n</pre> a = 56 print(a) # set a as a very large number a = 9999999999999999999999 print(a) print(type(a)) <pre>56\n9999999999999999999999\n&lt;class 'int'&gt;\n</pre> In\u00a0[7]: Copied! <pre>hex_value1 = 0x13\nbin_val = 0b111\noct_val = 0o54\nprint('Binary Number:',bin_val)\nprint('Hex Number:',hex_value1)\nprint('Octal Number:',oct_val)\n</pre> hex_value1 = 0x13 bin_val = 0b111 oct_val = 0o54 print('Binary Number:',bin_val) print('Hex Number:',hex_value1) print('Octal Number:',oct_val) <pre>Binary Number: 7\nHex Number: 19\nOctal Number: 44\n</pre> <p>In Python, the underscore <code>_</code> used within a number is a digit separator that has been available since Python 3.6. It allows for better readability of large numbers by grouping digits in a way similar to how some cultures use commas, periods, or spaces.</p> In\u00a0[8]: Copied! <pre>one_million = 1_000_000\nprint(one_million)\n</pre> one_million = 1_000_000 print(one_million) <pre>1000000\n</pre> In\u00a0[9]: Copied! <pre>af1 = 5.234556\nprint(af1)\naf2 = 25.2345\nprint(af2)\nprint(type(af2))\n</pre> af1 = 5.234556 print(af1) af2 = 25.2345 print(af2) print(type(af2)) <pre>5.234556\n25.2345\n&lt;class 'float'&gt;\n</pre> In\u00a0[10]: Copied! <pre>f1 = 5.12e2\nf2 = 5e3\nprint('f1:',f1,'Type:',type(f1))\nprint('f2:',f2,'Type:',type(f2))\n</pre> f1 = 5.12e2 f2 = 5e3 print('f1:',f1,'Type:',type(f1)) print('f2:',f2,'Type:',type(f2)) <pre>f1: 512.0 Type: &lt;class 'float'&gt;\nf2: 5000.0 Type: &lt;class 'float'&gt;\n</pre> In\u00a0[3]: Copied! <pre># Single quotes\nsingle_quoted_string = 'Hello, Python!'\n\n# Double quotes\ndouble_quoted_string = \"Hello, Python!\"\n</pre> # Single quotes single_quoted_string = 'Hello, Python!'  # Double quotes double_quoted_string = \"Hello, Python!\" <p>If you type 2 strings close with each other, python would merge them automatically</p> In\u00a0[12]: Copied! <pre>s1 = \"Hello,\" 'Charlie'\nprint(s1)\n</pre> s1 = \"Hello,\" 'Charlie' print(s1) <pre>Hello,Charlie\n</pre> In\u00a0[4]: Copied! <pre># Concatenating two strings\ngreeting = \"Hello, \"\nname = \"Python!\"\nwelcome_message = greeting + name\nprint(welcome_message)  # Output: Hello, Python!\n</pre> # Concatenating two strings greeting = \"Hello, \" name = \"Python!\" welcome_message = greeting + name print(welcome_message)  # Output: Hello, Python! <pre>Hello, Python!\n</pre> In\u00a0[5]: Copied! <pre># Repeating a string\nlaugh = \"Ha\"\nlaughing = laugh * 3\nprint(laughing)  # Output: HaHaHa\n</pre> # Repeating a string laugh = \"Ha\" laughing = laugh * 3 print(laughing)  # Output: HaHaHa <pre>HaHaHa\n</pre> In\u00a0[11]: Copied! <pre>print(\"Hello\\nWorld!\")  # This will print \"Hello\" and \"World!\" on two separate lines.\nprint(\"This is a tab\\texample.\")  # This will include a tab space between \"a\" and \"tab\".\nprint(\"This is a double quote \\\" symbol inside a string.\")  # This will include a double quote in the string.\nprint('This is a single quote \\' symbol inside a string.')  # This will include a single quote in the string.\nprint(\"This is a backslash \\\\ symbol inside a string.\")  # This will include a backslash in the string.\n</pre> print(\"Hello\\nWorld!\")  # This will print \"Hello\" and \"World!\" on two separate lines. print(\"This is a tab\\texample.\")  # This will include a tab space between \"a\" and \"tab\". print(\"This is a double quote \\\" symbol inside a string.\")  # This will include a double quote in the string. print('This is a single quote \\' symbol inside a string.')  # This will include a single quote in the string. print(\"This is a backslash \\\\ symbol inside a string.\")  # This will include a backslash in the string. <pre>Hello\nWorld!\nThis is a tab\texample.\nThis is a double quote \" symbol inside a string.\nThis is a single quote ' symbol inside a string.\nThis is a backslash \\ symbol inside a string.\n</pre> In\u00a0[13]: Copied! <pre>s1 = 'The price of this book is:'\np = 99.8\n# Could not work\nprint(s1 + p)\n</pre> s1 = 'The price of this book is:' p = 99.8 # Could not work print(s1 + p) <pre>\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nCell In[13], line 4\n      2 p = 99.8\n      3 # Could not work\n----&gt; 4 print(s1 + p)\n\nTypeError: can only concatenate str (not \"float\") to str</pre> <p>In the next sections, we will delve into more complex operations and techniques to manipulate strings, enhancing your ability to handle text data effectively in Python.</p> In\u00a0[14]: Copied! <pre>print(s1 + str(p))\n</pre> print(s1 + str(p)) <pre>The price of this book is:99.8\n</pre> In\u00a0[15]: Copied! <pre>print(s1 + repr(p))\n</pre> print(s1 + repr(p)) <pre>The price of this book is:99.8\n</pre> <p><code>repr</code> would also transfer strings to a expression</p> In\u00a0[16]: Copied! <pre>st = 'I love python'\nprint(st)\nprint(repr(st))\n</pre> st = 'I love python' print(st) print(repr(st)) <pre>I love python\n'I love python'\n</pre> In\u00a0[17]: Copied! <pre>raw_string = r\"This is a raw string, so \\n and \\t won't be interpreted as escape characters.\"\nprint(raw_string)\n</pre> raw_string = r\"This is a raw string, so \\n and \\t won't be interpreted as escape characters.\" print(raw_string) <pre>This is a raw string, so \\n and \\t won't be interpreted as escape characters.\n</pre> <p>Raw strings are particularly useful when dealing with <code>regular expressions</code>, <code>file paths</code>, <code>URLs</code>, and other scenarios where backslashes frequently occur and are intended to be interpreted literally:</p> In\u00a0[18]: Copied! <pre># Using a raw string for a Windows file path\nfile_path = r\"C:\\Users\\Username\\Documents\\File.txt\"\nprint(file_path)\n</pre> # Using a raw string for a Windows file path file_path = r\"C:\\Users\\Username\\Documents\\File.txt\" print(file_path) <pre>C:\\Users\\Username\\Documents\\File.txt\n</pre>"},{"location":"Foundation/Ch2-Variable-In-Python/#chapter-2-understanding-variables-in-python","title":"Chapter 2: Understanding Variables in Python\u00b6","text":"<p>Welcome to Chapter 2 of our Python programming course! In this chapter, we'll delve into one of the foundational concepts of programming in Python: <code>variables</code>. Understanding variables is crucial as they are the basic units for storing data in any programming language. In Python, variables are even more interesting due to the language's dynamic nature.</p> <p>Python is often described as a <code>weakly typed</code> or <code>dynamically typed</code> language. This means two things in practice:</p> <ol> <li>You don't need to declare variables before using them. You simply create them when you assign a value to them.</li> <li>The type of a variable can change over time, as you assign new values of different types to the same variable.</li> </ol> <p>This flexibility makes Python an extremely user-friendly language, especially for beginners. However, it's essential to understand how to use this flexibility to your advantage while writing clear and error-free code.</p> <p>In this chapter, we will cover:</p> <ul> <li>How to use comments to make your code more readable.</li> <li>The basics of variables in Python, including naming conventions and assignment.</li> <li>Different types of variables available in Python, such as <code>integers</code>, <code>strings</code>, <code>floats</code>, and more complex types like <code>lists</code>, <code>tuples</code>, <code>sets</code>, <code>dictionaries</code>, and <code>bytes</code>.</li> <li>How to work with each type of variable, including operations you can perform on them.</li> </ul>"},{"location":"Foundation/Ch2-Variable-In-Python/#0-the-naming-rule-for-variables","title":"0. The naming rule for variables\u00b6","text":"<ul> <li>It could contain numbers, letters, underline. but not start with numbers.</li> <li>Could not contain space</li> <li>Could not be reserved characters of python, such as <code>False</code></li> </ul>"},{"location":"Foundation/Ch2-Variable-In-Python/#1-comments-in-python","title":"1. Comments in Python\u00b6","text":"<p>Comments are not executed by the Python interpreter. They are meant for programmers to leave notes, explanations, or comments within the code for human readers. Comments are crucial for maintaining code, especially when working in teams or when you return to your own code after some time.</p>"},{"location":"Foundation/Ch2-Variable-In-Python/#11-single-line-comments","title":"1.1 Single-line Comments\u00b6","text":"<p>Single-line comments start with a <code>#</code> symbol. Anything following the # on that line is considered a comment and is ignored by Python.</p>"},{"location":"Foundation/Ch2-Variable-In-Python/#12-multi-line-comments","title":"1.2 Multi-line Comments\u00b6","text":"<p>For comments that extend over multiple lines, you can either use the # symbol at the beginning of each line or use triple quotes (<code>'''</code> or <code>\"\"\"</code>). Although not technically a comment, triple quotes are often used as multi-line comments in Python.</p>"},{"location":"Foundation/Ch2-Variable-In-Python/#2-set-variable-and-print-it","title":"2. Set Variable and Print it\u00b6","text":""},{"location":"Foundation/Ch2-Variable-In-Python/#21-weakly-typed-language","title":"2.1 Weakly typed Language\u00b6","text":""},{"location":"Foundation/Ch2-Variable-In-Python/#22-use-print-to-print-the-output","title":"2.2 Use <code>print()</code> to print the output\u00b6","text":""},{"location":"Foundation/Ch2-Variable-In-Python/#23-print-the-output-into-a-file","title":"2.3 Print the output into a file\u00b6","text":""},{"location":"Foundation/Ch2-Variable-In-Python/#3-numeric-type","title":"3. Numeric Type\u00b6","text":"<p>Python supports various numeric types, including integers (int), floating-point numbers (float), and complex numbers (complex)</p>"},{"location":"Foundation/Ch2-Variable-In-Python/#31-int-type","title":"3.1 int type\u00b6","text":"<p>The <code>int</code> type variables in python have four forms</p> <ul> <li>Decimal Number</li> <li><code>Binary</code> Number: Start with '0b' or '0B'</li> <li><code>Octal</code> Number: Start with '0o' or '0O'</li> <li><code>Hex</code> Number: Start with '0x' or '0X', and use <code>a~f</code> to represent <code>10-15</code></li> </ul>"},{"location":"Foundation/Ch2-Variable-In-Python/#31-float-type","title":"3.1 Float type\u00b6","text":"<p>Floating-point numbers (<code>float</code>) represent real numbers and can include a decimal point.</p>"},{"location":"Foundation/Ch2-Variable-In-Python/#4-string-type-and-operations","title":"4. String Type and Operations\u00b6","text":"<p>Strings in Python are created by enclosing characters in quotes. You can use either single quotes (<code>'</code>) or double quotes (<code>\"</code>), depending on what suits your needs. Once you have created a string, there are several basic operations you can perform on it, such as <code>concatenation</code>, <code>repetition</code>, and more.</p>"},{"location":"Foundation/Ch2-Variable-In-Python/#41-creating-strings","title":"4.1 Creating Strings\u00b6","text":"<p>To create a string, simply enclose your text in single or double quotes. Python treats both equally, allowing you to choose based on convenience and readability.</p>"},{"location":"Foundation/Ch2-Variable-In-Python/#42-concatenation","title":"4.2 Concatenation\u00b6","text":"<p>You can join two or more strings into one using the <code>+</code> operator. This operation is known as concatenation.</p>"},{"location":"Foundation/Ch2-Variable-In-Python/#43-repetition","title":"4.3 Repetition\u00b6","text":"<p>Strings can be repeated a specified number of times using the <code>*</code> operator, providing a simple way to repeat a string.</p>"},{"location":"Foundation/Ch2-Variable-In-Python/#44-escape-character","title":"4.4 Escape character\u00b6","text":"<p>The escape character allows you to use characters that are otherwise impossible to put into a string, such as a <code>newline</code>, <code>tab</code>, or even the <code>backslash</code> itself.</p> <ul> <li><code>\\n</code>: Inserts a newline in the text at this point.</li> <li><code>\\t</code>: Inserts a tab in the text at this point.</li> <li><code>\\\\</code>: Inserts a backslash (<code>\\</code>) in the text at this point.</li> <li><code>\\\"</code>: Inserts a double quote character in the text at this point, which is particularly useful in strings that are surrounded by double quotes.</li> <li><code>\\'</code>: Inserts a single quote character in the text at this point, which is useful in strings that are surrounded by single quotes.</li> </ul>"},{"location":"Foundation/Ch2-Variable-In-Python/#45-type-cast-from-numeric-to-string","title":"4.5 Type cast from numeric to string\u00b6","text":"<p>Python does not allow us to combine numeric type with strings, for doing that, we should use <code>repr()</code> or <code>str()</code> to transfer numeric to string.</p>"},{"location":"Foundation/Ch2-Variable-In-Python/#46-raw-string","title":"4.6 Raw String\u00b6","text":"<p>Raw string start with <code>r</code>, within this string, <code>\\</code> could not be treated as <code>escape characters</code>.</p>"},{"location":"Foundation/Ch3-Tuple-List-And-Dictionary/","title":"Ch3 Tuple, List and Dictionary","text":"In\u00a0[1]: Copied! <pre># A tuple of integers\nmy_tuple = (1, 2, 3)\n\n# A tuple with mixed data types\nmixed_tuple = (\"Hello\", 100, 1.5)\n</pre> # A tuple of integers my_tuple = (1, 2, 3)  # A tuple with mixed data types mixed_tuple = (\"Hello\", 100, 1.5) In\u00a0[2]: Copied! <pre>print(my_tuple[0])  # Output: 1\nprint(mixed_tuple[1])  # Output: 100\n</pre> print(my_tuple[0])  # Output: 1 print(mixed_tuple[1])  # Output: 100 <pre>1\n100\n</pre> In\u00a0[4]: Copied! <pre>a_tuple = ('crazyit',20,5.6,'fkit',-17)\nprint(a_tuple[-3:-1])\nprint(a_tuple[1:-2])\nprint(a_tuple[::-1])\n</pre> a_tuple = ('crazyit',20,5.6,'fkit',-17) print(a_tuple[-3:-1]) print(a_tuple[1:-2]) print(a_tuple[::-1]) <pre>(5.6, 'fkit')\n(20, 5.6)\n(-17, 'fkit', 5.6, 20, 'crazyit')\n</pre> In\u00a0[10]: Copied! <pre># A list of integers\nmy_list = [1, 2, 3, 4]\nprint(my_list)\n# Adding elements to a list\nmy_list.append(5)  # my_list is now [1, 2, 3, 4, 5]\nprint(my_list)\n</pre> # A list of integers my_list = [1, 2, 3, 4] print(my_list) # Adding elements to a list my_list.append(5)  # my_list is now [1, 2, 3, 4, 5] print(my_list) <pre>[1, 2, 3, 4]\n[1, 2, 3, 4, 5]\n</pre> <p>Python lists are also not type-restricted</p> In\u00a0[13]: Copied! <pre>my_list = [1,2,3,'a']\nprint(my_list)\n\nmy_list = [42, \"hello\", 3.14, [1, 2, 3], {'key': 'value'}, True]\n\nprint(my_list)\n</pre> my_list = [1,2,3,'a'] print(my_list)  my_list = [42, \"hello\", 3.14, [1, 2, 3], {'key': 'value'}, True]  print(my_list) <pre>[1, 2, 3, 'a']\n[42, 'hello', 3.14, [1, 2, 3], {'key': 'value'}, True]\n</pre> In\u00a0[21]: Copied! <pre>a_list = ['crazyit',20,-2]\na_list.append('fkit')\nprint(a_list)\n</pre> a_list = ['crazyit',20,-2] a_list.append('fkit') print(a_list) <pre>['crazyit', 20, -2, 'fkit']\n</pre> In\u00a0[23]: Copied! <pre>a_list.append(['a','b'])\nprint(a_list)\na_list.append(('a','b'))\nprint(a_list)\n</pre> a_list.append(['a','b']) print(a_list) a_list.append(('a','b')) print(a_list) <pre>['crazyit', 20, -2, 'fkit', ['a', 'b'], ['a', 'b']]\n['crazyit', 20, -2, 'fkit', ['a', 'b'], ['a', 'b'], ('a', 'b')]\n</pre> In\u00a0[26]: Copied! <pre>b_list = ['a',30]\nb_list.extend((-2,3.1))\nprint(b_list)\n\nb_list = ['a',30]\nb_list =  b_list + [-2,3.1]\nprint(b_list)\n</pre> b_list = ['a',30] b_list.extend((-2,3.1)) print(b_list)  b_list = ['a',30] b_list =  b_list + [-2,3.1] print(b_list) <pre>['a', 30, -2, 3.1]\n['a', 30, -2, 3.1]\n</pre> In\u00a0[27]: Copied! <pre>b_list = ['a',30]\nb_list =  b_list + (-2,3.1)\nprint(b_list)\n</pre> b_list = ['a',30] b_list =  b_list + (-2,3.1) print(b_list) <pre>\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nCell In[27], line 2\n      1 b_list = ['a',30]\n----&gt; 2 b_list =  b_list + (-2,3.1)\n      3 print(b_list)\n\nTypeError: can only concatenate list (not \"tuple\") to list</pre> In\u00a0[28]: Copied! <pre>c_list = list(range(1,6))\nprint(c_list)\nc_list.insert(3,'CRAZY')\nprint(c_list)\n</pre> c_list = list(range(1,6)) print(c_list) c_list.insert(3,'CRAZY') print(c_list) <pre>[1, 2, 3, 4, 5]\n[1, 2, 3, 'CRAZY', 4, 5]\n</pre> In\u00a0[29]: Copied! <pre>c_list.insert(3,tuple('crazy'))\nprint(c_list)\n</pre> c_list.insert(3,tuple('crazy')) print(c_list) <pre>[1, 2, 3, ('c', 'r', 'a', 'z', 'y'), 'CRAZY', 4, 5]\n</pre> In\u00a0[30]: Copied! <pre>my_list = ['a', 'b', 'c', 'd']\ndel my_list[1]  # Removes 'b'\n# Result: ['a', 'c', 'd']\nprint(my_list)\n</pre> my_list = ['a', 'b', 'c', 'd'] del my_list[1]  # Removes 'b' # Result: ['a', 'c', 'd'] print(my_list) <pre>['a', 'c', 'd']\n</pre> <p><code>remove()</code> method: Removes the first occurrence of a value without needing to know its index. If the item is not found, it raises a <code>ValueError</code>.</p> In\u00a0[31]: Copied! <pre>my_list = ['apple', 'banana', 'cherry']\nmy_list.remove('banana')  # Removes 'banana'\n# Result: ['apple', 'cherry']\nprint(my_list)\n</pre> my_list = ['apple', 'banana', 'cherry'] my_list.remove('banana')  # Removes 'banana' # Result: ['apple', 'cherry'] print(my_list) <pre>['apple', 'cherry']\n</pre> <p><code>pop()</code> method: Removes and returns an item at a given index (default is the last item). Without an argument, it removes the last item in the list.</p> In\u00a0[32]: Copied! <pre>my_list = [10, 20, 30, 40, 50]\nremoved_item = my_list.pop(2)  # Removes 30\n# Result: [10, 20, 40, 50], removed_item = 30\nprint(my_list)\n</pre> my_list = [10, 20, 30, 40, 50] removed_item = my_list.pop(2)  # Removes 30 # Result: [10, 20, 40, 50], removed_item = 30 print(my_list) <pre>[10, 20, 40, 50]\n</pre> <p><code>clear()</code> method: Empties the list, removing all items. The list remains, but it will have no content.</p> In\u00a0[33]: Copied! <pre>my_list = [1, 2, 3, 4, 5]\nmy_list.clear()  # Clears the list\nprint(my_list)\n</pre> my_list = [1, 2, 3, 4, 5] my_list.clear()  # Clears the list print(my_list) <pre>[]\n</pre> In\u00a0[34]: Copied! <pre>a_list = [2,30,'a',[5,30],30]\nprint(a_list.count(30))\nprint(a_list.count([5,30]))\n</pre> a_list = [2,30,'a',[5,30],30] print(a_list.count(30)) print(a_list.count([5,30])) <pre>2\n1\n</pre> In\u00a0[35]: Copied! <pre>a_list = [2,30,'a','b','crazyit',30]\nprint(a_list.index(30))\n</pre> a_list = [2,30,'a','b','crazyit',30] print(a_list.index(30)) <pre>1\n</pre> <p>Search start from index 2</p> In\u00a0[36]: Copied! <pre>print(a_list.index(30,2))\n</pre> print(a_list.index(30,2)) <pre>5\n</pre> In\u00a0[37]: Copied! <pre>print(a_list.index(30,2,4))\n</pre> print(a_list.index(30,2,4)) <pre>\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\nCell In[37], line 1\n----&gt; 1 print(a_list.index(30,2,4))\n\nValueError: 30 is not in list</pre> <p>Search start of index from 2 to 4</p> In\u00a0[38]: Copied! <pre>a_list = list(range(1,8))\na_list.reverse()\nprint(a_list)\n</pre> a_list = list(range(1,8)) a_list.reverse() print(a_list) <pre>[7, 6, 5, 4, 3, 2, 1]\n</pre> In\u00a0[39]: Copied! <pre>a_list = [3,4,-2,-30,14,9.3,3.4]\na_list.sort()\nprint(a_list)\n</pre> a_list = [3,4,-2,-30,14,9.3,3.4] a_list.sort() print(a_list) <pre>[-30, -2, 3, 3.4, 4, 9.3, 14]\n</pre> In\u00a0[40]: Copied! <pre>b_list = ['Python','Swift','Ruby','Go','Kotlin','Erlang']\nb_list.sort()\nprint(b_list)\n</pre> b_list = ['Python','Swift','Ruby','Go','Kotlin','Erlang'] b_list.sort() print(b_list) <pre>['Erlang', 'Go', 'Kotlin', 'Python', 'Ruby', 'Swift']\n</pre> <p>Sort by given key func</p> In\u00a0[42]: Copied! <pre>b_list.sort(key = len)\nprint(b_list)\nb_list.sort(key = len, reverse= True)\nb_list\n</pre> b_list.sort(key = len) print(b_list) b_list.sort(key = len, reverse= True) b_list <pre>['Go', 'Ruby', 'Swift', 'Erlang', 'Kotlin', 'Python']\n</pre> Out[42]: <pre>['Erlang', 'Kotlin', 'Python', 'Swift', 'Ruby', 'Go']</pre> In\u00a0[5]: Copied! <pre>a_tuple = ('crazyit',20,-1.2)\nb_tuple = (127,'crazyit','fkit',3.33)\nsum_tuple = a_tuple + b_tuple\nprint(sum_tuple)\nprint(a_tuple)\nprint(b_tuple)\n</pre> a_tuple = ('crazyit',20,-1.2) b_tuple = (127,'crazyit','fkit',3.33) sum_tuple = a_tuple + b_tuple print(sum_tuple) print(a_tuple) print(b_tuple) <pre>('crazyit', 20, -1.2, 127, 'crazyit', 'fkit', 3.33)\n('crazyit', 20, -1.2)\n(127, 'crazyit', 'fkit', 3.33)\n</pre> In\u00a0[6]: Copied! <pre>print(a_tuple + (-20,-30))\n</pre> print(a_tuple + (-20,-30)) <pre>('crazyit', 20, -1.2, -20, -30)\n</pre> In\u00a0[14]: Copied! <pre>a_list = [20,30,50,100]\nb_list = ['a','b','c']\nsum_list = a_list + b_list\nprint(sum_list)\nprint(a_list + ['fkit'])\n</pre> a_list = [20,30,50,100] b_list = ['a','b','c'] sum_list = a_list + b_list print(sum_list) print(a_list + ['fkit']) <pre>[20, 30, 50, 100, 'a', 'b', 'c']\n[20, 30, 50, 100, 'fkit']\n</pre> In\u00a0[7]: Copied! <pre>mul_tuple = a_tuple * 3\nprint(mul_tuple)\n</pre> mul_tuple = a_tuple * 3 print(mul_tuple) <pre>('crazyit', 20, -1.2, 'crazyit', 20, -1.2, 'crazyit', 20, -1.2)\n</pre> In\u00a0[15]: Copied! <pre>a_list = [30,'Python',2]\nmul_list = a_list * 3\nprint(mul_list)\n</pre> a_list = [30,'Python',2] mul_list = a_list * 3 print(mul_list) <pre>[30, 'Python', 2, 30, 'Python', 2, 30, 'Python', 2]\n</pre> <p>Example for adding ending of date</p> In\u00a0[16]: Copied! <pre>order_endings = ('st','nd','rd')\\\n    + ('th',) * 17 + ('st','nd','rd')\\\n    + ('th',) * 7 + ('st',)\nprint(order_endings)\n</pre> order_endings = ('st','nd','rd')\\     + ('th',) * 17 + ('st','nd','rd')\\     + ('th',) * 7 + ('st',) print(order_endings) <pre>('st', 'nd', 'rd', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'st', 'nd', 'rd', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'st')\n</pre> In\u00a0[17]: Copied! <pre>day = input(\"please enter a date(1-31)\")\nday_int = int(day)\nprint(day + order_endings[day_int -1])\n</pre> day = input(\"please enter a date(1-31)\") day_int = int(day) print(day + order_endings[day_int -1]) <pre>28th\n</pre> In\u00a0[18]: Copied! <pre>a_tuple = ('crazyit',20,-1.2)\nprint(20 in a_tuple)\nprint(1.2 in a_tuple)\nprint('fkit' not in a_tuple)\n</pre> a_tuple = ('crazyit',20,-1.2) print(20 in a_tuple) print(1.2 in a_tuple) print('fkit' not in a_tuple) <pre>True\nFalse\nTrue\n</pre> In\u00a0[19]: Copied! <pre>a_tuple = (20,10,-2,15.2,102,50)\nprint(max(a_tuple))\nprint(min(a_tuple))\nprint(len(a_tuple))\n</pre> a_tuple = (20,10,-2,15.2,102,50) print(max(a_tuple)) print(min(a_tuple)) print(len(a_tuple)) <pre>102\n-2\n6\n</pre> In\u00a0[20]: Copied! <pre>b_list = ['crazyit','fkit','Python','Kotlin']\nprint(max(b_list))\nprint(min(b_list))\nprint(len(b_list))\n</pre> b_list = ['crazyit','fkit','Python','Kotlin'] print(max(b_list)) print(min(b_list)) print(len(b_list)) <pre>fkit\nKotlin\n4\n</pre> In\u00a0[44]: Copied! <pre># A simple dictionary\nmy_dict = {\"name\": \"Alice\", \"age\": 25}\nprint(my_dict)\n\n# Adding a new key-value pair\nmy_dict[\"city\"] = \"New York\"  # my_dict now includes \"city\": \"New York\"\nprint(my_dict)\n</pre> # A simple dictionary my_dict = {\"name\": \"Alice\", \"age\": 25} print(my_dict)  # Adding a new key-value pair my_dict[\"city\"] = \"New York\"  # my_dict now includes \"city\": \"New York\" print(my_dict) <pre>{'name': 'Alice', 'age': 25}\n{'name': 'Alice', 'age': 25, 'city': 'New York'}\n</pre> <p>Key could be tuple but not list!</p> In\u00a0[46]: Copied! <pre>dict2 = {(20,30):'good',30:'bad'}\nprint(dict2)\n# dict2 = {[20,30]:'good',30:'bad'}\n# print(dict2)\n</pre> dict2 = {(20,30):'good',30:'bad'} print(dict2) # dict2 = {[20,30]:'good',30:'bad'} # print(dict2) <pre>{(20, 30): 'good', 30: 'bad'}\n</pre> <p>Transfer List to Dictionary</p> In\u00a0[47]: Copied! <pre>vegetables = [('celery',1.58),('brocoli',1.29),('lettuce',2.19)]\ndict3 = dict(vegetables)\nprint(dict3)\n</pre> vegetables = [('celery',1.58),('brocoli',1.29),('lettuce',2.19)] dict3 = dict(vegetables) print(dict3) <pre>{'celery': 1.58, 'brocoli': 1.29, 'lettuce': 2.19}\n</pre> In\u00a0[48]: Copied! <pre>cars = [['BMW',8.5],['BENS',8.3],['AUDI',7.9]]\ndict4 = dict(cars)\nprint(dict4)\n</pre> cars = [['BMW',8.5],['BENS',8.3],['AUDI',7.9]] dict4 = dict(cars) print(dict4) <pre>{'BMW': 8.5, 'BENS': 8.3, 'AUDI': 7.9}\n</pre> In\u00a0[49]: Copied! <pre>scores = {'literature':89, 'Math': 92, 'English': 93}\nprint(scores['Math'])\n</pre> scores = {'literature':89, 'Math': 92, 'English': 93} print(scores['Math']) <pre>92\n</pre> In\u00a0[50]: Copied! <pre>del scores['English']\nprint(scores)\n</pre> del scores['English'] print(scores) <pre>{'literature': 89, 'Math': 92}\n</pre> In\u00a0[51]: Copied! <pre>print('literature' in scores)\nprint('gym' not in scores)\n</pre> print('literature' in scores) print('gym' not in scores) <pre>True\nTrue\n</pre> In\u00a0[52]: Copied! <pre>cars\n</pre> cars Out[52]: <pre>[['BMW', 8.5], ['BENS', 8.3], ['AUDI', 7.9]]</pre> In\u00a0[53]: Copied! <pre>cars.clear()\nprint(cars)\n</pre> cars.clear() print(cars) <pre>[]\n</pre> <p><code>get()</code>: get values based on key</p> In\u00a0[54]: Copied! <pre>print(scores.get('Math'))\nprint(scores.get('gym'))\n</pre> print(scores.get('Math')) print(scores.get('gym')) <pre>92\nNone\n</pre> <p><code>update()</code></p> In\u00a0[55]: Copied! <pre>print(scores)\nscores.update({'History':89, 'English':91})\nprint(scores)\n</pre> print(scores) scores.update({'History':89, 'English':91}) print(scores) <pre>{'literature': 89, 'Math': 92}\n{'literature': 89, 'Math': 92, 'History': 89, 'English': 91}\n</pre> <ul> <li><code>items()</code>: get all key-value record</li> <li><code>keys()</code>: get all keys</li> <li><code>values()</code>: get all values</li> </ul> In\u00a0[56]: Copied! <pre>subjects = scores.items()\nprint(subjects)\nprint(type(subjects))\n</pre> subjects = scores.items() print(subjects) print(type(subjects)) <pre>dict_items([('literature', 89), ('Math', 92), ('History', 89), ('English', 91)])\n&lt;class 'dict_items'&gt;\n</pre> In\u00a0[57]: Copied! <pre>kys = scores.keys()\nprint(type(kys))\nprint(kys)\n</pre> kys = scores.keys() print(type(kys)) print(kys) <pre>&lt;class 'dict_keys'&gt;\ndict_keys(['literature', 'Math', 'History', 'English'])\n</pre> In\u00a0[58]: Copied! <pre>vals = scores.values()\nprint(type(vals))\nprint(vals)\n</pre> vals = scores.values() print(type(vals)) print(vals) <pre>&lt;class 'dict_values'&gt;\ndict_values([89, 92, 89, 91])\n</pre> <p><code>pop()</code> and <code>popitem()</code></p> In\u00a0[59]: Copied! <pre>print(scores)\nprint(scores.pop('English'))\nprint(scores)\n</pre> print(scores) print(scores.pop('English')) print(scores) <pre>{'literature': 89, 'Math': 92, 'History': 89, 'English': 91}\n91\n{'literature': 89, 'Math': 92, 'History': 89}\n</pre> In\u00a0[60]: Copied! <pre>print(scores.popitem())\nprint(scores)\n</pre> print(scores.popitem()) print(scores) <pre>('History', 89)\n{'literature': 89, 'Math': 92}\n</pre> In\u00a0[61]: Copied! <pre>k,v = scores.popitem()\nprint(k,v)\n</pre> k,v = scores.popitem() print(k,v) <pre>Math 92\n</pre> In\u00a0[62]: Copied! <pre>cars = {'BMW':8.5, 'BENS':8.3, 'AUDI':7.9}\nprint(cars.setdefault('PORSCHE',9.2))\nprint(cars)\n</pre> cars = {'BMW':8.5, 'BENS':8.3, 'AUDI':7.9} print(cars.setdefault('PORSCHE',9.2)) print(cars) <pre>9.2\n{'BMW': 8.5, 'BENS': 8.3, 'AUDI': 7.9, 'PORSCHE': 9.2}\n</pre> In\u00a0[63]: Copied! <pre>print(cars.setdefault('BENS',5.2))\nprint(cars)\n</pre> print(cars.setdefault('BENS',5.2)) print(cars) <pre>8.3\n{'BMW': 8.5, 'BENS': 8.3, 'AUDI': 7.9, 'PORSCHE': 9.2}\n</pre> In\u00a0[64]: Copied! <pre>a_dict = dict.fromkeys(['a','b'])\nprint(a_dict)\n</pre> a_dict = dict.fromkeys(['a','b']) print(a_dict) <pre>{'a': None, 'b': None}\n</pre> In\u00a0[65]: Copied! <pre>b_dict = dict.fromkeys((13,17))\nprint(b_dict)\n</pre> b_dict = dict.fromkeys((13,17)) print(b_dict) <pre>{13: None, 17: None}\n</pre> In\u00a0[66]: Copied! <pre>c_dict = dict.fromkeys((13,17),'good')\nprint(c_dict)\n</pre> c_dict = dict.fromkeys((13,17),'good') print(c_dict) <pre>{13: 'good', 17: 'good'}\n</pre> In\u00a0[67]: Copied! <pre>temp = 'book name is %(name)s, price is %(price)06.2f, published by %(publish)s'\nbook = {'name':'Crazy Python','price':78.9,'publish':'who cares'}\nprint(temp % book)\n</pre> temp = 'book name is %(name)s, price is %(price)06.2f, published by %(publish)s' book = {'name':'Crazy Python','price':78.9,'publish':'who cares'} print(temp % book) <pre>book name is Crazy Python, price is 078.90, published by who cares\n</pre> In\u00a0[68]: Copied! <pre>book = {'name':'Crazy JAVA','price':88.9,'publish':'I do not know'}\nprint(temp % book)\n</pre> book = {'name':'Crazy JAVA','price':88.9,'publish':'I do not know'} print(temp % book) <pre>book name is Crazy JAVA, price is 088.90, published by I do not know\n</pre>"},{"location":"Foundation/Ch3-Tuple-List-And-Dictionary/#chapter-3-tuples-lists-and-dictionaries","title":"Chapter 3: Tuples, Lists, and Dictionaries\u00b6","text":"<p>In this chapter, we will explore three fundamental data structures in Python: <code>Tuples</code>, <code>Lists</code>, and <code>Dictionaries</code>. Understanding these structures is crucial for data organization, storage, and manipulation in Python programming.</p>"},{"location":"Foundation/Ch3-Tuple-List-And-Dictionary/#1-tuples","title":"1. Tuples\u00b6","text":"<p>Tuples are immutable sequences, typically used to store collections of heterogeneous data. Tuples are defined by enclosing the elements in parentheses <code>()</code>.</p>"},{"location":"Foundation/Ch3-Tuple-List-And-Dictionary/#11-creating-a-tuple","title":"1.1 Creating a Tuple\u00b6","text":"<p>To create a tuple, you simply list the values within parentheses, separated by commas.</p>"},{"location":"Foundation/Ch3-Tuple-List-And-Dictionary/#12-accessing-tuple-elements-using-index","title":"1.2 Accessing Tuple Elements using index\u00b6","text":"<p>You can access elements of a tuple by using indexing, with the first element at index 0.</p>"},{"location":"Foundation/Ch3-Tuple-List-And-Dictionary/#13-sublist-equal-to-slice","title":"1.3 Sublist (equal to <code>slice()</code>)\u00b6","text":""},{"location":"Foundation/Ch3-Tuple-List-And-Dictionary/#2-lists","title":"2. Lists\u00b6","text":"<p>Lists are mutable sequences, typically used to store collections of homogeneous items. Lists are defined by enclosing the elements in square brackets <code>[]</code>.</p>"},{"location":"Foundation/Ch3-Tuple-List-And-Dictionary/#21-creating-a-list","title":"2.1 Creating a List\u00b6","text":"<p>To create a list, you place all the items inside square brackets, separated by commas.</p>"},{"location":"Foundation/Ch3-Tuple-List-And-Dictionary/#22-add-elements-to-list","title":"2.2 Add elements to list\u00b6","text":"<ul> <li><code>append()</code>: Adds a single element to the end of the list.<ul> <li><code>my_list.append(element)</code></li> </ul> </li> <li><code>extend()</code>: Adds elements from an iterable (e.g., <code>list</code>, <code>tuple</code>, <code>string</code>) to the end of the list.<ul> <li><code>my_list.extend([element1, element2])</code></li> </ul> </li> <li><code>insert()</code>: Inserts a given element at a specified position in the list.<ul> <li><code>my_list.insert(index, element)</code></li> </ul> </li> </ul>"},{"location":"Foundation/Ch3-Tuple-List-And-Dictionary/#23-remove-elements-from-list","title":"2.3 Remove elements from List\u00b6","text":"<p><code>del statement</code>: This is not a function but a Python statement. It removes an item at a specific index or slices of elements from the list. It can also delete the list entirely.</p>"},{"location":"Foundation/Ch3-Tuple-List-And-Dictionary/#24-other-popular-methods","title":"2.4 Other Popular Methods\u00b6","text":"<ul> <li><code>count()</code>: Return number of occurrences of value.</li> <li><code>index()</code>: Return first index of value.</li> <li><code>pop()</code>: Remove and return item at index (default last). [Using list as Stack]</li> <li><code>reverse()</code>: Reverse the elements in a list</li> <li><code>sort()</code>: Sort the elements in a list</li> </ul>"},{"location":"Foundation/Ch3-Tuple-List-And-Dictionary/#3-shared-property-methods-of-tuple-and-list","title":"3. Shared property / methods of Tuple and List\u00b6","text":""},{"location":"Foundation/Ch3-Tuple-List-And-Dictionary/#31-addition","title":"3.1 Addition\u00b6","text":""},{"location":"Foundation/Ch3-Tuple-List-And-Dictionary/#32-multiply","title":"3.2 Multiply\u00b6","text":""},{"location":"Foundation/Ch3-Tuple-List-And-Dictionary/#33-query-elements-use-in","title":"3.3 Query elements use <code>in</code>\u00b6","text":""},{"location":"Foundation/Ch3-Tuple-List-And-Dictionary/#34-statistics","title":"3.4 Statistics\u00b6","text":"<ul> <li><code>len()</code></li> <li><code>max()</code></li> <li><code>min()</code></li> </ul>"},{"location":"Foundation/Ch3-Tuple-List-And-Dictionary/#4-dictionaries","title":"4. Dictionaries\u00b6","text":"<p>Dictionaries are mutable data types that store mappings of unique keys to values. Dictionaries are defined by enclosing key-value pairs in curly braces <code>{}</code></p>"},{"location":"Foundation/Ch3-Tuple-List-And-Dictionary/#41-creating-a-dictionary","title":"4.1 Creating a Dictionary\u00b6","text":"<p>To create a dictionary, you use curly braces with key-value pairs separated by colons.</p>"},{"location":"Foundation/Ch3-Tuple-List-And-Dictionary/#42-basic-usage-of-dictionary","title":"4.2 Basic Usage of Dictionary\u00b6","text":"<ul> <li>Use key to <code>access</code> value</li> <li>Use key to <code>add</code> key-value record</li> <li>Use key to <code>delete</code> key-value record</li> <li>Use key to <code>modify</code> key-value record</li> <li>Use key to <code>search</code> key-value</li> </ul>"},{"location":"Foundation/Ch3-Tuple-List-And-Dictionary/#43-useful-functions","title":"4.3 Useful functions\u00b6","text":"<p><code>clear()</code></p>"},{"location":"Foundation/Ch3-Tuple-List-And-Dictionary/#43-setdefault-and-fromkeys","title":"4.3 setdefault() and fromkeys()\u00b6","text":"<ul> <li><code>setdefault()</code> Return the value of given key, if given key not exist in the origin dictionary, would return the given value.</li> <li><code>fromkeys() </code>Create dictionary from given list, using the elements from list as keys</li> </ul>"},{"location":"Foundation/Ch3-Tuple-List-And-Dictionary/#44-using-dictionary-to-format-string","title":"4.4 Using dictionary to format string\u00b6","text":""},{"location":"Foundation/Ch5-Functions/","title":"Ch5 Functions","text":"In\u00a0[1]: Copied! <pre>def greet(name):\n    \"\"\"Display a simple greeting.\"\"\"\n    return f\"Hello, {name}!\"\n\n# Call the function with an argument\nprint(greet(\"Alice\"))\n</pre> def greet(name):     \"\"\"Display a simple greeting.\"\"\"     return f\"Hello, {name}!\"  # Call the function with an argument print(greet(\"Alice\")) <pre>Hello, Alice!\n</pre> In\u00a0[2]: Copied! <pre>def my_max(x,y):\n    '''\n    get the bigger number between 2 numbers\n    my_max(x,y)\n        return the larger number between x and y\n    '''\n    z = x if x &gt; y else y\n    return z\n\nhelp(my_max)\n</pre> def my_max(x,y):     '''     get the bigger number between 2 numbers     my_max(x,y)         return the larger number between x and y     '''     z = x if x &gt; y else y     return z  help(my_max) <pre>Help on function my_max in module __main__:\n\nmy_max(x, y)\n    get the bigger number between 2 numbers\n    my_max(x,y)\n        return the larger number between x and y\n\n</pre> In\u00a0[3]: Copied! <pre>print(my_max.__doc__)\n</pre> print(my_max.__doc__) <pre>\n    get the bigger number between 2 numbers\n    my_max(x,y)\n        return the larger number between x and y\n    \n</pre> In\u00a0[4]: Copied! <pre>def sum_and_avg(list):\n    my_sum = 0\n    count = 0\n    for e in list:\n        if isinstance(e,int) or isinstance(e,float):\n            count += 1\n            my_sum += e\n    return my_sum, my_sum / count\n\nmy_list = [20,15,2.8,'a',35,5.9,-1.8]\ntp = sum_and_avg(my_list)\nprint(tp)\n</pre> def sum_and_avg(list):     my_sum = 0     count = 0     for e in list:         if isinstance(e,int) or isinstance(e,float):             count += 1             my_sum += e     return my_sum, my_sum / count  my_list = [20,15,2.8,'a',35,5.9,-1.8] tp = sum_and_avg(my_list) print(tp) <pre>(76.9, 12.816666666666668)\n</pre> In\u00a0[5]: Copied! <pre>s,avg = sum_and_avg(my_list)\nprint(s)\nprint(avg)\n</pre> s,avg = sum_and_avg(my_list) print(s) print(avg) <pre>76.9\n12.816666666666668\n</pre> In\u00a0[6]: Copied! <pre>def fn(n):\n    if n == 0:\n        return 1\n    elif n == 1:\n        return 4\n    else:\n        return 2 * fn(n-1) + fn(n-2)\n\nprint('f(10) = ', fn(10))\n</pre> def fn(n):     if n == 0:         return 1     elif n == 1:         return 4     else:         return 2 * fn(n-1) + fn(n-2)  print('f(10) = ', fn(10)) <pre>f(10) =  10497\n</pre> In\u00a0[9]: Copied! <pre>def factorial(n):\n    if n &lt;= 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n</pre> def factorial(n):     if n &lt;= 1:         return 1     else:         return n * factorial(n-1) In\u00a0[10]: Copied! <pre>factorial(6)\n</pre> factorial(6) Out[10]: <pre>720</pre> In\u00a0[7]: Copied! <pre>def hanoi(n,x,y,z):\n    '''\n    x indicates the source block, y indicates the empty block, z indicates the target block\n    '''\n    if n == 1:\n        print(x,'--&gt;',z)\n    else:\n        hanoi(n-1,x,z,y)\n        print(x,'--&gt;',z)\n        hanoi(n-1,y,x,z)\n</pre> def hanoi(n,x,y,z):     '''     x indicates the source block, y indicates the empty block, z indicates the target block     '''     if n == 1:         print(x,'--&gt;',z)     else:         hanoi(n-1,x,z,y)         print(x,'--&gt;',z)         hanoi(n-1,y,x,z) In\u00a0[8]: Copied! <pre>hanoi(2,'1','2','3')\n</pre> hanoi(2,'1','2','3') <pre>1 --&gt; 2\n1 --&gt; 3\n2 --&gt; 3\n</pre> In\u00a0[11]: Copied! <pre>def test(a,*books):\n    print(books)\n    for b in books:\n        print(b)\n    print(a)\n    \ntest(5,'Crazy Java','Crazy Python','Crazy PHP')\n</pre> def test(a,*books):     print(books)     for b in books:         print(b)     print(a)      test(5,'Crazy Java','Crazy Python','Crazy PHP') <pre>('Crazy Java', 'Crazy Python', 'Crazy PHP')\nCrazy Java\nCrazy Python\nCrazy PHP\n5\n</pre> In\u00a0[12]: Copied! <pre>def test(*books,num):\n    print(books)\n    for b in books:\n        print(b)\n    print(num)\ntest('Crazy Python','Crazy Java','Crazy PHP',num = 20)\n</pre> def test(*books,num):     print(books)     for b in books:         print(b)     print(num) test('Crazy Python','Crazy Java','Crazy PHP',num = 20) <pre>('Crazy Python', 'Crazy Java', 'Crazy PHP')\nCrazy Python\nCrazy Java\nCrazy PHP\n20\n</pre> In\u00a0[13]: Copied! <pre>def test(x,y,z=3,*books,**scores):\n    print(x,y,z)\n    print(books)\n    print(scores)\n    \ntest(1,2,3,'Crazy Java','Crazy Python', English = 94, Math = 89)\n</pre> def test(x,y,z=3,*books,**scores):     print(x,y,z)     print(books)     print(scores)      test(1,2,3,'Crazy Java','Crazy Python', English = 94, Math = 89) <pre>1 2 3\n('Crazy Java', 'Crazy Python')\n{'English': 94, 'Math': 89}\n</pre> In\u00a0[14]: Copied! <pre>test(1,2,'Crazy Java','Crazy Python', English = 94, Math = 89)\n</pre> test(1,2,'Crazy Java','Crazy Python', English = 94, Math = 89) <pre>1 2 Crazy Java\n('Crazy Python',)\n{'English': 94, 'Math': 89}\n</pre> In\u00a0[15]: Copied! <pre>test(1,2, English = 94, Math = 89)\n</pre> test(1,2, English = 94, Math = 89) <pre>1 2 3\n()\n{'English': 94, 'Math': 89}\n</pre> In\u00a0[17]: Copied! <pre>def test(name,message):\n    print('User Name:',name)\n    print('Message is',message)\n\nmy_list = ['Jack','Where is my shoes?']\ntest(*my_list)\n</pre> def test(name,message):     print('User Name:',name)     print('Message is',message)  my_list = ['Jack','Where is my shoes?'] test(*my_list) <pre>User Name: Jack\nMessage is Where is my shoes?\n</pre> In\u00a0[18]: Copied! <pre>def foo(name,*nums):\n    print('Name is',name)\n    print('Number is',nums)\n\nmy_tuple = (1,2,3)\nfoo('fkit',*my_tuple)\n</pre> def foo(name,*nums):     print('Name is',name)     print('Number is',nums)  my_tuple = (1,2,3) foo('fkit',*my_tuple) <pre>Name is fkit\nNumber is (1, 2, 3)\n</pre> <ul> <li>The double asterisk (<code>**</code>) before a dictionary in Python is used to unpack the dictionary into keyword arguments when passing it to a function.</li> <li>This means that each key-value pair in the dictionary is passed as a named argument to the function, with the keys acting as the argument names and the corresponding values as the argument values.</li> </ul> In\u00a0[19]: Copied! <pre>def greet(first_name, last_name):\n    print(f\"Hello, {first_name} {last_name}!\")\n\nuser_info = {\"first_name\": \"John\", \"last_name\": \"Doe\"}\n\ngreet(**user_info)\n</pre> def greet(first_name, last_name):     print(f\"Hello, {first_name} {last_name}!\")  user_info = {\"first_name\": \"John\", \"last_name\": \"Doe\"}  greet(**user_info) <pre>Hello, John Doe!\n</pre> In\u00a0[20]: Copied! <pre>def bar(book,price,desc):\n    print(book, 'With the price of', price)\n    print('Description is',desc)\n\nmy_dict = {'price':89,'book':'Crazy Python','desc':'This is a book for teaching how to use python'}\nbar(**my_dict)\n</pre> def bar(book,price,desc):     print(book, 'With the price of', price)     print('Description is',desc)  my_dict = {'price':89,'book':'Crazy Python','desc':'This is a book for teaching how to use python'} bar(**my_dict) <pre>Crazy Python With the price of 89\nDescription is This is a book for teaching how to use python\n</pre> In\u00a0[21]: Copied! <pre>def swap(a,b):\n    a,b = b,a\n    print('Within swap function, a is',a,'b is',b)\n\na = 6\nb = 9\nswap(a,b)\nprint('After swap function, a is',a,'b is',b)\n</pre> def swap(a,b):     a,b = b,a     print('Within swap function, a is',a,'b is',b)  a = 6 b = 9 swap(a,b) print('After swap function, a is',a,'b is',b) <pre>Within swap function, a is 9 b is 6\nAfter swap function, a is 6 b is 9\n</pre> <p>Careful for inputting <code>list</code> or <code>dictionary</code> It is also passing by value, but this value is a address index, so the outputs would be changed</p> In\u00a0[24]: Copied! <pre>def swap(dw):\n    dw['a'],dw['b'] = dw['b'],dw['a']\n    print('Within swap function, a is',dw['a'],'b is',dw['b'])\n\ndw = {'a':6,'b':9}\nswap(dw)\nprint('After swap function,  a is',dw['a'],'b is',dw['b'])\n</pre> def swap(dw):     dw['a'],dw['b'] = dw['b'],dw['a']     print('Within swap function, a is',dw['a'],'b is',dw['b'])  dw = {'a':6,'b':9} swap(dw) print('After swap function,  a is',dw['a'],'b is',dw['b']) <pre>Within swap function, a is 9 b is 6\nAfter swap function,  a is 9 b is 6\n</pre> In\u00a0[29]: Copied! <pre>def test():\n    age = 20\n    print(age)\n    print(locals())\n    print(locals()['age'])\n    locals()['age'] = 12\n    print('After changing through locals(), age is',age)\n    age = 12\n    print('After changing through age=12, age is',locals()['age'])\n    \n    globals()['x'] = 19\n\nx = 5\ny = 20\n# print(globals())\n# print(locals())\nprint('3',x)\nprint('4',globals()['x'])\nglobals()['x'] = 39\nprint('5',x)\nlocals()['x'] = 99\nprint('6',x)\ntest()\nprint('7',x)\n</pre> def test():     age = 20     print(age)     print(locals())     print(locals()['age'])     locals()['age'] = 12     print('After changing through locals(), age is',age)     age = 12     print('After changing through age=12, age is',locals()['age'])          globals()['x'] = 19  x = 5 y = 20 # print(globals()) # print(locals()) print('3',x) print('4',globals()['x']) globals()['x'] = 39 print('5',x) locals()['x'] = 99 print('6',x) test() print('7',x) <pre>3 5\n4 5\n5 39\n6 99\n20\n{'age': 20}\n20\nAfter changing through locals(), age is 20\nAfter changing through age=12, age is 12\n7 19\n</pre> <ul> <li>Variables outsides of functions would be regarded as global variables</li> <li>But we could not modify their value within the functions</li> </ul> In\u00a0[30]: Copied! <pre>name = 'Jack'\ndef test():\n    print(name)\ntest()\nprint(name)\n</pre> name = 'Jack' def test():     print(name) test() print(name) <pre>Jack\nJack\n</pre> In\u00a0[31]: Copied! <pre>name = 'Jack'\ndef test():\n    print(globals()['name'])\n    name = 'Betty'\ntest()\nprint(name)\n</pre> name = 'Jack' def test():     print(globals()['name'])     name = 'Betty' test() print(name) <pre>Jack\nJack\n</pre> <p>But we still could define a global variable within a function</p> In\u00a0[32]: Copied! <pre>name = 'Jack'\ndef test():\n    global name\n    print(name)\n    name = 'Betty'\n    \ntest()\nprint(name)\n</pre> name = 'Jack' def test():     global name     print(name)     name = 'Betty'      test() print(name) <pre>Jack\nBetty\n</pre> In\u00a0[33]: Copied! <pre>def get_math_func(types,nn):\n    def square(n):\n        return n*n\n    def cube(n):\n        return n*n*n\n    def factorial(n):\n        if n &lt;= 1:\n            return 1\n        else:\n            return n * factorial(n-1)\n    if types == 'square':\n        return square(nn)\n    elif types == 'cube':\n        return cube(nn)\n    else:\n        return factorial(nn)\n\nprint(get_math_func('square',3))\nprint(get_math_func('cube',3))\nprint(get_math_func('',3))\n</pre> def get_math_func(types,nn):     def square(n):         return n*n     def cube(n):         return n*n*n     def factorial(n):         if n &lt;= 1:             return 1         else:             return n * factorial(n-1)     if types == 'square':         return square(nn)     elif types == 'cube':         return cube(nn)     else:         return factorial(nn)  print(get_math_func('square',3)) print(get_math_func('cube',3)) print(get_math_func('',3)) <pre>9\n27\n6\n</pre> <p>Python provide <code>nonlocal</code> to access local variables with the enclosing domain for local functions</p> In\u00a0[34]: Copied! <pre>def foo():\n    name = 'Jack'\n    def bar():\n        nonlocal name\n        print(name)\n        name = 'Betty'\n    bar()\n    print(name)\n\nfoo()\n</pre> def foo():     name = 'Jack'     def bar():         nonlocal name         print(name)         name = 'Betty'     bar()     print(name)  foo() <pre>Jack\nBetty\n</pre> In\u00a0[36]: Copied! <pre>def get_math_func(types):\n    if types == 'square':\n        return lambda n: n*n\n    elif types == 'cube':\n        return lambda n: n*n*n\n    else:\n        return lambda n: (1+n) * n /2\n    \nmath_func = get_math_func('cube')\nprint(math_func(5))\nmath_func = get_math_func('square')\nprint(math_func(5))\nmath_func = get_math_func('other')\nprint(math_func(5))\n</pre> def get_math_func(types):     if types == 'square':         return lambda n: n*n     elif types == 'cube':         return lambda n: n*n*n     else:         return lambda n: (1+n) * n /2      math_func = get_math_func('cube') print(math_func(5)) math_func = get_math_func('square') print(math_func(5)) math_func = get_math_func('other') print(math_func(5)) <pre>125\n25\n15.0\n</pre> In\u00a0[42]: Copied! <pre>x = map(lambda x: x**2, range(8))\nprint([e for e in x])\n</pre> x = map(lambda x: x**2, range(8)) print([e for e in x]) <pre>[0, 1, 4, 9, 16, 25, 36, 49]\n</pre> In\u00a0[43]: Copied! <pre>y = map(lambda x: x*x if x % 2 == 0 else 0, range(8))\nprint([e for e in y])\n</pre> y = map(lambda x: x*x if x % 2 == 0 else 0, range(8)) print([e for e in y]) <pre>[0, 0, 4, 0, 16, 0, 36, 0]\n</pre> In\u00a0[44]: Copied! <pre>def bubble_sort(my_lst):\n    for index1,ele1 in enumerate(my_lst):\n        for index2,ele2 in enumerate(my_lst[:-1]):\n            if ele1 &lt; ele2:\n                my_lst[index1],my_lst[index2] = my_lst[index2],my_lst[index1]\n    return my_lst\n\nbubble_sort([10,4,8,91,69,6156,3,0,-10,-42,37])\n</pre> def bubble_sort(my_lst):     for index1,ele1 in enumerate(my_lst):         for index2,ele2 in enumerate(my_lst[:-1]):             if ele1 &lt; ele2:                 my_lst[index1],my_lst[index2] = my_lst[index2],my_lst[index1]     return my_lst  bubble_sort([10,4,8,91,69,6156,3,0,-10,-42,37]) Out[44]: <pre>[-42, -10, 0, 3, 4, 8, 10, 37, 69, 91, 6156]</pre> In\u00a0[45]: Copied! <pre>def is_leap(year):\n    if (int(year) % 4 ==0) and (int(year) % 100 &gt; 0):\n        return True\n    elif (int(year) % 400 ==0):\n        return True\n    else:\n        return False\n</pre> def is_leap(year):     if (int(year) % 4 ==0) and (int(year) % 100 &gt; 0):         return True     elif (int(year) % 400 ==0):         return True     else:         return False    In\u00a0[46]: Copied! <pre>print(is_leap(1900))\nprint(is_leap(1896))\n</pre> print(is_leap(1900)) print(is_leap(1896)) <pre>False\nTrue\n</pre> In\u00a0[47]: Copied! <pre>def count_str_char(my_list):\n    digit_num = 0\n    space_num = 0\n    other_num = 0\n    char_num = 0\n    for c in my_list:\n        c = str(c)\n        if c.isdigit(): digit_num += 1\n        elif c.isalpha(): char_num += 1\n        elif c.isspace(): space_num += 1\n        else: other_num += 1\n    return {'Number of Character':char_num, 'Number of Space': space_num, \n            'Number of digitals':digit_num,'Number of Others': other_num}\n</pre> def count_str_char(my_list):     digit_num = 0     space_num = 0     other_num = 0     char_num = 0     for c in my_list:         c = str(c)         if c.isdigit(): digit_num += 1         elif c.isalpha(): char_num += 1         elif c.isspace(): space_num += 1         else: other_num += 1     return {'Number of Character':char_num, 'Number of Space': space_num,              'Number of digitals':digit_num,'Number of Others': other_num} In\u00a0[48]: Copied! <pre>count_str_char([2,4968,8,9,' ',' ',' ',' ','A','f','#','$','dsfs'])\n</pre> count_str_char([2,4968,8,9,' ',' ',' ',' ','A','f','#','$','dsfs']) Out[48]: <pre>{'Number of Character': 3,\n 'Number of Space': 4,\n 'Number of digitals': 4,\n 'Number of Others': 2}</pre> In\u00a0[49]: Copied! <pre>set([2,2,2,5,'a','sffsf',49,7,9])\n</pre> set([2,2,2,5,'a','sffsf',49,7,9]) Out[49]: <pre>{2, 49, 5, 7, 9, 'a', 'sffsf'}</pre> In\u00a0[51]: Copied! <pre>{}.fromkeys([2,2,2,5,'a','sffsf',49,7,9]).keys()\n</pre> {}.fromkeys([2,2,2,5,'a','sffsf',49,7,9]).keys() Out[51]: <pre>dict_keys([2, 5, 'a', 'sffsf', 49, 7, 9])</pre> In\u00a0[52]: Copied! <pre>def matrix_transpose(n):\n    my_matrix = [[0] * n]\n    for time in range(1,n):\n        my_matrix += [[0]* n]\n    for row in range(0,n):\n        for col in range(0,n):\n            my_matrix[row][col] = row * n + col + 1\n    for row in my_matrix:\n        for ele in row:\n            print(ele,end=' ')\n        print()\n    print('--------------------')\n    for row in range(0,n):\n        for col in range(0,n):\n            print(my_matrix[col][row],end=' ')\n        print()\n</pre> def matrix_transpose(n):     my_matrix = [[0] * n]     for time in range(1,n):         my_matrix += [[0]* n]     for row in range(0,n):         for col in range(0,n):             my_matrix[row][col] = row * n + col + 1     for row in my_matrix:         for ele in row:             print(ele,end=' ')         print()     print('--------------------')     for row in range(0,n):         for col in range(0,n):             print(my_matrix[col][row],end=' ')         print() In\u00a0[53]: Copied! <pre>matrix_transpose(3)\n</pre> matrix_transpose(3) <pre>1 2 3 \n4 5 6 \n7 8 9 \n--------------------\n1 4 7 \n2 5 8 \n3 6 9 \n</pre>"},{"location":"Foundation/Ch5-Functions/#chapter-5-functions-in-python","title":"Chapter 5: Functions in Python\u00b6","text":"<p>Functions are the building blocks of readable, maintainable, and reusable code. They allow you to encapsulate a task into a single, cohesive unit of work that can be used repeatedly throughout your programs. In this chapter, we delve into functions in Python, exploring how to <code>define them</code>, <code>pass arguments</code>, <code>return values</code>, and leverage advanced features to create efficient and powerful code.</p>"},{"location":"Foundation/Ch5-Functions/#1-defining-and-calling-a-function","title":"1. Defining and Calling a Function\u00b6","text":"<ul> <li>The <code>def</code> keyword introduces a function definition, followed by the function name and the parenthesized list of parameters.</li> <li>The statements that form the body of the function start at the next line and must be indented.</li> <li>The <code>return</code> statement exits the function, optionally passing back a value to the caller.</li> </ul>"},{"location":"Foundation/Ch5-Functions/#2-provide-docstring-to-functions","title":"2. Provide docstring to functions\u00b6","text":"<p>Using the following method to get access to the documents of functions</p> <ul> <li><code>help()</code></li> <li><code>function.__doc__</code></li> </ul>"},{"location":"Foundation/Ch5-Functions/#3-multiple-returns","title":"3. Multiple Returns\u00b6","text":"<ul> <li>Python would automatically transfer them into a <code>tuple</code></li> </ul>"},{"location":"Foundation/Ch5-Functions/#4-recursive-function","title":"4. Recursive Function\u00b6","text":"<p>$f(0) = 1, f(1) = 4 , f(n+2) = 2 * f(n+1) + f(n)$</p>"},{"location":"Foundation/Ch5-Functions/#41-tower-of-hanoi","title":"4.1 Tower of Hanoi\u00b6","text":""},{"location":"Foundation/Ch5-Functions/#5-multiple-input-parameters","title":"5. Multiple input parameters\u00b6","text":"<ul> <li>No keyword multiple inputs could be regarded as a <code>tuple</code></li> <li>Multiple inputs with keywords would be regarded as a <code>dictionary</code></li> </ul>"},{"location":"Foundation/Ch5-Functions/#6-reversed-parameters-input","title":"6. Reversed parameters input\u00b6","text":"<ul> <li><code>*</code> before a list in Python is used to unpack the list when passing it as an argument to a function.</li> <li>This means that each element of the list is passed as a separate argument to the function.</li> </ul>"},{"location":"Foundation/Ch5-Functions/#7-parameter-passing-mechanism","title":"7. Parameter passing mechanism\u00b6","text":"<p>In python, parameters for functions are passing by value</p>"},{"location":"Foundation/Ch5-Functions/#8-the-work-domain-of-variables","title":"8. The work domain of Variables\u00b6","text":"<p>All three functions would pack the variables into a dictionary</p> <ul> <li><code>globals()</code>: Return all variabls</li> <li><code>locals()</code>: Return variables within a local domain</li> <li><code>vars(object)</code>: Return variables within a object domain</li> </ul> <p>Only the change in the global dictionary would be saved</p>"},{"location":"Foundation/Ch5-Functions/#9-local-functions","title":"9. Local Functions\u00b6","text":"<ul> <li>In default, local functions are hidden for outsides, only work within the enclosing domain.</li> <li>We could return the local function to call it in outsides</li> </ul>"},{"location":"Foundation/Ch5-Functions/#10-lambda-expression","title":"10. <code>lambda</code> expression\u00b6","text":"<p>The name of local functions is not very important in some cases, so we could use <code>lambda</code> expression to simplify them.</p>"},{"location":"Foundation/Ch5-Functions/#101-use-lambda-expressions-to-substitute-local-functions","title":"10.1 Use <code>lambda</code> expressions to substitute local functions\u00b6","text":"<p>Actually, <code>lambda</code> is a one line function without name, the following two lines is same</p> <ul> <li><code>lambda x,y: x + y</code></li> <li><code>def add(x,y): return x + y</code></li> </ul>"},{"location":"Foundation/Ch5-Functions/#102-the-format-of-lambda-expression","title":"10.2 The format of <code>lambda</code> expression\u00b6","text":"<ul> <li><p><code>lambda [parameter_list]: expression</code></p> <ul> <li><code>lambda x,y : x+y</code></li> </ul> </li> <li><p>Combine <code>map()</code> and <code>lambda()</code> together</p> </li> </ul>"},{"location":"Foundation/Ch5-Functions/#11-applications","title":"11. Applications\u00b6","text":""},{"location":"Foundation/Ch5-Functions/#111-bubble-sort","title":"11.1 Bubble Sort\u00b6","text":""},{"location":"Foundation/Ch5-Functions/#112-leap-year","title":"11.2 Leap Year\u00b6","text":""},{"location":"Foundation/Ch5-Functions/#113-count-string-numbers-space-and-others","title":"11.3 Count String, numbers, space and others\u00b6","text":""},{"location":"Foundation/Ch5-Functions/#114-remove-repeated-elements","title":"11.4 Remove repeated elements\u00b6","text":"<ul> <li><code>set</code></li> <li><code>{}.fromkeys()</code></li> </ul>"},{"location":"Foundation/Ch5-Functions/#115-matrix-and-transpose","title":"11.5 Matrix and Transpose\u00b6","text":""},{"location":"Foundation/Ch5-Functions/","title":"\u00b6","text":""},{"location":"Foundation/Ch6-Classes-And-Objects/","title":"Ch6 Classes and Objects","text":"In\u00a0[1]: Copied! <pre>class MyClass:\n    \"\"\"A simple example class\"\"\"\n    class_variable = 123\n\n    def __init__(self, value):  # Constructor\n        self.instance_variable = value\n\n    def a_method(self):\n        return f'Class Variable: {MyClass.class_variable}, Instance Variable: {self.instance_variable}'\n\n# Creating an object of MyClass\nmy_object = MyClass(456)\nprint(my_object.a_method())\n</pre> class MyClass:     \"\"\"A simple example class\"\"\"     class_variable = 123      def __init__(self, value):  # Constructor         self.instance_variable = value      def a_method(self):         return f'Class Variable: {MyClass.class_variable}, Instance Variable: {self.instance_variable}'  # Creating an object of MyClass my_object = MyClass(456) print(my_object.a_method()) <pre>Class Variable: 123, Instance Variable: 456\n</pre> In\u00a0[2]: Copied! <pre>class Person:\n    hair = 'black'\n    def __init__(self,name = 'Charlie',age = 8):\n        # Add two instance parameter to Person class\n        self.name = name\n        self.age = age\n    # Define a say function\n    def say(self,content):\n        print(content)\n</pre> class Person:     hair = 'black'     def __init__(self,name = 'Charlie',age = 8):         # Add two instance parameter to Person class         self.name = name         self.age = age     # Define a say function     def say(self,content):         print(content) In\u00a0[3]: Copied! <pre>p = Person()\nprint(p.name,p.age)\n</pre> p = Person() print(p.name,p.age) <pre>Charlie 8\n</pre> In\u00a0[5]: Copied! <pre>p.name = 'Nio'\np.say('It is easy to learn python programming!')\nprint(p.name,p.age)\n</pre> p.name = 'Nio' p.say('It is easy to learn python programming!') print(p.name,p.age) <pre>It is easy to learn python programming!\nNio 8\n</pre> In\u00a0[6]: Copied! <pre>p.skills = ['programming','swimming']\nprint(p.skills)\n# Delete parameters within a object\ndel p.name\nprint(p.name)  # AttributeError\n</pre> p.skills = ['programming','swimming'] print(p.skills) # Delete parameters within a object del p.name print(p.name)  # AttributeError <pre>['programming', 'swimming']\n</pre> <pre>\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\nCell In[6], line 5\n      3 # Delete parameters within a object\n      4 del p.name\n----&gt; 5 print(p.name)  # AttributeError\n\nAttributeError: 'Person' object has no attribute 'name'</pre> In\u00a0[7]: Copied! <pre>def info(self):\n    print(\"---info function---\",self)\n\n# use info function\np.foo = info\np.foo(p)\n</pre> def info(self):     print(\"---info function---\",self)  # use info function p.foo = info p.foo(p) <pre>---info function--- &lt;__main__.Person object at 0x0000022B91A83750&gt;\n</pre> In\u00a0[8]: Copied! <pre>p.bar = lambda self: print(\"---lambda ---\",self)\np.bar(p)\n</pre> p.bar = lambda self: print(\"---lambda ---\",self) p.bar(p) <pre>---lambda --- &lt;__main__.Person object at 0x0000022B91A83750&gt;\n</pre> <p>bind the <code>self</code> as the first parameter to the dynamic added function</p> <ul> <li><code>MethodType</code>:<ul> <li>The <code>MethodType</code> function is used to convert the function <code>intro_func</code> into a method of an instance <code>p</code>.</li> <li>The <code>MethodType</code> function essentially binds the first parameter of the function (<code>self</code>) to the instance <code>p</code>, so when the method is called, <code>p</code> is automatically passed as the first argument.</li> </ul> </li> </ul> In\u00a0[9]: Copied! <pre>def intro_func(self,content):\n    print(\"I am a person, infomation are %s\" % content)\n    \nfrom types import MethodType\np.intro = MethodType(intro_func,p)\n\n# the first parameter are fixed as 'p', do not need to pass again\np.intro(\"What a good life\")\n</pre> def intro_func(self,content):     print(\"I am a person, infomation are %s\" % content)      from types import MethodType p.intro = MethodType(intro_func,p)  # the first parameter are fixed as 'p', do not need to pass again p.intro(\"What a good life\") <pre>I am a person, infomation are What a good life\n</pre> In\u00a0[18]: Copied! <pre>class Inventory:\n    # two class variables\n    item = 'Mouse'\n    dpi = 2000\n    # define a instance function\n    def change(self,item,dpi):\n        self.item = item\n        self.dpi = dpi\n\niv = Inventory()\niv.change('Razer',3600)\nprint(iv.item)\nprint(iv.dpi)\nprint(Inventory.item)\nprint(Inventory.dpi)\n</pre> class Inventory:     # two class variables     item = 'Mouse'     dpi = 2000     # define a instance function     def change(self,item,dpi):         self.item = item         self.dpi = dpi  iv = Inventory() iv.change('Razer',3600) print(iv.item) print(iv.dpi) print(Inventory.item) print(Inventory.dpi) <pre>Razer\n3600\nMouse\n2000\n</pre> <p>In this case, if you change the value of class variables, the value of instance variables would not be changed</p> In\u00a0[19]: Copied! <pre>Inventory.item = 'logitech'\nInventory.dpi = 5400\nprint(iv.item)\nprint(iv.dpi)\n</pre> Inventory.item = 'logitech' Inventory.dpi = 5400 print(iv.item) print(iv.dpi) <pre>Razer\n3600\n</pre> In\u00a0[10]: Copied! <pre>class Bird:\n    # using @classmethod to illustrate it is a class method\n    @classmethod\n    def fly(cls):\n        print('Class method fly: ', cls)\n\n    # using @staticmethod to illustrate it is a static method\n    @staticmethod\n    def info(p):\n        print('Static method info: ', p)\n\nBird.fly()  # Class method fly:  &lt;class '__main__.Bird'&gt;\nBird.info('crazyit')  # Static method info:  crazyit\n\nb = Bird()\nb.fly()  # Class method fly:  &lt;class '__main__.Bird'&gt;\nb.info('fkit')  # Static method info:  fkit\n</pre> class Bird:     # using @classmethod to illustrate it is a class method     @classmethod     def fly(cls):         print('Class method fly: ', cls)      # using @staticmethod to illustrate it is a static method     @staticmethod     def info(p):         print('Static method info: ', p)  Bird.fly()  # Class method fly:   Bird.info('crazyit')  # Static method info:  crazyit  b = Bird() b.fly()  # Class method fly:   b.info('fkit')  # Static method info:  fkit <pre>Class method fly:  &lt;class '__main__.Bird'&gt;\nStatic method info:  crazyit\nClass method fly:  &lt;class '__main__.Bird'&gt;\nStatic method info:  fkit\n</pre> <ul> <li>A <code>class method</code> normally works as a <code>factory method</code> and returns an instance of the class with supplied arguments.</li> <li>However, it doesn't always have to work as a factory class and return an instance. You can create an instance in the class method, do whatever you need, and don\u2019t have to return it</li> </ul> In\u00a0[11]: Copied! <pre>class Cellphone:\n    def __init__(self, brand, number):\n        self.brand = brand\n        self.number = number\n        \n    def get_number(self):\n        return self.number\n      \n    @staticmethod\n    def get_emergency_number():\n        return \"911\"\n      \n    @classmethod\n    def iphone(cls, number):\n        _iphone = cls(\"Apple\", number)\n        print(\"An iPhone is created.\")\n        return _iphone\n     \niphone = Cellphone.iphone(\"1112223333\")\n# An iPhone is created.\niphone.get_number()\n# \"1112223333\"\niphone.get_emergency_number()\n</pre>  class Cellphone:     def __init__(self, brand, number):         self.brand = brand         self.number = number              def get_number(self):         return self.number            @staticmethod     def get_emergency_number():         return \"911\"            @classmethod     def iphone(cls, number):         _iphone = cls(\"Apple\", number)         print(\"An iPhone is created.\")         return _iphone       iphone = Cellphone.iphone(\"1112223333\") # An iPhone is created. iphone.get_number() # \"1112223333\" iphone.get_emergency_number() <pre>An iPhone is created.\n</pre> Out[11]: <pre>'911'</pre> In\u00a0[12]: Copied! <pre>def auth(fn):\n    def auth_fn(*args):\n        print(\"Authority checking\")\n        # Call the input function\n        fn(*args)\n    return auth_fn\n\n@auth\ndef test(a, b):\n    print(f\"Perform test function, parameter a: {a}, parameter b: {b}\")\n\ntest(20, 15)  # Output: Authority checking\n              # Perform test function, parameter a: 20, parameter b: 15\n</pre> def auth(fn):     def auth_fn(*args):         print(\"Authority checking\")         # Call the input function         fn(*args)     return auth_fn  @auth def test(a, b):     print(f\"Perform test function, parameter a: {a}, parameter b: {b}\")  test(20, 15)  # Output: Authority checking               # Perform test function, parameter a: 20, parameter b: 15 <pre>Authority checking\nPerform test function, parameter a: 20, parameter b: 15\n</pre> In\u00a0[13]: Copied! <pre>class Cellphone:\n    def __init__(self, brand, number):\n        self.brand = brand\n        self.number = number\n        \n    def get_number(self):\n        _number = \"-\".join([self.number[:3], self.number[3:6], self.number[6:]])\n        return _number\n      \ncellphone = Cellphone(\"Samsung\", \"1112223333\")\nprint(cellphone.get_number())\n# 111-222-3333\n</pre> class Cellphone:     def __init__(self, brand, number):         self.brand = brand         self.number = number              def get_number(self):         _number = \"-\".join([self.number[:3], self.number[3:6], self.number[6:]])         return _number        cellphone = Cellphone(\"Samsung\", \"1112223333\") print(cellphone.get_number()) # 111-222-3333 <pre>111-222-3333\n</pre> <ul> <li>As we see, in this example, when we try to get the number of a cellphone, we don\u2019t return it directly but do some formatting before returning it.</li> <li>This is a perfect case for using the <code>@property</code> decorator.<ul> <li>In Python, with the <code>@property</code> decorator, you can use <code>getter</code> and <code>setter</code> to manage the attributes of your class instances very conveniently.</li> </ul> </li> <li>The above code can be re-written with <code>@propery</code> like this:</li> </ul> In\u00a0[14]: Copied! <pre>class Cellphone:\n    def __init__(self, brand, number):\n        self.brand = brand\n        self.number = number\n        \n    @property\n    def number(self):\n        _number = \"-\".join([self._number[:3], self._number[3:6],self._number[6:]])\n        return _number\n    \n    @number.setter\n    def number(self, number):\n        if len(number) != 10:\n            raise ValueError(\"Invalid phone number.\")\n        self._number = number\n\ncellphone = Cellphone(\"Samsung\", \"1112223333\")\nprint(cellphone.number)\n# 111-222-3333\n</pre>  class Cellphone:     def __init__(self, brand, number):         self.brand = brand         self.number = number              @property     def number(self):         _number = \"-\".join([self._number[:3], self._number[3:6],self._number[6:]])         return _number          @number.setter     def number(self, number):         if len(number) != 10:             raise ValueError(\"Invalid phone number.\")         self._number = number  cellphone = Cellphone(\"Samsung\", \"1112223333\") print(cellphone.number) # 111-222-3333 <pre>111-222-3333\n</pre> <ul> <li>if only use <code>@property</code>, then this variable only readable but not writeable</li> <li>add <code>@xxx.setter</code> to add the writeable properties</li> </ul> In\u00a0[16]: Copied! <pre>class Cell:\n    @property\n    def state(self):\n        return self._state\n    @state.setter\n    def state(self,value):\n        if 'alive' in value.lower():\n            self._state = 'alive'\n        else:\n            self._state = 'dead'\n    @property\n    def is_dead(self):\n        return not self._state.lower() == 'alive'\n</pre> class Cell:     @property     def state(self):         return self._state     @state.setter     def state(self,value):         if 'alive' in value.lower():             self._state = 'alive'         else:             self._state = 'dead'     @property     def is_dead(self):         return not self._state.lower() == 'alive' In\u00a0[17]: Copied! <pre>c = Cell()\nc.state = 'Alive'\nprint(c.state)\nprint(c.is_dead)\n</pre> c = Cell() c.state = 'Alive' print(c.state) print(c.is_dead) <pre>alive\nFalse\n</pre> In\u00a0[15]: Copied! <pre>global_fn = lambda p: print('lambda expression, p is:',p)\n\nclass Category:\n    cate_fn = lambda p: print('lambda expression, p is:',p)\n    \nglobal_fn('Python')\nc = Category()\n# When crate a object, python would combine the first parameter automatically\nc.cate_fn()\n</pre> global_fn = lambda p: print('lambda expression, p is:',p)  class Category:     cate_fn = lambda p: print('lambda expression, p is:',p)      global_fn('Python') c = Category() # When crate a object, python would combine the first parameter automatically c.cate_fn() <pre>lambda expression, p is: Python\nlambda expression, p is: &lt;__main__.Category object at 0x0000022B91F9ACD0&gt;\n</pre> In\u00a0[2]: Copied! <pre>class User:\n    def __init__(self, name, age):\n        self.name = name\n        self.age = age\n\n    def __hide__(self):\n        print('demonstrate hide function')\n\n    @property\n    def name(self):\n        return self._name\n\n    @name.setter\n    def name(self, value):\n        if len(value) &lt; 3 or len(value) &gt; 8:\n            raise ValueError('The length of username must between 3 to 8!')\n        self._name = value\n\n    @property\n    def age(self):\n        return self._age\n\n    @age.setter\n    def age(self, value):\n        if value &lt; 15 or value &gt; 75:\n            raise ValueError('The age of user must between 15 to 75!')\n        self._age = value\n</pre> class User:     def __init__(self, name, age):         self.name = name         self.age = age      def __hide__(self):         print('demonstrate hide function')      @property     def name(self):         return self._name      @name.setter     def name(self, value):         if len(value) &lt; 3 or len(value) &gt; 8:             raise ValueError('The length of username must between 3 to 8!')         self._name = value      @property     def age(self):         return self._age      @age.setter     def age(self, value):         if value &lt; 15 or value &gt; 75:             raise ValueError('The age of user must between 15 to 75!')         self._age = value In\u00a0[3]: Copied! <pre>u = User('jk',14)\n</pre> u = User('jk',14) <pre>\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\nCell In[3], line 1\n----&gt; 1 u = User('jk',14)\n\nCell In[2], line 3, in User.__init__(self, name, age)\n      2 def __init__(self, name, age):\n----&gt; 3     self.name = name\n      4     self.age = age\n\nCell In[2], line 16, in User.name(self, value)\n     13 @name.setter\n     14 def name(self, value):\n     15     if len(value) &lt; 3 or len(value) &gt; 8:\n---&gt; 16         raise ValueError('The length of username must between 3 to 8!')\n     17     self._name = value\n\nValueError: The length of username must between 3 to 8!</pre> In\u00a0[4]: Copied! <pre>u = User('Betty',24)\nprint(u.name)\nprint(u.age)\n</pre> u = User('Betty',24) print(u.name) print(u.age) <pre>Betty\n24\n</pre> In\u00a0[5]: Copied! <pre>u.__hide__()\n</pre> u.__hide__() <pre>demonstrate hide function\n</pre> In\u00a0[6]: Copied! <pre>class Fruit:\n    def info(self):\n        print('This fruit has %g gram' %self.weight)\n        \nclass Apple(Fruit):\n    def taste(self):\n        print('This is a food!')\n\na = Apple()\na.weight = 5.6 \na.info()\na.taste()\n</pre> class Fruit:     def info(self):         print('This fruit has %g gram' %self.weight)          class Apple(Fruit):     def taste(self):         print('This is a food!')  a = Apple() a.weight = 5.6  a.info() a.taste() <pre>This fruit has 5.6 gram\nThis is a food!\n</pre> In\u00a0[7]: Copied! <pre>class Fruit:\n    def info(self):\n        print('This fruit has %g gram' %self.weight)\n\nclass Food:\n    def taste(self):\n        print('This is a food!')\n        \nclass Apple(Fruit,Food):\n    pass\n\na = Apple()\na.weight = 5.6 \na.info()\na.taste()\n</pre> class Fruit:     def info(self):         print('This fruit has %g gram' %self.weight)  class Food:     def taste(self):         print('This is a food!')          class Apple(Fruit,Food):     pass  a = Apple() a.weight = 5.6  a.info() a.taste() <pre>This fruit has 5.6 gram\nThis is a food!\n</pre> In\u00a0[8]: Copied! <pre>class Bird:\n    def fly(self):\n        print('I am flying!')\nclass Ostrich(Bird):\n    def fly(self):\n        print('I could only running.')\n        \nos1 = Ostrich()\nos1.fly()\n</pre> class Bird:     def fly(self):         print('I am flying!') class Ostrich(Bird):     def fly(self):         print('I could only running.')          os1 = Ostrich() os1.fly() <pre>I could only running.\n</pre> <p>If you want to use the function in superclass which has been overwritten, you could use the following statement</p> In\u00a0[9]: Copied! <pre>class BaseClass:\n    def foo(self):\n        print('foo function in the superclass')\nclass SubClass(BaseClass):\n    def foo(self):\n        print('foo function in the subclass')\n    def bar(self):\n        print('in the bar function')\n        self.foo()\n        BaseClass.foo(self)\n\nsc = SubClass()\nsc.bar()\n</pre> class BaseClass:     def foo(self):         print('foo function in the superclass') class SubClass(BaseClass):     def foo(self):         print('foo function in the subclass')     def bar(self):         print('in the bar function')         self.foo()         BaseClass.foo(self)  sc = SubClass() sc.bar() <pre>in the bar function\nfoo function in the subclass\nfoo function in the superclass\n</pre> In\u00a0[10]: Copied! <pre>help(super)\n</pre> help(super) <pre>Help on class super in module builtins:\n\nclass super(object)\n |  super() -&gt; same as super(__class__, &lt;first argument&gt;)\n |  super(type) -&gt; unbound super object\n |  super(type, obj) -&gt; bound super object; requires isinstance(obj, type)\n |  super(type, type2) -&gt; bound super object; requires issubclass(type2, type)\n |  Typical use to call a cooperative superclass method:\n |  class C(B):\n |      def meth(self, arg):\n |          super().meth(arg)\n |  This works for class methods too:\n |  class C(B):\n |      @classmethod\n |      def cmeth(cls, arg):\n |          super().cmeth(arg)\n |  \n |  Methods defined here:\n |  \n |  __get__(self, instance, owner=None, /)\n |      Return an attribute of instance, which is of type owner.\n |  \n |  __getattribute__(self, name, /)\n |      Return getattr(self, name).\n |  \n |  __init__(self, /, *args, **kwargs)\n |      Initialize self.  See help(type(self)) for accurate signature.\n |  \n |  __repr__(self, /)\n |      Return repr(self).\n |  \n |  ----------------------------------------------------------------------\n |  Static methods defined here:\n |  \n |  __new__(*args, **kwargs) from builtins.type\n |      Create and return a new object.  See help(type) for accurate signature.\n |  \n |  ----------------------------------------------------------------------\n |  Data descriptors defined here:\n |  \n |  __self__\n |      the instance invoking super(); may be None\n |  \n |  __self_class__\n |      the type of the instance invoking super(); may be None\n |  \n |  __thisclass__\n |      the class invoking super()\n\n</pre> In\u00a0[11]: Copied! <pre>class Employee:\n    def __init__(self,salary):\n        self.salary = salary\n    def work(self):\n        print('This man is working, with %s salary' %self.salary)\n\nclass Customer:\n    def __init__(self,favorite,address):\n        self.favorite = favorite\n        self.address = address\n    def info(self):\n        print('I am a customer, I favorite thing is %s, and my address is %s' %(self.favorite, self.address))\n        \nclass Manager(Employee,Customer):\n    def __init__(self,salary,favorite,address):\n        print('--Constructor of Manager---')\n        super().__init__(salary)\n        Customer.__init__(self,favorite,address)\n        \nm = Manager(125000,'Python','Texas')\nm.work()\nm.info()\n</pre> class Employee:     def __init__(self,salary):         self.salary = salary     def work(self):         print('This man is working, with %s salary' %self.salary)  class Customer:     def __init__(self,favorite,address):         self.favorite = favorite         self.address = address     def info(self):         print('I am a customer, I favorite thing is %s, and my address is %s' %(self.favorite, self.address))          class Manager(Employee,Customer):     def __init__(self,salary,favorite,address):         print('--Constructor of Manager---')         super().__init__(salary)         Customer.__init__(self,favorite,address)          m = Manager(125000,'Python','Texas') m.work() m.info() <pre>--Constructor of Manager---\nThis man is working, with 125000 salary\nI am a customer, I favorite thing is Python, and my address is Texas\n</pre> In\u00a0[12]: Copied! <pre>class Bird:\n    def move(self,field):\n        print('Birds fly in the %s' %field)\nclass Dog:\n    def move(self,field):\n        print('Dogs run on the %s' %field)\n\nx = Bird()\nx.move('sky')\nx = Dog()\nx.move('ground')\n</pre> class Bird:     def move(self,field):         print('Birds fly in the %s' %field) class Dog:     def move(self,field):         print('Dogs run on the %s' %field)  x = Bird() x.move('sky') x = Dog() x.move('ground') <pre>Birds fly in the sky\nDogs run on the ground\n</pre> <p>It is very useful when two or more classes correlated with each other</p> In\u00a0[13]: Copied! <pre>class Canvas:\n    def draw_pic(self,shape):\n        print('---Start Drawing---')\n        shape.draw(self)\n        \nclass Rectangle:\n    def draw(self,canvas):\n        print('Draw a rectangle on %s' %canvas)\nclass Triangle:\n    def draw(self,canvas):\n        print('Draw a triangle on %s' %canvas)\nclass Circle:\n    def draw(self,canvas):\n        print('Draw a circle on %s' %canvas)\n        \nc = Canvas()\nc.draw_pic(Rectangle())\nc.draw_pic(Triangle())\nc.draw_pic(Circle())\n</pre> class Canvas:     def draw_pic(self,shape):         print('---Start Drawing---')         shape.draw(self)          class Rectangle:     def draw(self,canvas):         print('Draw a rectangle on %s' %canvas) class Triangle:     def draw(self,canvas):         print('Draw a triangle on %s' %canvas) class Circle:     def draw(self,canvas):         print('Draw a circle on %s' %canvas)          c = Canvas() c.draw_pic(Rectangle()) c.draw_pic(Triangle()) c.draw_pic(Circle()) <pre>---Start Drawing---\nDraw a rectangle on &lt;__main__.Canvas object at 0x000001C4C1206E50&gt;\n---Start Drawing---\nDraw a triangle on &lt;__main__.Canvas object at 0x000001C4C1206E50&gt;\n---Start Drawing---\nDraw a circle on &lt;__main__.Canvas object at 0x000001C4C1206E50&gt;\n</pre> In\u00a0[14]: Copied! <pre>hello = 'Hello'\nprint(isinstance(hello,str))\nprint(isinstance(hello,object))\nprint(issubclass(str,object))\n</pre> hello = 'Hello' print(isinstance(hello,str)) print(isinstance(hello,object)) print(issubclass(str,object)) <pre>True\nTrue\nTrue\n</pre> <p>Every class is the subclass of object</p> In\u00a0[15]: Copied! <pre>print(issubclass(Rectangle,object))\nprint(issubclass(list,object))\n</pre> print(issubclass(Rectangle,object)) print(issubclass(list,object)) <pre>True\nTrue\n</pre> <ul> <li>Python provide <code>__bases__</code> to check all the superclasses of the input class</li> <li>Python provide <code>__subclasses__ ()</code>to check all the subclasses of the input class</li> </ul> In\u00a0[16]: Copied! <pre>print(Rectangle.__bases__)\nprint(list.__subclasses__())\n</pre> print(Rectangle.__bases__) print(list.__subclasses__()) <pre>(&lt;class 'object'&gt;,)\n[&lt;class 'functools._HashedSeq'&gt;, &lt;class 'traceback.StackSummary'&gt;, &lt;class 'socketserver._Threads'&gt;, &lt;class 'logging.config.ConvertingList'&gt;, &lt;class 'traitlets.config.loader.DeferredConfigList'&gt;, &lt;class 'dateutil.parser._parser._ymd'&gt;, &lt;class 'email.header._Accumulator'&gt;, &lt;class 'importlib.metadata.DeprecatedList'&gt;, &lt;class 'IPython.utils.text.SList'&gt;, &lt;class 'prompt_toolkit.document._ImmutableLineList'&gt;, &lt;class 'prompt_toolkit.formatted_text.base.FormattedText'&gt;, &lt;class 'xml.dom.minicompat.NodeList'&gt;, &lt;class 'prompt_toolkit.layout.utils._ExplodedList'&gt;, &lt;class 'parso.parser.Stack'&gt;, &lt;class '_pydevd_frame_eval.vendored.bytecode.bytecode._BaseBytecodeList'&gt;, &lt;class '_pydevd_frame_eval.vendored.bytecode.bytecode._InstrList'&gt;]\n</pre> In\u00a0[17]: Copied! <pre>class Student:\n    gender = None\n    phone = None\n    address = None\n    email = None\n    \n    def __init__(self,name,age):\n        self.name = name\n        self.age = age\n        \n    @property\n    def email(self):\n        return self.__email\n    \n    @email.setter\n    def email(self,value):\n        if('@' not in value):\n            raise ValueError('It is not a email address')\n        self.__email = value\n        \n    def eat(self,things):\n        print('Student %s is eating %s' %(self.name,things))\n        \n    def sleep(self):\n        print('Student %s is sleeping!')\n</pre> class Student:     gender = None     phone = None     address = None     email = None          def __init__(self,name,age):         self.name = name         self.age = age              @property     def email(self):         return self.__email          @email.setter     def email(self,value):         if('@' not in value):             raise ValueError('It is not a email address')         self.__email = value              def eat(self,things):         print('Student %s is eating %s' %(self.name,things))              def sleep(self):         print('Student %s is sleeping!') In\u00a0[18]: Copied! <pre>a = Student('Anna',14)\nb = Student('Betty',15)\nc = Student('Carrolin',15)\nd = Student('Dick',16)\n\na.eat('burger')\n</pre> a = Student('Anna',14) b = Student('Betty',15) c = Student('Carrolin',15) d = Student('Dick',16)  a.eat('burger') <pre>Student Anna is eating burger\n</pre> In\u00a0[19]: Copied! <pre>a.email = '12345678@gmail.com'\na.address  = 'NewYork'\nb.email = '987654321@utdallas.edu'\nb.address = 'Texas'\nc.email = '7539514682@yahoo.com'\nc.address = 'Chicago'\nd.email = '147896352@163.com'\nc.address = 'Ohio'\n</pre> a.email = '12345678@gmail.com' a.address  = 'NewYork' b.email = '987654321@utdallas.edu' b.address = 'Texas' c.email = '7539514682@yahoo.com' c.address = 'Chicago' d.email = '147896352@163.com' c.address = 'Ohio' In\u00a0[20]: Copied! <pre>a.email = '12345678'\n</pre> a.email = '12345678' <pre>\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\nCell In[20], line 1\n----&gt; 1 a.email = '12345678'\n\nCell In[17], line 18, in Student.email(self, value)\n     15 @email.setter\n     16 def email(self,value):\n     17     if('@' not in value):\n---&gt; 18         raise ValueError('It is not a email address')\n     19     self.__email = value\n\nValueError: It is not a email address</pre> In\u00a0[21]: Copied! <pre>add_book = [a,b,c,d]\ndef Student_query(q_variable,q_property,add_book):\n    variable_lst = ['name','email','address']\n    if q_variable not in variable_lst:\n        raise ValueError('Please use one of name,email and address to do the query!')\n    for student in add_book:\n        if getattr(student,q_variable) == q_property:\n            print('Find it, the student named %s' %student.name)\n            return student\n            break\n    print('Sorry, we could not find it')\n</pre> add_book = [a,b,c,d] def Student_query(q_variable,q_property,add_book):     variable_lst = ['name','email','address']     if q_variable not in variable_lst:         raise ValueError('Please use one of name,email and address to do the query!')     for student in add_book:         if getattr(student,q_variable) == q_property:             print('Find it, the student named %s' %student.name)             return student             break     print('Sorry, we could not find it') In\u00a0[22]: Copied! <pre>Student_query('address','Ohio',add_book)\n</pre> Student_query('address','Ohio',add_book) <pre>Find it, the student named Carrolin\n</pre> Out[22]: <pre>&lt;__main__.Student at 0x1c4c0cf1810&gt;</pre> In\u00a0[23]: Copied! <pre>Student_query('address','Ohio1',add_book)\n</pre> Student_query('address','Ohio1',add_book) <pre>Sorry, we could not find it\n</pre>"},{"location":"Foundation/Ch6-Classes-And-Objects/#chapter-6-classes-and-objects-in-python","title":"Chapter 6: Classes and Objects in Python\u00b6","text":"<p>Python, as an object-oriented programming language, provides a powerful approach to manage and organize your code through the use of classes and objects. This chapter will guide you through the fundamentals of object-oriented programming (OOP) in Python, introducing you to key concepts such as <code>classes</code>, <code>objects</code>, <code>inheritance</code>, <code>encapsulation</code>, <code>polymorphism</code>, and <code>enumeration</code>.</p>"},{"location":"Foundation/Ch6-Classes-And-Objects/#1-introduction-to-classes-and-objects","title":"1. Introduction to Classes and Objects\u00b6","text":"<p>In Python, a class can be thought of as a <code>blueprint</code> for creating objects. Objects are instances of classes and can hold data (<code>attributes</code>) and operations (<code>methods</code>) related to that data.</p>"},{"location":"Foundation/Ch6-Classes-And-Objects/#11-defining-a-class-and-creating-objects","title":"1.1 Defining a Class and Creating Objects\u00b6","text":"<ul> <li><code>Constructor</code>: Python use constructor to return an object of a class<ul> <li><code>__init__()</code></li> </ul> </li> </ul>"},{"location":"Foundation/Ch6-Classes-And-Objects/#12-generate-objects-and-use-it","title":"1.2 Generate Objects and Use it\u00b6","text":""},{"location":"Foundation/Ch6-Classes-And-Objects/#13-dynamic-add-attributes-and-methods","title":"1.3 Dynamic add attributes and methods\u00b6","text":""},{"location":"Foundation/Ch6-Classes-And-Objects/#14-class-variablesstatic-and-instance-variables","title":"1.4 Class variables(static) and instance variables\u00b6","text":"<p>If you want to assign value to instance variables, you could do like following</p>"},{"location":"Foundation/Ch6-Classes-And-Objects/#2-class-methods-vs-static-methods","title":"2. Class Methods vs. Static Methods\u00b6","text":"<ul> <li>Reference</li> </ul> <p>Class Methods</p> <ul> <li>Class methods are methods that are bound to the class itself, not to an instance of the class.</li> <li>The first parameter of a class method is typically named <code>cls</code>, which represents the class itself.</li> <li>Class methods can access and modify <code>class attributes</code>, but they cannot access or modify <code>instance attributes</code> (unless an instance is explicitly passed).</li> <li>Class methods are marked with the <code>@classmethod</code> decorator.</li> </ul> <p>Static Methods ((usually not needed))</p> <ul> <li>Static methods are functions defined within a class, but they are not associated with instances or the class itself.</li> <li>Static methods do not receive an implicit first argument (<code>self</code> or <code>cls</code>).</li> <li>Static methods cannot access or modify class or instance attributes directly.</li> <li>Static methods are marked with the <code>@staticmethod</code> decorator.</li> </ul>"},{"location":"Foundation/Ch6-Classes-And-Objects/#3-function-decorators","title":"3. Function Decorators\u00b6","text":"<p>Function decorators in Python are a way to modify the behavior of a function without changing its source code directly. They are higher-order functions that take a function as input, add some functionality to it, and return a new function with the added functionality.</p>"},{"location":"Foundation/Ch6-Classes-And-Objects/#31-how-decorators-work","title":"3.1 How Decorators Work\u00b6","text":"<p>When you use <code>@decorator_function</code> to decorate <code>decorated_function</code>, the following happens:</p> <ol> <li>The <code>decorated_function</code> is passed as an argument to the <code>decorator_function</code>.</li> <li>The <code>decorator_function</code> performs some additional operations and returns a new function object.</li> <li>The new function object returned by the <code>decorator_function</code> is assigned to the name of the <code>decorated_function</code>.</li> </ol>"},{"location":"Foundation/Ch6-Classes-And-Objects/#32-example-authority-checking-decorator","title":"3.2 Example: Authority Checking Decorator\u00b6","text":""},{"location":"Foundation/Ch6-Classes-And-Objects/#33-property","title":"3.3 <code>@property</code>\u00b6","text":"<p>In the code snippet above, there is a function called <code>get_number</code> which returns the number of a Cellphone instance. We can optimize this method a bit and return a formatted phone number:</p>"},{"location":"Foundation/Ch6-Classes-And-Objects/#4-namespace","title":"4. Namespace\u00b6","text":"<p>In python, every class has their own namespace</p>"},{"location":"Foundation/Ch6-Classes-And-Objects/#5-encapsulation-and-inheritance","title":"5. Encapsulation and inheritance\u00b6","text":""},{"location":"Foundation/Ch6-Classes-And-Objects/#51-encapsulation","title":"5.1 Encapsulation\u00b6","text":"<p>Encapsulation is the bundling of data with the methods that operate on that data.</p> <p>The usage of encapsulation</p> <ul> <li>Users could only use a defined function to access data</li> <li>Hide the details for class building</li> <li>Easy for maintenance</li> </ul>"},{"location":"Foundation/Ch6-Classes-And-Objects/#52-inheritance","title":"5.2 Inheritance\u00b6","text":"<p>In python, one subclass could inherit from multiple superclass</p>"},{"location":"Foundation/Ch6-Classes-And-Objects/#basic-inheritance","title":"Basic inheritance\u00b6","text":""},{"location":"Foundation/Ch6-Classes-And-Objects/#multiple-superclas","title":"Multiple superclas\u00b6","text":"<ul> <li>It is not recommended since it would lead to some unknown error.</li> </ul>"},{"location":"Foundation/Ch6-Classes-And-Objects/#overwrite-the-function-from-superclass","title":"Overwrite the function from superclass\u00b6","text":""},{"location":"Foundation/Ch6-Classes-And-Objects/#use-the-super-function-to-call-the-constructor-of-the-superclass","title":"Use the <code>super</code> function to call the constructor of the superclass\u00b6","text":"<ul> <li>If you want to create a <code>subclass</code> from two or more superclass, you have to overwrite the constructor</li> <li>In the constructor of the subclass, use s<code>uper()</code> to call the constructor from superclass</li> </ul>"},{"location":"Foundation/Ch6-Classes-And-Objects/#6-polymorphism","title":"6. Polymorphism\u00b6","text":"<p>Polymorphism means the ability to take various forms. In Python, Polymorphism allows us to define methods in the child class with the same name as defined in their parent class.</p>"},{"location":"Foundation/Ch6-Classes-And-Objects/#7-check-the-type-of-instance-and-class","title":"7. Check the type of instance and class\u00b6","text":"<ul> <li><code>issubclass(cls,class_or_tuple)</code></li> <li><code>isinstance(obj,class_or_tuple)</code></li> </ul>"},{"location":"Foundation/Ch6-Classes-And-Objects/#8-applications","title":"8. Applications\u00b6","text":""},{"location":"Foundation/Ch6-Classes-And-Objects/#81-create-a-student-class-with-the-following-properties","title":"8.1 Create a student class with the following properties\u00b6","text":"<ul> <li>name</li> <li>age</li> <li>gender</li> <li>phone</li> <li>address</li> <li>email And provide functions to <code>describe</code>,<code>eat</code>, <code>sleep</code>,<code>drink</code>,etc.</li> </ul>"},{"location":"Foundation/Ch6-Classes-And-Objects/#82-create-a-address-book-list-of-the-students-instance","title":"8.2 Create a address book list of the students instance\u00b6","text":"<p>Could do the query through name, email, and address variables.</p>"},{"location":"Foundation/Ch6-Classes-And-Objects/","title":"\u00b6","text":""},{"location":"Foundation/Ch7-Error-Exception-Handling/","title":"Ch7 Error and Exception Handling","text":"In\u00a0[1]: Copied! <pre>board_size = 5\nboard = []\ndef initBoard():\n    for i in range(board_size):\n        row  = ['+'] * board_size\n        board.append(row)\n\ndef printBoard():\n    for i in range(board_size):\n        for j in range(board_size):\n            print(board[i][j], end = '')\n        # equal to print('\\n')\n        print()\ninitBoard()\nprintBoard()\n\ninputStr = input('Please input the coordinates with \"x,y\" style: \\n')\nwhile inputStr!= 'Done':\n    try:\n        x_str,y_str = inputStr.split(sep=',')\n        if board[int(y_str)-1][int(x_str) - 1] != '+':\n            inputStr = input('There already have a piece, please re-input')\n            continue\n        board[int(y_str)-1][int(x_str)-1] = '\u25cf'\n        printBoard()\n    except Exception:\n        inputStr = input('Your input is illegal, please re-input')\n        continue\n</pre> board_size = 5 board = [] def initBoard():     for i in range(board_size):         row  = ['+'] * board_size         board.append(row)  def printBoard():     for i in range(board_size):         for j in range(board_size):             print(board[i][j], end = '')         # equal to print('\\n')         print() initBoard() printBoard()  inputStr = input('Please input the coordinates with \"x,y\" style: \\n') while inputStr!= 'Done':     try:         x_str,y_str = inputStr.split(sep=',')         if board[int(y_str)-1][int(x_str) - 1] != '+':             inputStr = input('There already have a piece, please re-input')             continue         board[int(y_str)-1][int(x_str)-1] = '\u25cf'         printBoard()     except Exception:         inputStr = input('Your input is illegal, please re-input')         continue <pre>+++++\n+++++\n+++++\n+++++\n+++++\n\u25cf++++\n+++++\n+++++\n+++++\n+++++\n\u25cf++++\n+++++\n+\u25cf+++\n+++++\n+++++\n</pre> <pre>\n---------------------------------------------------------------------------\nKeyboardInterrupt                         Traceback (most recent call last)\nCell In[1], line 27\n     25     printBoard()\n     26 except Exception:\n---&gt; 27     inputStr = input('Your input is illegal, please re-input')\n     28     continue\n\nFile d:\\Anaconda3\\envs\\mybase\\Lib\\site-packages\\ipykernel\\kernelbase.py:1191, in Kernel.raw_input(self, prompt)\n   1189     msg = \"raw_input was called, but this frontend does not support input requests.\"\n   1190     raise StdinNotImplementedError(msg)\n-&gt; 1191 return self._input_request(\n   1192     str(prompt),\n   1193     self._parent_ident[\"shell\"],\n   1194     self.get_parent(\"shell\"),\n   1195     password=False,\n   1196 )\n\nFile d:\\Anaconda3\\envs\\mybase\\Lib\\site-packages\\ipykernel\\kernelbase.py:1234, in Kernel._input_request(self, prompt, ident, parent, password)\n   1231 except KeyboardInterrupt:\n   1232     # re-raise KeyboardInterrupt, to truncate traceback\n   1233     msg = \"Interrupted by user\"\n-&gt; 1234     raise KeyboardInterrupt(msg) from None\n   1235 except Exception:\n   1236     self.log.warning(\"Invalid Message:\", exc_info=True)\n\nKeyboardInterrupt: Interrupted by user</pre> In\u00a0[3]: Copied! <pre>import sys\ntry:\n    a = int(sys.argv[1])\n    b = int(sys.argv[2])\n    c = a / b\n    print('The quotient is :',c)\nexcept IndexError:\n    print('index error: not enough input parameters')\nexcept ValueError:\n    print('Value Error: could only input integers')\nexcept ArithmeticError:\n    print('The denominator is 0')\nexcept Exception:\n    print('Unkown error')\n</pre> import sys try:     a = int(sys.argv[1])     b = int(sys.argv[2])     c = a / b     print('The quotient is :',c) except IndexError:     print('index error: not enough input parameters') except ValueError:     print('Value Error: could only input integers') except ArithmeticError:     print('The denominator is 0') except Exception:     print('Unkown error') <pre>Value Error: could only input integers\n</pre> In\u00a0[6]: Copied! <pre>try:\n    a = int(sys.argv[1])\n    b = int(sys.argv[2])\n    c = a / b\n    print('The quotient is :',c)\nexcept(IndexError,ValueError,ArithmeticError):\n    print('one of IndexError, ValueError and ArithmeticError happened')\nexcept:\n    print('unknown error')\n</pre> try:     a = int(sys.argv[1])     b = int(sys.argv[2])     c = a / b     print('The quotient is :',c) except(IndexError,ValueError,ArithmeticError):     print('one of IndexError, ValueError and ArithmeticError happened') except:     print('unknown error') <pre>one of IndexError, ValueError and ArithmeticError happened\n</pre> In\u00a0[11]: Copied! <pre>def foo():\n    try:\n        fis = open('a.text')\n    except Exception as e:\n        # Get the index of the exception and it's descriptions\n        print(e.args)\n        # print(e.with_traceback())\n        print(e.__repr__())\n        print(e.errno)\nfoo()\n</pre> def foo():     try:         fis = open('a.text')     except Exception as e:         # Get the index of the exception and it's descriptions         print(e.args)         # print(e.with_traceback())         print(e.__repr__())         print(e.errno) foo() <pre>(2, 'No such file or directory')\nFileNotFoundError(2, 'No such file or directory')\n2\n</pre> In\u00a0[12]: Copied! <pre>s = input('Please input the denominator: ')\ntry:\n    result = 20/ int(s)\n    print('the quotient between 20 and %s is %g' %(s,result))\nexcept ValueError:\n    print('input error')\nexcept ArithmeticError:\n    print('Could not input 0')\nelse:\n    print('No exception')\n</pre> s = input('Please input the denominator: ') try:     result = 20/ int(s)     print('the quotient between 20 and %s is %g' %(s,result)) except ValueError:     print('input error') except ArithmeticError:     print('Could not input 0') else:     print('No exception') <pre>the quotient between 20 and 5 is 4\nNo exception\n</pre> In\u00a0[13]: Copied! <pre>def else_test():\n    s = input('Please input the denominator: ')\n    result = 20 / int(s)\n    print('the quotient between 20 and %s is %g' %(s,result))\ndef right_main():\n    try:\n        print('try section, no exception')\n    except:\n        print('Error!')\n    else:\n        else_test()\ndef wrong_main():\n    try:\n        print('try section, no exception')\n        else_test()\n    except:\n        print('Error!')\nwrong_main()\nprint('--------------------------------')\nright_main()\n</pre> def else_test():     s = input('Please input the denominator: ')     result = 20 / int(s)     print('the quotient between 20 and %s is %g' %(s,result)) def right_main():     try:         print('try section, no exception')     except:         print('Error!')     else:         else_test() def wrong_main():     try:         print('try section, no exception')         else_test()     except:         print('Error!') wrong_main() print('--------------------------------') right_main() <pre>try section, no exception\nError!\n--------------------------------\ntry section, no exception\n</pre> <pre>\n---------------------------------------------------------------------------\nZeroDivisionError                         Traceback (most recent call last)\nCell In[13], line 20\n     18 wrong_main()\n     19 print('--------------------------------')\n---&gt; 20 right_main()\n\nCell In[13], line 11, in right_main()\n      9     print('Error!')\n     10 else:\n---&gt; 11     else_test()\n\nCell In[13], line 3, in else_test()\n      1 def else_test():\n      2     s = input('Please input the denominator: ')\n----&gt; 3     result = 20 / int(s)\n      4     print('the quotient between 20 and %s is %g' %(s,result))\n\nZeroDivisionError: division by zero</pre> In\u00a0[14]: Copied! <pre>import os\ndef test():\n    fis = None\n    try:\n        fis = open('a.text')\n    except OSError as e:\n        print(e.strerror)\n        return\n    finally:\n        print('Perform finally part!')\n        if fis is not None:\n            try:\n                fis.close()\n            except OSError as ios:\n                print(ios.strerror)\ntest()\n</pre> import os def test():     fis = None     try:         fis = open('a.text')     except OSError as e:         print(e.strerror)         return     finally:         print('Perform finally part!')         if fis is not None:             try:                 fis.close()             except OSError as ios:                 print(ios.strerror) test() <pre>No such file or directory\nPerform finally part!\n</pre> In\u00a0[19]: Copied! <pre>def main():\n    try:\n        mtd(3)\n    except Exception as e:\n        print('Get an error')\n        print(e)\n    \ndef mtd(a):\n    if a &gt; 0:\n        raise ValueError('a &gt; 0!')\nmain()\n</pre> def main():     try:         mtd(3)     except Exception as e:         print('Get an error')         print(e)      def mtd(a):     if a &gt; 0:         raise ValueError('a &gt; 0!') main() <pre>Get an error\na &gt; 0!\n</pre> In\u00a0[20]: Copied! <pre>class AuctionException(Exception): pass\nraise AuctionException\n</pre> class AuctionException(Exception): pass raise AuctionException <pre>\n---------------------------------------------------------------------------\nAuctionException                          Traceback (most recent call last)\nCell In[20], line 2\n      1 class AuctionException(Exception): pass\n----&gt; 2 raise AuctionException\n\nAuctionException: </pre> In\u00a0[21]: Copied! <pre>class AuctionTest:\n    def __init__(self,init_price):\n        self.init_price = init_price\n    def bid(self,bid_price):\n        d = 0.0\n        try:\n            d = float(bid_price)\n        except Exception as e:\n            print('Find a error, ',e)\n            raise AuctionException('The bid price must be a number!')\n        if self.init_price &gt; d:\n            raise AuctionException('The bid price is too low!')\n        init_price = d\n\n        \ndef main():\n    at = AuctionTest(200)\n    try:\n        at.bid('df')\n    except AuctionException as e:\n        print('The error in the main body,',e)\n\nmain()\n</pre> class AuctionTest:     def __init__(self,init_price):         self.init_price = init_price     def bid(self,bid_price):         d = 0.0         try:             d = float(bid_price)         except Exception as e:             print('Find a error, ',e)             raise AuctionException('The bid price must be a number!')         if self.init_price &gt; d:             raise AuctionException('The bid price is too low!')         init_price = d           def main():     at = AuctionTest(200)     try:         at.bid('df')     except AuctionException as e:         print('The error in the main body,',e)  main() <pre>Find a error,  could not convert string to float: 'df'\nThe error in the main body, The bid price must be a number!\n</pre>"},{"location":"Foundation/Ch7-Error-Exception-Handling/#chapter-7-error-and-exception-handling-in-python","title":"Chapter 7: Error and Exception Handling in Python\u00b6","text":"<p>Writing robust Python programs necessitates an understanding of how to handle errors and exceptions. Python provides a powerful set of tools for controlling the flow of a program when an error occurs, preventing the program from terminating unexpectedly. In this chapter, we will explore Python's error and exception handling mechanisms, including built-in exceptions, the <code>try-except</code> block, and how to define your own exceptions.</p>"},{"location":"Foundation/Ch7-Error-Exception-Handling/#1-basic-try-except-block","title":"1. Basic Try-Except Block\u00b6","text":"<p>he expression of <code>try...except</code> as following</p> <pre><code>try:\n    # the main body\nexcept(Error1,Error2,...) as e:\n    alert message\ngoto retry\n</code></pre> <p>If Python gets an exception but not be cached by an except module, the entire program will crash</p> <p>Here is a simple go game example</p>"},{"location":"Foundation/Ch7-Error-Exception-Handling/#2-exception-in-python","title":"2. <code>Exception</code> in Python\u00b6","text":"<p>Python exceptions are organized in a hierarchy, allowing you to catch specific errors or groups of errors.</p> <p></p>"},{"location":"Foundation/Ch7-Error-Exception-Handling/#3-handling-multiple-errors","title":"3. Handling multiple errors\u00b6","text":""},{"location":"Foundation/Ch7-Error-Exception-Handling/#4-access-error-messages","title":"4. Access error messages\u00b6","text":"<p>Every instance of Exception contains the following properties:</p> <ul> <li><code>args</code>: The index of the exception and it's descriptions</li> <li><code>errno</code>: The index of the exception</li> <li><code>strerror</code>: The description string of the exception</li> <li><code>with_traceback()</code>: See the trajectory of the exception</li> </ul>"},{"location":"Foundation/Ch7-Error-Exception-Handling/#5-else-module","title":"5. <code>else</code> module\u00b6","text":"<p>If there is no error within the try section, the program would go to the <code>else</code> part</p>"},{"location":"Foundation/Ch7-Error-Exception-Handling/#6-finally-module","title":"6. <code>finally</code> module\u00b6","text":"<ul> <li>No matter there is error within <code>try</code> section or not, the code in final module would be executed.</li> <li>Because of that, do not use <code>return</code> or <code>raise</code> in finally part</li> </ul>"},{"location":"Foundation/Ch7-Error-Exception-Handling/#7-raise-an-exception","title":"7. Raise an exception\u00b6","text":"<ul> <li><code>raise</code>: would raise a <code>RuntimeError</code> or get the error in the except part</li> <li><code>raise xxxError</code></li> </ul>"},{"location":"Foundation/Ch7-Error-Exception-Handling/#8-self-defined-exception-raise-and-except","title":"8. Self Defined Exception, raise and except\u00b6","text":""},{"location":"Foundation/Ch7-Error-Exception-Handling/#81-self-defined-exception","title":"8.1 Self defined exception\u00b6","text":"<p>Every error objects should be the subclass of <code>Exception</code></p>"},{"location":"Foundation/Ch7-Error-Exception-Handling/#82-except-and-raise","title":"8.2 <code>except</code> and <code>raise</code>\u00b6","text":"<p>Transfer system-defined error to self defined error</p>"},{"location":"Foundation/Ch8-Special-functions/","title":"Ch7 Magic Functions","text":"In\u00a0[1]: Copied! <pre>class Item:\n    def __init__(self,name,price):\n        self.name = name\n        self.price = price\n        \n# Create Item\nim = Item('Mouse',29.8)\nprint(im)\nprint(im.__repr__())\n</pre> class Item:     def __init__(self,name,price):         self.name = name         self.price = price          # Create Item im = Item('Mouse',29.8) print(im) print(im.__repr__()) <pre>&lt;__main__.Item object at 0x0000016022CBF990&gt;\n&lt;__main__.Item object at 0x0000016022CBF990&gt;\n</pre> In\u00a0[2]: Copied! <pre>class Apple:\n    # constructor\n    def __init__(self,color,weight):\n        self.color = color\n        self.weight = weight\n    # re-write __repr__()\n    def __repr__(self):\n        return 'Apple[color = '+ self.color + ',weight =' + str(self.weight) + ']'\n\na = Apple('red',5.65)\nprint(a)\n</pre> class Apple:     # constructor     def __init__(self,color,weight):         self.color = color         self.weight = weight     # re-write __repr__()     def __repr__(self):         return 'Apple[color = '+ self.color + ',weight =' + str(self.weight) + ']'  a = Apple('red',5.65) print(a) <pre>Apple[color = red,weight =5.65]\n</pre> <ul> <li>Destructor <code>__del__</code><ul> <li>for the opposite of <code>__init__()</code>, <code>__del__</code> using for destroy an object</li> <li>when you do not need an object anymore, please use it to do the <code>Garbage Collector(GC)</code></li> </ul> </li> </ul> In\u00a0[3]: Copied! <pre>class Item:\n    def __init__(self,name,price):\n        self.name = name\n        self.price = price\n    def __del__(self):\n        print('Delete Object!')\nim = Item('mouse',29.8)\nx = im\ndel im\nprint('----------')\n</pre> class Item:     def __init__(self,name,price):         self.name = name         self.price = price     def __del__(self):         print('Delete Object!') im = Item('mouse',29.8) x = im del im print('----------') <pre>----------\n</pre> <p>Since <code>x</code> also refers to object <code>im</code> , so the <code>del im</code> would not call the <code>__del__()</code></p> <ul> <li>python will do Garbage collection automatically</li> </ul> In\u00a0[5]: Copied! <pre>x = Item('mouse',29.8)\nprint('----------')\n</pre> x = Item('mouse',29.8) print('----------') <pre>Delete Object!\n----------\n</pre> <ul> <li><code>__dir__()</code><ul> <li>It is similar to <code>dir(object)</code></li> </ul> </li> </ul> In\u00a0[6]: Copied! <pre>class Item:\n    def __init__(self,name,price):\n        self.name = name\n        self.price = price\n\nim = Item('mouse',29.8)\nprint(im.__dir__())\nprint(\"\\n--------------------------\\n\")\n\nprint(dir(im))\n</pre> class Item:     def __init__(self,name,price):         self.name = name         self.price = price  im = Item('mouse',29.8) print(im.__dir__()) print(\"\\n--------------------------\\n\")  print(dir(im)) <pre>['name', 'price', '__module__', '__init__', '__dict__', '__weakref__', '__doc__', '__new__', '__repr__', '__hash__', '__str__', '__getattribute__', '__setattr__', '__delattr__', '__lt__', '__le__', '__eq__', '__ne__', '__gt__', '__ge__', '__reduce_ex__', '__reduce__', '__getstate__', '__subclasshook__', '__init_subclass__', '__format__', '__sizeof__', '__dir__', '__class__']\n\n--------------------------\n\n['__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', 'name', 'price']\n</pre> <ul> <li><code>__dict__</code><ul> <li><code>__dict__</code> is using for check all the variables and their value within an object, and return them as a dict</li> </ul> </li> </ul> In\u00a0[8]: Copied! <pre>print(im.__dict__)\n</pre> print(im.__dict__) <pre>{'name': 'keyboard', 'price': 32.8}\n</pre> In\u00a0[7]: Copied! <pre>print(im.__dict__['name'])\nprint(im.__dict__['price'])\nim.__dict__['name']  = 'keyboard'\nim.__dict__['price'] = 32.8\nprint(im.name)\nprint(im.price)\n</pre> print(im.__dict__['name']) print(im.__dict__['price']) im.__dict__['name']  = 'keyboard' im.__dict__['price'] = 32.8 print(im.name) print(im.price) <pre>mouse\n29.8\nkeyboard\n32.8\n</pre> <ul> <li><code>_getattr__</code> and <code>__setattr__</code>, etc.</li> </ul> <p>For manipulating(access, set, delete) the properties of an object, Python would call the following functions:</p> <ul> <li><code>__getattribute__(self,name)</code> : when access a property</li> <li><code>__getattr__(self,name)</code> : call a property but do not exist, So it is only for some Synthetic attributes</li> <li><code>__setattr__(self,name,value)</code> : set a value of a property</li> <li><code>__delattr__(self,name)</code> : delete a property</li> </ul> In\u00a0[10]: Copied! <pre>class Rectangle:\n    def __init__(self,width,height):\n        self.width = width\n        self.height = height\n    def __setattr__(self,name,value):\n        print('----set %s property----' % name)\n        if name == 'size':\n            self.width,self.height = value\n        else:\n            self.__dict__[name] = value\n    def __getattr__(self,name):\n        print('----read %s property----' % name)\n        if name == 'size':\n            return self.width, self.height\n        else:\n            raise AttributeError\n    def __delattr__(self,name):\n        print('----delte %s property' %name)\n        if name == 'size':\n            self.__dict__['width'] = 0\n            self.__dict__['height'] = 0\n            \nrect = Rectangle(3,4)\nprint(rect.size)\n</pre> class Rectangle:     def __init__(self,width,height):         self.width = width         self.height = height     def __setattr__(self,name,value):         print('----set %s property----' % name)         if name == 'size':             self.width,self.height = value         else:             self.__dict__[name] = value     def __getattr__(self,name):         print('----read %s property----' % name)         if name == 'size':             return self.width, self.height         else:             raise AttributeError     def __delattr__(self,name):         print('----delte %s property' %name)         if name == 'size':             self.__dict__['width'] = 0             self.__dict__['height'] = 0              rect = Rectangle(3,4) print(rect.size) <pre>----set width property----\n----set height property----\n----read size property----\n(3, 4)\n</pre> In\u00a0[11]: Copied! <pre>rect.size = 6,8\nprint(rect.width)\n</pre> rect.size = 6,8 print(rect.width) <pre>----set size property----\n----set width property----\n----set height property----\n6\n</pre> In\u00a0[12]: Copied! <pre>del rect.size\nprint(rect.size)\n</pre> del rect.size print(rect.size) <pre>----delte size property\n----read size property----\n(0, 0)\n</pre> <p>Those methods is very useful for checking the legality of input</p> <ul> <li>But now, we use <code>@property</code> to do the input check</li> </ul> In\u00a0[13]: Copied! <pre>class User:\n    def __init__(self,name,age):\n        self.name = name\n        self.age = age\n    def __setattr__(self,name,value):\n        # check the input\n        if name == 'name':\n            if 2 &lt; len(value) &lt;= 8:\n                self.__dict__['name'] = value\n            else:\n                raise ValueError('the length of name must between 2~8')\n        elif name == 'age':\n            if 10&lt; value &lt;60:\n                self.__dict__['age'] = value\n            else:\n                raise ValueError('age must between 10~60')\n                    \nu = User('fkit',24)\nprint(u.name)\nprint(u.age)\nu.age = 65\n</pre> class User:     def __init__(self,name,age):         self.name = name         self.age = age     def __setattr__(self,name,value):         # check the input         if name == 'name':             if 2 &lt; len(value) &lt;= 8:                 self.__dict__['name'] = value             else:                 raise ValueError('the length of name must between 2~8')         elif name == 'age':             if 10&lt; value &lt;60:                 self.__dict__['age'] = value             else:                 raise ValueError('age must between 10~60')                      u = User('fkit',24) print(u.name) print(u.age) u.age = 65 <pre>fkit\n24\n</pre> <pre>\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\nCell In[13], line 21\n     19 print(u.name)\n     20 print(u.age)\n---&gt; 21 u.age = 65\n\nCell In[13], line 16, in User.__setattr__(self, name, value)\n     14     self.__dict__['age'] = value\n     15 else:\n---&gt; 16     raise ValueError('age must between 10~60')\n\nValueError: age must between 10~60</pre> In\u00a0[14]: Copied! <pre>class User:\n    def __init__(self,name,age):\n        self.name = name\n        self.age = age\n\n    @property\n    def age(self):\n        return self.__age\n    \n    @age.setter\n    def age(self,value):\n        if 10&lt; value &lt;60:\n                self.__age = value\n        else:\n            raise ValueError('age must between 10~60')\n        \nu = User('fkit',24)\nprint(u.name)\nprint(u.age)\nu.age = 65\n</pre> class User:     def __init__(self,name,age):         self.name = name         self.age = age      @property     def age(self):         return self.__age          @age.setter     def age(self,value):         if 10&lt; value &lt;60:                 self.__age = value         else:             raise ValueError('age must between 10~60')          u = User('fkit',24) print(u.name) print(u.age) u.age = 65 <pre>fkit\n24\n</pre> <pre>\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\nCell In[14], line 20\n     18 print(u.name)\n     19 print(u.age)\n---&gt; 20 u.age = 65\n\nCell In[14], line 15, in User.age(self, value)\n     13         self.__age = value\n     14 else:\n---&gt; 15     raise ValueError('age must between 10~60')\n\nValueError: age must between 10~60</pre> <ul> <li><code>__call__</code><ul> <li>Use <code>__call__</code> to determine if it is a property or method</li> </ul> </li> </ul> In\u00a0[15]: Copied! <pre>class User:\n    def __init__(self,name,password):\n        self.name = name\n        self.password = password\n    def validLogin(self):\n        print('Verify the indentity of %s' %self.name)\n\nu = User('yyl','admin')\nprint(hasattr(u.name,'__call__'))\nprint(hasattr(u.validLogin,'__call__'))\n</pre> class User:     def __init__(self,name,password):         self.name = name         self.password = password     def validLogin(self):         print('Verify the indentity of %s' %self.name)  u = User('yyl','admin') print(hasattr(u.name,'__call__')) print(hasattr(u.validLogin,'__call__')) <pre>False\nTrue\n</pre> In\u00a0[16]: Copied! <pre>class Comment:\n    def __init__(self,detail,view_times):\n        self.detail = detail\n        self.view_times = view_times\n    def info():\n        print('This is a comment, content is %s' %self.detail)\n        \nc = Comment('Crazy Python sold out!',20)\n\n# Check if has the following properties\nprint(hasattr(c,'detail'))\nprint(hasattr(c,'info'))\nprint(hasattr(c,'author'))\n\n# Get the value of properties\nprint(getattr(c,'detail'))\nprint(getattr(c,'view_times'))\n\n# Set the value to properties\nsetattr(c,'detail','Good weather')\nprint(c.detail)\n</pre> class Comment:     def __init__(self,detail,view_times):         self.detail = detail         self.view_times = view_times     def info():         print('This is a comment, content is %s' %self.detail)          c = Comment('Crazy Python sold out!',20)  # Check if has the following properties print(hasattr(c,'detail')) print(hasattr(c,'info')) print(hasattr(c,'author'))  # Get the value of properties print(getattr(c,'detail')) print(getattr(c,'view_times'))  # Set the value to properties setattr(c,'detail','Good weather') print(c.detail) <pre>True\nTrue\nFalse\nCrazy Python sold out!\n20\nGood weather\n</pre> <p>Add additional Properties</p> In\u00a0[17]: Copied! <pre>c.test = 'new property'\nprint(c.test)\n</pre> c.test = 'new property' print(c.test) <pre>new property\n</pre> In\u00a0[18]: Copied! <pre>def check_key(key):\n    '''\n    This method using for checking if the input index(key) is integer or not, if not, raise a TypeError\n    and the value could not be negative, otherwise raise a IndexError    \n    '''\n    if not isinstance(key,int): raise TypeError('index must be an integer')\n    if key &lt;0 : raise IndexError('index must be a positive number')\n        \nclass StringSeq:\n    def __init__(self):\n        self.__changed = {}\n        self.__deleted = {}\n    def __len__(self):\n        return 26 ** 3\n    def __getitem__(self,key):\n        '''\n        get the element from a list\n        '''\n        check_key(key)\n        if key in self.__changed:\n            return self.__changed[key]\n        if key in self.__deleted:\n            return None\n        three = key // (26 * 26)\n        two = (key - three * 26 * 26) // 26\n        one = key % 26\n        return chr(65 + three) + chr(65 + two) + chr(65 +one)\n    def __setitem__(self,key,value):\n        check_key(key)\n        self.__changed[key] = value\n    def __delitem__(self,key):\n        check_key(key)\n        if key not in self.__deleted: self.__deleted.append(key)\n        if key in self.__changed: del self.__changed[key]\n</pre> def check_key(key):     '''     This method using for checking if the input index(key) is integer or not, if not, raise a TypeError     and the value could not be negative, otherwise raise a IndexError         '''     if not isinstance(key,int): raise TypeError('index must be an integer')     if key &lt;0 : raise IndexError('index must be a positive number')          class StringSeq:     def __init__(self):         self.__changed = {}         self.__deleted = {}     def __len__(self):         return 26 ** 3     def __getitem__(self,key):         '''         get the element from a list         '''         check_key(key)         if key in self.__changed:             return self.__changed[key]         if key in self.__deleted:             return None         three = key // (26 * 26)         two = (key - three * 26 * 26) // 26         one = key % 26         return chr(65 + three) + chr(65 + two) + chr(65 +one)     def __setitem__(self,key,value):         check_key(key)         self.__changed[key] = value     def __delitem__(self,key):         check_key(key)         if key not in self.__deleted: self.__deleted.append(key)         if key in self.__changed: del self.__changed[key] In\u00a0[19]: Copied! <pre>sq = StringSeq()\nprint(len(sq))\nprint(sq[26*26])\nprint(sq[1])\nsq[1] = 'Python'\nprint(sq[1])\n</pre> sq = StringSeq() print(len(sq)) print(sq[26*26]) print(sq[1]) sq[1] = 'Python' print(sq[1]) <pre>17576\nBAA\nAAB\nPython\n</pre> In\u00a0[20]: Copied! <pre>def check_key(key):\n    if not isinstance(key,int): raise TypeError('index must be an integer')\n    if key &lt; 0: raise IndexError('index must be a positive number')\n    if key &gt; 52: raise IndexError('index must less than 52')\n\nsuit_lst = ['\u2663','\u2666','\u2665','\u2660']\nrank_lst = list(range(2,11)) + ['J','Q','K','A']\n\nclass PlayingCards:\n    def __len__(self):\n        return 52    \n    def __getitem__(self,key):\n        check_key(key)\n        suit = suit_lst[key // 13]\n        rank =  rank_lst[key % 13]\n        return suit + str(rank)\n</pre> def check_key(key):     if not isinstance(key,int): raise TypeError('index must be an integer')     if key &lt; 0: raise IndexError('index must be a positive number')     if key &gt; 52: raise IndexError('index must less than 52')  suit_lst = ['\u2663','\u2666','\u2665','\u2660'] rank_lst = list(range(2,11)) + ['J','Q','K','A']  class PlayingCards:     def __len__(self):         return 52         def __getitem__(self,key):         check_key(key)         suit = suit_lst[key // 13]         rank =  rank_lst[key % 13]         return suit + str(rank) In\u00a0[21]: Copied! <pre>pc = PlayingCards()\nfor ele in pc:\n    print(ele,end = ' ')\n</pre> pc = PlayingCards() for ele in pc:     print(ele,end = ' ') <pre>\u26632 \u26633 \u26634 \u26635 \u26636 \u26637 \u26638 \u26639 \u266310 \u2663J \u2663Q \u2663K \u2663A \u26662 \u26663 \u26664 \u26665 \u26666 \u26667 \u26668 \u26669 \u266610 \u2666J \u2666Q \u2666K \u2666A \u26652 \u26653 \u26654 \u26655 \u26656 \u26657 \u26658 \u26659 \u266510 \u2665J \u2665Q \u2665K \u2665A \u26602 \u26603 \u26604 \u26605 \u26606 \u26607 \u26608 \u26609 \u266010 \u2660J \u2660Q \u2660K \u2660A </pre>"},{"location":"Foundation/Ch8-Special-functions/#chapter-8-special-functions-in-python","title":"Chapter 8: Special Functions in Python\u00b6","text":"<p>Python offers a rich set of special functions that allow developers to leverage advanced features of the language. These functions, often referred to as <code>magic methods</code>, enable Python programmers to create more intuitive and Pythonic code by customizing the behavior of objects. In this chapter, we'll explore these special functions, focusing on sequence-related methods and their applications in real-world scenarios.</p>"},{"location":"Foundation/Ch8-Special-functions/#1-understanding-magic-methods","title":"1. Understanding Magic Methods\u00b6","text":"<ol> <li>Magic methods in Python are special methods that start and end with double underscores (<code>__</code>).</li> <li>They are designed to be invoked automatically by Python in various contexts, providing a way for objects to integrate seamlessly with Python's language features.</li> </ol>"},{"location":"Foundation/Ch8-Special-functions/#11-common-magic-methods","title":"1.1 Common Magic Methods\u00b6","text":"<ol> <li><code>__init__(self, ...)</code>: Constructor method for initializing new objects.</li> <li><code>__str__(self)</code>: Defines the \"<code>informal</code>\" or nicely printable string representation of an object.</li> <li><code>__repr__(self)</code>: Defines the \"<code>official</code>\" string representation of an object, which can be used to recreate the object.</li> <li><code>__len__(self)</code>: Returns the length of the container. Called by the <code>len()</code> function.</li> <li><code>__getitem__(self, key)</code>: Allows <code>indexing</code> and <code>slicing</code> operations on the object.</li> <li><code>__setitem__(self, key, value)</code>: Assigns a value to a key or index within the object.</li> <li><code>__delitem__(self, key)</code>: Removes an item from the object given a key or index.</li> <li><code>__iter__(self)</code>: Returns an iterator for the object. This allows iteration over the object.</li> </ol>"},{"location":"Foundation/Ch8-Special-functions/#12-example","title":"1.2 Example\u00b6","text":"<ul> <li><code>__repr__</code><ul> <li>If you use <code>print()</code> functions to call an object, it would call it's <code>__repr__()</code></li> <li><code>__repr__</code> returns class name + object at memory address as default</li> <li>rewrite <code>__repr__</code> as class name[field1 = xxx, field2 = xxx,...]</li> </ul> </li> </ul>"},{"location":"Foundation/Ch8-Special-functions/#2-dynamic-programming","title":"2. Dynamic Programming\u00b6","text":""},{"location":"Foundation/Ch8-Special-functions/#3-sequence-related-methods","title":"3. Sequence-related Methods\u00b6","text":"<ul> <li>Sequence-related magic methods enable objects to emulate <code>container types</code> like <code>lists</code>, <code>tuples</code>, and <code>dictionaries</code>.</li> <li>These methods are essential for creating custom sequences that behave like standard Python sequences.</li> </ul>"},{"location":"Foundation/Ch8-Special-functions/#31-common-sequence-related-magic-methods","title":"3.1 Common sequence related magic methods\u00b6","text":"<ul> <li><code>__len__(self)</code>: return the number of elements</li> <li><code>__getitem__(self,key)</code> : return the corresponding element, the key should be an integer or slice object</li> <li><code>__contains__(self,item)</code></li> <li><code>__setitem__(self,key,value)</code></li> <li><code>__delitem__(self,key)</code></li> </ul>"},{"location":"Foundation/Ch8-Special-functions/#32-build-a-character-sequence","title":"3.2 Build a character sequence\u00b6","text":"<ul> <li>elements in this sequence has 3 digits</li> <li>every digits composed with a character from A to Z</li> </ul>"},{"location":"Foundation/Ch8-Special-functions/#33-applications","title":"3.3 Applications\u00b6","text":"<p>52 cards deck It includes thirteen ranks in each of the four French suits:</p> <ul> <li>Clubs (\u2663)</li> <li>Diamonds (\u2666)</li> <li>Hearts (\u2665)</li> <li>Spades (\u2660)</li> </ul>"},{"location":"Geoprocessing/01-Arcpy-get-start/","title":"01 Arcpy Intro","text":"In\u00a0[1]: Copied! <pre>try:\n    import arcpy\nexcept ImportError:\n    print(\"import arcpy error\")\n</pre> try:     import arcpy except ImportError:     print(\"import arcpy error\") In\u00a0[2]: Copied! <pre>arcpy.env.workspace = r\".\\database\"\narcpy.env.workspace = \"./database\"\narcpy.env.workspace = \".\\\\database\"\n</pre> arcpy.env.workspace = r\".\\database\" arcpy.env.workspace = \"./database\" arcpy.env.workspace = \".\\\\database\" <p>In the code above <code>env</code> is a class and <code>workspace</code> is a property of this class</p> <pre>arcpy.&lt; class&gt;.&lt; property&gt;\n</pre> <ul> <li>Read material about <code>arcpy.env</code></li> </ul> In\u00a0[3]: Copied! <pre>arcpy.ListWorkspaces()\n</pre> arcpy.ListWorkspaces() Out[3]: <pre>['.\\\\database\\\\results', '.\\\\database\\\\testdata.gdb']</pre> In\u00a0[4]: Copied! <pre>arcpy.ListFeatureClasses()\n</pre> arcpy.ListFeatureClasses() Out[4]: <pre>['amtrak_stations.shp',\n 'cities.shp',\n 'counties.shp',\n 'new_mexico.shp',\n 'railroads.shp',\n 'resultbuffers_poly.shp',\n 'resultLittlePolys.shp',\n 'resultWatersheds_polygon.shp']</pre> In\u00a0[5]: Copied! <pre>arcpy.ListRasters()\n</pre> arcpy.ListRasters() Out[5]: <pre>['resultElevationFloat..tif',\n 'resultElevationFloat.tif',\n 'resultsElevationFloat.tif']</pre> <p>Set <code>overwriteOutput</code> property</p> In\u00a0[6]: Copied! <pre>arcpy.env.overwriteOutput = True\n</pre> arcpy.env.overwriteOutput = True <p>Get a complete list of <code>properties</code></p> In\u00a0[7]: Copied! <pre>arcpy.env.cellSize = 30\narcpy.ListEnvironments()[:10]\n</pre> arcpy.env.cellSize = 30 arcpy.ListEnvironments()[:10] Out[7]: <pre>['autoCommit',\n 'XYResolution',\n 'processingServerUser',\n 'gpuId',\n 'XYDomain',\n 'processingServerPassword',\n 'scratchWorkspace',\n 'recycleProcessingWorkers',\n 'cartographicPartitions',\n 'terrainMemoryUsage']</pre> In\u00a0[8]: Copied! <pre>arcpy.ListTools()[:10]\n</pre> arcpy.ListTools()[:10] Out[8]: <pre>['ChangePointDetection_stpm',\n 'CreateSpaceTimeCube_stpm',\n 'CreateSpaceTimeCubeDefinedLocations_stpm',\n 'CreateSpaceTimeCubeMDRasterLayer_stpm',\n 'CurveFitForecast_stpm',\n 'DescribeSpaceTimeCube_stpm',\n 'EmergingHotSpotAnalysis_stpm',\n 'EvaluateForecastsByLocation_stpm',\n 'ExponentialSmoothingForecast_stpm',\n 'FillMissingValues_stpm']</pre> In\u00a0[9]: Copied! <pre>feature_class = \"./database/cities.shp\"\n\n# Create a list of fields using the ListFields function\nfields = arcpy.ListFields(feature_class)\n\n# Print table header\nprint(\"{:&lt;20} {:&lt;20} {:&lt;15} {:&lt;12} {:&lt;12} {:&lt;10} {:&lt;10}\".format(\"Field\", \"Alias\", \"Type\", \"Is Editable\", \"Required\", \"Scale\", \"Precision\"))\n\n# Iterate through the list of fields\nfor field in fields:\n    # Print field properties\n    print(\"{:&lt;20} {:&lt;20} {:&lt;15} {:&lt;12} {:&lt;12} {:&lt;10} {:&lt;10}\".format(\n        field.name,\n        field.aliasName,\n        field.type,\n        field.editable,\n        field.required,\n        field.scale,\n        field.precision\n    ))\n</pre> feature_class = \"./database/cities.shp\"  # Create a list of fields using the ListFields function fields = arcpy.ListFields(feature_class)  # Print table header print(\"{:&lt;20} {:&lt;20} {:&lt;15} {:&lt;12} {:&lt;12} {:&lt;10} {:&lt;10}\".format(\"Field\", \"Alias\", \"Type\", \"Is Editable\", \"Required\", \"Scale\", \"Precision\"))  # Iterate through the list of fields for field in fields:     # Print field properties     print(\"{:&lt;20} {:&lt;20} {:&lt;15} {:&lt;12} {:&lt;12} {:&lt;10} {:&lt;10}\".format(         field.name,         field.aliasName,         field.type,         field.editable,         field.required,         field.scale,         field.precision     )) <pre>Field                Alias                Type            Is Editable  Required     Scale      Precision \nFID                  FID                  OID             0            1            0          0         \nShape                Shape                Geometry        1            1            0          0         \nCITIESX020           CITIESX020           Double          1            0            0          11        \nFEATURE              FEATURE              String          1            0            0          0         \nNAME                 NAME                 String          1            0            0          0         \nPOP_RANGE            POP_RANGE            String          1            0            0          0         \nPOP_2000             POP_2000             Integer         1            0            0          8         \nFIPS55               FIPS55               String          1            0            0          0         \nCOUNTY               COUNTY               String          1            0            0          0         \nFIPS                 FIPS                 String          1            0            0          0         \nSTATE                STATE                String          1            0            0          0         \nSTATE_FIPS           STATE_FIPS           String          1            0            0          0         \nDISPLAY              DISPLAY              SmallInteger    1            0            0          1         \n</pre> <p>The following example creates a <code>spatial reference object</code> based on an existing <code>.shp</code> file \u2010 properties of this object can then be used</p> In\u00a0[10]: Copied! <pre>prjfile = \"railroads.shp\"\ninfo = arcpy.Describe(prjfile)\nprint(info)\n</pre> prjfile = \"railroads.shp\" info = arcpy.Describe(prjfile) print(info) <pre>&lt;geoprocessing describe data object object at 0x000001C2CBB5E670&gt;\n</pre> In\u00a0[11]: Copied! <pre>spatialref = info.spatialReference\nmyref = spatialref.name\nprint(myref)\n</pre> spatialref = info.spatialReference myref = spatialref.name print(myref) <pre>GCS_North_American_1983\n</pre> In\u00a0[12]: Copied! <pre>arcpy.env.overwriteOutput = True\n\narcpy.Clip_analysis(\"railroads.shp\",\"new_mexico.shp\",\"results/routes_clip.shp\")\narcpy.analysis.Clip(\"railroads.shp\",\"new_mexico.shp\",\"results/routes_clip.shp\")  ## The same\n</pre> arcpy.env.overwriteOutput = True  arcpy.Clip_analysis(\"railroads.shp\",\"new_mexico.shp\",\"results/routes_clip.shp\") arcpy.analysis.Clip(\"railroads.shp\",\"new_mexico.shp\",\"results/routes_clip.shp\")  ## The same  Out[12]: Messages In\u00a0[13]: Copied! <pre>arcpy.Buffer_analysis(\"railroads.shp\",\"results/railroads_1000ft_buffer.shp\",\"1000 FEET\",\"\",\"\",\"ALL\",\"\")\narcpy.Buffer_analysis(\"railroads.shp\",\"results/railroads_1000ft_buffer.shp\",\"1000 FEET\", dissolve_option=\"ALL\")\n</pre> arcpy.Buffer_analysis(\"railroads.shp\",\"results/railroads_1000ft_buffer.shp\",\"1000 FEET\",\"\",\"\",\"ALL\",\"\") arcpy.Buffer_analysis(\"railroads.shp\",\"results/railroads_1000ft_buffer.shp\",\"1000 FEET\", dissolve_option=\"ALL\") Out[13]: Messages In\u00a0[14]: Copied! <pre>mycount = arcpy.GetCount_management(\"railroads.shp\")\nprint(mycount)\n</pre> mycount = arcpy.GetCount_management(\"railroads.shp\") print(mycount) <pre>86\n</pre> In\u00a0[15]: Copied! <pre>myresult = arcpy.Clip_analysis(\"railroads.shp\",\"new_mexico.shp\",\"results/routes_clip.shp\")\nprint(myresult)\n</pre> myresult = arcpy.Clip_analysis(\"railroads.shp\",\"new_mexico.shp\",\"results/routes_clip.shp\") print(myresult) <pre>.\\database\\results\\routes_clip.shp\n</pre> In\u00a0[16]: Copied! <pre>temp_buffer = arcpy.Buffer_analysis(\"railroads.shp\",\"results/railroads_1000ft_buffer.shp\",\"1000 FEET\", dissolve_option=\"ALL\")\n\ncount = arcpy.GetCount_management(temp_buffer)\nprint(count)\n</pre> temp_buffer = arcpy.Buffer_analysis(\"railroads.shp\",\"results/railroads_1000ft_buffer.shp\",\"1000 FEET\", dissolve_option=\"ALL\")  count = arcpy.GetCount_management(temp_buffer) print(count) <pre>1\n</pre> In\u00a0[17]: Copied! <pre>tools = arcpy.ListTools(\"*_analysis\")\nprint(tools)\n</pre> tools = arcpy.ListTools(\"*_analysis\") print(tools) <pre>['ApportionPolygon_analysis', 'Buffer_analysis', 'Clip_analysis', 'CountOverlappingFeatures_analysis', 'CreateThiessenPolygons_analysis', 'Enrich_analysis', 'Erase_analysis', 'Frequency_analysis', 'GenerateNearTable_analysis', 'GenerateOriginDestinationLinks_analysis', 'GraphicBuffer_analysis', 'Identity_analysis', 'Intersect_analysis', 'MultipleRingBuffer_analysis', 'Near_analysis', 'PairwiseBuffer_analysis', 'PairwiseClip_analysis', 'PairwiseDissolve_analysis', 'PairwiseErase_analysis', 'PairwiseIntegrate_analysis', 'PairwiseIntersect_analysis', 'PolygonNeighbors_analysis', 'RemoveOverlapMultiple_analysis', 'Select_analysis', 'SpatialJoin_analysis', 'Split_analysis', 'SplitByAttributes_analysis', 'Statistics_analysis', 'SummarizeNearby_analysis', 'SummarizeWithin_analysis', 'SymDiff_analysis', 'TableSelect_analysis', 'TabulateIntersection_analysis', 'Union_analysis', 'Update_analysis']\n</pre> In\u00a0[18]: Copied! <pre>arcpy.Usage(\"Union_analysis\")\n</pre> arcpy.Usage(\"Union_analysis\") Out[18]: <pre>'Union_analysis(Features {Ranks};Features {Ranks}..., out_feature_class, {All attributes | All attributes except feature IDs | Only feature IDs}, {cluster_tolerance}, {GAPS | NO_GAPS})'</pre> <p>We can also use Python build-in <code>help</code> function</p> In\u00a0[19]: Copied! <pre>print(help(arcpy.Union_analysis))\n</pre> print(help(arcpy.Union_analysis)) <pre>Help on function Union in module arcpy.analysis:\n\nUnion(in_features=None, out_feature_class=None, join_attributes=None, cluster_tolerance=None, gaps=None)\n    Union_analysis(in_features;in_features..., out_feature_class, {join_attributes}, {cluster_tolerance}, {gaps})\n    \n       Computes a geometric union of the input features. All features and\n       their attributes will be written to the output feature class.\n    \n    INPUTS:\n     in_features (Value Table):\n         The input feature classes or layers. When the distance between\n         features is less than the cluster tolerance, the features with the\n         lower rank will snap to the feature with the higher rank. The highest\n         rank is one. All of the input features must be polygons.\n     join_attributes {String}:\n         Specifies which attributes from the input features will be transferred\n         to the output feature class.ALL-All the attributes from the input\n         features will be transferred to\n         the output feature class. This is the default.NO_FID-All the\n         attributes except the FID from the input features will\n         be transferred to the output feature class.ONLY_FID-Only the FID field\n         from the input features will be\n         transferred to the output feature class.\n     cluster_tolerance {Linear Unit}:\n         The minimum distance separating all feature coordinates (nodes and\n         vertices) as well as the distance a coordinate can move in x or y (or\n         both).Changing this parameter's value may cause failure or unexpected\n         results. It is recommended that you do not modify this parameter. It\n         has been removed from view on the tool dialog box. By default, the\n         input feature class's spatial reference x,y tolerance property is\n         used.\n     gaps {Boolean}:\n         Specifies whether a feature will be created for areas in the output\n         that are completely enclosed by polygons. Gaps are areas in the\n         output feature class that are completely\n         enclosed by other polygons (created from the intersection of features\n         or from existing holes in the input polygons). These areas are not\n         invalid, but you can identify them for analysis. To identify the gaps\n         in the output, set this parameter to NO_GAPS, and a feature will be\n         created in these areas. To select these features, query the output\n         feature class based on all the input feature'svalues being equal to\n         -1. FIDGAPS-A feature will not be created for an area in the\n         output that is\n         completely enclosed by polygons. This is the default.\n         NO_GAPS-A feature will be created for an area in the output\n         that is completely enclosed by polygons. This feature will have no\n         attribute values and will have avalue of -1. FID\n    \n    OUTPUTS:\n     out_feature_class (Feature Class):\n         The feature class that will contain the results.\n\nNone\n</pre> In\u00a0[20]: Copied! <pre>## Create File Geodatabase\n\noutDb = arcpy.CreateFileGDB_management('./database/results' ,'MyGDB.gdb')\nprint(outDb)\n</pre> ## Create File Geodatabase  outDb = arcpy.CreateFileGDB_management('./database/results' ,'MyGDB.gdb') print(outDb) <pre>./database/results/MyGDB.gdb\n</pre> In\u00a0[21]: Copied! <pre># List all feature classes in the workspace\nfc_list = arcpy.ListFeatureClasses()\nprint(fc_list)\n\n# Loop through each feature class\nfor fc in fc_list:\n    # Get the feature type of the current feature class\n    desc = arcpy.Describe(fc)\n    if desc.shapeType in [\"Point\", \"Polygon\"]:  # Check if the feature type is Point or Polygon\n        # Define the output feature class path\n        outFeatureClass = str(outDb) + '\\\\' + str(fc).replace('.shp', '')\n        \n        # Copy the feature class\n        arcpy.CopyFeatures_management(fc, outFeatureClass)\n        \n        # Print a success message\n        print('Successful Copy: ' + str(fc))\n    else:\n        # Print a message indicating that the feature class is skipped\n        print('Skipping ' + str(fc) + ' because it is not a Point or Polygon feature class')\n</pre> # List all feature classes in the workspace fc_list = arcpy.ListFeatureClasses() print(fc_list)  # Loop through each feature class for fc in fc_list:     # Get the feature type of the current feature class     desc = arcpy.Describe(fc)     if desc.shapeType in [\"Point\", \"Polygon\"]:  # Check if the feature type is Point or Polygon         # Define the output feature class path         outFeatureClass = str(outDb) + '\\\\' + str(fc).replace('.shp', '')                  # Copy the feature class         arcpy.CopyFeatures_management(fc, outFeatureClass)                  # Print a success message         print('Successful Copy: ' + str(fc))     else:         # Print a message indicating that the feature class is skipped         print('Skipping ' + str(fc) + ' because it is not a Point or Polygon feature class') <pre>['amtrak_stations.shp', 'cities.shp', 'counties.shp', 'new_mexico.shp', 'railroads.shp', 'resultbuffers_poly.shp', 'resultLittlePolys.shp', 'resultWatersheds_polygon.shp']\nSuccessful Copy: amtrak_stations.shp\nSuccessful Copy: cities.shp\nSuccessful Copy: counties.shp\nSuccessful Copy: new_mexico.shp\nSkipping railroads.shp because it is not a Point or Polygon feature class\nSuccessful Copy: resultbuffers_poly.shp\nSuccessful Copy: resultLittlePolys.shp\nSuccessful Copy: resultWatersheds_polygon.shp\n</pre> In\u00a0[22]: Copied! <pre>import os\n</pre> import os In\u00a0[23]: Copied! <pre># Set the workspace to the current directory\narcpy.env.workspace = os.getcwd() + \"./database/testdata.gdb\"\n\n# List all feature classes in the geodatabase\nfc_list = arcpy.ListFeatureClasses()\n\n# Iterate over the feature classes\nfor fc in fc_list:\n    desc = arcpy.Describe(fc)\n    if desc.shapeType == \"Polygon\":\n        # Define the output feature class path\n        outFeatureClass = os.path.abspath(\"./database/results/\") + \"/\" + os.path.basename(fc) + \".shp\"\n        \n        # Copy the feature class\n        arcpy.CopyFeatures_management(fc, outFeatureClass)\n        \n        # Print a success message\n        print('Successful Copy: ' + str(fc))\n        \n# List all raster classes in the geodatabase\nrs_list = arcpy.ListRasters()\n\n# Iterate over the feature classes\nfor rs in rs_list:\n    desc = arcpy.Describe(rs)\n    if desc.isInteger == False:\n        # Define the output feature class path\n        outRasterClass = os.path.abspath(\"./database/results/\")  + \"/\" + os.path.basename(rs) + \".tif\"\n        \n        # Copy the raster dataset\n        arcpy.CopyRaster_management(rs, outRasterClass)\n        \n        # Print a success message\n        print('Successful Copy: ' + str(rs))\n</pre> # Set the workspace to the current directory arcpy.env.workspace = os.getcwd() + \"./database/testdata.gdb\"  # List all feature classes in the geodatabase fc_list = arcpy.ListFeatureClasses()  # Iterate over the feature classes for fc in fc_list:     desc = arcpy.Describe(fc)     if desc.shapeType == \"Polygon\":         # Define the output feature class path         outFeatureClass = os.path.abspath(\"./database/results/\") + \"/\" + os.path.basename(fc) + \".shp\"                  # Copy the feature class         arcpy.CopyFeatures_management(fc, outFeatureClass)                  # Print a success message         print('Successful Copy: ' + str(fc))          # List all raster classes in the geodatabase rs_list = arcpy.ListRasters()  # Iterate over the feature classes for rs in rs_list:     desc = arcpy.Describe(rs)     if desc.isInteger == False:         # Define the output feature class path         outRasterClass = os.path.abspath(\"./database/results/\")  + \"/\" + os.path.basename(rs) + \".tif\"                  # Copy the raster dataset         arcpy.CopyRaster_management(rs, outRasterClass)                  # Print a success message         print('Successful Copy: ' + str(rs)) <pre>Successful Copy: buffers_poly\nSuccessful Copy: LittlePolys\nSuccessful Copy: Watersheds_polygon\nSuccessful Copy: ElevationFloat\n</pre> In\u00a0[24]: Copied! <pre># Set the workspace to the 'results' folder\narcpy.env.workspace = os.getcwd() + \"./database/results\"\n\n# List all rasters in the workspace\nrc_lst = arcpy.ListRasters()\nprint(\"List of Rasters:\")\nprint(rc_lst)\n</pre> # Set the workspace to the 'results' folder arcpy.env.workspace = os.getcwd() + \"./database/results\"  # List all rasters in the workspace rc_lst = arcpy.ListRasters() print(\"List of Rasters:\") print(rc_lst) <pre>List of Rasters:\n['ElevationFloat.tif']\n</pre> In\u00a0[25]: Copied! <pre># Iterate over each raster in the list\nfor raster in rc_lst:\n    # Get raster information\n    raster_info = arcpy.Describe(raster)\n    \n    # Print raster information in a formatted way\n    print(\"\\nRaster Name: {}\".format(raster_info.name))\n    print(\"Spatial Reference Name: {}\".format(raster_info.spatialReference.name))\n    print(\"Cell Size: {}\".format(raster_info.meanCellWidth))\n    print(\"Columns: {}, Rows: {}\".format(raster_info.width, raster_info.height))\n    \n    # Get raster properties\n    min_value = arcpy.GetRasterProperties_management(raster, 'MINIMUM')\n    max_value = arcpy.GetRasterProperties_management(raster, 'MAXIMUM')\n    mean_value = arcpy.GetRasterProperties_management(raster, 'MEAN')\n    \n    # Print raster properties\n    print(\"Min: {}, Max: {}, Mean: {}\".format(min_value, max_value, mean_value))\n</pre> # Iterate over each raster in the list for raster in rc_lst:     # Get raster information     raster_info = arcpy.Describe(raster)          # Print raster information in a formatted way     print(\"\\nRaster Name: {}\".format(raster_info.name))     print(\"Spatial Reference Name: {}\".format(raster_info.spatialReference.name))     print(\"Cell Size: {}\".format(raster_info.meanCellWidth))     print(\"Columns: {}, Rows: {}\".format(raster_info.width, raster_info.height))          # Get raster properties     min_value = arcpy.GetRasterProperties_management(raster, 'MINIMUM')     max_value = arcpy.GetRasterProperties_management(raster, 'MAXIMUM')     mean_value = arcpy.GetRasterProperties_management(raster, 'MEAN')          # Print raster properties     print(\"Min: {}, Max: {}, Mean: {}\".format(min_value, max_value, mean_value)) <pre>\nRaster Name: ElevationFloat.tif\nSpatial Reference Name: USA_Contiguous_Albers_Equal_Area_Conic_USGS_version\nCell Size: 30.0\nColumns: 233, Rows: 207\nMin: 4309, Max: 5832, Mean: 4907.5136753423\n</pre> In\u00a0[26]: Copied! <pre>fc_list = arcpy.ListFeatureClasses()\nfc_list\n</pre> fc_list = arcpy.ListFeatureClasses() fc_list Out[26]: <pre>['buffers_poly.shp',\n 'LittlePolys.shp',\n 'railroads_1000ft_buffer.shp',\n 'routes_clip.shp',\n 'Watersheds_polygon.shp']</pre> In\u00a0[27]: Copied! <pre># Iterate over each feature class in the list\nfor feature_class in fc_list:\n    try:\n        # Get the list of fields for the current feature class\n        field_list = arcpy.ListFields(feature_class)\n        \n        # Print the feature class name\n        print(\"\\nFeature Name: {}\".format(feature_class.replace('.shp', '')))\n        \n        # Iterate over each field in the field list\n        for field in field_list:\n            # Check if the field is a string type and has a length greater than 10\n            if field.type == 'String' and field.length &gt; 10:\n                # Print the field name\n                print(\"Field Name: {}\".format(field.baseName))\n    except Exception as e:\n        # Print the exception message if an error occurs\n        print(\"Error occurred while processing feature class {}: {}\".format(feature_class, str(e)))\n        continue\n</pre> # Iterate over each feature class in the list for feature_class in fc_list:     try:         # Get the list of fields for the current feature class         field_list = arcpy.ListFields(feature_class)                  # Print the feature class name         print(\"\\nFeature Name: {}\".format(feature_class.replace('.shp', '')))                  # Iterate over each field in the field list         for field in field_list:             # Check if the field is a string type and has a length greater than 10             if field.type == 'String' and field.length &gt; 10:                 # Print the field name                 print(\"Field Name: {}\".format(field.baseName))     except Exception as e:         # Print the exception message if an error occurs         print(\"Error occurred while processing feature class {}: {}\".format(feature_class, str(e)))         continue <pre>\nFeature Name: buffers_poly\nField Name: SITE_NO\nField Name: STATION_NM\nField Name: LAND_NET_D\nField Name: MAP_NM\nField Name: DATA_TYPES\nField Name: INSTRUMENT\n\nFeature Name: LittlePolys\nField Name: STAID\n\nFeature Name: railroads_1000ft_buffer\n\nFeature Name: routes_clip\nField Name: RROWNER1\nField Name: RROWNER2\nField Name: RROWNER3\n\nFeature Name: Watersheds_polygon\nField Name: STAID\n</pre>"},{"location":"Geoprocessing/01-Arcpy-get-start/#arcpy-get-start","title":"Arcpy get start\u00b6","text":""},{"location":"Geoprocessing/01-Arcpy-get-start/#what-is-arcpy","title":"What is ArcPy\u00b6","text":"<ul> <li>What is arcpy</li> <li><code>ArcPy</code> was introduced with <code>ArcGIS 10.0</code></li> <li><code>ArcPy</code> is a collection of modules, classes and functions which give access to all the geoprocessing tools in <code>ArcGIS</code> from within <code>Python</code></li> <li>Most <code>geoprocessing</code> scripts will start with: import arcpy</li> <li>Note: <code>ArcPy</code> replaces the older <code>arcgisscripting</code> module</li> </ul>"},{"location":"Geoprocessing/01-Arcpy-get-start/#setting-current-workspace","title":"Setting Current Workspace\u00b6","text":"<p>After importing <code>ArcPy</code>, most scripts start with setting a workspace to retrieve and store files</p>"},{"location":"Geoprocessing/01-Arcpy-get-start/#arcpy-functions","title":"ArcPy Functions\u00b6","text":"<ul> <li>All <code>geoprocessing tools</code> are <code>ArcPy</code> <code>functions</code></li> <li>Additional <code>ArcPy</code> functions:<ol> <li>listing data</li> <li>Retrieving and setting properties</li> <li>Many more\u2026</li> </ol> </li> <li>General syntax<ul> <li><code>arcpy.&lt; functionname&gt;(&lt; arguments&gt;)</code></li> </ul> </li> <li>Documentation of ArcPy functions</li> </ul>"},{"location":"Geoprocessing/01-Arcpy-get-start/#arcpy-classes","title":"ArcPy Classes\u00b6","text":"<ul> <li>Some <code>tool parameters</code> are complicated/detailed<ul> <li>e.g. <code>coordinate system</code></li> </ul> </li> <li><code>ArcPy</code> <code>classes</code> are used to work with these parameters<ul> <li>Classes are used to create objects</li> <li>Classes have <code>properties</code> and <code>methods</code></li> </ul> </li> <li>General syntax<ul> <li><code>arcpy.&lt; classname&gt;(&lt; parameters&gt;)</code></li> </ul> </li> <li>Documentation for Arcpy classes</li> <li>Feature classes</li> <li>Raster</li> </ul>"},{"location":"Geoprocessing/01-Arcpy-get-start/#using-gp-tools","title":"Using GP Tools\u00b6","text":"<ul> <li><p><code>ArcPy</code> gives you access to all tools in <code>ArcToolbox</code> All tools are provided as functions</p> <pre>arcpy.&lt;toolname_toolboxalias&gt; (&lt; parameters&gt;)\narcpy.&lt;toolboxalias&gt;.&lt; toolname&gt;(&lt; parameters&gt;)\n</pre> </li> <li><p>Clip (Analysis)</p> <ul> <li>Documents</li> </ul> </li> </ul> <p></p>"},{"location":"Geoprocessing/01-Arcpy-get-start/#tool-parameters","title":"Tool Parameters\u00b6","text":"<ul> <li>A good understanding of <code>tool parameters</code> is essential</li> <li>Parameters have properties:<ol> <li>Name</li> <li>Type (<code>feature class</code>, <code>integer</code>, etc.)</li> <li>Direction (<code>input</code> or <code>output</code>)</li> <li><code>Required</code> or <code>optional</code></li> </ol> </li> <li>Required tool parameters are listed first</li> <li>Optional tool parameters can be left out</li> </ul> <p>But what if some need to be set? It can be accomplished in the following ways:</p> <ol> <li>By setting the optional parameters using an empty string ( <code>\"\"</code> ) or the number sign ( <code>\"#\" </code>)</li> <li>By specifying by name the parameter that needs to be set, bypassing all others</li> </ol> <ul> <li>Buffer (Analysis)<ul> <li>Documentation</li> </ul> </li> </ul> <p></p>"},{"location":"Geoprocessing/01-Arcpy-get-start/#variables-provided-by-users-in-tool-design","title":"Variables Provided by users (in tool design)\u00b6","text":"<pre>import arcpy\ninfc = arcpy.GetParameterAsText(0)\noutfc = arcpy.GetParameterAsText(1)\narcpy.Copy_management(infc, outfc)\n</pre>"},{"location":"Geoprocessing/01-Arcpy-get-start/#results-objects","title":"Results Objects\u00b6","text":"<ul> <li><code>ArcPy</code> returns the output of a tool as a <code>Result object</code></li> <li>Documentation</li> </ul>"},{"location":"Geoprocessing/01-Arcpy-get-start/#multiple-operations-using-result-objects","title":"Multiple Operations using Result Objects\u00b6","text":"<p><code>Result objects</code> can be used as the <code>input</code> into another function</p>"},{"location":"Geoprocessing/01-Arcpy-get-start/#access-tools-syntax","title":"Access Tool\u2019s Syntax\u00b6","text":"<p><code>arcpy.Usage()</code> can query the syntax of each tool</p>"},{"location":"Geoprocessing/01-Arcpy-get-start/#arcpy-examples","title":"ArcPy Examples\u00b6","text":""},{"location":"Geoprocessing/01-Arcpy-get-start/#describe-properties","title":"Describe Properties\u00b6","text":"<ul> <li>Feature Class Properties</li> <li>Raster Band Properties</li> </ul>"},{"location":"Geoprocessing/01-Arcpy-get-start/#q1","title":"Q1\u00b6","text":"<p>Write a script that creates a <code>File Geodatabase</code> in the <code>Results</code> folder, and copies those <code>Shapfiles</code> that are either <code>Point</code> or <code>Polygon</code> shapeType from the <code>database</code> folder to the newly created <code>File Geodatabase</code>.</p> <p>Note that you cannot use hard-coded filename (e.g. <code>cities.shp</code>) to specify which <code>Shapefile</code> to copy.</p>"},{"location":"Geoprocessing/01-Arcpy-get-start/#q2","title":"Q2\u00b6","text":"<p>Write a script that copies <code>polygon</code>-type <code>feature classes</code> and <code>float</code>-type <code>raster dataset</code>s from <code>testdata.gdb</code> to the <code>Results</code> folder.</p> <p><code>Feature classes</code> can be saved as <code>Shapefile</code> format while <code>raster</code> datasets can be saved as <code>TIF</code> format.</p> <p>Note that you cannot use hard-coded filename (e.g. <code>buffers_poly</code>) to specify which file to copy.</p>"},{"location":"Geoprocessing/01-Arcpy-get-start/#q3","title":"Q3\u00b6","text":"<p>After completing Task 2, you should have the <code>float-type</code> <code>raster</code> dataset(s) in the Results folder.</p> <p>Write a script to print out the <code>properties</code> for each <code>float-type</code> raster dataset, including the <code>spatial reference name</code>, <code>cell size</code>, <code>columns</code>, <code>rows</code>, <code>Min</code>, <code>Max</code>, and <code>Mean</code> values.</p> <p>Note that you cannot use hard-coded filename to specify which raster dataset to use.</p>"},{"location":"Geoprocessing/01-Arcpy-get-start/#q4","title":"Q4\u00b6","text":"<p>After completing Task 2, you should have the <code>polygon</code>-type <code>Shapefiles</code> in the <code>Results</code> folder.</p> <p>Write a script to print out the <code>String</code>-type fields with <code>length &gt; 10 </code>for each <code>Shapefile</code>.</p> <p>Note that you cannot use hard-coded filename to specify which <code>Shapefile</code> to use</p>"},{"location":"Geoprocessing/02-Data-Manipulation/","title":"02 Data Manipulation","text":"In\u00a0[2]: Copied! <pre>try:\n    import arcpy\nexcept ImportError:\n    print(\"import arcpy error\")\n    \nimport os\n</pre> try:     import arcpy except ImportError:     print(\"import arcpy error\")      import os In\u00a0[3]: Copied! <pre>os.path.exists(r\".\\database\\cities.shp\"), arcpy.Exists(r\".\\database\\cities.shp\")\n</pre> os.path.exists(r\".\\database\\cities.shp\"), arcpy.Exists(r\".\\database\\cities.shp\") Out[3]: <pre>(True, True)</pre> In\u00a0[4]: Copied! <pre>os.path.exists(r\".\\database\\testdata.gdb\\buffers_poly\"),arcpy.Exists(r\".\\database\\testdata.gdb\\buffers_poly\")\n</pre> os.path.exists(r\".\\database\\testdata.gdb\\buffers_poly\"),arcpy.Exists(r\".\\database\\testdata.gdb\\buffers_poly\") Out[4]: <pre>(False, True)</pre> In\u00a0[5]: Copied! <pre>desc = arcpy.Describe(\"./database/cities.shp\")\nprint(desc.datatype)\nprint(desc.shapeType)\n</pre> desc = arcpy.Describe(\"./database/cities.shp\") print(desc.datatype) print(desc.shapeType) <pre>ShapeFile\nPoint\n</pre> In\u00a0[6]: Copied! <pre># Set the workspace to the 'database' folder\narcpy.env.workspace = \"./database\"\n\n# Allow overwrite of output files\narcpy.env.overwriteOutput = True\n\n# Input feature class to be clipped\ninfc = \"railroads.shp\"\n\n# Clip features\nclipfc = \"new_mexico.shp\"\n\n# Output feature class after clipping\noutfc = \"Results/railroads_clip.shp\"\n\n# Describe the clip features to determine their geometry type\ndesc = arcpy.Describe(clipfc)\ntype = desc.shapeType\n\n# Check if the clip features are polygons\nif type == \"Polygon\":\n    # Perform the clip analysis\n    arcpy.Clip_analysis(infc, clipfc, outfc)\n    print(\"Clip analysis run successfully.\")\nelse:\n    print(\"The clip features are not polygons.\")\n</pre> # Set the workspace to the 'database' folder arcpy.env.workspace = \"./database\"  # Allow overwrite of output files arcpy.env.overwriteOutput = True  # Input feature class to be clipped infc = \"railroads.shp\"  # Clip features clipfc = \"new_mexico.shp\"  # Output feature class after clipping outfc = \"Results/railroads_clip.shp\"  # Describe the clip features to determine their geometry type desc = arcpy.Describe(clipfc) type = desc.shapeType  # Check if the clip features are polygons if type == \"Polygon\":     # Perform the clip analysis     arcpy.Clip_analysis(infc, clipfc, outfc)     print(\"Clip analysis run successfully.\") else:     print(\"The clip features are not polygons.\") <pre>Clip analysis run successfully.\n</pre> In\u00a0[7]: Copied! <pre>data = \"./database/cities.shp\"\ndesc = arcpy.Describe(data)\nprint(\"baseName:    {}\".format(desc.baseName))\nprint(\"catalogPath: {}\".format(desc.catalogPath))\nprint(\"file:        {}\".format(desc.file))\nprint(\"name:        {}\".format(desc.name))\nprint(\"path:        {}\".format(desc.path))\nprint(\"dataType:    {}\".format(desc.dataType))\nprint(\"extension:   {}\".format(desc.extension))\n</pre> data = \"./database/cities.shp\" desc = arcpy.Describe(data) print(\"baseName:    {}\".format(desc.baseName)) print(\"catalogPath: {}\".format(desc.catalogPath)) print(\"file:        {}\".format(desc.file)) print(\"name:        {}\".format(desc.name)) print(\"path:        {}\".format(desc.path)) print(\"dataType:    {}\".format(desc.dataType)) print(\"extension:   {}\".format(desc.extension)) <pre>baseName:    cities\ncatalogPath: ./database/cities.shp\nfile:        cities.shp\nname:        cities.shp\npath:        ./database\ndataType:    ShapeFile\nextension:   shp\n</pre> In\u00a0[8]: Copied! <pre>data = \"./database/cities.shp\"\ndesc = arcpy.Describe(data)\n\n# Print some feature class properties\nprint(\"Feature Type:  {}\".format(desc.featureType))\nprint(\"Shape Type :   {}\".format(desc.shapeType))\nprint(\"Spatial Index: {}\".format(desc.hasSpatialIndex))\n</pre> data = \"./database/cities.shp\" desc = arcpy.Describe(data)  # Print some feature class properties print(\"Feature Type:  {}\".format(desc.featureType)) print(\"Shape Type :   {}\".format(desc.shapeType)) print(\"Spatial Index: {}\".format(desc.hasSpatialIndex)) <pre>Feature Type:  Simple\nShape Type :   Point\nSpatial Index: False\n</pre> In\u00a0[9]: Copied! <pre>data = \"./database/cities.shp\"\ndesc = arcpy.Describe(data)\n\n# If the table has an OID, print the OID field name\nif desc.hasOID:\n    print(\"OIDFieldName: {}\".format(desc.OIDFieldName))\n# Print the names and types of all the fields in the table\nfor field in desc.fields:\n    print(\"{:22} : {}\".format(field.name,field.type))\n</pre> data = \"./database/cities.shp\" desc = arcpy.Describe(data)  # If the table has an OID, print the OID field name if desc.hasOID:     print(\"OIDFieldName: {}\".format(desc.OIDFieldName)) # Print the names and types of all the fields in the table for field in desc.fields:     print(\"{:22} : {}\".format(field.name,field.type)) <pre>OIDFieldName: FID\nFID                    : OID\nShape                  : Geometry\nCITIESX020             : Double\nFEATURE                : String\nNAME                   : String\nPOP_RANGE              : String\nPOP_2000               : Integer\nFIPS55                 : String\nCOUNTY                 : String\nFIPS                   : String\nSTATE                  : String\nSTATE_FIPS             : String\nDISPLAY                : SmallInteger\n</pre> In\u00a0[10]: Copied! <pre>desc = arcpy.Describe(r\"./database/new_mexico.shp\")\nprint(\"Dataset Type: {0}\".format(desc.datasetType))\nprint(f\"Extent:\\n  XMin: {desc.extent.XMin}, XMax: {desc.extent.XMax}, \\n \\\n      YMin: { desc.extent.YMin}, YMax: {desc.extent.YMax}\")\nprint(\"Spatial reference name: {0}:\".format(desc.spatialReference.name))\n</pre> desc = arcpy.Describe(r\"./database/new_mexico.shp\") print(\"Dataset Type: {0}\".format(desc.datasetType)) print(f\"Extent:\\n  XMin: {desc.extent.XMin}, XMax: {desc.extent.XMax}, \\n \\       YMin: { desc.extent.YMin}, YMax: {desc.extent.YMax}\") print(\"Spatial reference name: {0}:\".format(desc.spatialReference.name)) <pre>Dataset Type: FeatureClass\nExtent:\n  XMin: -109.05010223388672, XMax: -103.00065612792969, \n       YMin: 31.331899642944336, YMax: 36.99942398071289\nSpatial reference name: GCS_North_American_1983:\n</pre> In\u00a0[11]: Copied! <pre>desc = arcpy.Describe(\"./database/testdata.gdb/ElevationFloat\")\nprint(\"{:20} {}\".format(\"bandCount:\",desc.bandCount))\nprint(\"{:20} {}\".format(\"compressionType:\",desc.compressionType))\nprint(\"{:20} {}\".format(\"format:\",desc.format))\n</pre> desc = arcpy.Describe(\"./database/testdata.gdb/ElevationFloat\") print(\"{:20} {}\".format(\"bandCount:\",desc.bandCount)) print(\"{:20} {}\".format(\"compressionType:\",desc.compressionType)) print(\"{:20} {}\".format(\"format:\",desc.format)) <pre>bandCount:           1\ncompressionType:     NONE\nformat:              FGDBR\n</pre> In\u00a0[12]: Copied! <pre>desc = arcpy.Describe(\"./database/testdata.gdb/ElevationFloat\")\nprint(\"{:15} {}\".format(\"height: \", desc.height))\nprint(\"{:15} {}\".format(\"width:\", desc.width))\nprint(\"{:15} {}\".format(\"pixelType:\", desc.pixelType))\nprint(\"{:15} {}\".format(\"isInteger:\", desc.isInteger))\n</pre> desc = arcpy.Describe(\"./database/testdata.gdb/ElevationFloat\") print(\"{:15} {}\".format(\"height: \", desc.height)) print(\"{:15} {}\".format(\"width:\", desc.width)) print(\"{:15} {}\".format(\"pixelType:\", desc.pixelType)) print(\"{:15} {}\".format(\"isInteger:\", desc.isInteger)) <pre>height:         207\nwidth:          233\npixelType:      F32\nisInteger:      False\n</pre> In\u00a0[13]: Copied! <pre>desc = arcpy.Describe(\"./database/testdata.gdb/buffers_poly\")\nprint(\"{:15} {}\".format(\"Data type: \", desc.dataType))\nprint(\"{:15} {}\".format(\"File path: \", desc.path))\nprint(\"{:15} {}\".format(\"Catalog path: \", desc.catalogPath))\nprint(\"{:15} {}\".format(\"File name: \", desc.file))\nprint(\"{:15} {}\".format(\"Base name: \",desc.baseName))\nprint(\"{:15} {}\".format(\"Name: \", desc.name))\n</pre> desc = arcpy.Describe(\"./database/testdata.gdb/buffers_poly\") print(\"{:15} {}\".format(\"Data type: \", desc.dataType)) print(\"{:15} {}\".format(\"File path: \", desc.path)) print(\"{:15} {}\".format(\"Catalog path: \", desc.catalogPath)) print(\"{:15} {}\".format(\"File name: \", desc.file)) print(\"{:15} {}\".format(\"Base name: \",desc.baseName)) print(\"{:15} {}\".format(\"Name: \", desc.name)) <pre>Data type:      FeatureClass\nFile path:      ./database/testdata.gdb\nCatalog path:   ./database/testdata.gdb/buffers_poly\nFile name:      buffers_poly\nBase name:      buffers_poly\nName:           buffers_poly\n</pre> In\u00a0[14]: Copied! <pre>desc = arcpy.Describe(\"./database/testdata.gdb/ElevationFloat\")\nif hasattr(desc, \"name\"):\n    print(\"Name: {}\".format(desc.name))\nif hasattr(desc, \"bandCount\"):\n    print(\"Raster bands: {}\".format(str(desc.bandCount)))\nif hasattr(desc, \"shapeType\"):\n    print(\"Shape type: {}\".format(desc.shapeType))\n</pre> desc = arcpy.Describe(\"./database/testdata.gdb/ElevationFloat\") if hasattr(desc, \"name\"):     print(\"Name: {}\".format(desc.name)) if hasattr(desc, \"bandCount\"):     print(\"Raster bands: {}\".format(str(desc.bandCount))) if hasattr(desc, \"shapeType\"):     print(\"Shape type: {}\".format(desc.shapeType)) <pre>Name: ElevationFloat\nRaster bands: 1\n</pre> In\u00a0[15]: Copied! <pre>import matplotlib.pyplot as plt\nimage = arcpy.RasterToNumPyArray(\"./database/testdata.gdb/ElevationInt\")\nplt.imshow(image)\nplt.show()\n</pre> import matplotlib.pyplot as plt image = arcpy.RasterToNumPyArray(\"./database/testdata.gdb/ElevationInt\") plt.imshow(image) plt.show() In\u00a0[16]: Copied! <pre>arcpy.env.workspace = r\"./database\"\nfclist = arcpy.ListFeatureClasses()\nprint(fclist)\n</pre> arcpy.env.workspace = r\"./database\" fclist = arcpy.ListFeatureClasses() print(fclist) <pre>['airports.shp', 'alaska.shp', 'amtrak_stations.shp', 'cities.shp', 'counties.shp', 'new_mexico.shp', 'railroads.shp', 'resultbuffers_poly.shp', 'resultLittlePolys.shp', 'resultWatersheds_polygon.shp', 'roads.shp']\n</pre> In\u00a0[17]: Copied! <pre>fclist = arcpy.ListFeatureClasses(\"*es.shp\")\nprint(fclist)\n</pre> fclist = arcpy.ListFeatureClasses(\"*es.shp\") print(fclist) <pre>['cities.shp', 'counties.shp']\n</pre> In\u00a0[18]: Copied! <pre>fieldlist = arcpy.ListFields(\"cities.shp\")\nfor field in fieldlist:\n    print(\"{:15} : {}\".format(field.name,field.type))\n</pre> fieldlist = arcpy.ListFields(\"cities.shp\") for field in fieldlist:     print(\"{:15} : {}\".format(field.name,field.type)) <pre>FID             : OID\nShape           : Geometry\nCITIESX020      : Double\nFEATURE         : String\nNAME            : String\nPOP_RANGE       : String\nPOP_2000        : Integer\nFIPS55          : String\nCOUNTY          : String\nFIPS            : String\nSTATE           : String\nSTATE_FIPS      : String\nDISPLAY         : SmallInteger\n</pre> In\u00a0[19]: Copied! <pre>fieldlist = arcpy.ListFields(\"cities.shp\",\"\", \"String\")\nfor field in fieldlist:\n    print(\"{:15} {}\".format(field.name, str(field.length)))\n</pre> fieldlist = arcpy.ListFields(\"cities.shp\",\"\", \"String\") for field in fieldlist:     print(\"{:15} {}\".format(field.name, str(field.length))) <pre>FEATURE         27\nNAME            48\nPOP_RANGE       21\nFIPS55          5\nCOUNTY          55\nFIPS            5\nSTATE           2\nSTATE_FIPS      2\n</pre> <p>The following script creates a list of <code>TIFF</code> files and iterates through each file in the list to build pyramids</p> <ul> <li>Build Pyramids (Data Management)</li> </ul> <p></p> In\u00a0[20]: Copied! <pre>tifflist = arcpy.ListRasters(\"\", \"TIF\" )\nfor tiff in tifflist:\n    print(tiff)\n    arcpy.BuildPyramids_management(tiff)\n</pre> tifflist = arcpy.ListRasters(\"\", \"TIF\" ) for tiff in tifflist:     print(tiff)     arcpy.BuildPyramids_management(tiff) <pre>resultElevationFloat..tif\nresultElevationFloat.tif\nresultsElevationFloat.tif\n</pre> <ul> <li>General Syntax<ol> <li>Required parameters:<ul> <li><code>An input table</code></li> <li><code>A list (or tuple) of field names</code></li> </ul> </li> <li>General syntax:<pre>arcpy.da.InsertCursor(in_table, field_names)\narcpy.da.SearchCursor(in_table, field_names, {where_clause}, {spatial_reference}, {explore_to_points})\narcpy.da.UpdateCursor(in_table, field_names, {where_clause}, {spatial_reference}, {explore_to_points})\n</pre> </li> </ol> </li> </ul> In\u00a0[21]: Copied! <pre>fc = \"airports.shp\"\ndesc = arcpy.Describe(fc)\nfields = desc.fields\nfor field in fields:\n    print(\"{:15} {}\".format(field.name, field.type))\n</pre> fc = \"airports.shp\" desc = arcpy.Describe(fc) fields = desc.fields for field in fields:     print(\"{:15} {}\".format(field.name, field.type)) <pre>FID             OID\nShape           Geometry\nAREA            Double\nPERIMETER       Double\nAIRPRTX020      Double\nLOCID           String\nFEATURE         String\nNAME            String\nTOT_ENP         Double\nSTATE           String\nCOUNTY          String\nFIPS            String\nSTATE_FIPS      String\n</pre> In\u00a0[23]: Copied! <pre>fc = \"airports.shp\"\nfields = [\"LOCID\", \"NAME\"]\ncursor = arcpy.da.SearchCursor(fc, fields)\nfor index,row in enumerate(cursor):\n    print(\"LOCID = {}, NAME = {}\".format(row[0], row[1]))\n    if index &gt; 10:\n        break\ndel cursor, row\n</pre> fc = \"airports.shp\" fields = [\"LOCID\", \"NAME\"] cursor = arcpy.da.SearchCursor(fc, fields) for index,row in enumerate(cursor):     print(\"LOCID = {}, NAME = {}\".format(row[0], row[1]))     if index &gt; 10:         break del cursor, row <pre>LOCID = 4Z7, NAME = Hyder\nLOCID = KCL, NAME = Chignik Lagoon\nLOCID = KKA, NAME = Koyuk\nLOCID = KVL, NAME = Kivalina\nLOCID = 5KE, NAME = Ketchikan Harbor\nLOCID = MTM, NAME = Metlakatla\nLOCID = KWF, NAME = Waterfall\nLOCID = KTN, NAME = Ketchikan\nLOCID = KXA, NAME = Kasaan\nLOCID = HYL, NAME = Hollis\nLOCID = CGA, NAME = Craig\nLOCID = KTB, NAME = Thorne Bay\n</pre> <p>Select by attribute using SQL</p> In\u00a0[24]: Copied! <pre>fields = [\"LOCID\", \"NAME\", \"FEATURE\"]\ncursor = arcpy.da.SearchCursor(fc, fields, where_clause=\"\\\"FEATURE\\\" &lt;&gt; 'Airport'\")\nfor row in cursor:\n    print(\"LOCID = {:10} NAME = {:20} FEATURE = {}\".format(row[0], row[1], row[2]))\ndel cursor, row\n</pre> fields = [\"LOCID\", \"NAME\", \"FEATURE\"] cursor = arcpy.da.SearchCursor(fc, fields, where_clause=\"\\\"FEATURE\\\" &lt;&gt; 'Airport'\") for row in cursor:     print(\"LOCID = {:10} NAME = {:20} FEATURE = {}\".format(row[0], row[1], row[2])) del cursor, row <pre>LOCID = 4Z7        NAME = Hyder                FEATURE = Seaplane Base\nLOCID = 5KE        NAME = Ketchikan Harbor     FEATURE = Seaplane Base\nLOCID = MTM        NAME = Metlakatla           FEATURE = Seaplane Base\nLOCID = KWF        NAME = Waterfall            FEATURE = Seaplane Base\nLOCID = KXA        NAME = Kasaan               FEATURE = Seaplane Base\nLOCID = HYL        NAME = Hollis               FEATURE = Seaplane Base\nLOCID = CGA        NAME = Craig                FEATURE = Seaplane Base\nLOCID = KTB        NAME = Thorne Bay           FEATURE = Seaplane Base\nLOCID = KCC        NAME = Coffman Cove         FEATURE = Seaplane Base\nLOCID = 84K        NAME = Meyers Chuck         FEATURE = Seaplane Base\nLOCID = 78K        NAME = Yes Bay Lodge        FEATURE = Seaplane Base\nLOCID = KAE        NAME = Kake                 FEATURE = Seaplane Base\nLOCID = AGN        NAME = Angoon               FEATURE = Seaplane Base\nLOCID = FNR        NAME = Funter Bay           FEATURE = Seaplane Base\nLOCID = TKE        NAME = Tenakee              FEATURE = Seaplane Base\nLOCID = HWI        NAME = Hawk Inlet           FEATURE = Seaplane Base\nLOCID = PEC        NAME = Pelican              FEATURE = Seaplane Base\nLOCID = ELV        NAME = Elfin Cove           FEATURE = Seaplane Base\nLOCID = EXI        NAME = Excursion Inlet      FEATURE = Seaplane Base\nLOCID = ALZ        NAME = Alitak               FEATURE = Seaplane Base\nLOCID = WSJ        NAME = San Juan/Uganik Bay  FEATURE = Seaplane Base\nLOCID = T44        NAME = Trident Basin        FEATURE = Seaplane Base\nLOCID = KIB        NAME = Ivanof Bay           FEATURE = Seaplane Base\nLOCID = 5Z9        NAME = Lake Brooks          FEATURE = Seaplane Base\nLOCID = LHD        NAME = Lake Hood            FEATURE = Seaplane Base\nLOCID = KQA        NAME = Akutan               FEATURE = Seaplane Base\nLOCID = KKI        NAME = Akiachak             FEATURE = Seaplane Base\nLOCID = WWT        NAME = Newtok               FEATURE = Seaplane Base\n</pre> <p><code>With</code> statement:</p> <ol> <li>Guarantee closure and release of database lock</li> <li>Reset iteration</li> </ol> In\u00a0[25]: Copied! <pre>fields = [\"LOCID\", \"NAME\"]\nwith arcpy.da.SearchCursor(fc, fields) as cursor:\n    for index, row in enumerate(cursor):\n        print(\"LOCID = {}, NAME = {}\".format(row[0], row[1]))\n        if index == 10:\n            break\n</pre> fields = [\"LOCID\", \"NAME\"] with arcpy.da.SearchCursor(fc, fields) as cursor:     for index, row in enumerate(cursor):         print(\"LOCID = {}, NAME = {}\".format(row[0], row[1]))         if index == 10:             break <pre>LOCID = 4Z7, NAME = Hyder\nLOCID = KCL, NAME = Chignik Lagoon\nLOCID = KKA, NAME = Koyuk\nLOCID = KVL, NAME = Kivalina\nLOCID = 5KE, NAME = Ketchikan Harbor\nLOCID = MTM, NAME = Metlakatla\nLOCID = KWF, NAME = Waterfall\nLOCID = KTN, NAME = Ketchikan\nLOCID = KXA, NAME = Kasaan\nLOCID = HYL, NAME = Hollis\nLOCID = CGA, NAME = Craig\n</pre> In\u00a0[26]: Copied! <pre>fc = \"airports.shp\"\nfields = [\"NAME\",\"SHAPE@X\",\"SHAPE@Y\"]\ncursor =  arcpy.da.SearchCursor(fc, fields)\nfor index, row in enumerate(cursor):\n    print(\"NAME = {:20} X = {:.4f}    Y = {:.4f}\".format(row[0],row[1],row[2]))\n    if index == 10: \n        break\ndel cursor, row\n</pre> fc = \"airports.shp\" fields = [\"NAME\",\"SHAPE@X\",\"SHAPE@Y\"] cursor =  arcpy.da.SearchCursor(fc, fields) for index, row in enumerate(cursor):     print(\"NAME = {:20} X = {:.4f}    Y = {:.4f}\".format(row[0],row[1],row[2]))     if index == 10:          break del cursor, row <pre>NAME = Hyder                X = -130.0125    Y = 55.9043\nNAME = Chignik Lagoon       X = -158.5326    Y = 56.3079\nNAME = Koyuk                X = -161.1511    Y = 64.9381\nNAME = Kivalina             X = -164.5256    Y = 67.7452\nNAME = Ketchikan Harbor     X = -131.6851    Y = 55.3478\nNAME = Metlakatla           X = -131.5781    Y = 55.1310\nNAME = Waterfall            X = -133.2433    Y = 55.2963\nNAME = Ketchikan            X = -131.7137    Y = 55.3556\nNAME = Kasaan               X = -132.3975    Y = 55.5374\nNAME = Hollis               X = -132.6461    Y = 55.4816\nNAME = Craig                X = -133.1478    Y = 55.4788\n</pre> In\u00a0[27]: Copied! <pre>fc = \"airports.shp\"\nfields = [\"NAME\",\"SHAPE@X\",\"SHAPE@Y\"]\ncursor =  arcpy.da.InsertCursor(fc, fields)\ncursor.insertRow([\"Binghamton\",-155,60])\ndel cursor\n</pre> fc = \"airports.shp\" fields = [\"NAME\",\"SHAPE@X\",\"SHAPE@Y\"] cursor =  arcpy.da.InsertCursor(fc, fields) cursor.insertRow([\"Binghamton\",-155,60]) del cursor In\u00a0[28]: Copied! <pre>fc = \"airports.shp\"\nfields = [\"NAME\",\"SHAPE@XY\"]\ncursor =  arcpy.da.InsertCursor(fc,fields)\ncursor.insertRow([\"Corning\",(-154,55)])\ndel cursor\n</pre> fc = \"airports.shp\" fields = [\"NAME\",\"SHAPE@XY\"] cursor =  arcpy.da.InsertCursor(fc,fields) cursor.insertRow([\"Corning\",(-154,55)]) del cursor In\u00a0[29]: Copied! <pre>fc = \"airports.shp\"\nfields = [\"NAME\"]\ncursor =  arcpy.da.UpdateCursor(fc, fields)\nfor row in cursor:\n    if row[0] == \"Binghamton\":\n        row[0] = \"Albany\"\n        cursor.updateRow(row)\ndel cursor, row\n</pre> fc = \"airports.shp\" fields = [\"NAME\"] cursor =  arcpy.da.UpdateCursor(fc, fields) for row in cursor:     if row[0] == \"Binghamton\":         row[0] = \"Albany\"         cursor.updateRow(row) del cursor, row In\u00a0[30]: Copied! <pre>fc = \"airports.shp\"\nfields = [\"NAME\"]\ncursor =  arcpy.da.UpdateCursor(fc, fields)\nfor row in cursor:\n    if row[0] == \"Albany\" or row[0] == \"Corning\":\n        cursor.deleteRow()\ndel cursor, row\n</pre> fc = \"airports.shp\" fields = [\"NAME\"] cursor =  arcpy.da.UpdateCursor(fc, fields) for row in cursor:     if row[0] == \"Albany\" or row[0] == \"Corning\":         cursor.deleteRow() del cursor, row In\u00a0[31]: Copied! <pre>fc = \"airports.shp\"\nfields = [\"NAME\"]\ncursor =  arcpy.da.UpdateCursor(fc, fields)\nfor row in cursor:\n    if row[0] == \"Albany\":\n        cursor.deleteRow()\ndel row\ndel cursor\n</pre> fc = \"airports.shp\" fields = [\"NAME\"] cursor =  arcpy.da.UpdateCursor(fc, fields) for row in cursor:     if row[0] == \"Albany\":         cursor.deleteRow() del row del cursor In\u00a0[32]: Copied! <pre>fc = \"airports.shp\"\nfieldname = \"NAME\"\ndelimfield = arcpy.AddFieldDelimiters(fc,fieldname)\nwhere_clause = delimfield + \"='Goodnews'\"\nprint(where_clause)\ncursor =  arcpy.da.SearchCursor(fc,[\"NAME\",\"LOCID\"],where_clause)\nfor row in cursor:\n    print(\"LOCID = {}\".format(row[1]))\ndel cursor, row\n</pre> fc = \"airports.shp\" fieldname = \"NAME\" delimfield = arcpy.AddFieldDelimiters(fc,fieldname) where_clause = delimfield + \"='Goodnews'\" print(where_clause) cursor =  arcpy.da.SearchCursor(fc,[\"NAME\",\"LOCID\"],where_clause) for row in cursor:     print(\"LOCID = {}\".format(row[1])) del cursor, row <pre>\"NAME\"='Goodnews'\nLOCID = GNU\n</pre> In\u00a0[33]: Copied! <pre>workspace = \"./database/testdata.gdb\"\ntable = arcpy.ValidateTableName(\"all roads\",workspace)\nprint(table)\n</pre> workspace = \"./database/testdata.gdb\" table = arcpy.ValidateTableName(\"all roads\",workspace) print(table) <pre>all_roads\n</pre> In\u00a0[34]: Copied! <pre>workspace = \"./database/testdata.gdb\"\nfclist = arcpy.ListFeatureClasses()\nfor fc in fclist:\n    print(fc)\n    fcname = arcpy.Describe(fc).basename\n    newfcname = arcpy.ValidateTableName(fcname)\n    outfc = os.path.join(workspace,newfcname)\n    print(outfc)\n    arcpy.CopyFeatures_management(fc,outfc)\n</pre> workspace = \"./database/testdata.gdb\" fclist = arcpy.ListFeatureClasses() for fc in fclist:     print(fc)     fcname = arcpy.Describe(fc).basename     newfcname = arcpy.ValidateTableName(fcname)     outfc = os.path.join(workspace,newfcname)     print(outfc)     arcpy.CopyFeatures_management(fc,outfc) <pre>airports.shp\n./database/testdata.gdb\\airports\nalaska.shp\n./database/testdata.gdb\\alaska\namtrak_stations.shp\n./database/testdata.gdb\\amtrak_stations\ncities.shp\n./database/testdata.gdb\\cities\ncounties.shp\n./database/testdata.gdb\\counties\nnew_mexico.shp\n./database/testdata.gdb\\new_mexico\nrailroads.shp\n./database/testdata.gdb\\railroads\nresultbuffers_poly.shp\n./database/testdata.gdb\\resultbuffers_poly\nresultLittlePolys.shp\n./database/testdata.gdb\\resultLittlePolys\nresultWatersheds_polygon.shp\n./database/testdata.gdb\\resultWatersheds_polygon\nroads.shp\n./database/testdata.gdb\\roads\n</pre> In\u00a0[35]: Copied! <pre>fc = \"./database/airports.shp\"\nfieldname = arcpy.ValidateFieldName(\"NEW%&amp;\",fc)\narcpy.AddField_management(fc,fieldname,\"TEXT\",\"\",\"\",10)\n</pre> fc = \"./database/airports.shp\" fieldname = arcpy.ValidateFieldName(\"NEW%&amp;\",fc) arcpy.AddField_management(fc,fieldname,\"TEXT\",\"\",\"\",10) Out[35]: Messages In\u00a0[36]: Copied! <pre>fields = arcpy.ListFields(fc)\nfor field in fields:\n    print(field.name)\n</pre> fields = arcpy.ListFields(fc) for field in fields:     print(field.name) <pre>FID\nShape\nAREA\nPERIMETER\nAIRPRTX020\nLOCID\nFEATURE\nNAME\nTOT_ENP\nSTATE\nCOUNTY\nFIPS\nSTATE_FIPS\nNEW__\n</pre> In\u00a0[37]: Copied! <pre>fc = \"./database/airports.shp\"\nunique_name = arcpy.CreateUniqueName(\"buffer.shp\")\narcpy.Buffer_analysis(fc,unique_name,\"1000 FEET\")\n</pre> fc = \"./database/airports.shp\" unique_name = arcpy.CreateUniqueName(\"buffer.shp\") arcpy.Buffer_analysis(fc,unique_name,\"1000 FEET\") Out[37]: Messages In\u00a0[38]: Copied! <pre>unique_name = arcpy.CreateUniqueName(\"buffer.shp\")\narcpy.Buffer_analysis(fc,unique_name,\"1000 FEET\")\n</pre> unique_name = arcpy.CreateUniqueName(\"buffer.shp\") arcpy.Buffer_analysis(fc,unique_name,\"1000 FEET\") Out[38]: Messages In\u00a0[39]: Copied! <pre>arcpy.ListFeatureClasses()\n</pre> arcpy.ListFeatureClasses() Out[39]: <pre>['airports.shp',\n 'alaska.shp',\n 'amtrak_stations.shp',\n 'buffer.shp',\n 'buffer0.shp',\n 'cities.shp',\n 'counties.shp',\n 'new_mexico.shp',\n 'railroads.shp',\n 'resultbuffers_poly.shp',\n 'resultLittlePolys.shp',\n 'resultWatersheds_polygon.shp',\n 'roads.shp']</pre> In\u00a0[40]: Copied! <pre>fc = \"./database/airports.shp\"\nfullname = arcpy.ParseTableName(fc)\nnamelist = fullname.split(\", \")\ndatabasename = namelist[0]\nownername = namelist[1]\nfcname = namelist[2]\nprint(databasename)\nprint(ownername)\nprint(fcname)\n</pre> fc = \"./database/airports.shp\" fullname = arcpy.ParseTableName(fc) namelist = fullname.split(\", \") databasename = namelist[0] ownername = namelist[1] fcname = namelist[2] print(databasename) print(ownername) print(fcname) <pre>(null)\n(null)\n./database/airports.shp\n</pre> In\u00a0[42]: Copied! <pre>fc = \"./database/airports.shp\"\nfd_lst = [\"COUNTY\",\"NAME\",\"LOCID\"]\ncursor = arcpy.da.SearchCursor(fc,fd_lst)\nfor row in cursor:\n    if row[0] == 'Nome Census Area':\n        print(\"COUNTY = %s      NAME = %-20s LOCID = %-20s\" %(row[0],row[1],row[2]))\ndel cursor,row\n</pre> fc = \"./database/airports.shp\" fd_lst = [\"COUNTY\",\"NAME\",\"LOCID\"] cursor = arcpy.da.SearchCursor(fc,fd_lst) for row in cursor:     if row[0] == 'Nome Census Area':         print(\"COUNTY = %s      NAME = %-20s LOCID = %-20s\" %(row[0],row[1],row[2])) del cursor,row <pre>COUNTY = Nome Census Area      NAME = Koyuk                LOCID = KKA                 \nCOUNTY = Nome Census Area      NAME = Saint Michael        LOCID = 5S8                 \nCOUNTY = Nome Census Area      NAME = Stebbins             LOCID = WBB                 \nCOUNTY = Nome Census Area      NAME = Unalakleet           LOCID = UNK                 \nCOUNTY = Nome Census Area      NAME = Shaktoolik           LOCID = 38A                 \nCOUNTY = Nome Census Area      NAME = Elim                 LOCID = ELI                 \nCOUNTY = Nome Census Area      NAME = Golovin              LOCID = GLV                 \nCOUNTY = Nome Census Area      NAME = White Mountain       LOCID = WMO                 \nCOUNTY = Nome Census Area      NAME = Nome                 LOCID = OME                 \nCOUNTY = Nome Census Area      NAME = Savoonga             LOCID = SVA                 \nCOUNTY = Nome Census Area      NAME = Teller               LOCID = K54                 \nCOUNTY = Nome Census Area      NAME = Brevig Mission       LOCID = KTS                 \nCOUNTY = Nome Census Area      NAME = Shishmaref           LOCID = SHH                 \nCOUNTY = Nome Census Area      NAME = Wales                LOCID = IWK                 \nCOUNTY = Nome Census Area      NAME = Gambell              LOCID = GAM                 \n</pre> <ol> <li>Based on the selected airports in Question 1.1, update the <code>STATE</code> field to <code>AK</code> if their <code>STATE</code> field is <code>empty</code>.</li> </ol> In\u00a0[47]: Copied! <pre>fd_lst = [\"COUNTY\",\"NAME\",\"LOCID\",\"STATE\"]\ncursor = arcpy.da.UpdateCursor(fc,fd_lst)\nfor row in cursor:\n    if row[0] == 'Nome Census Area':\n        if row[3] in [\" \",\"\",None]:\n            row[3] = 'AK'\n            cursor.updateRow(row)\n        print(\"COUNTY = %s      NAME = %-20s LOCID = %-8s  STATE =% s\" %(row[0],row[1],row[2],row[3]))\ndel cursor, row\n</pre> fd_lst = [\"COUNTY\",\"NAME\",\"LOCID\",\"STATE\"] cursor = arcpy.da.UpdateCursor(fc,fd_lst) for row in cursor:     if row[0] == 'Nome Census Area':         if row[3] in [\" \",\"\",None]:             row[3] = 'AK'             cursor.updateRow(row)         print(\"COUNTY = %s      NAME = %-20s LOCID = %-8s  STATE =% s\" %(row[0],row[1],row[2],row[3])) del cursor, row <pre>COUNTY = Nome Census Area      NAME = Koyuk                LOCID = KKA       STATE =AK\nCOUNTY = Nome Census Area      NAME = Saint Michael        LOCID = 5S8       STATE =AK\nCOUNTY = Nome Census Area      NAME = Stebbins             LOCID = WBB       STATE =AK\nCOUNTY = Nome Census Area      NAME = Unalakleet           LOCID = UNK       STATE =AK\nCOUNTY = Nome Census Area      NAME = Shaktoolik           LOCID = 38A       STATE =AK\nCOUNTY = Nome Census Area      NAME = Elim                 LOCID = ELI       STATE =AK\nCOUNTY = Nome Census Area      NAME = Golovin              LOCID = GLV       STATE =AK\nCOUNTY = Nome Census Area      NAME = White Mountain       LOCID = WMO       STATE =AK\nCOUNTY = Nome Census Area      NAME = Nome                 LOCID = OME       STATE =AK\nCOUNTY = Nome Census Area      NAME = Savoonga             LOCID = SVA       STATE =AK\nCOUNTY = Nome Census Area      NAME = Teller               LOCID = K54       STATE =AK\nCOUNTY = Nome Census Area      NAME = Brevig Mission       LOCID = KTS       STATE =AK\nCOUNTY = Nome Census Area      NAME = Shishmaref           LOCID = SHH       STATE =AK\nCOUNTY = Nome Census Area      NAME = Wales                LOCID = IWK       STATE =AK\nCOUNTY = Nome Census Area      NAME = Gambell              LOCID = GAM       STATE =AK\n</pre> <ol> <li>Export the information about those airports in <code>Nome Census Area</code> County to a <code>text</code> file, including these fields: <code>NAME</code>, <code>LOCID</code>, <code>Longitude</code>, and <code>Latitude</code>.</li> </ol> In\u00a0[48]: Copied! <pre># Open the text file for writing\nwith open('./database/airports_NCA.txt', 'w') as f:\n    # Print header for content written to the text file\n    print('Content written to the text file:')\n    \n    # Define the list of fields to be retrieved from the feature class\n    field_list = [\"COUNTY\", \"NAME\", \"LOCID\", \"SHAPE@X\", \"SHAPE@Y\"]\n    \n    # Create a search cursor to iterate through the feature class records\n    with arcpy.da.SearchCursor(fc, field_list) as cursor:\n        # Iterate through each row in the feature class\n        for row in cursor:\n            # Check if the COUNTY field value is 'Nome Census Area'\n            if row[0] == 'Nome Census Area':\n                # Format the row data\n                row_new = \"NAME = {:&lt;20} LOCID = {:&lt;10} X = {:&lt;20} Y = {:&lt;20}\".format(row[1], row[2], row[3], row[4])\n                \n                # Print the formatted row data\n                print(row_new)\n                \n                # Write the formatted row data to the text file\n                f.write(row_new + '\\n')\n\n# Cleanup: Close the cursor and delete the cursor and row objects\ndel cursor, row\n</pre> # Open the text file for writing with open('./database/airports_NCA.txt', 'w') as f:     # Print header for content written to the text file     print('Content written to the text file:')          # Define the list of fields to be retrieved from the feature class     field_list = [\"COUNTY\", \"NAME\", \"LOCID\", \"SHAPE@X\", \"SHAPE@Y\"]          # Create a search cursor to iterate through the feature class records     with arcpy.da.SearchCursor(fc, field_list) as cursor:         # Iterate through each row in the feature class         for row in cursor:             # Check if the COUNTY field value is 'Nome Census Area'             if row[0] == 'Nome Census Area':                 # Format the row data                 row_new = \"NAME = {:&lt;20} LOCID = {:&lt;10} X = {:&lt;20} Y = {:&lt;20}\".format(row[1], row[2], row[3], row[4])                                  # Print the formatted row data                 print(row_new)                                  # Write the formatted row data to the text file                 f.write(row_new + '\\n')  # Cleanup: Close the cursor and delete the cursor and row objects del cursor, row <pre>Content written to the text file:\nNAME = Koyuk                LOCID = KKA        X = -161.1510772705078   Y = 64.93807220458984   \nNAME = Saint Michael        LOCID = 5S8        X = -162.11036682128906  Y = 63.49005126953125   \nNAME = Stebbins             LOCID = WBB        X = -162.28274536132812  Y = 63.51591873168945   \nNAME = Unalakleet           LOCID = UNK        X = -160.7989501953125   Y = 63.88835906982422   \nNAME = Shaktoolik           LOCID = 38A        X = -161.20252990722656  Y = 64.36263275146484   \nNAME = Elim                 LOCID = ELI        X = -162.2700653076172   Y = 64.61400604248047   \nNAME = Golovin              LOCID = GLV        X = -163.03952026367188  Y = 64.5434341430664    \nNAME = White Mountain       LOCID = WMO        X = -163.4125518798828   Y = 64.68919372558594   \nNAME = Nome                 LOCID = OME        X = -165.44525146484375  Y = 64.51219940185547   \nNAME = Savoonga             LOCID = SVA        X = -170.4926300048828   Y = 63.68639373779297   \nNAME = Teller               LOCID = K54        X = -166.3360137939453   Y = 65.24089813232422   \nNAME = Brevig Mission       LOCID = KTS        X = -166.46316528320312  Y = 65.33135986328125   \nNAME = Shishmaref           LOCID = SHH        X = -166.0895538330078   Y = 66.24956512451172   \nNAME = Wales                LOCID = IWK        X = -168.0991668701172   Y = 65.62393951416016   \nNAME = Gambell              LOCID = GAM        X = -171.73281860351562  Y = 63.76676559448242   \n</pre> In\u00a0[50]: Copied! <pre># Set overwrite output to True to overwrite existing outputs\narcpy.env.overwriteOutput = True\n\n# Define the output path for the feature class\nout_path = arcpy.env.workspace + '/results'\n\n# Define the fields to be added to the feature class\nfields = [\"NAME\", \"LOCID\", \"SHAPE@X\", \"SHAPE@Y\"]\n\ntry:\n    # Create a new feature class\n    arcpy.CreateFeatureclass_management(out_path, 'airports.shp', geometry_type=\"POINT\")\n    print('Creating output feature class: ' + out_path + '/airports.shp')\n    print('Adding fields to the feature class ...')\n    \n    # Add fields to the feature class\n    for field in fields:\n        arcpy.AddField_management(out_path + '/airports.shp', field, \"String\")\n    \n    # List fields in the feature class and print their names\n    fields_fc = arcpy.ListFields(out_path + '/airports.shp')\n    for field in fields_fc:\n        print(field.name)\n    \n    print('Successful add fields.')\n    \n    # Create an insert cursor to insert rows into the feature class\n    cursor = arcpy.da.InsertCursor(out_path + '/airports.shp', fields)\n    \n    # Read data from the airports.txt file and insert rows into the feature class\n    with open('./database/airports.txt') as f:\n        line = f.readline()\n        while line:\n            # Split each line into a list of values\n            row1 = list(line.split(','))\n            # Insert a new row into the feature class with values from the list\n            cursor.insertRow([row1[1].split(':')[1], row1[2].split(':')[1], row1[3].split(':')[1], row1[4].split(':')[1]])\n            line = f.readline()\n    \n    print('Successful add field')\n    \nexcept Exception as e:\n    # Print error message if an exception occurs\n    print('Something went wrong: {}'.format(str(e)))\n\nfinally:\n    # Clean up: close the cursor\n    del cursor\n</pre> # Set overwrite output to True to overwrite existing outputs arcpy.env.overwriteOutput = True  # Define the output path for the feature class out_path = arcpy.env.workspace + '/results'  # Define the fields to be added to the feature class fields = [\"NAME\", \"LOCID\", \"SHAPE@X\", \"SHAPE@Y\"]  try:     # Create a new feature class     arcpy.CreateFeatureclass_management(out_path, 'airports.shp', geometry_type=\"POINT\")     print('Creating output feature class: ' + out_path + '/airports.shp')     print('Adding fields to the feature class ...')          # Add fields to the feature class     for field in fields:         arcpy.AddField_management(out_path + '/airports.shp', field, \"String\")          # List fields in the feature class and print their names     fields_fc = arcpy.ListFields(out_path + '/airports.shp')     for field in fields_fc:         print(field.name)          print('Successful add fields.')          # Create an insert cursor to insert rows into the feature class     cursor = arcpy.da.InsertCursor(out_path + '/airports.shp', fields)          # Read data from the airports.txt file and insert rows into the feature class     with open('./database/airports.txt') as f:         line = f.readline()         while line:             # Split each line into a list of values             row1 = list(line.split(','))             # Insert a new row into the feature class with values from the list             cursor.insertRow([row1[1].split(':')[1], row1[2].split(':')[1], row1[3].split(':')[1], row1[4].split(':')[1]])             line = f.readline()          print('Successful add field')      except Exception as e:     # Print error message if an exception occurs     print('Something went wrong: {}'.format(str(e)))  finally:     # Clean up: close the cursor     del cursor <pre>Creating output feature class: ./database/results/airports.shp\nAdding fields to the feature class ...\nFID\nShape\nId\nNAME\nLOCID\nSHAPE_X\nSHAPE_Y\nSuccessful add fields.\nSuccessful add field\n</pre> In\u00a0[52]: Copied! <pre>cursor = arcpy.da.SearchCursor(out_path + '/airports.shp',fields)\nfor index,row in enumerate(cursor):\n    row_new = \"NAME = %-20s  LOCID = %-10s X = %-20s  Y = % s\" %(row[0],row[1],row[2],row[3])\n    print(row_new)\n    if index == 10:\n        break\n</pre> cursor = arcpy.da.SearchCursor(out_path + '/airports.shp',fields) for index,row in enumerate(cursor):     row_new = \"NAME = %-20s  LOCID = %-10s X = %-20s  Y = % s\" %(row[0],row[1],row[2],row[3])     print(row_new)     if index == 10:         break <pre>NAME =  Hyder                LOCID =  4Z7       X = -130.012527           Y = 55.904339\nNAME =  Chignik Lagoon       LOCID =  KCL       X = -158.532562           Y = 56.307869\nNAME =  Koyuk                LOCID =  KKA       X = -161.151077           Y = 64.938072\nNAME =  Kivalina             LOCID =  KVL       X = -164.525589           Y = 67.745209\nNAME =  Ketchikan Harbor     LOCID =  5KE       X = -131.685104           Y = 55.347809\nNAME =  Metlakatla           LOCID =  MTM       X = -131.578064           Y = 55.131046\nNAME =  Waterfall            LOCID =  KWF       X = -133.243332           Y = 55.296322\nNAME =  Ketchikan            LOCID =  KTN       X = -131.713745           Y = 55.355568\nNAME =  Kasaan               LOCID =  KXA       X = -132.397522           Y = 55.537415\nNAME =  Hollis               LOCID =  HYL       X = -132.646088           Y = 55.481586\nNAME =  Craig                LOCID =  CGA       X = -133.147797           Y = 55.478832\n</pre> In\u00a0[71]: Copied! <pre># Define the path to the feature class\nfc = './database/Hawaii.shp'\n\n# Define the spatial reference (WGS84)\nspatialRef = arcpy.Describe(fc).spatialReference\n\n# Create a search cursor to iterate over the features in the feature class\nwith arcpy.da.SearchCursor(fc, [\"SHAPE@\"]) as cursor:\n    # Iterate over each feature in the feature class\n    for row in cursor:\n        # Get the polygon token from the current row\n        polygon_token = row[0]\n        \n        print(polygon_token.type)\n        # Print the number of parts in the polygon\n        print('partCount = ' + str(polygon_token.partCount))\n        \n        # Iterate over each part of the polygon\n        for index, part in enumerate(polygon_token):\n            # Create a Polygon object from the part\n            polygon = arcpy.Polygon(part, spatialRef)\n            \n            # Create a Polyline object from the part\n            line = arcpy.Polyline(part, spatialRef)\n            \n            # Print the information about the part\n            print('Part %-2s :  Length = %10.2f    Area = %15.2f' % (index, line.length, polygon.area))\n</pre> # Define the path to the feature class fc = './database/Hawaii.shp'  # Define the spatial reference (WGS84) spatialRef = arcpy.Describe(fc).spatialReference  # Create a search cursor to iterate over the features in the feature class with arcpy.da.SearchCursor(fc, [\"SHAPE@\"]) as cursor:     # Iterate over each feature in the feature class     for row in cursor:         # Get the polygon token from the current row         polygon_token = row[0]                  print(polygon_token.type)         # Print the number of parts in the polygon         print('partCount = ' + str(polygon_token.partCount))                  # Iterate over each part of the polygon         for index, part in enumerate(polygon_token):             # Create a Polygon object from the part             polygon = arcpy.Polygon(part, spatialRef)                          # Create a Polyline object from the part             line = arcpy.Polyline(part, spatialRef)                          # Print the information about the part             print('Part %-2s :  Length = %10.2f    Area = %15.2f' % (index, line.length, polygon.area)) <pre>polygon\npartCount = 11\nPart 0  :  Length =  498725.06    Area =  10486352988.49\nPart 1  :  Length =   56881.00    Area =    119076863.76\nPart 2  :  Length =   79591.07    Area =    364740852.50\nPart 3  :  Length =  237012.26    Area =   1907482650.23\nPart 4  :  Length =  161088.60    Area =    685386630.23\nPart 5  :  Length =    4352.76    Area =      1031618.81\nPart 6  :  Length =    4695.33    Area =      1256964.65\nPart 7  :  Length =  272519.59    Area =   1577775022.82\nPart 8  :  Length =   78651.62    Area =    196286564.36\nPart 9  :  Length =    4013.22    Area =       856335.76\nPart 10 :  Length =  172463.40    Area =   1449442867.86\n</pre> In\u00a0[88]: Copied! <pre># Define the path to the feature class\nfc = './database/Hawaii.shp'\n\n# Define the output path for the minimum bounding rectangle feature class\noutput = arcpy.env.workspace + './database/results/Q3_envelope.shp'\n\nspatialRef = arcpy.Describe(fc).spatialReference\n\n# Create a minimum bounding rectangle for the input feature class\n# by using the hullRectangle property of a Geometry object\nwith arcpy.da.SearchCursor(fc, [\"SHAPE@\"]) as cursor:\n    for row in cursor:\n        print(row[0].partCount)\n        for index, polygon_part in enumerate(row[0]):\n            print(index)\n            # Create a Polygon object from the part\n            polygon = arcpy.Polygon(polygon_part, spatialRef)\n            print(polygon.hullRectangle)\n</pre> # Define the path to the feature class fc = './database/Hawaii.shp'  # Define the output path for the minimum bounding rectangle feature class output = arcpy.env.workspace + './database/results/Q3_envelope.shp'  spatialRef = arcpy.Describe(fc).spatialReference  # Create a minimum bounding rectangle for the input feature class # by using the hullRectangle property of a Geometry object with arcpy.da.SearchCursor(fc, [\"SHAPE@\"]) as cursor:     for row in cursor:         print(row[0].partCount)         for index, polygon_part in enumerate(row[0]):             print(index)             # Create a Polygon object from the part             polygon = arcpy.Polygon(polygon_part, spatialRef)             print(polygon.hullRectangle)  <pre>11\n0\n943452.045900083 2160752.06931347 848866.961181604 2083569.33663454 761452.559297907 2190693.0198836 856037.644016057 2267875.75256261\n1\n741987.411147994 2266446.54838429 739403.087068047 2276911.38299657 756327.786963191 2281090.99128523 758912.111043138 2270626.15667294\n2\n700329.879914286 2311913.08339925 716664.021966844 2322755.68775116 731206.155671257 2300848.28709669 714872.013618692 2290005.68274478\n3\n818656.946992389 2308498.04573065 806668.560448796 2267121.79026442 732099.1055373 2288727.59871061 744087.492080953 2330103.85417688\n4\n675773.867014209 2333905.67154126 677887.859782256 2351901.97126307 739033.109838283 2344719.34936758 736919.117070233 2326723.0496458\n5\n617716.988055287 2357152.4317731 617128.289145738 2356185.76019109 615769.262568636 2357013.40163508 616357.961478184 2357980.07321708\n6\n608378.257655837 2362447.44331445 607760.712556828 2363140.4548852 609083.222390602 2364318.94814665 609700.767489611 2363625.9365759\n7\n645377.403116668 2359929.29082676 614463.177412539 2332296.33750261 570220.621873131 2381792.47103644 601134.847577435 2409425.42436073\n8\n376742.13716384 2407757.7896038 368983.365403085 2415356.52917842 389160.670617473 2435958.77569156 396919.442378226 2428360.03611694\n9\n388742.139477797 2435166.13609357 387846.410280105 2435621.445222 388463.281453057 2436835.01526998 389359.010650749 2436379.70614156\n10\n470904.860551502 2458728.8413822 470672.091754279 2418066.13592652 418741.322277108 2418363.40740943 418974.091074334 2459026.1128651\n</pre>"},{"location":"Geoprocessing/02-Data-Manipulation/#data-manipulation","title":"Data Manipulation\u00b6","text":""},{"location":"Geoprocessing/02-Data-Manipulation/#exploring-spatial-data","title":"Exploring Spatial Data\u00b6","text":""},{"location":"Geoprocessing/02-Data-Manipulation/#checking-for-the-existence-of-data","title":"Checking for the Existence of Data\u00b6","text":"<p>Two types of paths</p> <ul> <li><code>System Paths</code><ul> <li>System paths are the paths commonly used in Python and other programming languages to reference files and directories on your computer's file system.</li> <li>Absolute path: <code>C:\\Projects\\Data\\my_file.shp</code></li> <li>Relative path: <code>..\\Data\\my_file.shp</code></li> </ul> </li> </ul> <ul> <li><code>Catalog Paths</code><ul> <li>Catalog paths are specific to ArcGIS and are used to reference datasets, layers, and other geographic resources within a GIS workspace.</li> <li>File geodatabase feature class: <code>C:\\Projects\\MyProject\\my_geodatabase.gdb\\my_feature_class</code></li> <li>Shapefile: <code>C:\\Projects\\MyProject\\Data\\my_shapefile.shp</code></li> </ul> </li> </ul>"},{"location":"Geoprocessing/02-Data-Manipulation/#describing-data","title":"Describing Data\u00b6","text":"<ul> <li>The <code>Describe</code> function is used to determine properties of dataset</li> <li>General syntax<pre>import arcpy\n&lt; variable&gt; = arcpy.Describe(&lt; input dataset&gt;)\n</pre> </li> <li>Online help<ul> <li>http://desktop.arcgis.com/en/arcmap/latest/analyze/arcpy-functions/describe.htm</li> </ul> </li> </ul>"},{"location":"Geoprocessing/02-Data-Manipulation/#the-describe-function","title":"The Describe function\u00b6","text":"<ul> <li><p><code>Describe</code> function will always return a <code>Describe object</code></p> </li> <li><p>The <code>Describe</code> function returns a set of generic properties for all Describe objects.</p> <p></p> </li> <li><p>Generic Describe Object Properties</p> </li> </ul> <p></p>"},{"location":"Geoprocessing/02-Data-Manipulation/#feature-class-describe-properties","title":"Feature class Describe properties\u00b6","text":"<ul> <li><p>Reading Materials</p> <p></p> </li> </ul>"},{"location":"Geoprocessing/02-Data-Manipulation/#feature-class-properties","title":"Feature Class properties\u00b6","text":""},{"location":"Geoprocessing/02-Data-Manipulation/#table-properties","title":"Table properties\u00b6","text":""},{"location":"Geoprocessing/02-Data-Manipulation/#dataset-properties","title":"Dataset Properties\u00b6","text":""},{"location":"Geoprocessing/02-Data-Manipulation/#raster-describe-properties","title":"Raster Describe properties\u00b6","text":""},{"location":"Geoprocessing/02-Data-Manipulation/#raster-dataset-properties","title":"Raster Dataset properties\u00b6","text":""},{"location":"Geoprocessing/02-Data-Manipulation/#raster-band-properties","title":"Raster Band properties\u00b6","text":""},{"location":"Geoprocessing/02-Data-Manipulation/#describing-a-feature-class-and-raster","title":"Describing a feature class and raster\u00b6","text":"<p>You can use the <code>Describe</code> object <code>dataType</code> property to determine what is being described. Some of the values returned by the dataType property include:</p> <ul> <li>FeatureLayer</li> <li>FeatureClass</li> <li>File</li> <li>Folder</li> <li>LasDataset</li> <li>Layer</li> <li>MosaicDataset</li> <li>NetworkDataset</li> <li>RasterBand</li> <li>RasterDataset</li> <li>ShapeFile</li> <li>Table</li> <li>TextFile</li> <li>Toolbox The complete list of dataType can be found at: http://desktop.arcgis.com/en/arcmap/latest/analyze/arcpy-functions/arcinfo-item-properties.htm</li> </ul> <p>The <code>hasattr()</code> function returns a Boolean value. An example of using the function with the Describe object is shown below.</p>"},{"location":"Geoprocessing/02-Data-Manipulation/#list-data","title":"List Data\u00b6","text":"<ul> <li><p>Listing data is very common</p> </li> <li><p>Several different list functions in <code>ArcPy</code></p> <ol> <li><code>ListFields</code></li> <li><code>ListIndexes</code></li> <li><code>ListDataset</code></li> <li><code>ListFeatureClasses</code></li> <li><code>ListFiles</code></li> <li><code>ListRasters</code></li> <li><code>ListTables</code></li> <li><code>ListWorkspaces</code></li> <li><code>ListVersions</code></li> </ol> </li> <li><p>Similar logic:</p> <ol> <li>Create a <code>list</code></li> <li>Iterate over the <code>list</code> using a <code>for</code> loop</li> </ol> </li> <li><p>The complete list data functions can be found at: http://desktop.arcgis.com/en/arcmap/latest/analyze/arcpy-functions/listdatasets.htm</p> </li> </ul>"},{"location":"Geoprocessing/02-Data-Manipulation/#list-feature-classes","title":"List Feature Classes\u00b6","text":"<ul> <li><p>The <code>ListFeatureClasses</code> function returns a list of feature classes in the current workspace</p> </li> <li><p>General syntax:</p> <pre>ListFeatureClasses ({wild_card}, {feature_type}, {feature_dataset})\n</pre> </li> <li><p>No filtering:</p> <pre>fclist = arcpy.ListFeatureClasses()\n</pre> </li> <li><p>Filtering based on wild card</p> <pre>fclist = arcpy.ListFeatureClasses(\"c*\")\n</pre> </li> <li><p>Filtering based on <code>feature</code> <code>type</code></p> <pre>fclist = arcpy.ListFeatureClasses(\"\", \"point\")\n</pre> </li> </ul>"},{"location":"Geoprocessing/02-Data-Manipulation/#listing-fields","title":"Listing Fields\u00b6","text":"<ul> <li>The <code>ListFields</code> function lists the <code>fields</code> in a <code>feature class</code> or <code>table</code> in a specified dataset.</li> <li>General syntax:<pre>ListFields(dataset, {wild_card}, {field_type})\n</pre> </li> </ul>"},{"location":"Geoprocessing/02-Data-Manipulation/#using-lists-in-for-loops","title":"Using Lists in for loops\u00b6","text":"<p>The following script creates a list of <code>fields</code> of type <code>String</code> and determines for each text field what the length of the field is</p>"},{"location":"Geoprocessing/02-Data-Manipulation/#manipulating-spatial-data","title":"Manipulating Spatial Data\u00b6","text":"<ul> <li><code>arcpy.da cursors</code><ol> <li><code>Search cursor</code></li> <li><code>Update cursor</code></li> <li><code>Insert cursor</code></li> </ol> </li> <li>SQL query</li> </ul>"},{"location":"Geoprocessing/02-Data-Manipulation/#whats-cursor","title":"What's Cursor?\u00b6","text":"<ol> <li>Similar to <code>list</code> functions:<ul> <li>Iterate through <code>feature classes</code>, <code>tables</code>, and <code>fields</code></li> </ul> </li> <li>Cursors:<ul> <li>Iterate through <code>rows</code> in a table</li> <li>Read and write <code>geometries</code> to and from records, <code>row</code> by <code>row</code></li> </ul> </li> </ol>"},{"location":"Geoprocessing/02-Data-Manipulation/#cursor-methods","title":"Cursor Methods\u00b6","text":""},{"location":"Geoprocessing/02-Data-Manipulation/#searchcursor","title":"SearchCursor\u00b6","text":"<ul> <li>General syntax<pre>arcpy.da.SearchCursor(in_table, field_names, {where_clause}, {spatial_reference}, {explore_to_points})\n</pre> </li> <li>Parameters </li> <li>Methods </li> </ul>"},{"location":"Geoprocessing/02-Data-Manipulation/#shape-field-tokens-for-feature-classes","title":"Shape Field Tokens for feature classes\u00b6","text":""},{"location":"Geoprocessing/02-Data-Manipulation/#insertcursor","title":"InsertCursor\u00b6","text":"<ul> <li><p>General syntax <code>arcpy.da.InsertCursor(in_table, field_names)</code></p> </li> <li><p>Parameters</p> <p></p> </li> <li><p>Methods</p> <p></p> </li> </ul>"},{"location":"Geoprocessing/02-Data-Manipulation/#updatecursor","title":"UpdateCursor\u00b6","text":"<ul> <li><p>General Syntax <code>arcpy.da.UpdateCursor(in_table,field_names, (where_clause},{spatial_reference}, (explode_to_points},{sql_clause})</code></p> </li> <li><p>Parameters</p> <p></p> </li> <li><p>Methods</p> <p></p> </li> </ul>"},{"location":"Geoprocessing/02-Data-Manipulation/#cursor-table-locking","title":"Cursor Table Locking\u00b6","text":"<ol> <li><p>Shared lock</p> <ul> <li>Placed on a <code>table</code> any time a <code>table</code> or <code>feature clas</code>s is accessed by ArcGIS.</li> <li>Examples of <code>shared locks</code>: Displaying a <code>feature class</code> in ArcMap or previewing a table in ArcCatalog.</li> </ul> </li> <li><p>Exclusive lock</p> <ul> <li>Applied when changes are made to a <code>table</code> or <code>feature class</code>, either to field values or to the schema.</li> <li>Examples of when an <code>exclusive lock</code> is applied: Using an <code>UpdateCursor</code> or <code>InsertCursor</code> in a Python IDE, saving edits to a feature class in ArcMap, or changing the schema in ArcCatalog.</li> </ul> </li> <li><p>Release the lock</p> <ul> <li><code>del row</code></li> <li><code>del cursor</code></li> </ul> </li> </ol>"},{"location":"Geoprocessing/02-Data-Manipulation/#using-sql-in-python","title":"Using SQL in Python\u00b6","text":"<ol> <li><p>Structured Query Language (SQL)</p> <ul> <li>Apply a query based on attribute table</li> <li>As <code>where_clause</code> parameters in many tools in <code>ArcToolbox</code></li> </ul> </li> <li><p>Example:</p> <pre>SearchCursor(in_table, field_names {where_clause}, {spatial_reference}, {fields}, {explode_to_points})\nSelect_analysis(in_features, out_feature_class, {where_clause})\n</pre> </li> <li><p>Field delimiters</p> <ol> <li>(<code>\" \"</code>) for <code>shapefiles</code> and <code>file geodatabase</code> <code>feature classes</code></li> <li>(<code>[ ]</code>) for personal <code>geodatabase</code> <code>feature classes</code></li> </ol> </li> <li><p><code>AddFieldDelimiters</code> function</p> <ol> <li><code>AddFieldDelimiters(datasource,field)</code></li> </ol> <p></p> </li> </ol>"},{"location":"Geoprocessing/02-Data-Manipulation/#validating-table-names","title":"Validating Table Names\u00b6","text":"<ul> <li>Determine whether a <code>table</code> name is valid for a workspace</li> <li>Any invalid characters will be replaced by an underscore (<code>_</code>)</li> <li>General syntax:<pre>arcpy.ValidateTableName(name, {workspace})\n</pre> </li> </ul>"},{"location":"Geoprocessing/02-Data-Manipulation/#validating-field-names","title":"Validating Field Names\u00b6","text":"<ul> <li>Determine whether a field name is valid for a workspace</li> <li>Any invalid characters will be replaced by an underscore (<code>_</code>)</li> <li>General syntax:<pre>arcpy.ValidateFieldName(name, {workspace})\n</pre> </li> </ul>"},{"location":"Geoprocessing/02-Data-Manipulation/#creating-unique-names","title":"Creating Unique Names\u00b6","text":"<ul> <li>Creates a unique <code>filename</code> in the specified workspace by appending a number to the input name</li> </ul>"},{"location":"Geoprocessing/02-Data-Manipulation/#parsing-table-and-field-names","title":"Parsing Table and Field Names\u00b6","text":"<ul> <li><code>ParseTableName</code> function<ul> <li>Return <code>database name</code>, <code>owner name</code>, and <code>table name</code>.</li> <li>Separated by a comma (<code>,</code>)</li> </ul> </li> </ul>"},{"location":"Geoprocessing/02-Data-Manipulation/#example-script","title":"Example Script\u00b6","text":""},{"location":"Geoprocessing/02-Data-Manipulation/#q1","title":"Q1\u00b6","text":"<ol> <li>Select those airports that are located in the <code>Nome Census Area</code> county and print out their <code>NAME</code> and <code>LOCID</code></li> </ol>"},{"location":"Geoprocessing/02-Data-Manipulation/#q2","title":"Q2\u00b6","text":"<p>Write a program that converts the <code>airports.txt</code> into a <code>Point</code>-type <code>shapefile</code>. The resulting <code>shapefile</code> should have the following fields based on the information from the <code>airports.txt</code>, including <code>NAME</code>, <code>LOCID</code>, <code>X</code>, and <code>Y</code>.</p>"},{"location":"Geoprocessing/02-Data-Manipulation/#q3","title":"Q3\u00b6","text":"<p>Write a script that determines the <code>perimeter</code> (in meters) and <code>area</code> (in square meters) of each of the individual islands of the <code>Hawaii.shp</code> feature class.</p> <p>Note that this is a multipart feature class.</p>"},{"location":"Geoprocessing/02-Data-Manipulation/#q4","title":"Q4\u00b6","text":"<p>Write a script that creates a minimum bounding rectangle for the <code>Hawaii.shp</code> feature class.</p> <p>There is a tool called Minimum Bounding Geometry that can do this.</p> <p>However, your script should NOT use the tool <code>arcpy.MinimumBoundingGeometry_management</code>. Instead, use the <code>hullRectange</code> properties of a <code>Geometry</code> object to create the minimum bounding rectangle.</p> <p></p>"},{"location":"Geoprocessing/04-Map-automation/","title":"04 Map automation","text":""},{"location":"Geoprocessing/04-Map-automation/#map-automation-in-arcgis-pro","title":"Map Automation in ArcGIS Pro\u00b6","text":""},{"location":"Geoprocessing/05-Build-GP-tools/","title":"05 Build GP tools","text":"In\u00a0[\u00a0]: Copied!"},{"location":"Geoprocessing/05-Build-GP-tools/#build-gp-tools-with-python","title":"Build GP tools with Python\u00b6","text":""},{"location":"Geoprocessing/05-Build-GP-tools/#reference","title":"Reference\u00b6","text":"<ul> <li>Building Geoprocessing Tools with Python: Getting Started</li> <li>Building Geoprocessing Tools with Python: Beyond the Basics</li> </ul>"},{"location":"Geoprocessing/05-Build-GP-tools/#basics","title":"Basics\u00b6","text":"<p>A geoprocessing tool is made from 3 main ingredients</p> <ol> <li><code>Parameters</code></li> <li><code>Validation</code></li> <li>Source Code</li> </ol> <p>How a tool works (life cycle)</p> <ol> <li><p>Tool opens</p> <ul> <li>Tool parameters are initialized based on their definitions</li> </ul> </li> <li><p>Any interaction with the tool, the following steps occur</p> <ul> <li>updateParameters (written by you)</li> <li>Internal validation is called</li> <li>updateMessages (written by you)</li> </ul> </li> <li><p>Run the tool (<code>Run</code> button is clicked)</p> <ul> <li>Arguments are sent</li> <li><code>.py</code> is called</li> </ul> </li> <li><p>Value are sent to the script</p> <ul> <li>script receives arguments with <code>GetParameter</code> or <code>GetParameterAsText</code></li> </ul> </li> <li><p>Script runs</p> <ul> <li>Script can communicate with the app using <code>messages</code>, and the <code>progressor</code></li> <li>Can respond to a cancellation</li> </ul> </li> <li><p>Derived value are set</p> <ul> <li>If any, but every tool should have an output</li> </ul> </li> <li><p>Tool finishes</p> <ul> <li>Outputs are added to the map, symbology is applied</li> <li>Tool result is added to the history</li> </ul> </li> </ol>"},{"location":"Geoprocessing/06-ArcGIS-Python-API/","title":"ArcGIS Python API","text":"In\u00a0[1]: Copied! <pre># import the GIS class in gis module\nimport arcgis\nfrom arcgis.gis import GIS\nfrom arcgis.features import FeatureLayerCollection\nfrom time import strftime\nimport os, requests, zipfile\nimport pandas as pd\nimport geopandas as gpd\nimport arcpy,datetime,json\n</pre> # import the GIS class in gis module import arcgis from arcgis.gis import GIS from arcgis.features import FeatureLayerCollection from time import strftime import os, requests, zipfile import pandas as pd import geopandas as gpd import arcpy,datetime,json In\u00a0[2]: Copied! <pre>gis = GIS(\"home\")\nprint(\"Logged in as \" + str(gis.properties.user.username))\n</pre> gis = GIS(\"home\") print(\"Logged in as \" + str(gis.properties.user.username)) <pre>Logged in as yxy180050@utdallas.edu_UTDEPPS\n</pre> In\u00a0[3]: Copied! <pre># List user's content\nuser_content = gis.content.search(query=\"*\")\nuser_content[:5]\n</pre> # List user's content user_content = gis.content.search(query=\"*\") user_content[:5] Out[3]: <pre>[&lt;Item title:\"Using Python: Homelessness Resource Allocation Project\" type:StoryMap owner:tbh160130@utdallas.edu_UTDEPPS&gt;,\n &lt;Item title:\"Linear Sampling Toolbox\" type:Geoprocessing Sample owner:elvini&gt;,\n &lt;Item title:\"Areal Sampling Toolbox\" type:Geoprocessing Sample owner:elvini&gt;,\n &lt;Item title:\"Kalani's_Personal_Story\" type:Web Mapping Application owner:kct200000@utdallas.edu_UTDEPPS&gt;,\n &lt;Item title:\"Top 10 Largest Anime Conventions in America\" type:StoryMap owner:acj190002@utdallas.edu_UTDEPPS&gt;]</pre> In\u00a0[4]: Copied! <pre>shapefile_path = \"./assets/StorageTankLocations_Active2024_05.zip\"\n# Search for existing items with the same name\nexisting_items = gis.content.search(query=f'title:\"StorageTankLocations_Active2024_05\"')\n\n# Delete existing items\nfor item in existing_items:\n    item.delete()\n\n# Upload the shapefile\ntry:\n    uploaded_item = gis.content.add({}, shapefile_path)\n    print(\"Shapefile uploaded successfully.\")\nexcept Exception as e:\n    print(\"Error uploading shapefile:\", e)\n</pre>      shapefile_path = \"./assets/StorageTankLocations_Active2024_05.zip\" # Search for existing items with the same name existing_items = gis.content.search(query=f'title:\"StorageTankLocations_Active2024_05\"')  # Delete existing items for item in existing_items:     item.delete()  # Upload the shapefile try:     uploaded_item = gis.content.add({}, shapefile_path)     print(\"Shapefile uploaded successfully.\") except Exception as e:     print(\"Error uploading shapefile:\", e) <pre>Shapefile uploaded successfully.\n</pre> In\u00a0[5]: Copied! <pre>uploaded_item\n</pre> uploaded_item Out[5]: StorageTankLocations_Active2024_05 Shapefile by yxy180050@utdallas.edu_UTDEPPS                         Last Modified: June 05, 2024                         0 comments, 0 views                      In\u00a0[6]: Copied! <pre>try:\n    # Publish a feature layer from a shapefile\n    published_item = uploaded_item.publish()\nexcept Exception as e:\n    print(e)\n</pre> try:     # Publish a feature layer from a shapefile     published_item = uploaded_item.publish() except Exception as e:     print(e)  In\u00a0[7]: Copied! <pre>published_item = gis.content.search(query= 'StorageTankLocations_Active2024_05',item_type= \"Feature Layer\")\npublished_item[0]\n</pre> published_item = gis.content.search(query= 'StorageTankLocations_Active2024_05',item_type= \"Feature Layer\") published_item[0] Out[7]: StorageTankLocations_Active2024_05 Feature Layer Collection by yxy180050@utdallas.edu_UTDEPPS                         Last Modified: June 05, 2024                         0 comments, 0 views                      In\u00a0[8]: Copied! <pre>type(published_item[0])\n</pre> type(published_item[0]) Out[8]: <pre>arcgis.gis.Item</pre> In\u00a0[9]: Copied! <pre># Create a new web map item with required properties\nweb_map_properties = {\n    'type': 'Web Map',  # Specify the type of item\n    'title': 'My Web Map', \n    'snippet': 'Created with ArcGIS Python API'\n}\nweb_map_item = gis.content.add(web_map_properties)\n\n# Get the web map object\nweb_map = arcgis.mapping.WebMap()\nweb_map.definition = {'operationalLayers': []}  # Initialize with empty operational layers\n\nweb_map.layers\n</pre> # Create a new web map item with required properties web_map_properties = {     'type': 'Web Map',  # Specify the type of item     'title': 'My Web Map',      'snippet': 'Created with ArcGIS Python API' } web_map_item = gis.content.add(web_map_properties)  # Get the web map object web_map = arcgis.mapping.WebMap() web_map.definition = {'operationalLayers': []}  # Initialize with empty operational layers  web_map.layers Out[9]: <pre>[]</pre> In\u00a0[10]: Copied! <pre># Add the layer to the web map\nweb_map.add_layer(published_item[0])\n\n# Save the web map\nweb_map_item.update(data=web_map)\n</pre> # Add the layer to the web map web_map.add_layer(published_item[0])  # Save the web map web_map_item.update(data=web_map) Out[10]: <pre>True</pre> In\u00a0[11]: Copied! <pre>web_map_item\n</pre> web_map_item Out[11]: My Web Map Created with ArcGIS Python APIWeb Map by yxy180050@utdallas.edu_UTDEPPS                         Last Modified: June 05, 2024                         0 comments, 0 views                      In\u00a0[12]: Copied! <pre>type(published_item[0])\n\nquery_layer = arcgis.features.FeatureLayer.fromitem(published_item[0])\n\n# Get the fields of the feature layer\nfields = query_layer.properties.fields\n\n# Print field names\nfor field in fields:\n    print(field[\"name\"], end= \", \")\n</pre> type(published_item[0])  query_layer = arcgis.features.FeatureLayer.fromitem(published_item[0])  # Get the fields of the feature layer fields = query_layer.properties.fields  # Print field names for field in fields:     print(field[\"name\"], end= \", \") <pre>FID, FACILITY_I, FACILITY_N, FACILITY_A, FACILITY_1, FACILITY_C, FACILITY_S, FACILITY_Z, COUNTY_ID, FACILITY_2, MUNICIPALI, FACILITY_M, REG_EXPIRA, TANK_OWNER, TANK_OWN_1, TANK_OWN_2, TANK_OWN_3, TANK_OWN_4, TANK_OWN_5, TANK_OWN_6, PRIMARY_FA, SITE_ID, LATITUDE, LONGITUDE, TANK_INFOR, </pre>"},{"location":"Geoprocessing/06-ArcGIS-Python-API/#arcgis-python-api","title":"ArcGIS Python API\u00b6","text":"<ul> <li><code>ArcGIS Python API</code> empowers users to leverage <code>Python</code> programming to interact with <code>ArcGIS Online</code> or <code>ArcGIS Enterprise</code>, facilitating tasks such as <code>managing content</code>, <code>creating web layers</code>, <code>querying data</code>, and <code>conducting spatial analysis</code>.</li> <li>ArcGIS Python API Documentation</li> <li>ArcGIS Python API Module</li> </ul>"},{"location":"Geoprocessing/06-ArcGIS-Python-API/#installation-and-setup","title":"Installation and Setup\u00b6","text":"<ul> <li>Install the <code>ArcGIS API for Python</code> using <code>pip</code></li> <li>Access <code>ArcGIS Online</code> or <code>ArcGIS Enterprise</code> by providing your credentials.</li> </ul>"},{"location":"Geoprocessing/06-ArcGIS-Python-API/#managing-content","title":"Managing Content\u00b6","text":""},{"location":"Geoprocessing/06-ArcGIS-Python-API/#connecting-to-arcgis","title":"Connecting to <code>ArcGIS</code>\u00b6","text":""},{"location":"Geoprocessing/06-ArcGIS-Python-API/#accessing-gis-content","title":"Accessing GIS Content\u00b6","text":""},{"location":"Geoprocessing/06-ArcGIS-Python-API/#uploading-data","title":"Uploading Data\u00b6","text":""},{"location":"Geoprocessing/06-ArcGIS-Python-API/#creating-web-layers","title":"Creating Web Layers\u00b6","text":""},{"location":"Geoprocessing/06-ArcGIS-Python-API/#publishing-feature-layer","title":"Publishing Feature Layer\u00b6","text":""},{"location":"Geoprocessing/06-ArcGIS-Python-API/#creating-web-map","title":"Creating Web Map\u00b6","text":""},{"location":"Geoprocessing/06-ArcGIS-Python-API/#querying-data","title":"Querying Data\u00b6","text":""},{"location":"Geoprocessing/06-ArcGIS-Python-API/#querying-feature-layer","title":"Querying Feature Layer\u00b6","text":""},{"location":"Geoprocessing/07-Updates-Weblayers/","title":"Update WebLayer","text":"In\u00a0[1]: Copied! <pre># import the GIS class in gis module\nfrom arcgis.gis import GIS\nfrom arcgis.features import FeatureLayerCollection\nfrom time import strftime\nimport os, requests, zipfile\nimport pandas as pd\nimport geopandas as gpd\nimport arcpy,datetime,json\n</pre> # import the GIS class in gis module from arcgis.gis import GIS from arcgis.features import FeatureLayerCollection from time import strftime import os, requests, zipfile import pandas as pd import geopandas as gpd import arcpy,datetime,json In\u00a0[2]: Copied! <pre>feature_layer_id = \"0fb67f50b99e4979a9fc49da11c9148e\"\n# download_url = f\"https://www.pasda.psu.edu/download/dep/StorageTankLocations_Active{strftime('%Y')}_{strftime('%m')}.zip\"\ndownload_url = f\"https://www.pasda.psu.edu/download/dep/StorageTankLocations_Active2024_05.zip\"\ndownload_path = os.path.abspath(\"./assets\")\n\n# Filename from the URL\nfilename = download_url.split('/')[-1]\n\n# Full path to save the file\nfile_path = os.path.join(download_path, filename)\n\n# Download the file\nresponse = requests.get(download_url)\n\n# Check if the request was successful\nif response.status_code == 200:\n    # Write content to the file\n    with open(file_path, 'wb') as file:\n        file.write(response.content)\n    print(f\"File downloaded successfully to: {file_path}\")\nelse:\n    print(\"Failed to download the file.\")\n</pre> feature_layer_id = \"0fb67f50b99e4979a9fc49da11c9148e\" # download_url = f\"https://www.pasda.psu.edu/download/dep/StorageTankLocations_Active{strftime('%Y')}_{strftime('%m')}.zip\" download_url = f\"https://www.pasda.psu.edu/download/dep/StorageTankLocations_Active2024_05.zip\" download_path = os.path.abspath(\"./assets\")  # Filename from the URL filename = download_url.split('/')[-1]  # Full path to save the file file_path = os.path.join(download_path, filename)  # Download the file response = requests.get(download_url)  # Check if the request was successful if response.status_code == 200:     # Write content to the file     with open(file_path, 'wb') as file:         file.write(response.content)     print(f\"File downloaded successfully to: {file_path}\") else:     print(\"Failed to download the file.\") <pre>File downloaded successfully to: d:\\Eric-Personal\\python\\docs\\Geoprocessing\\assets\\StorageTankLocations_Active2024_05.zip\n</pre> In\u00a0[3]: Copied! <pre># Extract the downloaded ZIP file\nwith zipfile.ZipFile(file_path, 'r') as zip_ref:\n    zip_ref.extractall(download_path)\n\n# Path to the extracted CSV file\nshp_file_path = os.path.join(download_path, \"StorageTankLocations_Active2024_05.shp\")\n\n# Read the downloaded CSV data\ndownloaded_data = gpd.read_file(shp_file_path)\nprint(downloaded_data.shape)\ndownloaded_data.head()\n</pre> # Extract the downloaded ZIP file with zipfile.ZipFile(file_path, 'r') as zip_ref:     zip_ref.extractall(download_path)  # Path to the extracted CSV file shp_file_path = os.path.join(download_path, \"StorageTankLocations_Active2024_05.shp\")  # Read the downloaded CSV data downloaded_data = gpd.read_file(shp_file_path) print(downloaded_data.shape) downloaded_data.head() <pre>(11289, 25)\n</pre> Out[3]: FACILITY_I FACILITY_N FACILITY_A FACILITY_1 FACILITY_C FACILITY_S FACILITY_Z COUNTY_ID FACILITY_2 MUNICIPALI ... TANK_OWN_3 TANK_OWN_4 TANK_OWN_5 TANK_OWN_6 PRIMARY_FA SITE_ID LATITUDE LONGITUDE TANK_INFOR geometry 0 56-39595 CHEMSTREAM NORTH STAR IND PARK COMMERCE DR None STOYSTOWN PA 15563 2463 Somerset 2130 ... None HOMER CITY PA 15748-1422 695172 691484 40.137605 -79.025093 http://cedatareporting.pa.gov/Reportserver/Pag... POINT (-8797033.113 4885958.858) 1 35-52629 THROOP DIVERSION CHAMBER 862 ENTERPRISE ST None DICKSON CITY PA 18519 2442 Lackawanna 1403 ... None OLYPHANT PA 18447-0280 695938 645882 41.461955 -75.616175 http://cedatareporting.pa.gov/Reportserver/Pag... POINT (-8417554.097 5080720.569) 2 11-39625 MARTIN GENERAL STORE 230 4057 ADMIRAL PEARY HWY None EBENSBURG PA 15931-3919 2418 Cambria 570 ... None BELLWOOD PA 16617-1922 696735 693483 40.460940 -78.769425 http://cedatareporting.pa.gov/Reportserver/Pag... POINT (-8768572.281 4933152.658) 3 15-39634 FREEDOM VILLAGE AT BRANDYWINE 15 FREEDOM BLVD None WEST BRANDYWINE PA 19320-1549 2422 Chester 753 ... None WEST BRANDYWINE PA 19320-1549 697311 694230 40.013371 -75.790556 http://cedatareporting.pa.gov/Reportserver/Pag... POINT (-8436966.101 4867885.507) 4 45-39639 ROCK HILL CONCRETE UPPER CHERRY VALLEY ROAD RD4 BOX 140 STROUDSBURG PA 18360 2452 Monroe 1781 ... None DOWNERS GROVE IL 60515-5560 697481 694449 40.927418 -75.271720 http://cedatareporting.pa.gov/Reportserver/Pag... POINT (-8379209.542 5001641.723) <p>5 rows \u00d7 25 columns</p> In\u00a0[4]: Copied! <pre>gis = GIS(\"home\")\nprint(\"Logged in as \" + str(gis.properties.user.username))\n</pre> gis = GIS(\"home\") print(\"Logged in as \" + str(gis.properties.user.username)) <pre>Logged in as yxy180050@utdallas.edu_UTDEPPS\n</pre> In\u00a0[5]: Copied! <pre># Get the existing feature layer data\n\ndata_item = gis.content.get(itemid=feature_layer_id)\nfeature_layer = data_item.layers[0]\n\n# Query all data from the existing feature layer including geometry\nexisting_data = pd.DataFrame.spatial.from_layer(feature_layer)\nprint(existing_data.shape)\nexisting_data.head()\n</pre> # Get the existing feature layer data  data_item = gis.content.get(itemid=feature_layer_id) feature_layer = data_item.layers[0]  # Query all data from the existing feature layer including geometry existing_data = pd.DataFrame.spatial.from_layer(feature_layer) print(existing_data.shape) existing_data.head() <pre>(11289, 26)\n</pre> Out[5]: COUNTY_ID FACILITY_1 FACILITY_2 FACILITY_A FACILITY_C FACILITY_I FACILITY_M FACILITY_N FACILITY_S FACILITY_Z ... SHAPE SITE_ID TANK_INFOR TANK_OWNER TANK_OWN_1 TANK_OWN_2 TANK_OWN_3 TANK_OWN_4 TANK_OWN_5 TANK_OWN_6 0 2409 Allegheny 2000 S FAYETTE WAY MCDONALD 02-97992 South Fayette Twp SOUTHERN BELTWAY MAINT PA 15057 ... {\"x\": -8926798.6883, \"y\": 4915484.524700001, \"... 849719 http://cedatareporting.pa.gov/Reportserver/Pag... 55964 PA TURNPIKE COMM PO BOX 67676 HARRISBURG PA 17106-7676 1 2409 Allegheny 5993 S BRADDOCK AVE EDGEWOOD 02-55204 Edgewood Boro GET GO 3147 PA 15218 ... {\"x\": -8893547.8904, \"y\": 4928583.006300002, \"... 828738 http://cedatareporting.pa.gov/Reportserver/Pag... 125094 GIANT EAGLE INC 101 KAPPA DR PITTSBURGH PA 15238 2 2443 Lancaster 520 LIME QUARRY RD GAP 36-09911 Salisbury Twp LIMEVILLE QUARRY PA 17527-9739 ... {\"x\": -8457076.5235, \"y\": 4867733.767300002, \"... 577229 http://cedatareporting.pa.gov/Reportserver/Pag... 62856 NEW ENTERPRISE STONE &amp; LIME CO INC 3912 BRUMBAUGH RD NEW ENTERPRISE PA 16664-9137 3 2409 Allegheny 3901 CALIFORNIA AVE PITTSBURGH 02-55599 Pittsburgh  City CALIFORNIA MINI MART PA 15212-1610 ... {\"x\": -8910012.0431, \"y\": 4935795.365699999, \"... 842194 http://cedatareporting.pa.gov/Reportserver/Pag... 350369 CALIFORNIA MINI MART LLC 3901 CALIFORNIA AVE PITTSBURGH PA 15212-1610 4 2429 HANGAR 604 Dauphin 604 AIRPORT DR MIDDLETOWN 22-64095 Lower Swatara Twp MIWD FLIGHT HANGER 604 PA 17057-5036 ... {\"x\": -8545898.0112, \"y\": 4894937.820699997, \"... 572910 http://cedatareporting.pa.gov/Reportserver/Pag... 357377 MIWD FLIGHT LLC 650 W MARKET ST GRATZ PA 17030-9701 <p>5 rows \u00d7 26 columns</p> In\u00a0[6]: Copied! <pre>try:\n    # Check if a feature layer with the same name already exists\n    new_feature_layer_name = \"Backup_FeatureLayer\"\n    existing_layers = gis.content.search(query=new_feature_layer_name, item_type=\"Feature Service\")\n    \n    # If a feature layer with the same name exists, delete it\n    for item in existing_layers:\n        item.delete()\n    \n    # Create a new hosted feature layer\n    new_feature_layer_item = existing_data.spatial.to_featurelayer(new_feature_layer_name, folder = \"ArcGIS Python API\")\n    print(\"Created the new feature layer service successfully.\")\n    \nexcept Exception as e:\n    print(f\"Error creating the new feature layer: {e}\")\n</pre> try:     # Check if a feature layer with the same name already exists     new_feature_layer_name = \"Backup_FeatureLayer\"     existing_layers = gis.content.search(query=new_feature_layer_name, item_type=\"Feature Service\")          # If a feature layer with the same name exists, delete it     for item in existing_layers:         item.delete()          # Create a new hosted feature layer     new_feature_layer_item = existing_data.spatial.to_featurelayer(new_feature_layer_name, folder = \"ArcGIS Python API\")     print(\"Created the new feature layer service successfully.\")      except Exception as e:     print(f\"Error creating the new feature layer: {e}\")  <pre>Created the new feature layer service successfully.\n</pre> In\u00a0[7]: Copied! <pre>new_feature_layer_item\n</pre> new_feature_layer_item Out[7]: Backup_FeatureLayer Feature Layer Collection by yxy180050@utdallas.edu_UTDEPPS                         Last Modified: June 05, 2024                         0 comments, 0 views                      In\u00a0[\u00a0]: Copied! <pre># # Define the schema for the new layer based on the existing layer\n# fields = [{\"name\": field['name'], \"type\": field['type'], \"alias\": field['alias']} for field in feature_layer.properties.fields]\n# geometry_type = feature_layer.properties.geometryType\n\n# layer_definition = {\n#     \"layers\": [{\n#         \"name\": \"BackupLayer\",\n#         \"geometryType\": geometry_type,\n#         \"fields\": fields\n#     }]\n# }\n\n# # Add the layer definition to the new feature layer collection\n# new_feature_layer_collection.manager.add_to_definition(layer_definition)\n</pre> # # Define the schema for the new layer based on the existing layer # fields = [{\"name\": field['name'], \"type\": field['type'], \"alias\": field['alias']} for field in feature_layer.properties.fields] # geometry_type = feature_layer.properties.geometryType  # layer_definition = { #     \"layers\": [{ #         \"name\": \"BackupLayer\", #         \"geometryType\": geometry_type, #         \"fields\": fields #     }] # }  # # Add the layer definition to the new feature layer collection # new_feature_layer_collection.manager.add_to_definition(layer_definition) In\u00a0[\u00a0]: Copied! <pre># # Convert the DataFrame to a list of dictionaries\n# features = existing_data.spatial.to_featureset().features\n\n# # Define a function to chunk data\n# def chunk_data(data, chunk_size):\n#     for i in range(0, len(data), chunk_size):\n#         yield data[i:i + chunk_size]\n\n# # Set the chunk size\n# chunk_size = 100  # Adjust the chunk size as necessary\n\n# try:\n#     # Get the layer in the new feature layer collection\n#     new_layer = new_feature_layer_collection.layers[0]\n\n#     # Add features in chunks\n#     for chunk in chunk_data(features, chunk_size):\n#         new_layer.edit_features(adds=chunk)\n#     print(\"Successfully added all features to the new layer.\")\n\n# except Exception as e:\n#     print(f\"Error: {e}\")\n</pre> # # Convert the DataFrame to a list of dictionaries # features = existing_data.spatial.to_featureset().features  # # Define a function to chunk data # def chunk_data(data, chunk_size): #     for i in range(0, len(data), chunk_size): #         yield data[i:i + chunk_size]  # # Set the chunk size # chunk_size = 100  # Adjust the chunk size as necessary  # try: #     # Get the layer in the new feature layer collection #     new_layer = new_feature_layer_collection.layers[0]  #     # Add features in chunks #     for chunk in chunk_data(features, chunk_size): #         new_layer.edit_features(adds=chunk) #     print(\"Successfully added all features to the new layer.\")  # except Exception as e: #     print(f\"Error: {e}\") In\u00a0[\u00a0]: Copied! <pre># features[0]\n</pre> # features[0] In\u00a0[8]: Copied! <pre># Convert column names to lowercase for comparison\nexisting_columns= existing_data.columns\ndownloaded_columns = downloaded_data.columns\n\n# Find columns in downloaded_data that are present in existing_data\nchecking_col = downloaded_columns[downloaded_columns.isin(existing_columns)]\n\nchecking_col\n</pre> # Convert column names to lowercase for comparison existing_columns= existing_data.columns downloaded_columns = downloaded_data.columns  # Find columns in downloaded_data that are present in existing_data checking_col = downloaded_columns[downloaded_columns.isin(existing_columns)]  checking_col Out[8]: <pre>Index(['FACILITY_I', 'FACILITY_N', 'FACILITY_A', 'FACILITY_1', 'FACILITY_C',\n       'FACILITY_S', 'FACILITY_Z', 'COUNTY_ID', 'FACILITY_2', 'MUNICIPALI',\n       'FACILITY_M', 'REG_EXPIRA', 'TANK_OWNER', 'TANK_OWN_1', 'TANK_OWN_2',\n       'TANK_OWN_3', 'TANK_OWN_4', 'TANK_OWN_5', 'TANK_OWN_6', 'PRIMARY_FA',\n       'SITE_ID', 'LATITUDE', 'LONGITUDE', 'TANK_INFOR'],\n      dtype='object')</pre> In\u00a0[9]: Copied! <pre># Identify new rows in the downloaded data\nnew_rows = downloaded_data[~downloaded_data[checking_col].apply(tuple, axis=1).isin(existing_data[checking_col].apply(tuple, axis=1))].dropna()\nnew_rows.shape\n</pre> # Identify new rows in the downloaded data new_rows = downloaded_data[~downloaded_data[checking_col].apply(tuple, axis=1).isin(existing_data[checking_col].apply(tuple, axis=1))].dropna() new_rows.shape Out[9]: <pre>(35, 25)</pre> In\u00a0[10]: Copied! <pre>new_rows.index\n</pre> new_rows.index Out[10]: <pre>Index([  290,   291,   627,   889,  1013,  1654,  1680,  1745,  1900,  3308,\n        3475,  3698,  4309,  4807,  5788,  6799,  7044,  7201,  7577,  7620,\n        7985,  8038,  9042,  9221,  9239,  9485,  9651,  9798, 10631, 10712,\n       10769, 10798, 10889, 10991, 11175],\n      dtype='int64')</pre> In\u00a0[11]: Copied! <pre># Append new rows to the existing data\ncombined_data = pd.concat([existing_data, new_rows], ignore_index=True)\nprint(combined_data.shape)\ncombined_data.head()\n</pre> # Append new rows to the existing data combined_data = pd.concat([existing_data, new_rows], ignore_index=True) print(combined_data.shape) combined_data.head() <pre>(11324, 27)\n</pre> Out[11]: COUNTY_ID FACILITY_1 FACILITY_2 FACILITY_A FACILITY_C FACILITY_I FACILITY_M FACILITY_N FACILITY_S FACILITY_Z ... SITE_ID TANK_INFOR TANK_OWNER TANK_OWN_1 TANK_OWN_2 TANK_OWN_3 TANK_OWN_4 TANK_OWN_5 TANK_OWN_6 geometry 0 2409 Allegheny 2000 S FAYETTE WAY MCDONALD 02-97992 South Fayette Twp SOUTHERN BELTWAY MAINT PA 15057 ... 849719 http://cedatareporting.pa.gov/Reportserver/Pag... 55964 PA TURNPIKE COMM PO BOX 67676 HARRISBURG PA 17106-7676 None 1 2409 Allegheny 5993 S BRADDOCK AVE EDGEWOOD 02-55204 Edgewood Boro GET GO 3147 PA 15218 ... 828738 http://cedatareporting.pa.gov/Reportserver/Pag... 125094 GIANT EAGLE INC 101 KAPPA DR PITTSBURGH PA 15238 None 2 2443 Lancaster 520 LIME QUARRY RD GAP 36-09911 Salisbury Twp LIMEVILLE QUARRY PA 17527-9739 ... 577229 http://cedatareporting.pa.gov/Reportserver/Pag... 62856 NEW ENTERPRISE STONE &amp; LIME CO INC 3912 BRUMBAUGH RD NEW ENTERPRISE PA 16664-9137 None 3 2409 Allegheny 3901 CALIFORNIA AVE PITTSBURGH 02-55599 Pittsburgh  City CALIFORNIA MINI MART PA 15212-1610 ... 842194 http://cedatareporting.pa.gov/Reportserver/Pag... 350369 CALIFORNIA MINI MART LLC 3901 CALIFORNIA AVE PITTSBURGH PA 15212-1610 None 4 2429 HANGAR 604 Dauphin 604 AIRPORT DR MIDDLETOWN 22-64095 Lower Swatara Twp MIWD FLIGHT HANGER 604 PA 17057-5036 ... 572910 http://cedatareporting.pa.gov/Reportserver/Pag... 357377 MIWD FLIGHT LLC 650 W MARKET ST GRATZ PA 17030-9701 None <p>5 rows \u00d7 27 columns</p> In\u00a0[12]: Copied! <pre>new_feature_layer_item = combined_data.spatial.to_featurelayer(new_feature_layer_name, folder = \"ArcGIS Python API\")\n</pre> new_feature_layer_item = combined_data.spatial.to_featurelayer(new_feature_layer_name, folder = \"ArcGIS Python API\") <pre>The operation was attempted on an empty geometry.\nThe operation was attempted on an empty geometry.\n</pre> In\u00a0[13]: Copied! <pre>try:\n    # Get the feature layer collection\n    featureLayerCollection = FeatureLayerCollection.fromitem(new_feature_layer_item)\n    \n    # Overwrite the feature layer with the shapefile\n    featureLayerCollection.manager.overwrite(shp_file_path)\n    print(\"Feature layer updated successfully.\")\nexcept Exception as e:\n    print(f\"Error creating or updating the new feature layer: {e}\")\n</pre> try:     # Get the feature layer collection     featureLayerCollection = FeatureLayerCollection.fromitem(new_feature_layer_item)          # Overwrite the feature layer with the shapefile     featureLayerCollection.manager.overwrite(shp_file_path)     print(\"Feature layer updated successfully.\") except Exception as e:     print(f\"Error creating or updating the new feature layer: {e}\") <pre>Error creating or updating the new feature layer: Error while analyzing File Geodatabase 'StorageTankLocations_Active2024_05.shp' Unable to extract 'file geodatabase' Invalid File Geodatabase, missing gdbtable or gdbindexes file.\n(Error Code: 406)\n</pre> In\u00a0[14]: Copied! <pre>os.remove(shp_file_path)\n</pre> os.remove(shp_file_path)"},{"location":"Geoprocessing/07-Updates-Weblayers/#update-web-layers","title":"Update Web Layers\u00b6","text":""},{"location":"Geoprocessing/07-Updates-Weblayers/#download-data","title":"Download data\u00b6","text":""},{"location":"Geoprocessing/07-Updates-Weblayers/#steps","title":"Steps:\u00b6","text":"<ol> <li><p>Define Feature Layer ID:</p> <ul> <li>Set the ID of the feature layer from which the data will be downloaded.</li> </ul> </li> <li><p>Specify Download URL:</p> <ul> <li>Construct the download URL using a formatted string.</li> <li>The URL points to the location of the file to be downloaded.</li> </ul> </li> <li><p>Specify Download Path:</p> <ul> <li>Define the absolute path where the downloaded file will be saved.</li> </ul> </li> <li><p>Download the File:</p> <ul> <li>Use the <code>requests</code> library to send a GET request to the download URL.</li> <li>Check if the request was successful (status code 200).</li> </ul> </li> <li><p>Save the File:</p> <ul> <li>If the request was successful, open the file in binary write mode and write the content to it.</li> <li>Print the path where the file was saved if the download was successful.</li> </ul> </li> </ol>"},{"location":"Geoprocessing/07-Updates-Weblayers/#unzip-downloaded-data","title":"unzip downloaded data\u00b6","text":""},{"location":"Geoprocessing/07-Updates-Weblayers/#log-into-arcgis-online","title":"Log into ArcGIS Online\u00b6","text":""},{"location":"Geoprocessing/07-Updates-Weblayers/#make-a-backup-layer","title":"Make a backup Layer\u00b6","text":""},{"location":"Geoprocessing/07-Updates-Weblayers/#steps","title":"Steps:\u00b6","text":"<ol> <li><p>Check for Existing Feature Layer:</p> <ul> <li>Search for existing feature layers with the specified name using <code>gis.content.search()</code>.</li> <li>If any feature layers with the same name are found, delete them using the <code>delete()</code> method.</li> </ul> </li> <li><p>Create New Feature Layer:</p> <ul> <li>Convert existing spatial data to a feature layer using <code>spatial.to_featurelayer()</code>.</li> <li>Specify the name of the new feature layer and optionally the folder where it will be saved.</li> </ul> </li> <li><p>Handle Exceptions:</p> <ul> <li>Catch any exceptions that occur during the process and print error messages.</li> </ul> </li> </ol>"},{"location":"Geoprocessing/07-Updates-Weblayers/#copy-everything-in-the-existing-layer-to-the-backup-layer","title":"Copy everything in the existing layer to the backup layer\u00b6","text":""},{"location":"Geoprocessing/07-Updates-Weblayers/#check-the-difference-between-exisitng-data-and-downloaded-data","title":"Check the difference between exisitng data and downloaded data\u00b6","text":""},{"location":"Geoprocessing/07-Updates-Weblayers/#overwrite-features","title":"Overwrite features\u00b6","text":""},{"location":"Geoprocessing/07-Updates-Weblayers/#make-a-backup-layer","title":"Make a backup Layer\u00b6","text":""},{"location":"Geoprocessing/07-Updates-Weblayers/#steps","title":"Steps:\u00b6","text":"<ol> <li><p>Get Feature Layer Collection:</p> <ul> <li>Use <code>FeatureLayerCollection.fromitem()</code> to retrieve the feature layer collection object from the new feature layer item.</li> </ul> </li> <li><p>Overwrite Feature Layer with Shapefile:</p> <ul> <li>Call the <code>overwrite()</code> method on the feature layer collection manager to update the feature layer with data from the shapefile.</li> </ul> </li> </ol>"},{"location":"Geoprocessing/Hexagon_shift/","title":"Hexagon Shift","text":"In\u00a0[10]: Copied! <pre>import geopandas as gpd\nimport pandas as pd\nfrom shapely.affinity import translate\nimport matplotlib.pyplot as plt\nimport math\nfrom matplotlib import pyplot as plt\nfrom matplotlib.legend_handler import HandlerPatch\nfrom mpl_toolkits.mplot3d import Axes3D\n</pre> import geopandas as gpd import pandas as pd from shapely.affinity import translate import matplotlib.pyplot as plt import math from matplotlib import pyplot as plt from matplotlib.legend_handler import HandlerPatch from mpl_toolkits.mplot3d import Axes3D In\u00a0[3]: Copied! <pre>origin_hexgaon = gpd.read_file(\"../../Data/Output/Study_Area.shp\")\nprint(origin_hexgaon.shape)\n</pre> origin_hexgaon = gpd.read_file(\"../../Data/Output/Study_Area.shp\") print(origin_hexgaon.shape) <pre>(22504, 2)\n</pre> In\u00a0[4]: Copied! <pre>origin_hexgaon.geometry[0]\n</pre> origin_hexgaon.geometry[0] Out[4]: In\u00a0[5]: Copied! <pre># Get coordinates of original centroids\nx = origin_hexgaon.geometry[0].centroid.x\ny = origin_hexgaon.geometry[0].centroid.y\nx,y\n</pre> # Get coordinates of original centroids x = origin_hexgaon.geometry[0].centroid.x y = origin_hexgaon.geometry[0].centroid.y x,y  Out[5]: <pre>(745603.4525000006, 2051234.2399555547)</pre> In\u00a0[6]: Copied! <pre>xx_lst, yy_lst = origin_hexgaon.geometry[0].exterior.coords.xy\nxx_lst.tolist()[:], yy_lst.tolist()[:]\n</pre> xx_lst, yy_lst = origin_hexgaon.geometry[0].exterior.coords.xy xx_lst.tolist()[:], yy_lst.tolist()[:] Out[6]: <pre>([746003.4525000006,\n  745803.4525000006,\n  745403.4525000006,\n  745203.4525000006,\n  745403.4525000006,\n  745803.4525000006,\n  746003.4525000006],\n [2051234.2399999984,\n  2050887.8297999986,\n  2050887.8297999986,\n  2051234.2399999984,\n  2051580.6501000002,\n  2051580.6501000002,\n  2051234.2399999984])</pre> In\u00a0[36]: Copied! <pre>shifted_1 = translate(origin_hexgaon.geometry[0],xoff=(x - xx_lst[0]),yoff=(y - yy_lst[0]))\nfig, ax = plt.subplots(figsize = (12,6))\n\nax.plot(*origin_hexgaon.geometry[0].exterior.xy,color = \"blue\", linewidth=3)\nax.plot(*shifted_1.exterior.xy, color = \"red\", linewidth=3)\n\n# Create polygons\npoly1 = origin_hexgaon.geometry[0] \npoly2 = shifted_1\n# Get intersection  \nintersection = poly1.intersection(poly2)\n\nax.plot(*intersection.exterior.xy, color = \"green\", linewidth=3)\n# Show plot\nplt.show()\n</pre> shifted_1 = translate(origin_hexgaon.geometry[0],xoff=(x - xx_lst[0]),yoff=(y - yy_lst[0])) fig, ax = plt.subplots(figsize = (12,6))  ax.plot(*origin_hexgaon.geometry[0].exterior.xy,color = \"blue\", linewidth=3) ax.plot(*shifted_1.exterior.xy, color = \"red\", linewidth=3)  # Create polygons poly1 = origin_hexgaon.geometry[0]  poly2 = shifted_1 # Get intersection   intersection = poly1.intersection(poly2)  ax.plot(*intersection.exterior.xy, color = \"green\", linewidth=3) # Show plot plt.show()  In\u00a0[30]: Copied! <pre># Create 3D plot\nfig = plt.figure(figsize = (15,9))\nax = fig.add_subplot(111, projection='3d')\n\n# Set view angle\nax.view_init(elev=None, azim=45)\n\n# Plot polygons on different z levels\n\nfor idx in [0,1]:\n    poly1 = origin_hexgaon.geometry[idx]\n    x = poly1.centroid.x\n    y = poly1.centroid.y\n    xx_lst, yy_lst = poly1.exterior.coords.xy\n    poly2 = translate(poly1,xoff=(x - xx_lst[0]),yoff=(y - yy_lst[0]))\n    poly3 = translate(poly1,xoff=(x - xx_lst[1]),yoff=(y - yy_lst[1]))\n    poly4 = translate(poly1,xoff=(x - xx_lst[2]),yoff=(y - yy_lst[2]))\n    poly5 = translate(poly1,xoff=(x - xx_lst[3]),yoff=(y - yy_lst[3]))\n    poly6 = translate(poly1,xoff=(x - xx_lst[4]),yoff=(y - yy_lst[4]))\n    poly7 = translate(poly1,xoff=(x - xx_lst[5]),yoff=(y - yy_lst[5]))\n    ax.plot(*poly1.exterior.xy, zs=1, zdir='z', color='blue')\n    ax.plot(*poly1.exterior.xy, zs=0.5, zdir='z', color='blue')\n    ax.plot(*poly2.exterior.xy, zs=0.5, zdir='z', color='red')\n    ax.plot(*poly3.exterior.xy, zs=0.5, zdir='z', color='red')\n    ax.plot(*poly4.exterior.xy, zs=0.5, zdir='z', color='red')\n    ax.plot(*poly5.exterior.xy, zs=0.5, zdir='z', color='red')\n    ax.plot(*poly6.exterior.xy, zs=0.5, zdir='z', color='red')\n    ax.plot(*poly7.exterior.xy, zs=0.5, zdir='z', color='red')\n    \n    # Get intersection  \n    ax.plot(*poly1.intersection(poly2).intersection(poly3).exterior.xy, zs=0, zdir='z', color='green')\n    ax.plot(*poly1.intersection(poly3).intersection(poly4).exterior.xy, zs=0, zdir='z', color='green')\n    ax.plot(*poly1.intersection(poly4).intersection(poly5).exterior.xy, zs=0, zdir='z', color='green')\n    ax.plot(*poly1.intersection(poly5).intersection(poly6).exterior.xy, zs=0, zdir='z', color='green')\n    ax.plot(*poly1.intersection(poly6).intersection(poly7).exterior.xy, zs=0, zdir='z', color='green')\n    ax.plot(*poly1.intersection(poly7).intersection(poly2).exterior.xy, zs=0, zdir='z', color='green')\n\n# Set axis limits\nax.set_zlim(0,1)\n# Remove x tick labels  \nax.set_xticks([])\n# Remove y ticks and labels\nax.set_yticks([])\n# Enable y grid lines\nax.yaxis.grid(True)\n\n# Create proxy artists\nblue_proxy = plt.Rectangle((0,0), 1, 1, fc=\"blue\")\nred_proxy = plt.Rectangle((0,0), 1, 1, fc=\"red\")\ngreen_proxy = plt.Rectangle((0,0), 1, 1, fc=\"green\")\n\n# Add legend\nax.legend([blue_proxy, red_proxy, green_proxy], \n          [\"Original Hexagons\", \"Shifted Hexagons\", \"Ensemble Results\"],\n          handler_map={plt.Rectangle: HandlerPatch()})\n\n\nplt.show()\n</pre> # Create 3D plot fig = plt.figure(figsize = (15,9)) ax = fig.add_subplot(111, projection='3d')  # Set view angle ax.view_init(elev=None, azim=45)  # Plot polygons on different z levels  for idx in [0,1]:     poly1 = origin_hexgaon.geometry[idx]     x = poly1.centroid.x     y = poly1.centroid.y     xx_lst, yy_lst = poly1.exterior.coords.xy     poly2 = translate(poly1,xoff=(x - xx_lst[0]),yoff=(y - yy_lst[0]))     poly3 = translate(poly1,xoff=(x - xx_lst[1]),yoff=(y - yy_lst[1]))     poly4 = translate(poly1,xoff=(x - xx_lst[2]),yoff=(y - yy_lst[2]))     poly5 = translate(poly1,xoff=(x - xx_lst[3]),yoff=(y - yy_lst[3]))     poly6 = translate(poly1,xoff=(x - xx_lst[4]),yoff=(y - yy_lst[4]))     poly7 = translate(poly1,xoff=(x - xx_lst[5]),yoff=(y - yy_lst[5]))     ax.plot(*poly1.exterior.xy, zs=1, zdir='z', color='blue')     ax.plot(*poly1.exterior.xy, zs=0.5, zdir='z', color='blue')     ax.plot(*poly2.exterior.xy, zs=0.5, zdir='z', color='red')     ax.plot(*poly3.exterior.xy, zs=0.5, zdir='z', color='red')     ax.plot(*poly4.exterior.xy, zs=0.5, zdir='z', color='red')     ax.plot(*poly5.exterior.xy, zs=0.5, zdir='z', color='red')     ax.plot(*poly6.exterior.xy, zs=0.5, zdir='z', color='red')     ax.plot(*poly7.exterior.xy, zs=0.5, zdir='z', color='red')          # Get intersection       ax.plot(*poly1.intersection(poly2).intersection(poly3).exterior.xy, zs=0, zdir='z', color='green')     ax.plot(*poly1.intersection(poly3).intersection(poly4).exterior.xy, zs=0, zdir='z', color='green')     ax.plot(*poly1.intersection(poly4).intersection(poly5).exterior.xy, zs=0, zdir='z', color='green')     ax.plot(*poly1.intersection(poly5).intersection(poly6).exterior.xy, zs=0, zdir='z', color='green')     ax.plot(*poly1.intersection(poly6).intersection(poly7).exterior.xy, zs=0, zdir='z', color='green')     ax.plot(*poly1.intersection(poly7).intersection(poly2).exterior.xy, zs=0, zdir='z', color='green')  # Set axis limits ax.set_zlim(0,1) # Remove x tick labels   ax.set_xticks([]) # Remove y ticks and labels ax.set_yticks([]) # Enable y grid lines ax.yaxis.grid(True)  # Create proxy artists blue_proxy = plt.Rectangle((0,0), 1, 1, fc=\"blue\") red_proxy = plt.Rectangle((0,0), 1, 1, fc=\"red\") green_proxy = plt.Rectangle((0,0), 1, 1, fc=\"green\")  # Add legend ax.legend([blue_proxy, red_proxy, green_proxy],            [\"Original Hexagons\", \"Shifted Hexagons\", \"Ensemble Results\"],           handler_map={plt.Rectangle: HandlerPatch()})   plt.show()   In\u00a0[7]: Copied! <pre>def shift_hexagon(row, index = 0):\n    x,y = row.geometry.centroid.x, row.geometry.centroid.y\n    xx_lst, yy_lst = row.geometry.exterior.coords.xy\n    return translate(row.geometry,xoff=(x - xx_lst[index]),yoff=(y - yy_lst[index]))\n</pre> def shift_hexagon(row, index = 0):     x,y = row.geometry.centroid.x, row.geometry.centroid.y     xx_lst, yy_lst = row.geometry.exterior.coords.xy     return translate(row.geometry,xoff=(x - xx_lst[index]),yoff=(y - yy_lst[index])) In\u00a0[8]: Copied! <pre>temp = origin_hexgaon.loc[:2,:]\nfig, ax = plt.subplots()\nax.plot(*temp['geometry'][0].exterior.xy, color=\"blue\")\n\nfor i in range(6):\n    temp_1 = temp.copy()\n    temp_1['geometry'] = temp.apply(lambda x: shift_hexagon(x,i),axis=1) \n    ax.plot(*temp_1['geometry'][0].exterior.xy, color=\"red\")\n\nplt.show()\n</pre> temp = origin_hexgaon.loc[:2,:] fig, ax = plt.subplots() ax.plot(*temp['geometry'][0].exterior.xy, color=\"blue\")  for i in range(6):     temp_1 = temp.copy()     temp_1['geometry'] = temp.apply(lambda x: shift_hexagon(x,i),axis=1)      ax.plot(*temp_1['geometry'][0].exterior.xy, color=\"red\")  plt.show() In\u00a0[9]: Copied! <pre># Setup plot \nfig, ax = plt.subplots()\nax.plot(*origin_hexgaon.geometry[0].exterior.xy,color = \"blue\")\n\nfor idx in list(range(0,6)):\n    shift_hexagon_gdf = origin_hexgaon.copy()\n    shift_hexagon_gdf['geometry'] = origin_hexgaon.apply(lambda x: shift_hexagon(x,idx),axis=1)\n    ax.plot(*shift_hexagon_gdf['geometry'][0].exterior.xy, color = \"red\")\n    # intersections = intersect_with_poi(shift_hexagon_gdf)\n    # print(f'{idx} : {intersections.shape[0]}')\n    out_name = f\"../../Data/Output/Study_Area_{idx}.shp\"\n    print(out_name)\n    shift_hexagon_gdf.to_file(out_name)\n    \n# Show plot\nplt.show()\n</pre> # Setup plot  fig, ax = plt.subplots() ax.plot(*origin_hexgaon.geometry[0].exterior.xy,color = \"blue\")  for idx in list(range(0,6)):     shift_hexagon_gdf = origin_hexgaon.copy()     shift_hexagon_gdf['geometry'] = origin_hexgaon.apply(lambda x: shift_hexagon(x,idx),axis=1)     ax.plot(*shift_hexagon_gdf['geometry'][0].exterior.xy, color = \"red\")     # intersections = intersect_with_poi(shift_hexagon_gdf)     # print(f'{idx} : {intersections.shape[0]}')     out_name = f\"../../Data/Output/Study_Area_{idx}.shp\"     print(out_name)     shift_hexagon_gdf.to_file(out_name)      # Show plot plt.show() <pre>../../Data/Output/Study_Area_0.shp\n../../Data/Output/Study_Area_1.shp\n../../Data/Output/Study_Area_2.shp\n../../Data/Output/Study_Area_3.shp\n../../Data/Output/Study_Area_4.shp\n../../Data/Output/Study_Area_5.shp\n</pre> In\u00a0[12]: Copied! <pre>poi = gpd.read_file(\"../../Data/POI/SafeGraph_POI/SafeGraph_Category_DFW.shp\")\nevents = gpd.read_file(\"../../Data/Social-Events/events_in_dfw_reclass.shp\")\nprint(poi.shape)\nprint(events.shape)\n</pre> poi = gpd.read_file(\"../../Data/POI/SafeGraph_POI/SafeGraph_Category_DFW.shp\") events = gpd.read_file(\"../../Data/Social-Events/events_in_dfw_reclass.shp\") print(poi.shape) print(events.shape) <pre>(102920, 14)\n(9445, 22)\n</pre> In\u00a0[58]: Copied! <pre># Get unique POI and event types\npoi_types = poi['Category'].unique()\nevent_types = events['new_cate'].unique()\npoi_types,event_types\n</pre> # Get unique POI and event types poi_types = poi['Category'].unique() event_types = events['new_cate'].unique() poi_types,event_types Out[58]: <pre>(array(['Retail Trade', 'Professional, Scientific, and Technical Services',\n        'Health Care and Social Assistance',\n        'Other Services (except Public Administration)',\n        'Finance and Insurance', 'Accommodation and Food Services',\n        'Educational Services', 'Real Estate and Rental and Leasing',\n        'Arts, Entertainment, and Recreation',\n        'Transportation and Warehousing', 'Manufacturing',\n        'Administrative and Support and Waste Management and Remediation Services',\n        'Information', 'Public Administration', 'Wholesale Trade',\n        'Construction', 'Utilities',\n        'Management of Companies and Enterprises',\n        'Agriculture, Forestry, Fishing and Hunting'], dtype=object),\n array(['Hobbies &amp; Passions', 'Religon &amp; Identity', 'Science &amp; Education',\n        'Career &amp; Business', 'Social Activities', 'Spots &amp; Health',\n        'Movements'], dtype=object))</pre> In\u00a0[59]: Copied! <pre># Spatial joins \norigin_hexgaon = origin_hexgaon.to_crs(poi.crs)\npoi_joined = gpd.sjoin(poi,origin_hexgaon, how='left', predicate='intersects')\nevents_joined = gpd.sjoin(events,origin_hexgaon, how='left', predicate='intersects')\npoi_joined.shape\n</pre> # Spatial joins  origin_hexgaon = origin_hexgaon.to_crs(poi.crs) poi_joined = gpd.sjoin(poi,origin_hexgaon, how='left', predicate='intersects') events_joined = gpd.sjoin(events,origin_hexgaon, how='left', predicate='intersects') poi_joined.shape Out[59]: <pre>(102920, 16)</pre> In\u00a0[83]: Copied! <pre>result  = origin_hexgaon.to_crs(poi.crs).copy()\nfor event_type in event_types:\n    result[event_type] = 0\n\nfor poi_type in poi_types:\n    result[poi_type] = 0\nresult.shape\n\nfor row in poi_joined.iloc:\n    if(math.isnan(row['index_right'])):\n        pass\n    else:\n        result.loc[int(row['index_right']),(row['Category'])] += 1\n        \nfor row in events_joined.iloc:\n    if(math.isnan(row['index_right'])):\n        pass\n    else:\n        result.loc[int(row['index_right']),(row['new_cate'])] += 1\n\nresult.head()\n</pre> result  = origin_hexgaon.to_crs(poi.crs).copy() for event_type in event_types:     result[event_type] = 0  for poi_type in poi_types:     result[poi_type] = 0 result.shape  for row in poi_joined.iloc:     if(math.isnan(row['index_right'])):         pass     else:         result.loc[int(row['index_right']),(row['Category'])] += 1          for row in events_joined.iloc:     if(math.isnan(row['index_right'])):         pass     else:         result.loc[int(row['index_right']),(row['new_cate'])] += 1  result.head() Out[83]: label_num geometry Hobbies &amp; Passions Religon &amp; Identity Science &amp; Education Career &amp; Business Social Activities Spots &amp; Health Movements Retail Trade ... Transportation and Warehousing Manufacturing Administrative and Support and Waste Management and Remediation Services Information Public Administration Wholesale Trade Construction Utilities Management of Companies and Enterprises Agriculture, Forestry, Fishing and Hunting 0 0 POLYGON ((746003.453 2051234.240, 745803.453 2... 0 0 0 0 0 0 0 0 ... 0 0 0 0 0 0 0 0 0 0 1 0 POLYGON ((746603.453 2050887.830, 746403.453 2... 0 0 0 0 0 0 0 0 ... 0 0 0 0 0 0 0 0 0 0 2 0 POLYGON ((747203.453 2051234.240, 747003.453 2... 0 0 0 0 0 0 0 0 ... 0 0 0 0 0 0 0 0 0 0 3 0 POLYGON ((746603.453 2051580.650, 746403.453 2... 0 0 0 0 0 0 0 0 ... 0 0 0 0 0 0 0 0 0 0 4 0 POLYGON ((747203.453 2051927.060, 747003.453 2... 0 0 0 0 0 0 0 1 ... 0 0 1 0 1 0 0 0 0 0 <p>5 rows \u00d7 28 columns</p> In\u00a0[84]: Copied! <pre>result[list(poi_types) + list(event_types)].describe()\n</pre> result[list(poi_types) + list(event_types)].describe() Out[84]: Retail Trade Professional, Scientific, and Technical Services Health Care and Social Assistance Other Services (except Public Administration) Finance and Insurance Accommodation and Food Services Educational Services Real Estate and Rental and Leasing Arts, Entertainment, and Recreation Transportation and Warehousing ... Utilities Management of Companies and Enterprises Agriculture, Forestry, Fishing and Hunting Hobbies &amp; Passions Religon &amp; Identity Science &amp; Education Career &amp; Business Social Activities Spots &amp; Health Movements count 22504.000000 22504.000000 22504.000000 22504.000000 22504.000000 22504.000000 22504.000000 22504.00000 22504.00000 22504.000000 ... 22504.000000 22504.000000 22504.000000 22504.000000 22504.000000 22504.000000 22504.000000 22504.000000 22504.000000 22504.000000 mean 1.110158 0.082341 0.791326 0.751155 0.327186 0.717250 0.157261 0.12069 0.22947 0.055012 ... 0.004621 0.000355 0.000311 0.113846 0.037371 0.058478 0.038215 0.046170 0.100249 0.021241 std 3.235405 0.363075 2.925432 2.085968 1.133805 2.310554 0.512322 0.49439 0.69607 0.266807 ... 0.067825 0.018852 0.017634 1.810420 0.838132 1.120660 0.768530 0.864222 1.479839 0.528604 min 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.00000 0.00000 0.000000 ... 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 25% 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.00000 0.00000 0.000000 ... 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 50% 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.00000 0.00000 0.000000 ... 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 75% 1.000000 0.000000 0.000000 1.000000 0.000000 0.000000 0.000000 0.00000 0.00000 0.000000 ... 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 max 123.000000 9.000000 167.000000 42.000000 25.000000 65.000000 9.000000 10.00000 13.00000 6.000000 ... 1.000000 1.000000 1.000000 92.000000 67.000000 65.000000 45.000000 58.000000 63.000000 28.000000 <p>8 rows \u00d7 26 columns</p> In\u00a0[91]: Copied! <pre>column_mapping = {\n    'Career &amp; Business': 'CareerBiz',\n    'Hobbies &amp; Passions': 'HobbiesPas', \n    'Movements': 'Movements',\n    'Religon &amp; Identity': 'ReligionId',\n    'Science &amp; Education': 'SciEdu',\n    'Social Activities': 'SocialAct',\n    'Spots &amp; Health': 'SportHeal', \n    'Accommodation and Food Services': 'AccomFood',\n    'Administrative and Support and Waste Management and Remediation Services': 'AdminSup',\n    'Agriculture, Forestry, Fishing and Hunting': 'AgriFish', \n    'Arts, Entertainment, and Recreation': 'ArtsRec',\n    'Construction': 'Construct',\n    'Educational Services': 'EduSvcs', \n    'Finance and Insurance': 'FinanceIns',\n    'Health Care and Social Assistance': 'HealthCare',\n    'Information': 'Info',\n    'Management of Companies and Enterprises': 'MgmtEnterp',\n    'Manufacturing': 'Manufac',\n    'Other Services (except Public Administration)': 'OtherSvcs',\n    'Professional, Scientific, and Technical Services': 'ProfSvcs',\n    'Public Administration': 'PubAdmin',\n    'Real Estate and Rental and Leasing': 'RealEstate',\n    'Retail Trade': 'Retail',\n    'Transportation and Warehousing': 'TransWare',\n    'Utilities': 'Utilities',\n    'Wholesale Trade': 'Wholesale'\n}\n# Rename the columns using the column_mapping dictionary\nresult.rename(columns=column_mapping, inplace=True)\n\nresult.head()\n</pre> column_mapping = {     'Career &amp; Business': 'CareerBiz',     'Hobbies &amp; Passions': 'HobbiesPas',      'Movements': 'Movements',     'Religon &amp; Identity': 'ReligionId',     'Science &amp; Education': 'SciEdu',     'Social Activities': 'SocialAct',     'Spots &amp; Health': 'SportHeal',      'Accommodation and Food Services': 'AccomFood',     'Administrative and Support and Waste Management and Remediation Services': 'AdminSup',     'Agriculture, Forestry, Fishing and Hunting': 'AgriFish',      'Arts, Entertainment, and Recreation': 'ArtsRec',     'Construction': 'Construct',     'Educational Services': 'EduSvcs',      'Finance and Insurance': 'FinanceIns',     'Health Care and Social Assistance': 'HealthCare',     'Information': 'Info',     'Management of Companies and Enterprises': 'MgmtEnterp',     'Manufacturing': 'Manufac',     'Other Services (except Public Administration)': 'OtherSvcs',     'Professional, Scientific, and Technical Services': 'ProfSvcs',     'Public Administration': 'PubAdmin',     'Real Estate and Rental and Leasing': 'RealEstate',     'Retail Trade': 'Retail',     'Transportation and Warehousing': 'TransWare',     'Utilities': 'Utilities',     'Wholesale Trade': 'Wholesale' } # Rename the columns using the column_mapping dictionary result.rename(columns=column_mapping, inplace=True)  result.head() Out[91]: label_num geometry HobbiesPas ReligionId SciEdu CareerBiz SocialAct SportHeal Movements Retail ... TransWare Manufac AdminSup Info PubAdmin Wholesale Construct Utilities MgmtEnterp AgriFish 0 0 POLYGON ((746003.453 2051234.240, 745803.453 2... 0 0 0 0 0 0 0 0 ... 0 0 0 0 0 0 0 0 0 0 1 0 POLYGON ((746603.453 2050887.830, 746403.453 2... 0 0 0 0 0 0 0 0 ... 0 0 0 0 0 0 0 0 0 0 2 0 POLYGON ((747203.453 2051234.240, 747003.453 2... 0 0 0 0 0 0 0 0 ... 0 0 0 0 0 0 0 0 0 0 3 0 POLYGON ((746603.453 2051580.650, 746403.453 2... 0 0 0 0 0 0 0 0 ... 0 0 0 0 0 0 0 0 0 0 4 0 POLYGON ((747203.453 2051927.060, 747003.453 2... 0 0 0 0 0 0 0 1 ... 0 0 1 0 1 0 0 0 0 0 <p>5 rows \u00d7 28 columns</p> In\u00a0[92]: Copied! <pre>result.columns\n</pre> result.columns Out[92]: <pre>Index(['label_num', 'geometry', 'HobbiesPas', 'ReligionId', 'SciEdu',\n       'CareerBiz', 'SocialAct', 'SportHeal', 'Movements', 'Retail',\n       'ProfSvcs', 'HealthCare', 'OtherSvcs', 'FinanceIns', 'AccomFood',\n       'EduSvcs', 'RealEstate', 'ArtsRec', 'TransWare', 'Manufac', 'AdminSup',\n       'Info', 'PubAdmin', 'Wholesale', 'Construct', 'Utilities', 'MgmtEnterp',\n       'AgriFish'],\n      dtype='object')</pre> In\u00a0[85]: Copied! <pre># Define a function to transform values\ndef transform_value(value):\n    return 1 if value &gt; 0 else 0\n\n# Apply the transformation to the DataFrame\nresult.loc[:,(list(poi_types) + list(event_types))] = result.loc[:,(list(poi_types) + list(event_types))].applymap(transform_value)\n</pre> # Define a function to transform values def transform_value(value):     return 1 if value &gt; 0 else 0  # Apply the transformation to the DataFrame result.loc[:,(list(poi_types) + list(event_types))] = result.loc[:,(list(poi_types) + list(event_types))].applymap(transform_value) In\u00a0[86]: Copied! <pre>for cate in list(poi_types) + list(event_types):\n    print(cate)\n    print(result[cate].value_counts())\n</pre> for cate in list(poi_types) + list(event_types):     print(cate)     print(result[cate].value_counts()) <pre>Retail Trade\nRetail Trade\n0    15688\n1     6816\nName: count, dtype: int64\nProfessional, Scientific, and Technical Services\nProfessional, Scientific, and Technical Services\n0    21079\n1     1425\nName: count, dtype: int64\nHealth Care and Social Assistance\nHealth Care and Social Assistance\n0    17069\n1     5435\nName: count, dtype: int64\nOther Services (except Public Administration)\nOther Services (except Public Administration)\n0    16620\n1     5884\nName: count, dtype: int64\nFinance and Insurance\nFinance and Insurance\n0    19165\n1     3339\nName: count, dtype: int64\nAccommodation and Food Services\nAccommodation and Food Services\n0    17668\n1     4836\nName: count, dtype: int64\nEducational Services\nEducational Services\n0    19890\n1     2614\nName: count, dtype: int64\nReal Estate and Rental and Leasing\nReal Estate and Rental and Leasing\n0    20665\n1     1839\nName: count, dtype: int64\nArts, Entertainment, and Recreation\nArts, Entertainment, and Recreation\n0    19198\n1     3306\nName: count, dtype: int64\nTransportation and Warehousing\nTransportation and Warehousing\n0    21439\n1     1065\nName: count, dtype: int64\nManufacturing\nManufacturing\n0    21716\n1      788\nName: count, dtype: int64\nAdministrative and Support and Waste Management and Remediation Services\nAdministrative and Support and Waste Management and Remediation Services\n0    21629\n1      875\nName: count, dtype: int64\nInformation\nInformation\n0    21411\n1     1093\nName: count, dtype: int64\nPublic Administration\nPublic Administration\n0    21725\n1      779\nName: count, dtype: int64\nWholesale Trade\nWholesale Trade\n0    21868\n1      636\nName: count, dtype: int64\nConstruction\nConstruction\n0    22326\n1      178\nName: count, dtype: int64\nUtilities\nUtilities\n0    22400\n1      104\nName: count, dtype: int64\nManagement of Companies and Enterprises\nManagement of Companies and Enterprises\n0    22496\n1        8\nName: count, dtype: int64\nAgriculture, Forestry, Fishing and Hunting\nAgriculture, Forestry, Fishing and Hunting\n0    22497\n1        7\nName: count, dtype: int64\nHobbies &amp; Passions\nHobbies &amp; Passions\n0    22231\n1      273\nName: count, dtype: int64\nReligon &amp; Identity\nReligon &amp; Identity\n0    22374\n1      130\nName: count, dtype: int64\nScience &amp; Education\nScience &amp; Education\n0    22344\n1      160\nName: count, dtype: int64\nCareer &amp; Business\nCareer &amp; Business\n0    22374\n1      130\nName: count, dtype: int64\nSocial Activities\nSocial Activities\n0    22268\n1      236\nName: count, dtype: int64\nSpots &amp; Health\nSpots &amp; Health\n0    22212\n1      292\nName: count, dtype: int64\nMovements\nMovements\n0    22421\n1       83\nName: count, dtype: int64\n</pre> In\u00a0[93]: Copied! <pre>for idx in list(range(0,6)):\n    input_file = f\"../../Data/Output/Study_Area_{idx}.shp\"\n    print(input_file)\n    temp = gpd.read_file(input_file)\n    # Spatial joins \n    temp = temp.to_crs(poi.crs)\n    poi_joined = gpd.sjoin(poi,temp, how='left', predicate='intersects')\n    events_joined = gpd.sjoin(events,temp, how='left', predicate='intersects')\n    \n    for event_type in event_types:\n        temp[event_type] = 0\n\n    for poi_type in poi_types:\n        temp[poi_type] = 0\n        \n    for row in poi_joined.iloc:\n        if(math.isnan(row['index_right'])):\n            pass\n        else:\n            temp.loc[int(row['index_right']),(row['Category'])] += 1\n            \n    for row in events_joined.iloc:\n        if(math.isnan(row['index_right'])):\n            pass\n        else:\n            temp.loc[int(row['index_right']),(row['new_cate'])] += 1\n            \n    # Apply the transformation to the DataFrame\n    temp.loc[:,(list(poi_types) + list(event_types))] = temp.loc[:,(list(poi_types) + list(event_types))].applymap(transform_value)\n    \n    # Rename the columns using the column_mapping dictionary\n    temp.rename(columns=column_mapping, inplace=True)\n    \n    out_name = f\"../../Data/Shift/Event_POI_occur_{idx}.shp\"\n    print(out_name)\n    temp.to_file(out_name)\n</pre> for idx in list(range(0,6)):     input_file = f\"../../Data/Output/Study_Area_{idx}.shp\"     print(input_file)     temp = gpd.read_file(input_file)     # Spatial joins      temp = temp.to_crs(poi.crs)     poi_joined = gpd.sjoin(poi,temp, how='left', predicate='intersects')     events_joined = gpd.sjoin(events,temp, how='left', predicate='intersects')          for event_type in event_types:         temp[event_type] = 0      for poi_type in poi_types:         temp[poi_type] = 0              for row in poi_joined.iloc:         if(math.isnan(row['index_right'])):             pass         else:             temp.loc[int(row['index_right']),(row['Category'])] += 1                  for row in events_joined.iloc:         if(math.isnan(row['index_right'])):             pass         else:             temp.loc[int(row['index_right']),(row['new_cate'])] += 1                  # Apply the transformation to the DataFrame     temp.loc[:,(list(poi_types) + list(event_types))] = temp.loc[:,(list(poi_types) + list(event_types))].applymap(transform_value)          # Rename the columns using the column_mapping dictionary     temp.rename(columns=column_mapping, inplace=True)          out_name = f\"../../Data/Shift/Event_POI_occur_{idx}.shp\"     print(out_name)     temp.to_file(out_name) <pre>../../Data/Output/Study_Area_0.shp\n../../Data/Shift/Event_POI_occur_0.shp\n../../Data/Output/Study_Area_1.shp\n../../Data/Shift/Event_POI_occur_1.shp\n../../Data/Output/Study_Area_2.shp\n../../Data/Shift/Event_POI_occur_2.shp\n../../Data/Output/Study_Area_3.shp\n../../Data/Shift/Event_POI_occur_3.shp\n../../Data/Output/Study_Area_4.shp\n../../Data/Shift/Event_POI_occur_4.shp\n../../Data/Output/Study_Area_5.shp\n../../Data/Shift/Event_POI_occur_5.shp\n</pre>"},{"location":"Geoprocessing/Hexagon_shift/#read-data","title":"Read data\u00b6","text":""},{"location":"Geoprocessing/Hexagon_shift/#shift-hexagon-to-6-corners","title":"Shift hexagon to 6 corners\u00b6","text":""},{"location":"Geoprocessing/Hexagon_shift/#3d-plot","title":"3D plot\u00b6","text":""},{"location":"Geoprocessing/Hexagon_shift/#execute-shift-to-all-hexagons","title":"Execute shift to all hexagons\u00b6","text":""},{"location":"Geoprocessing/Hexagon_shift/#calculate-poi-and-social-events-presence","title":"Calculate POI and Social events presence\u00b6","text":""},{"location":"Geoprocessing/Hexagon_shift/#execute-for-all-shift-area","title":"Execute for all shift area\u00b6","text":""},{"location":"Geoprocessing/Optimize-GSS-with-tessellation/","title":"Optimal Tessellation","text":"<p>Author</p> <ul> <li>Dr. Daniel Griffith</li> <li>Dr. Yongwan Chun</li> <li>Yalin Yang</li> </ul> In\u00a0[1]: Copied! <pre>import geopandas as gpd\nimport matplotlib.pyplot as plt\nfrom sqlalchemy import create_engine\nfrom sqlalchemy import inspect\nimport os\n</pre> import geopandas as gpd import matplotlib.pyplot as plt from sqlalchemy import create_engine from sqlalchemy import inspect import os In\u00a0[2]: Copied! <pre>host = \"localhost\"\ndatabase = \"spatialSampling\"\nuser = os.getenv('SQL_USER')\npassword = os.getenv('SQL_PASSWORD')\nconnection_string = f\"postgresql://{user}:{password}@{host}/{database}\"\nengine = create_engine(connection_string)\ninsp = inspect(engine)\ninsp.get_table_names()\n</pre> host = \"localhost\" database = \"spatialSampling\" user = os.getenv('SQL_USER') password = os.getenv('SQL_PASSWORD') connection_string = f\"postgresql://{user}:{password}@{host}/{database}\" engine = create_engine(connection_string) insp = inspect(engine) insp.get_table_names() Out[2]: <pre>['DFW_CMA_300KM_Hexagon', 'spatial_ref_sys', 'DFW_CMA']</pre> In\u00a0[3]: Copied! <pre>sql = 'SELECT * FROM public.\"DFW_CMA\"'\ndfw_cma = gpd.read_postgis(sql, con=engine)\ndfw_cma = dfw_cma.to_crs(epsg=32138)\ndfw_cma.Shape_Area = dfw_cma.area\nprint(dfw_cma.shape)\ndfw_cma.head()\n</pre> sql = 'SELECT * FROM public.\"DFW_CMA\"' dfw_cma = gpd.read_postgis(sql, con=engine) dfw_cma = dfw_cma.to_crs(epsg=32138) dfw_cma.Shape_Area = dfw_cma.area print(dfw_cma.shape) dfw_cma.head() <pre>(19, 21)\n</pre> Out[3]: GISJOIN STATEFP COUNTYFP COUNTYNS GEOID NAME NAMELSAD LSAD CLASSFP MTFCC ... CBSAFP METDIVFP FUNCSTAT ALAND AWATER INTPTLAT INTPTLON Shape_Leng Shape_Area geom 0 G4000130 40 013 01101794 40013 Bryan Bryan County 06 H1 G4020 ... 20460 None A 2.342004e+09 102054905.0 +33.9640035 -096.2651348 324324.430753 2.444062e+09 POLYGON ((792955.077 2278129.472, 792955.362 2... 1 G4800850 48 085 01383828 48085 Collin Collin County 06 H1 G4020 ... 19100 19124 A 2.178839e+09 115550728.0 +33.1944942 -096.5794280 195281.272759 2.293828e+09 POLYGON ((796763.996 2193950.719, 796757.978 2... 2 G4800970 48 097 01383834 48097 Cooke Cooke County 06 H1 G4020 ... 23620 None A 2.265790e+09 61319327.0 +33.6391964 -097.2103433 299439.594613 2.326772e+09 POLYGON ((743773.787 2254188.355, 743774.126 2... 3 G4801130 48 113 01383842 48113 Dallas Dallas County 06 H1 G4020 ... 19100 19124 A 2.261201e+09 91898226.0 +32.7669866 -096.7784238 194013.898402 2.352570e+09 POLYGON ((754743.028 2147679.133, 754804.527 2... 4 G4801210 48 121 01383847 48121 Denton Denton County 06 H1 G4020 ... 19100 19124 A 2.275318e+09 189471919.0 +33.2051320 -097.1211403 198961.123604 2.464192e+09 POLYGON ((744718.508 2195102.423, 744795.176 2... <p>5 rows \u00d7 21 columns</p> In\u00a0[4]: Copied! <pre>sql = 'SELECT * FROM public.\"DFW_CMA_300KM_Hexagon\"'\ndfw_cma_300km_hexagon = gpd.read_postgis(sql, con=engine)\ndfw_cma_300km_hexagon = dfw_cma_300km_hexagon.to_crs(epsg=32138)\ndfw_cma_300km_hexagon.Shape_Area = dfw_cma_300km_hexagon.area\nprint(dfw_cma_300km_hexagon.shape)\ndfw_cma_300km_hexagon.head()\n</pre> sql = 'SELECT * FROM public.\"DFW_CMA_300KM_Hexagon\"' dfw_cma_300km_hexagon = gpd.read_postgis(sql, con=engine) dfw_cma_300km_hexagon = dfw_cma_300km_hexagon.to_crs(epsg=32138) dfw_cma_300km_hexagon.Shape_Area = dfw_cma_300km_hexagon.area print(dfw_cma_300km_hexagon.shape) dfw_cma_300km_hexagon.head() <pre>(179, 4)\n</pre> Out[4]: Shape_Leng Shape_Area GRID_ID geom 0 64474.195886 3.000000e+08 L-15 POLYGON ((776093.007 2020574.580, 770720.157 2... 1 64474.195986 3.000000e+08 M-15 POLYGON ((792211.556 2011268.532, 786838.706 2... 2 64474.195886 3.000000e+08 N-15 POLYGON ((808330.105 2020574.580, 802957.255 2... 3 64474.195886 3.000000e+08 L-14 POLYGON ((776093.007 2039186.677, 770720.157 2... 4 64474.195986 3.000000e+08 M-14 POLYGON ((792211.556 2029880.629, 786838.706 2... In\u00a0[5]: Copied! <pre>dfw_cma[\"boundary\"] = dfw_cma.boundary\nax = dfw_cma_300km_hexagon[\"geom\"].plot(figsize=(15, 12))\ndfw_cma[\"boundary\"].plot(ax=ax, color=\"red\")\n</pre> dfw_cma[\"boundary\"] = dfw_cma.boundary ax = dfw_cma_300km_hexagon[\"geom\"].plot(figsize=(15, 12)) dfw_cma[\"boundary\"].plot(ax=ax, color=\"red\") Out[5]: <pre>&lt;Axes: &gt;</pre> In\u00a0[\u00a0]: Copied! <pre>\n</pre> In\u00a0[6]: Copied! <pre># Dissolve all polygons in dfw_cma into a single boundary polygon\ndfw_cma_boundary = dfw_cma.dissolve()\n\n# Clip the dfw_cma_800km_hexagon with the dissolved boundary polygon\nclipped_hexagons = gpd.clip(dfw_cma_300km_hexagon, dfw_cma_boundary)\nclipped_hexagons[\"area\"] = clipped_hexagons.area\n\n# Filter hexagons with area less than 300 square kilometers\nsmall_hexagons = clipped_hexagons[clipped_hexagons['area'] &lt; 299999990]\n\n# Plotting\nfig, ax = plt.subplots(figsize=(15, 12))\nclipped_hexagons.plot(ax=ax, color='lightblue', label='Complete hexagons')  # Plot all hexagons\nclipped_hexagons.boundary.plot(ax=ax) \nsmall_hexagons.plot(ax=ax, color='yellow', label='Cut-off hexagons')  # Plot smaller hexagons in green\ndfw_cma_boundary.boundary.plot(ax=ax, color=\"red\", label='DFW Boundary' )\nplt.show()\n</pre> # Dissolve all polygons in dfw_cma into a single boundary polygon dfw_cma_boundary = dfw_cma.dissolve()  # Clip the dfw_cma_800km_hexagon with the dissolved boundary polygon clipped_hexagons = gpd.clip(dfw_cma_300km_hexagon, dfw_cma_boundary) clipped_hexagons[\"area\"] = clipped_hexagons.area  # Filter hexagons with area less than 300 square kilometers small_hexagons = clipped_hexagons[clipped_hexagons['area'] &lt; 299999990]  # Plotting fig, ax = plt.subplots(figsize=(15, 12)) clipped_hexagons.plot(ax=ax, color='lightblue', label='Complete hexagons')  # Plot all hexagons clipped_hexagons.boundary.plot(ax=ax)  small_hexagons.plot(ax=ax, color='yellow', label='Cut-off hexagons')  # Plot smaller hexagons in green dfw_cma_boundary.boundary.plot(ax=ax, color=\"red\", label='DFW Boundary' ) plt.show() In\u00a0[7]: Copied! <pre>small_hexagons[\"area\"].describe()\n</pre> small_hexagons[\"area\"].describe() Out[7]: <pre>count    7.400000e+01\nmean     1.406795e+08\nstd      9.577313e+07\nmin      7.878174e+05\n25%      5.251988e+07\n50%      1.320315e+08\n75%      2.357819e+08\nmax      2.999232e+08\nName: area, dtype: float64</pre> In\u00a0[8]: Copied! <pre>import itertools\nimport random\nimport math\n</pre> import itertools import random import math In\u00a0[9]: Copied! <pre>def reorder_list(input_list):\n    unique_elements = list(set(input_list))\n    element_to_index = {element: index for index, element in enumerate(unique_elements)}\n    return [element_to_index[element] for element in input_list]\n\ndef merge_into_groups(numbers, target_sum, max_iter=100):\n    \"\"\"\n    Merge numbers into groups such that each group has a sum closest to the target sum.\n\n    Args:\n        numbers (list): List of numbers to be grouped.\n        target_sum (float): Target sum for each group.\n        max_iter (int): Maximum number of iterations to run.\n\n    Returns:\n        list: List indicating the group each number belongs to.\n    \"\"\"\n    # Initialize groups randomly\n    groups = [i % len(numbers) for i in range(len(numbers))]\n    # Initial group sums\n    group_sums = [x for x in numbers]\n\n    iter_count = 0\n    while iter_count &lt; max_iter:\n        iter_count += 1\n\n        # Track if any change occurs in this iteration\n        changed = False\n\n        for num_idx, num in enumerate(numbers):\n            current_group = groups[num_idx]\n            current_sum = group_sums[current_group]\n\n            # Calculate the difference if the number is added to the current group\n            best_diff = abs(current_sum - target_sum)\n            best_group = current_group\n            \n            for group in list(set(groups)):\n                if group!= current_group:\n                    neighbor_sum = group_sums[group]\n                    diff_neighbor_group = abs(neighbor_sum + num - target_sum)\n                    if diff_neighbor_group &lt; best_diff:\n                        best_diff = diff_neighbor_group\n                        best_group = group\n\n            if best_group != current_group:\n                # Move the number to the best group\n                groups[num_idx] = best_group\n                group_sums[current_group] -= num\n                group_sums[best_group] += num\n                changed = True\n\n        if not changed:\n            break\n\n    return numbers,groups\n</pre> def reorder_list(input_list):     unique_elements = list(set(input_list))     element_to_index = {element: index for index, element in enumerate(unique_elements)}     return [element_to_index[element] for element in input_list]  def merge_into_groups(numbers, target_sum, max_iter=100):     \"\"\"     Merge numbers into groups such that each group has a sum closest to the target sum.      Args:         numbers (list): List of numbers to be grouped.         target_sum (float): Target sum for each group.         max_iter (int): Maximum number of iterations to run.      Returns:         list: List indicating the group each number belongs to.     \"\"\"     # Initialize groups randomly     groups = [i % len(numbers) for i in range(len(numbers))]     # Initial group sums     group_sums = [x for x in numbers]      iter_count = 0     while iter_count &lt; max_iter:         iter_count += 1          # Track if any change occurs in this iteration         changed = False          for num_idx, num in enumerate(numbers):             current_group = groups[num_idx]             current_sum = group_sums[current_group]              # Calculate the difference if the number is added to the current group             best_diff = abs(current_sum - target_sum)             best_group = current_group                          for group in list(set(groups)):                 if group!= current_group:                     neighbor_sum = group_sums[group]                     diff_neighbor_group = abs(neighbor_sum + num - target_sum)                     if diff_neighbor_group &lt; best_diff:                         best_diff = diff_neighbor_group                         best_group = group              if best_group != current_group:                 # Move the number to the best group                 groups[num_idx] = best_group                 group_sums[current_group] -= num                 group_sums[best_group] += num                 changed = True          if not changed:             break      return numbers,groups In\u00a0[10]: Copied! <pre>def calculate_group_sums(numbers,groups):\n    group_assignment = groups\n    num_groups = max(group_assignment) + 1\n    group_sums = [0] * num_groups\n    \n    for value, group in zip(numbers, group_assignment):\n        group_sums[group] += value\n        \n    return [x for x in group_sums if x !=0]\n\n# Example usage:\nnumbers = [10, 20, 30, 40, 50, 60] \nnumbers,groups = merge_into_groups(numbers,100)\ngroup_sums = calculate_group_sums(numbers,groups)\nprint(\"Group sums:\", group_sums)\n</pre> def calculate_group_sums(numbers,groups):     group_assignment = groups     num_groups = max(group_assignment) + 1     group_sums = [0] * num_groups          for value, group in zip(numbers, group_assignment):         group_sums[group] += value              return [x for x in group_sums if x !=0]  # Example usage: numbers = [10, 20, 30, 40, 50, 60]  numbers,groups = merge_into_groups(numbers,100) group_sums = calculate_group_sums(numbers,groups) print(\"Group sums:\", group_sums)  <pre>Group sums: [120, 90]\n</pre> In\u00a0[11]: Copied! <pre>def optimize_merge(numbers, target_sum, max_iter = 300, optimize_func = lambda x: max(x) - min(x)):\n    \n    numbers,best_group_idx = merge_into_groups(numbers, target_sum)\n    group_sum = [x-target_sum for x  in calculate_group_sums(numbers, best_group_idx)]\n    best_result = optimize_func(group_sum) \n    # print(f\"group sum: {group_sum}, result: {best_result}\")\n    \n    best_order = numbers\n            \n    for i in list(range(max_iter)):\n        random.shuffle(numbers)\n        numbers,temp_group_idx = merge_into_groups(numbers, target_sum)\n        group_sum = [x-target_sum for x  in calculate_group_sums(numbers, temp_group_idx)]\n        temp_result = optimize_func(group_sum) \n        if temp_result &lt; best_result:\n            # print(f\"group sum: {group_sum}, result: {temp_result}\")\n            best_result = temp_result\n            best_order = [x for x in numbers]\n            best_group_idx = temp_group_idx\n        \n    return best_order,best_group_idx\n</pre> def optimize_merge(numbers, target_sum, max_iter = 300, optimize_func = lambda x: max(x) - min(x)):          numbers,best_group_idx = merge_into_groups(numbers, target_sum)     group_sum = [x-target_sum for x  in calculate_group_sums(numbers, best_group_idx)]     best_result = optimize_func(group_sum)      # print(f\"group sum: {group_sum}, result: {best_result}\")          best_order = numbers                  for i in list(range(max_iter)):         random.shuffle(numbers)         numbers,temp_group_idx = merge_into_groups(numbers, target_sum)         group_sum = [x-target_sum for x  in calculate_group_sums(numbers, temp_group_idx)]         temp_result = optimize_func(group_sum)          if temp_result &lt; best_result:             # print(f\"group sum: {group_sum}, result: {temp_result}\")             best_result = temp_result             best_order = [x for x in numbers]             best_group_idx = temp_group_idx              return best_order,best_group_idx In\u00a0[12]: Copied! <pre># Example usage:\nnumbers = [10, 20, 30, 40, 50, 60]\n# numbers = [60,50,40,30,20,10]\ntarget_sum = 100\noptimized_order = optimize_merge(numbers, target_sum)\n# result = merge_into_groups(optimized_order, target_sum)\nprint(\"Group assignment:\", optimized_order)\n</pre> # Example usage: numbers = [10, 20, 30, 40, 50, 60] # numbers = [60,50,40,30,20,10] target_sum = 100 optimized_order = optimize_merge(numbers, target_sum) # result = merge_into_groups(optimized_order, target_sum) print(\"Group assignment:\", optimized_order) <pre>Group assignment: ([40, 60, 10, 50, 20, 30], [1, 1, 1, 5, 5, 5])\n</pre> In\u00a0[13]: Copied! <pre>random.seed(10)\n# Example usage\nnumbers = list(small_hexagons[\"area\"])\ntarget_sum = 300000000\nnumbers, best_group_idx = optimize_merge(numbers, target_sum)\nvalue_to_group = {value: group for value, group in zip(numbers,best_group_idx)}\nsmall_hexagons.loc[:,'group'] = small_hexagons['area'].map(value_to_group)\nsmall_hexagons.loc[:,'group'] = reorder_list(small_hexagons.loc[:,'group'])\ndf = small_hexagons[[\"area\",\"group\"]].groupby(\"group\").sum()\nprint(df.shape)\ndf.describe()\n</pre> random.seed(10) # Example usage numbers = list(small_hexagons[\"area\"]) target_sum = 300000000 numbers, best_group_idx = optimize_merge(numbers, target_sum) value_to_group = {value: group for value, group in zip(numbers,best_group_idx)} small_hexagons.loc[:,'group'] = small_hexagons['area'].map(value_to_group) small_hexagons.loc[:,'group'] = reorder_list(small_hexagons.loc[:,'group']) df = small_hexagons[[\"area\",\"group\"]].groupby(\"group\").sum() print(df.shape) df.describe() <pre>(35, 1)\n</pre> <pre>c:\\Users\\yyang\\.conda\\envs\\geo\\lib\\site-packages\\geopandas\\geodataframe.py:1538: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  super().__setitem__(key, value)\n</pre> Out[13]: area count 3.500000e+01 mean 2.974367e+08 std 1.098920e+07 min 2.717068e+08 25% 2.989715e+08 50% 3.004079e+08 75% 3.031861e+08 max 3.111567e+08 In\u00a0[14]: Copied! <pre># Plot the hexagons\nax = small_hexagons.plot(\"group\", legend=True, cmap=\"Accent\", figsize=(15, 12))\n\n# Add text labels for each hexagon\nfor idx, row in small_hexagons.iterrows():\n    ax.annotate(text=row[\"group\"], xy=(row.geom.centroid.x, row.geom.centroid.y),\n                ha='center', va='center', fontsize=16)\n\nplt.show()\n</pre> # Plot the hexagons ax = small_hexagons.plot(\"group\", legend=True, cmap=\"Accent\", figsize=(15, 12))  # Add text labels for each hexagon for idx, row in small_hexagons.iterrows():     ax.annotate(text=row[\"group\"], xy=(row.geom.centroid.x, row.geom.centroid.y),                 ha='center', va='center', fontsize=16)  plt.show() In\u00a0[15]: Copied! <pre>from scipy.spatial.distance import cdist\nimport pandas as pd\nimport numpy as np\n</pre> from scipy.spatial.distance import cdist import pandas as pd import numpy as np  In\u00a0[16]: Copied! <pre>def merge_into_groups_with_distance(numbers, target_sum, distance_matrix, distance_weight=0.3, max_iter=100):\n    \"\"\"\n    Merge numbers into groups such that each group has a sum closest to the target sum, considering both area and distance.\n\n    Args:\n        numbers (list): List of numbers to be grouped.\n        target_sum (float): Target sum for each group.\n        distance_matrix (numpy.ndarray): Pairwise distance matrix between numbers.\n        distance_weight (float): Weight parameter controlling the influence of distance in clustering (0 to 1).\n        max_iter (int): Maximum number of iterations to run.\n\n    Returns:\n        list: List indicating the group each number belongs to.\n    \"\"\"\n    # Initialize groups randomly\n    groups = [i % len(numbers) for i in range(len(numbers))]\n    \n    # Initial group sums\n    group_sums = numbers.copy()\n\n    iter_count = 0\n    while iter_count &lt; max_iter:\n        iter_count += 1\n\n        # Track if any change occurs in this iteration\n        changed = False\n\n        for num_idx, num in enumerate(numbers):\n            current_group = groups[num_idx]\n            current_sum = group_sums[current_group]\n\n            # Calculate the difference if the number is added to the current group\n            best_diff = (abs(current_sum - target_sum) / target_sum  )* (1 - distance_weight) # Normalize target sum\n            # best_diff = abs(current_sum - target_sum) / target_sum   # Normalize target sum\n\n            best_group = current_group\n            for group_idx in set(groups):\n                if group_idx!= current_group and group_sums[group_idx] &gt; 0:\n                    neighbor_sum = group_sums[group_idx]\n                    diff_neighbor_group = abs(neighbor_sum + num - target_sum) / target_sum  # Normalize target sum\n                    \n                    # Consider distance if distance_weight &gt; 0\n                    if distance_weight &gt; 0:\n                        if distance_weight == 1:\n                            return groups\n                        # Find the index of the last element in the group\n                        last_in_group_idx = max([i for i, g in enumerate(groups) if g == group_idx])\n                        # Retrieve the distance of the last element in the group and normalize\n                        distance = distance_matrix[num_idx, last_in_group_idx] / np.max(distance_matrix)\n                        # Incorporate distance into the difference calculation\n                        # diff_neighbor_group = diff_neighbor_group + (distance_weight / (1-distance_weight)) * distance\n                        diff_neighbor_group = diff_neighbor_group * (1 - distance_weight) + distance_weight  * distance\n\n                    if diff_neighbor_group &lt; best_diff:\n                        best_diff = diff_neighbor_group\n                        best_group = group_idx\n\n            if best_group != current_group:\n                # Move the number to the best group\n                groups[num_idx] = best_group\n                group_sums[current_group] -= num\n                group_sums[best_group] += num\n                changed = True\n\n        if not changed:\n            break\n\n    return numbers,reorder_list(groups)\n</pre> def merge_into_groups_with_distance(numbers, target_sum, distance_matrix, distance_weight=0.3, max_iter=100):     \"\"\"     Merge numbers into groups such that each group has a sum closest to the target sum, considering both area and distance.      Args:         numbers (list): List of numbers to be grouped.         target_sum (float): Target sum for each group.         distance_matrix (numpy.ndarray): Pairwise distance matrix between numbers.         distance_weight (float): Weight parameter controlling the influence of distance in clustering (0 to 1).         max_iter (int): Maximum number of iterations to run.      Returns:         list: List indicating the group each number belongs to.     \"\"\"     # Initialize groups randomly     groups = [i % len(numbers) for i in range(len(numbers))]          # Initial group sums     group_sums = numbers.copy()      iter_count = 0     while iter_count &lt; max_iter:         iter_count += 1          # Track if any change occurs in this iteration         changed = False          for num_idx, num in enumerate(numbers):             current_group = groups[num_idx]             current_sum = group_sums[current_group]              # Calculate the difference if the number is added to the current group             best_diff = (abs(current_sum - target_sum) / target_sum  )* (1 - distance_weight) # Normalize target sum             # best_diff = abs(current_sum - target_sum) / target_sum   # Normalize target sum              best_group = current_group             for group_idx in set(groups):                 if group_idx!= current_group and group_sums[group_idx] &gt; 0:                     neighbor_sum = group_sums[group_idx]                     diff_neighbor_group = abs(neighbor_sum + num - target_sum) / target_sum  # Normalize target sum                                          # Consider distance if distance_weight &gt; 0                     if distance_weight &gt; 0:                         if distance_weight == 1:                             return groups                         # Find the index of the last element in the group                         last_in_group_idx = max([i for i, g in enumerate(groups) if g == group_idx])                         # Retrieve the distance of the last element in the group and normalize                         distance = distance_matrix[num_idx, last_in_group_idx] / np.max(distance_matrix)                         # Incorporate distance into the difference calculation                         # diff_neighbor_group = diff_neighbor_group + (distance_weight / (1-distance_weight)) * distance                         diff_neighbor_group = diff_neighbor_group * (1 - distance_weight) + distance_weight  * distance                      if diff_neighbor_group &lt; best_diff:                         best_diff = diff_neighbor_group                         best_group = group_idx              if best_group != current_group:                 # Move the number to the best group                 groups[num_idx] = best_group                 group_sums[current_group] -= num                 group_sums[best_group] += num                 changed = True          if not changed:             break      return numbers,reorder_list(groups)  In\u00a0[17]: Copied! <pre># centroids = # Extract the centroids of hexagons as a DataFrame with 'x' and 'y' columns\ncentroids = small_hexagons.centroid.apply(lambda geom: (geom.x, geom.y)).apply(pd.Series)\n# Calculate the distance matrix\ndist_matrix = cdist(centroids, centroids)\n\nprint(dist_matrix.shape)\n</pre> # centroids = # Extract the centroids of hexagons as a DataFrame with 'x' and 'y' columns centroids = small_hexagons.centroid.apply(lambda geom: (geom.x, geom.y)).apply(pd.Series) # Calculate the distance matrix dist_matrix = cdist(centroids, centroids)  print(dist_matrix.shape) <pre>(74, 74)\n</pre> In\u00a0[18]: Copied! <pre>def optimize_merge_dist(numbers, target_sum, distance_matrix, distance_weight, max_iter=300, optimize_func=lambda x: max(x) - min(x)):\n    best_order, best_group_idx = merge_into_groups_with_distance(numbers, target_sum, distance_matrix, distance_weight)\n    group_sum = [x - target_sum for x in calculate_group_sums(numbers, best_group_idx)]\n    best_result = optimize_func(group_sum)\n    # print(f\"group sum: {group_sum}, result: {best_result}\")\n    # print(f\"result: {best_result}\")\n\n    best_order_indices = list(range(len(numbers)))\n    \n    for i in range(max_iter):\n        random.shuffle(best_order_indices)  # Shuffle indices instead of numbers\n        temp_num = [numbers[idx] for idx in best_order_indices]  # Reorder numbers based on shuffled indices\n        # Rearrange distance matrix based on shuffled indices\n        temp_distance_matrix = distance_matrix[:, best_order_indices][best_order_indices, :]\n        temp_num,temp_group_idx = merge_into_groups_with_distance(temp_num, target_sum, temp_distance_matrix,distance_weight)\n        group_sum = [x - target_sum for x in calculate_group_sums(temp_num, temp_group_idx)]\n        temp_result = optimize_func(group_sum)\n        \n        if temp_result &lt; best_result:\n            \n            # print(f\"group sum: {group_sum}, result: {temp_result}\")\n            # print(f\"result: {temp_result}\")\n            best_result = temp_result\n            best_order = temp_num\n            best_group_idx = temp_group_idx\n\n    return best_order, best_group_idx\n</pre> def optimize_merge_dist(numbers, target_sum, distance_matrix, distance_weight, max_iter=300, optimize_func=lambda x: max(x) - min(x)):     best_order, best_group_idx = merge_into_groups_with_distance(numbers, target_sum, distance_matrix, distance_weight)     group_sum = [x - target_sum for x in calculate_group_sums(numbers, best_group_idx)]     best_result = optimize_func(group_sum)     # print(f\"group sum: {group_sum}, result: {best_result}\")     # print(f\"result: {best_result}\")      best_order_indices = list(range(len(numbers)))          for i in range(max_iter):         random.shuffle(best_order_indices)  # Shuffle indices instead of numbers         temp_num = [numbers[idx] for idx in best_order_indices]  # Reorder numbers based on shuffled indices         # Rearrange distance matrix based on shuffled indices         temp_distance_matrix = distance_matrix[:, best_order_indices][best_order_indices, :]         temp_num,temp_group_idx = merge_into_groups_with_distance(temp_num, target_sum, temp_distance_matrix,distance_weight)         group_sum = [x - target_sum for x in calculate_group_sums(temp_num, temp_group_idx)]         temp_result = optimize_func(group_sum)                  if temp_result &lt; best_result:                          # print(f\"group sum: {group_sum}, result: {temp_result}\")             # print(f\"result: {temp_result}\")             best_result = temp_result             best_order = temp_num             best_group_idx = temp_group_idx      return best_order, best_group_idx In\u00a0[19]: Copied! <pre>random.seed(1)\ndistance_weight = 0.5\nnumbers = list(small_hexagons[\"area\"])\nnumbers, best_group_idx = optimize_merge_dist(numbers, target_sum ,dist_matrix, distance_weight)\nvalue_to_group = {value: group for value, group in zip(numbers,best_group_idx)}\nsmall_hexagons.loc[:,'group_dist'] = small_hexagons['area'].map(value_to_group)\nsmall_hexagons.loc[:,'group_dist'] = reorder_list(small_hexagons.loc[:,'group_dist'])\ndf = small_hexagons[[\"area\",\"group_dist\"]].groupby(\"group_dist\").sum()\nprint(df.shape)\ndf.describe()\n</pre> random.seed(1) distance_weight = 0.5 numbers = list(small_hexagons[\"area\"]) numbers, best_group_idx = optimize_merge_dist(numbers, target_sum ,dist_matrix, distance_weight) value_to_group = {value: group for value, group in zip(numbers,best_group_idx)} small_hexagons.loc[:,'group_dist'] = small_hexagons['area'].map(value_to_group) small_hexagons.loc[:,'group_dist'] = reorder_list(small_hexagons.loc[:,'group_dist']) df = small_hexagons[[\"area\",\"group_dist\"]].groupby(\"group_dist\").sum() print(df.shape) df.describe() <pre>(34, 1)\n</pre> <pre>c:\\Users\\yyang\\.conda\\envs\\geo\\lib\\site-packages\\geopandas\\geodataframe.py:1538: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  super().__setitem__(key, value)\n</pre> Out[19]: area count 3.400000e+01 mean 3.061849e+08 std 2.579390e+07 min 2.713111e+08 25% 2.851134e+08 50% 3.013152e+08 75% 3.239347e+08 max 3.582264e+08 In\u00a0[20]: Copied! <pre># Plot the hexagons\nax = small_hexagons.plot(\"group_dist\", legend=True, cmap=\"Accent\", figsize=(15, 12))\n\n# Add text labels for each hexagon\nfor idx, row in small_hexagons.iterrows():\n    ax.annotate(text=row[\"group_dist\"], xy=(row.geom.centroid.x, row.geom.centroid.y),\n                ha='center', va='center', fontsize=15)\n\nplt.show()\n</pre> # Plot the hexagons ax = small_hexagons.plot(\"group_dist\", legend=True, cmap=\"Accent\", figsize=(15, 12))  # Add text labels for each hexagon for idx, row in small_hexagons.iterrows():     ax.annotate(text=row[\"group_dist\"], xy=(row.geom.centroid.x, row.geom.centroid.y),                 ha='center', va='center', fontsize=15)  plt.show() In\u00a0[25]: Copied! <pre>random.seed(1)\ndistance_weight = 0.8\nnumbers = list(small_hexagons[\"area\"])\nnumbers, best_group_idx = optimize_merge_dist(numbers, target_sum ,dist_matrix, distance_weight)\nvalue_to_group = {value: group for value, group in zip(numbers,best_group_idx)}\nsmall_hexagons.loc[:,'group_dist'] = small_hexagons['area'].map(value_to_group)\nsmall_hexagons.loc[:,'group_dist'] = reorder_list(small_hexagons.loc[:,'group_dist'])\ndf = small_hexagons[[\"area\",\"group_dist\"]].groupby(\"group_dist\").sum()\nprint(df.shape)\ndf.describe()\n</pre> random.seed(1) distance_weight = 0.8 numbers = list(small_hexagons[\"area\"]) numbers, best_group_idx = optimize_merge_dist(numbers, target_sum ,dist_matrix, distance_weight) value_to_group = {value: group for value, group in zip(numbers,best_group_idx)} small_hexagons.loc[:,'group_dist'] = small_hexagons['area'].map(value_to_group) small_hexagons.loc[:,'group_dist'] = reorder_list(small_hexagons.loc[:,'group_dist']) df = small_hexagons[[\"area\",\"group_dist\"]].groupby(\"group_dist\").sum() print(df.shape) df.describe() <pre>(37, 1)\n</pre> Out[25]: area count 3.700000e+01 mean 2.813591e+08 std 6.500645e+07 min 1.306313e+08 25% 2.549004e+08 50% 2.898252e+08 75% 3.205561e+08 max 3.796024e+08 In\u00a0[26]: Copied! <pre># Plot the hexagons\nax = small_hexagons.plot(\"group_dist\", legend=True, cmap=\"Accent\", figsize=(15, 12))\n\n# Add text labels for each hexagon\nfor idx, row in small_hexagons.iterrows():\n    ax.annotate(text=row[\"group_dist\"], xy=(row.geom.centroid.x, row.geom.centroid.y),\n                ha='center', va='center', fontsize=15)\n\nplt.show()\n</pre> # Plot the hexagons ax = small_hexagons.plot(\"group_dist\", legend=True, cmap=\"Accent\", figsize=(15, 12))  # Add text labels for each hexagon for idx, row in small_hexagons.iterrows():     ax.annotate(text=row[\"group_dist\"], xy=(row.geom.centroid.x, row.geom.centroid.y),                 ha='center', va='center', fontsize=15)  plt.show()"},{"location":"Geoprocessing/Optimize-GSS-with-tessellation/#optimize-spatial-stratified-sampling-tessellation","title":"Optimize spatial stratified sampling Tessellation\u00b6","text":""},{"location":"Geoprocessing/Optimize-GSS-with-tessellation/#read-data","title":"Read data\u00b6","text":""},{"location":"Geoprocessing/Optimize-GSS-with-tessellation/#dfw-cma","title":"DFW CMA\u00b6","text":""},{"location":"Geoprocessing/Optimize-GSS-with-tessellation/#dfw-cma-hexagon-300-km2","title":"DFW CMA Hexagon (300 km^2)\u00b6","text":""},{"location":"Geoprocessing/Optimize-GSS-with-tessellation/#cutoff-by-red-boundary","title":"Cutoff by red boundary\u00b6","text":""},{"location":"Geoprocessing/Optimize-GSS-with-tessellation/#merge-cut-off-hexagons-to-300-km2","title":"Merge cut-off hexagons to 300 km^2\u00b6","text":""},{"location":"Geoprocessing/Optimize-GSS-with-tessellation/#without-distance-constraint","title":"Without distance constraint\u00b6","text":""},{"location":"Geoprocessing/Optimize-GSS-with-tessellation/#with-distance-constraint","title":"with distance constraint\u00b6","text":""},{"location":"Geoprocessing/CSS/01-get-start/","title":"CSS01 Intro","text":"Selector Example Example description #id #firstname Selects the element with id=\"firstname\" .class .intro Selects all elements with class=\"intro\" element.class p.intro Selects only &lt;p&gt; elements with class=\"intro\" * * Selects all elements element p Selects all &lt;p&gt; elements element,element,.. div, p Selects all &lt;div&gt; elements and all &lt;p&gt; elements"},{"location":"Geoprocessing/CSS/01-get-start/#intro-to-css","title":"Intro to CSS\u00b6","text":"<ul> <li>Reference</li> </ul>"},{"location":"Geoprocessing/CSS/01-get-start/#what-is-css","title":"What is CSS?\u00b6","text":"<ul> <li><p><code>CSS</code> stands for Cascading Style Sheets</p> </li> <li><p><code>CSS</code> describes how HTML elements are to be displayed on screen, paper, or in other media</p> </li> <li><p><code>CSS</code> saves a lot of work. It can control the layout of multiple web pages all at once</p> </li> <li><p>External stylesheets are stored in <code>CSS</code> files</p> </li> <li><p>Sample to show different CSS</p> </li> </ul>"},{"location":"Geoprocessing/CSS/01-get-start/#css-syntax","title":"CSS Syntax\u00b6","text":"<ul> <li><p>The <code>selector</code> points to the <code>HTML</code> element you want to style.</p> </li> <li><p>The <code>declaration block</code> contains one or more declarations separated by semicolons.</p> </li> <li><p>Each <code>declaration</code> includes a CSS property <code>name</code> and a <code>value</code>, separated by a colon.</p> </li> <li><p>Multiple <code>CSS declarations</code> are separated with semicolons, and <code>declaration blocks</code> are surrounded by curly braces.</p> <pre>p {\ncolor: red;\ntext-align: center;\n}\n</pre> </li> </ul>"},{"location":"Geoprocessing/CSS/01-get-start/#insert-css","title":"Insert CSS\u00b6","text":"<p>There are three ways of inserting a style sheet:</p> <ul> <li>Inline CSS</li> <li>Internal CSS</li> <li>External CSS</li> </ul>"},{"location":"Geoprocessing/CSS/01-get-start/#inline-css","title":"Inline CSS\u00b6","text":"<ul> <li><p>An <code>inline style</code> may be used to apply a unique style for a single <code>element</code>.</p> </li> <li><p>To use <code>inline styles</code>, add the <code>style</code> attribute to the relevant <code>element</code>.</p> </li> <li><p>The <code>style</code> attribute can contain any CSS property.</p> </li> <li><p>Example</p> <pre>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;body&gt;\n\n&lt;h1 style=\"color:blue;text-align:center;\"&gt;This is a heading&lt;/h1&gt;\n&lt;p style=\"color:red;\"&gt;This is a paragraph.&lt;/p&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</pre> </li> </ul>"},{"location":"Geoprocessing/CSS/01-get-start/#internal-css","title":"Internal CSS\u00b6","text":"<ul> <li><p>An <code>internal style sheet</code> may be used if one single HTML page has a unique <code>style</code>.</p> </li> <li><p>The internal style is defined inside the <code>&lt;style&gt;</code> element, inside the <code>head</code> section.</p> </li> <li><p>Example</p> <pre>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n        &lt;style&gt;\n        body {\n        background-color: linen;\n        }\n\n        h1 {\n        color: maroon;\n        margin-left: 40px;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n    &lt;h1&gt;This is a heading&lt;/h1&gt;\n    &lt;p&gt;This is a paragraph.&lt;/p&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</pre> </li> </ul>"},{"location":"Geoprocessing/CSS/01-get-start/#external-css","title":"External CSS\u00b6","text":"<ul> <li><p>With an <code>external style sheet</code>, you can change the look of an entire website by changing just one file!</p> </li> <li><p>Each HTML page must include a reference to the <code>external style sheet</code> file inside the <code>&lt;link&gt;</code> element, inside the <code>head</code> section.</p> </li> <li><p>Example</p> <pre>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;link rel=\"stylesheet\" href=\"mystyle.css\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;h1&gt;This is a heading&lt;/h1&gt;\n&lt;p&gt;This is a paragraph.&lt;/p&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</pre> </li> </ul>"},{"location":"Geoprocessing/CSS/01-get-start/#cascading-order","title":"Cascading Order\u00b6","text":"<p>What <code>style</code> will be used when there is more than one style specified for an HTML element?</p> <ul> <li>All the styles in a page will \"cascade\" into a new \"virtual\" style sheet by the following rules, where number one has the highest priority:<ol> <li><code>Inline style</code> (inside an HTML element)</li> <li><code>External</code> and <code>internal</code> style sheets (in the head section)</li> <li>Browser default</li> </ol> </li> </ul>"},{"location":"Geoprocessing/CSS/01-get-start/#css-comments","title":"CSS Comments\u00b6","text":"<ul> <li><p><code>Comments</code> are used to explain the code, and may help when you edit the source code at a later date.</p> </li> <li><p><code>Comments</code> are ignored by browsers.</p> </li> <li><p>A CSS comment is placed inside the <code>&lt;style&gt;</code> element, and starts with <code>/*</code> and ends with <code>*/</code></p> </li> <li><p>Example</p> <pre>/* This is a single-line comment */\np {\ncolor: red;\n}\n</pre> </li> <li><p>Comments can also <code>span multiple lines</code>:</p> <pre>/* This is\na multi-line\ncomment */\n\np {\ncolor: red;\n}\n</pre> </li> </ul>"},{"location":"Geoprocessing/CSS/01-get-start/#css-selectors-basic","title":"CSS Selectors (basic)\u00b6","text":"<p><code>CSS selectors</code> are used to \"find\" (or select) the <code>HTML</code> elements you want to style.</p> <p>We can divide <code>CSS selectors</code> into five categories:</p> <ol> <li>Simple selectors (select elements based on name, id, class)</li> <li>Combinator selectors (select elements based on a specific relationship between them)</li> <li>Pseudo-class selectors (select elements based on a certain state)</li> <li>Pseudo-elements selectors (select and style a part of an element)</li> <li>Attribute selectors (select elements based on an attribute or attribute value)</li> </ol> <p>This page will explain the most basic <code>CSS selectors</code>.</p>"},{"location":"Geoprocessing/CSS/01-get-start/#the-css-element-selector","title":"The CSS element Selector\u00b6","text":"<p>The <code>element selector</code> selects HTML elements based on the <code>element name</code>.</p> <ul> <li><p>Example</p> <pre>p {\ntext-align: center;\ncolor: red;\n}\n</pre> </li> </ul>"},{"location":"Geoprocessing/CSS/01-get-start/#the-css-id-selector","title":"The CSS id Selector\u00b6","text":"<ul> <li><p>The <code>id selector</code> uses the <code>id attribute</code> of an <code>HTML</code> element to select a specific element.</p> </li> <li><p>The <code>id</code> of an element is unique within a page, so the <code>id selector</code> is used to select one unique element!</p> </li> <li><p>To select an element with a specific <code>id</code>, write a hash (<code>#</code>) character, followed by the id of the element.</p> </li> <li><p>Example</p> <pre>#para1 {\ntext-align: center;\ncolor: red;\n}\n</pre> </li> </ul>"},{"location":"Geoprocessing/CSS/01-get-start/#the-css-class-selector","title":"The CSS class Selector\u00b6","text":"<ul> <li><p>The <code>class selector</code> selects HTML elements with a specific <code>class attribute</code>.</p> </li> <li><p>To select elements with a specific class, write a period (<code>.</code>) character, followed by the <code>class name</code>.</p> </li> <li><p>Example</p> <pre>.center {\ntext-align: center;\ncolor: red;\n}\n</pre> </li> <li><p>You can also specify that only specific HTML elements should be affected by a class.</p> <pre>p.center {\ntext-align: center;\ncolor: red;\n}\n</pre> </li> </ul>"},{"location":"Geoprocessing/CSS/01-get-start/#the-css-universal-selector","title":"The CSS Universal Selector\u00b6","text":"<ul> <li><p>The <code>universal selector</code> (<code>*</code>) selects all HTML elements on the page.</p> </li> <li><p>Example</p> <pre>* {\ntext-align: center;\ncolor: blue;\n}\n</pre> </li> </ul>"},{"location":"Geoprocessing/CSS/01-get-start/#all-css-simple-selectors","title":"All CSS Simple Selectors\u00b6","text":""},{"location":"Geoprocessing/CSS/02-CSS-Box/","title":"CSS02 Box Model","text":""},{"location":"Geoprocessing/CSS/02-CSS-Box/#css-box-model","title":"CSS Box Model\u00b6","text":"<ul> <li>Reference</li> </ul>"},{"location":"Geoprocessing/CSS/02-CSS-Box/#the-css-box-model","title":"The CSS Box Model\u00b6","text":"<ul> <li><p>In CSS, the term <code>box model</code> is used when talking about design and layout.</p> </li> <li><p>The <code>CSS box model</code> is essentially a box that wraps around every HTML element. It consists of: <code>content</code>, <code>padding</code>, <code>borders</code> and <code>margins</code>. The image below illustrates the box model:</p> <p></p> </li> <li><p>Explanation of the different parts:</p> <ol> <li><code>Content</code> - The content of the box, where text and images appear</li> <li><code>Padding</code> - Clears an area around the <code>content</code>. The <code>padding</code> is transparent</li> <li><code>Border</code> - A border that goes around the padding and content</li> <li><code>Margin</code> - Clears an area outside the <code>border</code>. The margin is transparent</li> </ol> </li> <li><p>The <code>box model</code> allows us to add a <code>border</code> around elements, and to define space between elements.</p> <pre>div {\nwidth: 300px;\nborder: 15px solid green;\npadding: 50px;\nmargin: 20px;\n}\n</pre> </li> </ul>"},{"location":"Geoprocessing/CSS/02-CSS-Box/#width-and-height-of-an-element","title":"Width and Height of an Element\u00b6","text":"<ul> <li><p>Example: This <code>&lt;div&gt;</code> element will have a total width of 350px and a total height of 80px:</p> <pre>div {\nwidth: 320px;\nheight: 50px;\npadding: 10px;\nborder: 5px solid gray;\nmargin: 0;\n}\n</pre> </li> <li><p>Calculation</p> <ul> <li><p>Total element width = width + left padding + right padding + left border + right border</p> </li> <li><p>Total element height = height + top padding + bottom padding + top border + bottom border</p> <pre>320px (width of content area)\n+ 20px (left padding + right padding)\n+ 10px (left border + right border)\n= 350px (total width)\n\n50px (height of content area)\n+ 20px (top padding + bottom padding)\n+ 10px (top border + bottom border)\n= 80px (total height)\n</pre> </li> </ul> </li> </ul>"},{"location":"Geoprocessing/CSS/02-CSS-Box/#css-borders","title":"CSS Borders\u00b6","text":"<ul> <li><p>The <code>CSS border</code> properties allow you to specify the <code>style</code>, <code>width</code>, and <code>color</code> of an element's border.</p> </li> <li><p>Reference</p> Property Description border Sets all the border properties in one declaration border-bottom Sets all the bottom border properties in one declaration border-bottom-color Sets the color of the bottom border border-bottom-style Sets the style of the bottom border border-bottom-width Sets the width of the bottom border border-color Sets the color of the four borders border-left Sets all the left border properties in one declaration border-left-color Sets the color of the left border border-left-style Sets the style of the left border border-left-width Sets the width of the left border border-radius Sets all the four border-*-radius properties for rounded corners border-right Sets all the right border properties in one declaration border-right-color Sets the color of the right border border-right-style Sets the style of the right border border-right-width Sets the width of the right border border-style Sets the style of the four borders border-top Sets all the top border properties in one declaration border-top-color Sets the color of the top border border-top-style Sets the style of the top border border-top-width Sets the width of the top border border-width Sets the width of the four borders </li> </ul>"},{"location":"Geoprocessing/CSS/02-CSS-Box/#css-border-style","title":"CSS Border Style\u00b6","text":"<p>The border-style property specifies what kind of border to display.</p> <ul> <li><p>The following values are allowed:</p> <ol> <li><code>dotted</code> - Defines a dotted border</li> <li><code>dashed</code> - Defines a dashed border</li> <li><code>solid</code> - Defines a solid border</li> <li><code>double</code> - Defines a double border</li> <li><code>groove</code> - Defines a 3D grooved border. The effect depends on the border-color value</li> <li><code>ridge</code> - Defines a 3D ridged border. The effect depends on the border-color value</li> <li><code>inset</code> - Defines a 3D inset border. The effect depends on the border-color value</li> <li><code>outset</code> - Defines a 3D outset border. The effect depends on the border-color value</li> <li><code>none</code> - Defines no border</li> <li><code>hidden</code> - Defines a hidden border</li> </ol> </li> </ul> <p>The border-style property can have from one to four values (for the <code>top border</code>, <code>right border</code>, <code>bottom border</code>, and the <code>left border</code>).</p> <ul> <li><p>Example</p> <pre>p.dotted {border-style: dotted;}\np.dashed {border-style: dashed;}\np.solid {border-style: solid;}\np.double {border-style: double;}\np.groove {border-style: groove;}\np.ridge {border-style: ridge;}\np.inset {border-style: inset;}\np.outset {border-style: outset;}\np.none {border-style: none;}\np.hidden {border-style: hidden;}\np.mix {border-style: dotted dashed solid double;}\n</pre> </li> <li><p>Result</p> <p></p> </li> </ul>"},{"location":"Geoprocessing/CSS/02-CSS-Box/#css-border-color","title":"CSS Border Color\u00b6","text":"<p>The <code>border-color</code> property is used to set the color of the four borders.</p> <p>The color can be set by:</p> <ul> <li><p>name - specify a color name, like \"red\"</p> </li> <li><p>HEX - specify a HEX value, like \"#ff0000\"</p> </li> <li><p>RGB - specify a RGB value, like \"rgb(255,0,0)\"</p> </li> <li><p>HSL - specify a HSL value, like \"hsl(0, 100%, 50%)\"</p> </li> <li><p>transparent</p> </li> <li><p>Specific Side Colors</p> <ul> <li>The <code>border-color</code> property can have from one to four values (for the <code>top border</code>, <code>right border</code>, <code>bottom border</code>, and the <code>left border</code>)</li> </ul> <p></p> </li> </ul>"},{"location":"Geoprocessing/CSS/02-CSS-Box/#css-border-shorthand-property","title":"CSS Border - Shorthand Property\u00b6","text":"<p>There are many properties to consider when dealing with borders, to shorten the code, it is also possible to specify all the individual border properties in one property.</p> <p>The border property is a <code>shorthand property</code> for the following individual border properties:</p> <ul> <li><code>border-width</code></li> <li><code>border-style</code> (required)</li> <li><code>border-color</code></li> </ul> <p>Example</p> <pre>p {\n  border-bottom: 6px solid red;\n}\n</pre> <ul> <li><p>Result</p> <p></p> </li> </ul>"},{"location":"Geoprocessing/CSS/02-CSS-Box/#css-rounded-borders","title":"CSS Rounded Borders\u00b6","text":"<ul> <li><p>The <code>border-radius</code> property is used to add rounded borders to an element:</p> <p></p> </li> </ul>"},{"location":"Geoprocessing/CSS/02-CSS-Box/#css-margins","title":"CSS Margins\u00b6","text":"<ul> <li><p>Reference</p> </li> <li><p>The <code>CSS margin</code> properties are used to create space around elements, outside of any defined <code>borders</code>.</p> </li> <li><p>There are properties for setting the margin for each side of an element (<code>top</code>, <code>right</code>, <code>bottom</code>, and <code>left</code>).</p> Property Description margin A shorthand property for setting all the margin properties in one declaration margin-bottom Sets the bottom margin of an element margin-left Sets the left margin of an element margin-right Sets the right margin of an element margin-top Sets the top margin of an element </li> </ul>"},{"location":"Geoprocessing/CSS/02-CSS-Box/#value-setting","title":"Value setting\u00b6","text":"<ul> <li>All the margin properties can have the following values:<ol> <li><code>auto</code> - the browser calculates the <code>margin</code></li> <li><code>length</code> - specifies a <code>margin</code> in <code>px</code>, <code>pt</code>, <code>cm</code>, etc.</li> <li><code>%</code>- specifies a margin in % of the width of the containing element</li> <li><code>inherit</code> - specifies that the margin should be inherited from the parent element</li> </ol> </li> </ul>"},{"location":"Geoprocessing/CSS/02-CSS-Box/#margin-shorthand-property","title":"Margin - Shorthand Property\u00b6","text":"<ul> <li><p>If the margin property has four values:</p> <pre>p {\nmargin: 25px 50px 75px 100px;\n}\n// top margin is 25px\n// right margin is 50px\n// bottom margin is 75px\n// left margin is 100px\n</pre> </li> <li><p>If the margin property has three values:</p> <pre>p {\nmargin: 25px 50px 75px;\n}\n// top margin is 25px\n// right and left margins are 50px\n// bottom margin is 75px\n</pre> </li> <li><p>If the margin property has two values:</p> <pre>p {\nmargin: 25px 50px;\n}\n// top and bottom margins are 25px\n// right and left margins are 50px\n</pre> </li> </ul>"},{"location":"Geoprocessing/CSS/02-CSS-Box/#css-padding","title":"CSS Padding\u00b6","text":"<ul> <li><p><code>Padding</code> is used to create space around an element's content, inside of any defined <code>borders</code>.</p> </li> <li><p>It's very similar to <code>Margin</code></p> </li> <li><p>Reference</p> Property Description padding A shorthand property for setting all the padding properties in one declaration padding-bottom Sets the bottom padding of an element padding-left Sets the left padding of an element padding-right Sets the right padding of an element padding-top Sets the top padding of an element </li> </ul>"},{"location":"Geoprocessing/CSS/02-CSS-Box/#length-unit","title":"Length Unit\u00b6","text":""},{"location":"Geoprocessing/CSS/02-CSS-Box/#absolute-length-units","title":"Absolute Length Units\u00b6","text":"Unit Name Introduction Example px (Pixels) A pixel is the smallest unit of measure on the screen. The exact size can vary depending on the device's resolution and pixel density. <code>p { font-size: 16px; }</code> pt (Points) A point is equivalent to 1/72 of an inch, commonly used in print media. <code>p { font-size: 12pt; }</code> cm (Centimeters) Centimeters represent a physical measurement, often used for print stylesheets. <code>div { width: 10cm; }</code> mm (Millimeters) Millimeters are another physical measurement unit, used less frequently than centimeters. <code>div { width: 100mm; }</code> in (Inches) An inch is equivalent to 2.54 cm or 96 pixels on screens with a 96 DPI resolution. <code>div { width: 2in; }</code> pc (Picas) A pica is equivalent to 12 points, commonly used in print media. <code>p { font-size: 1pc; }</code> Q (Quarter-millimeters) A quarter-millimeter, primarily used in East Asian typography. <code>div { width: 40Q; }</code>"},{"location":"Geoprocessing/CSS/02-CSS-Box/#relative-length-units-table","title":"Relative Length Units Table\u00b6","text":"Unit Name Introduction Example em (Element) Relative to the font-size of the element. If not specified, it inherits from the parent. <code>p { font-size: 2em; }</code> rem (Root em) Relative to the font-size of the root element (&lt;html&gt;). Useful for maintaining consistency across an entire page. <code>p { font-size: 1.5rem; }</code> ex (x-height) Relative to the x-height of the current font (the height of the lowercase letter 'x'). <code>p { font-size: 2ex; }</code> ch (Character) Relative to the width of the '0' (zero) character in the current font. <code>div { width: 10ch; }</code> vw (Viewport width) Relative to 1% of the viewport's width. Useful for responsive designs. <code>div { width: 50vw; }</code> vh (Viewport height) Relative to 1% of the viewport's height. <code>div { height: 50vh; }</code> vmin (Viewport minimum) Relative to 1% of the smaller dimension (width or height) of the viewport. <code>div { width: 50vmin; }</code> vmax (Viewport maximum) Relative to 1% of the larger dimension (width or height) of the viewport. <code>div { width: 50vmax; }</code> % (Percentage) Relative to the parent element's dimension. Commonly used for responsive layouts. <code>div { width: 75%; }</code>"},{"location":"Geoprocessing/CSS/02-CSS-Box/#task","title":"Task\u00b6","text":""},{"location":"Geoprocessing/CSS/02-CSS-Box/#objective","title":"Objective:\u00b6","text":"<ul> <li><p>Understand and apply the <code>CSS box model</code> to create a webpage with multiple boxes.</p> </li> <li><p>Learn how to use properties like <code>width</code>, <code>height</code>, <code>padding</code>, <code>border</code>, and <code>margin</code>.</p> </li> <li><p>Explore the <code>box-sizing</code> property to control the size of boxes.</p> </li> </ul>"},{"location":"Geoprocessing/CSS/02-CSS-Box/#set-up-the-html-structure","title":"Set Up the HTML Structure\u00b6","text":"<ul> <li><p>Create a simple HTML file with the following structure</p> <pre>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;CSS Box Model Task&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"./02-box-style.css\"&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;div class=\"box box1\"&gt;Box 1&lt;/div&gt;\n    &lt;div class=\"box box2\"&gt;Box 2&lt;/div&gt;\n    &lt;div class=\"box box3\"&gt;Box 3&lt;/div&gt;\n    &lt;div class=\"box box4\"&gt;Box 4&lt;/div&gt;\n    &lt;div class=\"box box5\"&gt;Box 5&lt;/div&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre> </li> </ul>"},{"location":"Geoprocessing/CSS/02-CSS-Box/#style-the-boxes-using-box-model-properties","title":"Style the Boxes Using Box Model Properties:\u00b6","text":"<ul> <li><p>Use the box model properties to adjust the size and position of the boxes.</p> <p></p> </li> </ul>"},{"location":"Geoprocessing/CSS/02-CSS-Box/#apply-the-box-sizing-property","title":"Apply the <code>box-sizing</code> Property:\u00b6","text":"Box Sizing Description Width Calculation Height Calculation Example content-box Width and height include only the content. Padding and border are added outside the specified width and height. Content Width + Padding + Border Content Height + Padding + Border content-box border-box Width and height include content, padding, and border. The total size is the specified width and height. Total Width = Specified Width Total Height = Specified Height border-box <ul> <li><p>Use the <code>box-sizing</code> property to control the box dimensions, including padding and borders.</p> <p></p> </li> </ul>"},{"location":"Geoprocessing/CSS/02-CSS-Box/#sample-script","title":"Sample Script\u00b6","text":"<pre>body {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px; /* Gap between flex items */\n    padding: 20px;\n    background-color: #f9f9f9;\n}\n\n.box {\n    width: 150px; /* Content width */\n    height: 150px; /* Content height */\n    padding: 10px; /* Inside the box */\n    border: 2px solid #000; /* Border width */\n    margin: 5px; /* Space outside the box */\n    text-align: center;\n    line-height: 130px; /* Adjusted based on height and padding */\n    background-color: #ddd;\n}\n\n/* Specific box styles */\n.box1 {\n    background-color: #ff9999;\n}\n\n.box2 {\n    background-color: #99ccff;\n    width: 200px; /* Different content width */\n    height: 200px; /* Different content height */\n}\n\n.box3 {\n    background-color: #99ff99;\n    padding: 20px; /* Different padding */\n}\n\n.box4 {\n    background-color: #ffcc99;\n    border-width: 5px; /* Different border width */\n    border-style: dashed; /* Dashed border style */\n}\n\n.box5 {\n    background-color: #cc99ff;\n    margin: 20px; /* Different margin */\n    box-sizing: border-box; /* Border-box sizing */\n}\n</pre>"},{"location":"Geoprocessing/CSS/03-css-layout/","title":"CSS03 Layout","text":""},{"location":"Geoprocessing/CSS/03-css-layout/#css-layout","title":"CSS Layout\u00b6","text":""},{"location":"Geoprocessing/CSS/03-css-layout/#the-display-property","title":"The <code>display</code> Property\u00b6","text":"<ul> <li><p>The <code>display</code> property is used to specify how an element is shown on a web page.</p> </li> <li><p>Every HTML element has a default <code>display</code> value, depending on what type of element it is. The default display value for most elements is <code>block</code> or <code>inline</code>.</p> Value Description inline Displays an element as an inline element block Displays an element as a block element contents Makes the container disappear, making the child elements children of the element the next level up in the DOM flex Displays an element as a block-level flex container grid Displays an element as a block-level grid container inline-block Displays an element as an inline-level block container. The element itself is formatted as an inline element, but you can apply height and width values inline-flex Displays an element as an inline-level flex container inline-grid Displays an element as an inline-level grid container inline-table The element is displayed as an inline-level table list-item Let the element behave like a &lt;li&gt; element run-in Displays an element as either block or inline, depending on context table Let the element behave like a &lt;table&gt; element table-caption Let the element behave like a &lt;caption&gt; element table-column-group Let the element behave like a &lt;colgroup&gt; element table-header-group Let the element behave like a &lt;thead&gt; element table-footer-group Let the element behave like a &lt;tfoot&gt; element table-row-group Let the element behave like a &lt;tbody&gt; element table-cell Let the element behave like a &lt;td&gt; element table-column Let the element behave like a &lt;col&gt; element table-row Let the element behave like a &lt;tr&gt; element none The element is completely removed initial Sets this property to its default value inherit Inherits this property from its parent element </li> </ul>"},{"location":"Geoprocessing/CSS/03-css-layout/#block-level-elements","title":"Block-level Elements\u00b6","text":"<p>A <code>block-level element</code> ALWAYS starts on a new line and takes up the full width available (stretches out to the left and right as far as it can).</p> <p>Examples of block-level elements:</p> <ul> <li><code>&lt;div&gt;</code></li> <li><code>&lt;h1&gt;</code> - <code>&lt;h6&gt;</code></li> <li><code>&lt;p&gt;</code></li> <li><code>&lt;form&gt;</code></li> <li><code>&lt;header&gt;</code></li> <li><code>&lt;footer&gt;</code></li> <li><code>&lt;section&gt;</code></li> </ul>"},{"location":"Geoprocessing/CSS/03-css-layout/#inline-elements","title":"Inline Elements\u00b6","text":"<p>An <code>inline element</code> DOES NOT start on a new line and** only takes up as much width as necessary**.</p> <p>Examples of inline elements:</p> <ul> <li><p><code>&lt;span&gt;</code></p> </li> <li><p><code>&lt;a&gt;</code></p> </li> <li><p><code>&lt;img&gt;</code></p> <p></p> </li> </ul>"},{"location":"Geoprocessing/CSS/03-css-layout/#display-none","title":"<code>Display: none</code>\u00b6","text":"<ul> <li><p><code>display: none</code>; is commonly used with <code>JavaScript</code> to hide and show elements without deleting and recreating them.</p> </li> <li><p>The <code>&lt;script&gt;</code> element uses <code>display: none;</code> as default.</p> </li> <li><p><code>visibility:hidden;</code> also hides an element. However, the element will still take up the same space as before. The element will be hidden, but still affect the layout</p> <p></p> </li> </ul>"},{"location":"Geoprocessing/CSS/03-css-layout/#width-and-max-width","title":"width and max-width\u00b6","text":"<ul> <li><p>Reference</p> </li> <li><p>Setting the <code>width</code> of a <code>block-level element</code> will prevent it from stretching out to the edges of its container.</p> <ul> <li><p>Then, you can set the <code>margins</code> to <code>auto</code>, to horizontally center the element within its container.</p> </li> <li><p>The element will take up the specified <code>width</code>, and the remaining space will be split equally between the two margins</p> <p></p> </li> <li><p>The problem with the <code>&lt;div&gt;</code> above occurs when the browser window is smaller than the width of the element. The browser then adds a horizontal scrollbar to the page.</p> </li> </ul> </li> <li><p>Using <code>max-width</code> instead, in this situation, will improve the browser's handling of small windows. This is important when making a site usable on small devices:</p> <p></p> </li> <li><p>Example</p> <p></p> </li> </ul>"},{"location":"Geoprocessing/CSS/03-css-layout/#the-position-property","title":"The <code>position</code> Property\u00b6","text":"<ul> <li>The <code>position</code> property specifies the type of positioning method used for an element.</li> </ul> <p>There are five different position values:</p> <ol> <li><code>static</code></li> <li><code>relative</code></li> <li><code>fixed</code></li> <li><code>absolute</code></li> <li><code>sticky</code></li> </ol> <p>Elements are then positioned using the top, bottom, left, and right properties. However, these properties will not work unless the position property is set first. They also work differently depending on the position value.</p>"},{"location":"Geoprocessing/CSS/03-css-layout/#position-static","title":"<code>position: static</code>\u00b6","text":"<ul> <li><p>HTML elements are positioned static by default.</p> </li> <li><p><code>Static positioned elements</code> are not affected by the top, bottom, left, and right properties.</p> </li> <li><p>Example</p> <pre>div.static {\nposition: static;\nborder: 3px solid #73AD21;\n}\n</pre> </li> </ul>"},{"location":"Geoprocessing/CSS/03-css-layout/#position-relative","title":"<code>position: relative</code>\u00b6","text":"<ul> <li><p>An element with <code>position: relative;</code> is positioned relative to its normal position.</p> </li> <li><p>Setting the top, right, bottom, and left properties of a relatively-positioned element will cause it to be adjusted away from its normal position. Other content will not be adjusted to fit into any gap left by the element.</p> </li> <li><p>Example</p> <pre>div.relative {\nposition: relative;\nleft: 30px;\nborder: 3px solid #73AD21;\n}\n</pre> </li> </ul>"},{"location":"Geoprocessing/CSS/03-css-layout/#position-fixed-and-position-absolute","title":"<code>position: fixed;</code> and <code>position: absolute;</code>\u00b6","text":"<ul> <li><p>An element with <code>position: fixed;</code> is positioned relative to the viewport, which means it always stays in the same place even if the page is scrolled. The top, right, bottom, and left properties are used to position the element.</p> </li> <li><p>Common Use Cases: Used for elements that need to stay in a fixed position on the screen, such as navigation bars, headers, or footers.</p> </li> <li><p>Example</p> <pre>div.fixed {\nposition: fixed;\nbottom: 0;\nright: 0;\nwidth: 300px;\nborder: 3px solid #73AD21;\n}\n</pre> Property position: absolute position: fixed Position Context Relative to the nearest positioned ancestor or initial containing block. Relative to the viewport. Scrolling Behavior Scrolls with the document. Stays fixed in the same position. Common Use Cases Placing elements at specific coordinates within a container. Fixed headers, footers, or sidebars. Example Absolute Fixed </li> <li><p>An element with <code>position: absolute;</code> is positioned relative to the nearest positioned ancestor (instead of positioned relative to the viewport, like fixed).</p> </li> <li><p>Common Use Cases: Used to create elements that are placed at specific coordinates within their containing block.</p> </li> <li><p>Example</p> <pre>div.relative {\nposition: relative;\nwidth: 400px;\nheight: 200px;\nborder: 3px solid #73AD21;\n}\n\ndiv.absolute {\nposition: absolute;\ntop: 80px;\nright: 0;\nwidth: 200px;\nheight: 100px;\nborder: 3px solid #73AD21;\n}\n</pre> </li> </ul>"},{"location":"Geoprocessing/CSS/03-css-layout/#overflow","title":"Overflow\u00b6","text":"<ul> <li><p>The <code>overflow</code> property specifies whether to <code>clip</code> the content or to add <code>scrollbars</code> when the content of an element is too big to fit in the specified area.</p> </li> <li><p>The <code>overflow</code> property has the following values:</p> <ol> <li><code>visible</code> - Default. The overflow is not clipped. The content renders outside the element's box</li> <li><code>hidden</code> - The overflow is clipped, and the rest of the content will be invisible</li> <li><code>scroll</code> - The overflow is clipped, and a <code>scrollbar</code> is added to see the rest of the content</li> <li><code>auto</code> - Similar to <code>scroll</code>, but it adds scrollbars only when necessary</li> </ol> </li> </ul>"},{"location":"Geoprocessing/CSS/03-css-layout/#overflow-visible","title":"overflow: visible\u00b6","text":"<ul> <li><p>By default, the <code>overflow</code> is <code>visible</code>, meaning that it is not clipped and it renders outside the element's box:</p> <p></p> </li> <li><p>Example</p> <pre>div {\nwidth: 200px;\nheight: 65px;\nbackground-color: coral;\noverflow: visible;\n}\n</pre> </li> </ul>"},{"location":"Geoprocessing/CSS/03-css-layout/#overflow-hidden","title":"overflow: hidden\u00b6","text":"<ul> <li><p>With the <code>hidden</code> value, the <code>overflow</code> is clipped, and the rest of the content is hidden:</p> <p></p> </li> <li><p>Example</p> <pre>div {\noverflow: hidden;\n}\n</pre> </li> </ul>"},{"location":"Geoprocessing/CSS/03-css-layout/#overflow-scroll","title":"overflow: scroll\u00b6","text":"<ul> <li><p>Setting the value to <code>scroll</code>, the <code>overflow</code> is clipped and a <code>scrollbar</code> is added to scroll inside the box. Note that this will add a scrollbar both horizontally and vertically (even if you do not need it):</p> <p></p> </li> <li><p>Example</p> <pre>div {\noverflow: scroll;\n}\n</pre> </li> </ul>"},{"location":"Geoprocessing/CSS/03-css-layout/#overflow-auto","title":"overflow: auto\u00b6","text":"<ul> <li><p>The <code>auto</code> value is similar to <code>scroll</code>, but it adds <code>scrollbars</code> only when necessary:</p> <p></p> </li> <li><p>Example</p> <pre>div {\noverflow: auto;\n}\n</pre> </li> </ul>"},{"location":"Geoprocessing/CSS/03-css-layout/#the-z-index-property","title":"The z-index Property\u00b6","text":"<ul> <li><p>When elements are positioned, they can overlap other elements. The <code>z-index</code> property specifies the stack order of an element (which element should be placed in front of, or behind, the others).</p> </li> <li><p>Example</p> <pre>img {\nposition: absolute;\nleft: 0px;\ntop: 0px;\nz-index: -1;\n}\n</pre> <p></p> </li> </ul>"},{"location":"Geoprocessing/CSS/03-css-layout/#float-and-clear","title":"float and clear\u00b6","text":"<ul> <li><p>The CSS <code>float</code> property specifies how an element should float.</p> </li> <li><p>The CSS <code>clear</code> property specifies what elements can float beside the cleared element and on which side.</p> </li> </ul>"},{"location":"Geoprocessing/CSS/03-css-layout/#the-float-property","title":"The float Property\u00b6","text":"<ul> <li><p>The <code>float</code> property is used for positioning and formatting content e.g. let an image float left to the text in a container.</p> </li> <li><p>The <code>float</code> property can have one of the following values:</p> <ol> <li><code>left</code> - The element floats to the left of its container</li> <li><code>right</code> - The element floats to the right of its container</li> <li><code>none</code> - The element does not float (will be displayed just where it occurs in the text). This is default</li> <li><code>inherit</code> - The element inherits the float value of its parent</li> </ol> </li> <li><p>Example</p> <pre>&lt;style&gt;\nimg {\nfloat: right;\n}\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;h2&gt;Float Right&lt;/h2&gt;\n\n&lt;p&gt;In this example, the image will float to the right in the paragraph, and the text in the paragraph will wrap around the image.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=\"pineapple.jpg\" alt=\"Pineapple\" style=\"width:170px;height:170px;margin-left:15px;\"&gt;\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus imperdiet, nulla et dictum interdum, nisi lorem egestas odio, vitae scelerisque enim ligula venenatis dolor. Maecenas nisl est, ultrices nec congue eget, auctor vitae massa. Fusce luctus vestibulum augue ut aliquet. Mauris ante ligula, facilisis sed ornare eu, lobortis in odio. Praesent convallis urna a lacus interdum ut hendrerit risus congue. Nunc sagittis dictum nisi, sed ullamcorper ipsum dignissim ac. In at libero sed nunc venenatis imperdiet sed ornare turpis. Donec vitae dui eget tellus gravida venenatis. Integer fringilla congue eros non fermentum. Sed dapibus pulvinar nibh tempor porta. Cras ac leo purus. Mauris quis diam velit.&lt;/p&gt;\n\n&lt;/body&gt;\n</pre> <p></p> </li> </ul>"},{"location":"Geoprocessing/CSS/03-css-layout/#float-examples","title":"Float Examples\u00b6","text":"<ul> <li><p>With the <code>float</code> property, it is easy to float boxes of content side by side:</p> </li> <li><p>Example</p> <pre>* {\nbox-sizing: border-box;\n}\n\n.box {\nfloat: left;\nwidth: 33.33%; /* three boxes (use 25% for four, and 50% for two, etc) */\npadding: 50px; /* if you want space between the images */\n}\n</pre> <p></p> </li> </ul>"},{"location":"Geoprocessing/CSS/03-css-layout/#the-clear-property","title":"The clear Property\u00b6","text":"<ul> <li><p>When we use the <code>float</code> property, and we want the next element below (not on right or left), we will have to use the <code>clear</code> property.</p> </li> <li><p>The <code>clear</code> property specifies what should happen with the element that is next to a <code>floating</code> element.</p> </li> <li><p>The clear property can have one of the following values:</p> <ol> <li><code>none</code> - The element is not pushed below left or right floated elements. This is default</li> <li><code>left</code> - The element is pushed below left floated elements</li> <li><code>right</code> - The element is pushed below right floated elements</li> <li><code>both</code> - The element is pushed below both left and right floated elements</li> <li><code>inherit</code> - The element inherits the clear value from its parent</li> </ol> <p></p> </li> </ul>"},{"location":"Geoprocessing/CSS/03-css-layout/#float-example-with-clearfix","title":"Float Example with clearfix\u00b6","text":""},{"location":"Geoprocessing/CSS/03-css-layout/#task","title":"Task\u00b6","text":""},{"location":"Geoprocessing/CSS/03-css-layout/#objective","title":"Objective:\u00b6","text":"<p>Understand and apply <code>CSS layout</code> properties including <code>display</code>, <code>position</code>, <code>overflow</code>, <code>float</code>, and <code>clear</code> to create a well-structured and responsive webpage layout.</p>"},{"location":"Geoprocessing/CSS/03-css-layout/#set-up-the-html-structure","title":"Set Up the HTML Structure:\u00b6","text":"<ul> <li><p>Create a simple HTML file with the following structure:</p> <pre>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;CSS Layout Task&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"./03-layout.css\"&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;header class=\"header\"&gt;Header&lt;/header&gt;\n    &lt;nav class=\"nav\"&gt;\n        &lt;ul&gt;\n            &lt;li&gt;&lt;a href=\"#\"&gt;Home&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"#\"&gt;About&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"#\"&gt;Services&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"#\"&gt;Contact&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"#\"&gt;Blog&lt;/a&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/nav&gt;\n    &lt;main class=\"main\"&gt;\n        &lt;section class=\"content\"&gt;Main Content&lt;/section&gt;\n        &lt;aside class=\"sidebar\"&gt;Sidebar&lt;/aside&gt;\n    &lt;/main&gt;\n\n    &lt;div class=\"container clearfix\"&gt;\n        &lt;div class=\"float-box\"&gt;Float 1&lt;/div&gt;\n        &lt;div class=\"float-box\"&gt;Float 2&lt;/div&gt;\n        &lt;div class=\"float-box\"&gt;Float 3&lt;/div&gt;\n        &lt;div class=\"float-box\"&gt;Float 4&lt;/div&gt;\n        &lt;div style=\"clear: both;\"&gt;&lt;/div&gt; &lt;!-- Clear float --&gt;\n        &lt;p&gt;This text is after the floated boxes. It is cleared so it won't wrap around the floated elements.&lt;/p&gt;\n    &lt;/div&gt;\n\n    &lt;footer class=\"footer\"&gt;Footer&lt;/footer&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre> </li> </ul>"},{"location":"Geoprocessing/CSS/03-css-layout/#style-the-layout-using-css-properties","title":"Style the Layout Using CSS Properties:\u00b6","text":"<ul> <li><p>Use the <code>display</code>, <code>position</code>, <code>overflow</code>, <code>float</code>, and <code>clear</code> properties to style the layout.</p> <p></p> </li> </ul>"},{"location":"Geoprocessing/CSS/03-css-layout/#sample-script","title":"Sample Script\u00b6","text":"<pre>/* Basic styles */\nbody {\n    font-family: Arial, sans-serif;\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nheader, nav, main, footer {\n    padding: 20px;\n    margin: 10px;\n}\n\n.header {\n    background-color: #4CAF50;\n    color: white;\n    text-align: center;\n    position: fixed;\n    width: 100%;\n    top: 0;\n    left: 0;\n    z-index: 1000; /* Ensure it stays on top of other elements */\n}\n\n.nav {\n    background-color: #f3f3f3;\n    overflow: auto;\n    margin-top: 80px; /* Adjust for fixed header height */\n}\n\n.nav ul {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n    overflow: hidden;\n}\n\n.nav ul li {\n    float: left;\n}\n\n.nav ul li a {\n    display: block;\n    color: black;\n    text-align: center;\n    padding: 14px 16px;\n    text-decoration: none;\n}\n\n.nav ul li a:hover {\n    background-color: #ddd;\n}\n\n.main {\n    display: flex;\n    flex-wrap: wrap;\n    margin-top: 20px; /* Adjust for fixed header and nav */\n}\n\n.content {\n    flex: 3;\n    background-color: #f1f1f1;\n    padding: 20px;\n}\n\n.sidebar {\n    flex: 1;\n    background-color: #ccc;\n    padding: 20px;\n}\n\n.footer {\n    background-color: #4CAF50;\n    color: white;\n    text-align: center;\n    clear: both;\n    position: fixed;\n    width: 100%;\n    bottom: 0;\n    left: 0;\n}\n\nmain {\n    margin-top: 80px; /* Adjust for fixed header */\n    margin-bottom: 60px; /* Adjust for fixed footer */\n}\n\n.sidebar {\n    overflow: auto; /* Ensures sidebar content is scrollable */\n    height: 300px; /* Fixed height for demonstration */\n}\n\n/* Float and Clear examples */\n.float-box {\n    float: left;\n    width: 100px;\n    height: 100px;\n    margin: 10px;\n    background-color: #ff9999;\n}\n\n.clearfix::after {\n    content: \"\";\n    display: table;\n    clear: both;\n}\n\n.container {\n    background-color: #e0e0e0;\n    padding: 20px;\n    margin-top: 20px;\n}\n</pre>"},{"location":"Geoprocessing/CSS/03-css-layout/#position-cheating-sheet","title":"Position Cheating sheet\u00b6","text":""},{"location":"Geoprocessing/CSS/04-css-selectors/","title":"CSS04 Selectors","text":"<ol> <li><p>Use Combinator and Group Selectors to achieve following layout</p> <p></p> </li> </ol>"},{"location":"Geoprocessing/CSS/04-css-selectors/#css-selectors","title":"CSS Selectors\u00b6","text":"<p>We have introduced <code>simple CSS selectors</code> in the first chapter, in this chapter, we will introduce the rest four type of <code>selectors</code></p> <ul> <li><code>Combinator selectors</code> (select elements based on a specific relationship between them)</li> <li><code>Pseudo-class selectors</code> (select elements based on a certain state)</li> <li><code>Pseudo-elements selectors</code> (select and style a part of an element)</li> <li><code>Attribute selectors</code> (select elements based on an attribute or attribute value)</li> </ul>"},{"location":"Geoprocessing/CSS/04-css-selectors/#nth-child-selectors","title":"nth-child Selectors\u00b6","text":""},{"location":"Geoprocessing/CSS/04-css-selectors/#css-combinators","title":"CSS Combinators\u00b6","text":"<ul> <li>Reference</li> </ul> <p>A CSS selector can contain more than one <code>simple selector</code>. Between the simple selectors, we can include a combinator.</p> <p>There are four different <code>combinators</code> in CSS:</p> <ul> <li><p>descendant selector (space)</p> </li> <li><p>child selector (<code>&gt;</code>)</p> </li> <li><p>adjacent sibling selector (<code>+</code>)</p> </li> <li><p>general sibling selector (<code>~</code>)</p> Selector Example Example description element element div p Selects all &lt;p&gt; elements inside &lt;div&gt; elements element&gt;element div &gt; p Selects all &lt;p&gt; elements where the parent is a &lt;div&gt; element element+element div + p Selects the first &lt;p&gt; element that are placed immediately after &lt;div&gt; elements element1~element2 p ~ ul Selects every &lt;ul&gt; element that are preceded by a &lt;p&gt; element </li> </ul>"},{"location":"Geoprocessing/CSS/04-css-selectors/#descendant-selector","title":"Descendant Selector\u00b6","text":"<p>The descendant selector matches all elements that are descendants of a specified element.</p> <ul> <li><p>The following example selects all <code>&lt;p&gt;</code> elements inside <code>&lt;div&gt;</code> elements:</p> </li> <li><p><code>Descendant Selector</code>: Selects all elements that are descendants (children, grandchildren, etc.) of a specified element.</p> <pre>div p {\nbackground-color: yellow;\n}\n</pre> </li> </ul>"},{"location":"Geoprocessing/CSS/04-css-selectors/#child-selector","title":"Child Selector (<code>&gt;</code>)\u00b6","text":"<p>The child selector selects all elements that are the children of a specified element.</p> <ul> <li><p>The following example selects all <code>&lt;p&gt;</code> elements that are children of a </p> element: </li> <li><p>Child Selector (<code>&gt;</code>): Selects only the direct children of a specified element.</p> <pre>div &gt; p{\n    background-color: yellow;\n}\n</pre> </li> </ul>"},{"location":"Geoprocessing/CSS/04-css-selectors/#adjacent-sibling-selector","title":"Adjacent Sibling Selector (<code>+</code>)\u00b6","text":"<ul> <li><p>The <code>adjacent sibling selector</code> is used to select an element that is directly after another specific element.</p> </li> <li><p><code>Sibling elements</code> must have the same parent element, and <code>adjacent</code> means immediately following.</p> <p></p> </li> <li><p>The following example selects the first <code>&lt;p&gt;</code> element that are placed immediately after <code>&lt;div&gt;</code> elements:</p> <pre>div + p {\n  background-color: yellow;\n}\n</pre> </li> </ul>"},{"location":"Geoprocessing/CSS/04-css-selectors/#general-sibling-selector","title":"General Sibling Selector (<code>~</code>)\u00b6","text":"<ul> <li><p>The <code>general sibling selector</code> selects all elements that are next siblings of a specified element.</p> <p></p> </li> <li><p>The following example selects all <code>&lt;p&gt;</code> elements that are next siblings of <code>&lt;div&gt;</code> elements:</p> <pre>div ~ p {\nbackground-color: yellow;\n}\n</pre> </li> </ul>"},{"location":"Geoprocessing/CSS/04-css-selectors/#css-pseudo-classes","title":"CSS Pseudo-classes\u00b6","text":"<ul> <li><p>A <code>pseudo-class</code> is used to define a special state of an element.</p> </li> <li><p>For example, it can be used to:</p> <ol> <li>Style an element when a user <code>mouses over</code> it</li> <li>Style <code>visited</code> and unvisited <code>links</code> differently</li> <li>Style an element when it <code>gets focus</code></li> </ol> </li> <li><p>Syntax</p> <pre>selector:pseudo-class {\nproperty: value;\n}\n</pre> </li> </ul>"},{"location":"Geoprocessing/CSS/04-css-selectors/#anchor-pseudo-classes","title":"Anchor Pseudo-classes\u00b6","text":"<ul> <li><p><code>Links</code> can be displayed in different ways:</p> <pre>/* unvisited link */\na:link {\ncolor: #FF0000;\n}\n\n/* visited link */\na:visited {\ncolor: #00FF00;\n}\n\n/* mouse over link */\na:hover {\ncolor: #FF00FF;\n}\n\n/* selected link */\na:active {\ncolor: #0000FF;\n}\n</pre> </li> </ul>"},{"location":"Geoprocessing/CSS/04-css-selectors/#hover","title":"Hover\u00b6","text":"<ul> <li><p><code>Pseudo-classes</code> can be combined with HTML classes:</p> </li> <li><p>When you hover over the <code>link</code> in the example, it will change color:</p> <pre>a.highlight:hover {\ncolor: #ff0000;\n}\n</pre> </li> <li><p>An example of using the <code>:hover</code> pseudo-class on a <code>&lt;div&gt;</code> element to implement a simple tooltip Hover</p> <p></p> </li> </ul>"},{"location":"Geoprocessing/CSS/04-css-selectors/#first-child-pseudo-class","title":"first-child Pseudo-class\u00b6","text":"<ul> <li><p>The <code>:first-child</code> pseudo-class matches a specified element that is the first child of another element.</p> </li> <li><p>In the following example, the <code>selector</code> matches any <code>&lt;p&gt;</code> element that is the first child of any element:</p> <pre>p:first-child {\ncolor: blue;\n}\n</pre> </li> <li><p>In the following example, the selector matches the first <code>&lt;i&gt;</code> element in all <code>&lt;p&gt;</code> elements:</p> <pre>p i:first-child {\ncolor: blue;\n}\n</pre> </li> <li><p>In the following example, the selector matches all <code>&lt;i&gt;</code> elements in <code>&lt;p&gt;</code> elements that are the first child of another element:</p> <pre>p:first-child i {\ncolor: blue;\n}\n</pre> </li> </ul>"},{"location":"Geoprocessing/CSS/04-css-selectors/#the-lang-pseudo-class","title":"The <code>:lang</code> Pseudo-class\u00b6","text":"<ul> <li><p>The <code>:lang</code> pseudo-class allows you to define special rules for different languages.</p> </li> <li><p>In the example below, <code>:lang</code> defines the quotation marks for <code>&lt;q&gt;</code> elements with lang=\"no\"</p> <p></p> </li> </ul>"},{"location":"Geoprocessing/CSS/04-css-selectors/#all-css-pseudo-classes","title":"All CSS Pseudo Classes\u00b6","text":"Selector Example Example description :active a:active Selects the active link :checked input:checked Selects every checked &lt;input&gt; element :disabled input:disabled Selects every disabled &lt;input&gt; element :empty p:empty Selects every &lt;p&gt; element that has no children :enabled input:enabled Selects every enabled &lt;input&gt; element :first-child p:first-child Selects every &lt;p&gt; element that is the first child of its parent :first-of-type p:first-of-type Selects every &lt;p&gt; element that is the first &lt;p&gt; element of its parent :focus input:focus Selects the &lt;input&gt; element that has focus :hover a:hover Selects links on mouse over :in-range input:in-range Selects &lt;input&gt; elements with a value within a specified range :invalid input:invalid Selects all &lt;input&gt; elements with an invalid value :lang(language) p:lang(it) Selects every &lt;p&gt; element with a lang attribute value starting with \"it\" :last-child p:last-child Selects every &lt;p&gt; element that is the last child of its parent :last-of-type p:last-of-type Selects every &lt;p&gt; element that is the last &lt;p&gt; element of its parent :link a:link Selects all unvisited links :not(selector) :not(p) Selects every element that is not a &lt;p&gt; element :nth-child(n) p:nth-child(2) Selects every &lt;p&gt; element that is the second child of its parent :nth-last-child(n) p:nth-last-child(2) Selects every &lt;p&gt; element that is the second child of its parent, counting from the last child :nth-last-of-type(n) p:nth-last-of-type(2) Selects every &lt;p&gt; element that is the second &lt;p&gt; element of its parent, counting from the last child :nth-of-type(n) p:nth-of-type(2) Selects every &lt;p&gt; element that is the second &lt;p&gt; element of its parent :only-of-type p:only-of-type Selects every &lt;p&gt; element that is the only &lt;p&gt; element of its parent :only-child p:only-child Selects every &lt;p&gt; element that is the only child of its parent :optional input:optional Selects &lt;input&gt; elements with no \"required\" attribute :out-of-range input:out-of-range Selects &lt;input&gt; elements with a value outside a specified range :read-only input:read-only Selects &lt;input&gt; elements with a \"readonly\" attribute specified :read-write input:read-write Selects &lt;input&gt; elements with no \"readonly\" attribute :required input:required Selects &lt;input&gt; elements with a \"required\" attribute specified :root :root Selects the document's root element :target #news:target Selects the current active #news element (clicked on a URL containing that anchor name) :valid input:valid Selects all &lt;input&gt; elements with a valid value :visited a:visited Selects all visited links"},{"location":"Geoprocessing/CSS/04-css-selectors/#css-pseudo-elements","title":"CSS Pseudo-elements\u00b6","text":"<p>A CSS <code>pseudo-element</code> is used to style specified parts of an element.</p> <p>For example, it can be used to:</p> <ul> <li><p>Style the first letter, or line, of an element</p> </li> <li><p>Insert content before, or after, the content of an element</p> </li> <li><p>Syntax</p> <pre>selector::pseudo-element {\nproperty: value;\n}\n</pre> </li> </ul>"},{"location":"Geoprocessing/CSS/04-css-selectors/#all-css-pseudo-elements","title":"All CSS Pseudo Elements\u00b6","text":"Selector Example Example description ::after p::after Insert content after every &lt;p&gt; element ::before p::before Insert content before every &lt;p&gt; element ::first-letter p::first-letter Selects the first letter of every &lt;p&gt; element ::first-line p::first-line Selects the first line of every &lt;p&gt; element ::marker ::marker Selects the markers of list items ::selection p::selection Selects the portion of an element that is selected by a user"},{"location":"Geoprocessing/CSS/04-css-selectors/#first-line-pseudo-element","title":"<code>::first-line</code> Pseudo-element\u00b6","text":"<ul> <li><p>The <code>::first-line</code> pseudo-element is used to add a special style to the first line of a text.</p> </li> <li><p>The following example formats the first line of the text in all <code>&lt;p&gt;</code> elements:</p> </li> <li><p>The <code>::first-line</code> pseudo-element can only be applied to <code>block-level elements</code>.</p> <p></p> </li> </ul>"},{"location":"Geoprocessing/CSS/04-css-selectors/#css-attribute-selectors","title":"CSS Attribute Selectors\u00b6","text":"<ul> <li><p>The <code>[attribute] selector</code> is used to select elements with a specified attribute.</p> Selector Example Example description [attribute] [target] Selects all elements with a target attribute [attribute=value] [target=\"_blank\"] Selects all elements with target=\"_blank\" [attribute~=value] [title~=\"flower\"] Selects all elements with a title attribute that contains a space-separated list of words, one of which is \"flower\" [attribute^=value] a[href^=\"https\"] Selects all &lt;a&gt; elements with a href attribute value starting with \"https\" [attribute$=value] a[href$=\".pdf\"] Selects all &lt;a&gt; elements with a href attribute value ending with \".pdf\" [attribute*=value] a[href*=\"w3schools\"] Selects all &lt;a&gt; elements with a href attribute value containing the substring \"w3schools\" </li> <li><p>The following example selects all <code>&lt;a&gt;</code> elements with a target attribute:</p> <p></p> </li> </ul>"},{"location":"Geoprocessing/CSS/04-css-selectors/#css-attributevalue-selector","title":"CSS [attribute=\"value\"] Selector\u00b6","text":"<ul> <li><p>The <code>[attribute=\"value\"]</code> selector is used to select elements with a specified attribute and value.</p> </li> <li><p>The following example selects all <code>&lt;a&gt;</code> elements with a <code>target=\"_blank\"</code> attribute:</p> <pre>a[target=\"_blank\"] {\nbackground-color: yellow;\n}\n</pre> </li> </ul>"},{"location":"Geoprocessing/CSS/04-css-selectors/#css-attributevalue-selector","title":"CSS [attribute~=\"value\"] Selector\u00b6","text":"<ul> <li><p>The <code>[attribute~=\"value\"]</code> selector is used to select elements with an attribute value containing a specified word.</p> </li> <li><p>The following example selects all elements with a title attribute that contains a space-separated list of words, one of which is \"flower\":</p> <p></p> </li> </ul>"},{"location":"Geoprocessing/CSS/04-css-selectors/#hands-on-task","title":"Hands-on Task\u00b6","text":""},{"location":"Geoprocessing/CSS/04-css-selectors/#objective","title":"Objective\u00b6","text":"<p>Gain practical experience using various <code>CSS selectors</code> and <code>properties</code> to style web page elements.</p> <p>Learn how to apply styles using <code>element</code>, <code>class</code>, and <code>ID selectors</code>, as well as <code>combinator</code> and <code>group</code> selectors.</p> <p>Explore <code>pseudo-classes</code> and <code>pseudo-elements</code> to enhance user interactions and element styling.</p>"},{"location":"Geoprocessing/CSS/04-css-selectors/#task-details","title":"Task Details\u00b6","text":"<ol> <li><p>Set Up the <code>HTML</code> Structure</p> <pre>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;CSS Selectors Task&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"styles.css\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header id=\"main-header\"&gt;\n        &lt;h1 class=\"title\"&gt;Welcome to My Webpage&lt;/h1&gt;\n        &lt;nav&gt;\n            &lt;ul class=\"nav-list\"&gt;\n                &lt;li&gt;&lt;a href=\"#\"&gt;Home&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=\"#\"&gt;About&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=\"#\"&gt;Services&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=\"#\"&gt;Contact&lt;/a&gt;&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/nav&gt;\n    &lt;/header&gt;\n    &lt;main&gt;\n        &lt;section class=\"intro\"&gt;\n            &lt;h2&gt;Introduction&lt;/h2&gt;\n            &lt;p&gt;This is a brief introduction to my webpage. Here you can find various information about different topics.&lt;/p&gt;\n        &lt;/section&gt;\n        &lt;section class=\"content\"&gt;\n            &lt;h2&gt;Content Section&lt;/h2&gt;\n            &lt;p&gt;This is the main content of the page. Feel free to explore and learn more about what we offer.&lt;/p&gt;\n        &lt;/section&gt;\n        &lt;section class=\"footer\"&gt;\n            &lt;h2&gt;Footer Section&lt;/h2&gt;\n            &lt;p&gt;&amp;copy; 2024 My Webpage. All rights reserved.&lt;/p&gt;\n        &lt;/section&gt;\n    &lt;/main&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</pre> </li> <li><p>Use basic selector to render page like following</p> </li> </ol> <ul> <li><p>Hint</p> <ul> <li><code>color: darkblue</code></li> </ul> <p></p> </li> </ul>"},{"location":"Geoprocessing/CSS/04-css-selectors/#use-combinator-and-group-selectors","title":"Use Combinator and Group Selectors:\u00b6","text":"<ul> <li><p>Apply styles using combinator selectors (descendant, child, sibling) and group selectors.</p> <p></p> </li> </ul>"},{"location":"Geoprocessing/CSS/04-css-selectors/#sample-script","title":"Sample Script:\u00b6","text":"<pre>/* Element selectors */\nbody {\n    font-family:'Times New Roman', Times, serif;\n    margin: 0;\n    padding: 10px;\n}\n\nh1, h2 {\n    color: darkblue;\n}\n\np {\n    font-size: 1.1rem;\n    line-height: 1.5;\n}\n\n\n/* ID selector */\n#main-header{\n    background-color: lightgray;\n}\n\n\n/* ID selector */\n#main-header {\n    background-color: lightgray;\n    padding: 1.2rem;\n    text-align: center;\n}\n\n/* Class selector */\n.nav-list {\n    list-style-type: none;\n    padding: 0;\n}\n\n.nav-list li {\n    display: inline;\n    margin-right: 1.2rem;\n}\n\n.nav-list li a {\n    text-decoration: none;\n    color: darkblue;\n    font-size: 1.1rem;\n}\n\n/* Descendant selector */\nheader nav ul li a:hover {\n    color: orange;\n    font-size: 1.3rem;\n    padding: 10px;\n}\n\n/* Child selector */\nmain &gt; section {\n    margin: 20px;\n    padding: 10px;\n    border: 1px solid #ddd;\n}\n\n/* Adjacent sibling selector */\n.intro + .content {\n    background-color: #c0c0c0;\n}\n\n/* Group selector */\nh2, p {\n    margin: 10px 0;\n}\n\n/* Pseudo-classes */\na:hover {\n    color: green;\n}\n\na:active {\n    color: darkred;\n}\n\n/* Pseudo-elements */\n.intro::before {\n    content: \"\u2605\";\n    color: gold;\n    margin-right: 5px;\n}\n\n.content::after {\n    content: \"\u273f\";\n    color: pink;\n    margin-left: 5px;\n}\n</pre>"},{"location":"Geoprocessing/CSS/05-css-flex/","title":"CSS05 FlexBox","text":"In\u00a0[1]: Copied! <pre>from IPython.core.display import HTML\n</pre> from IPython.core.display import HTML In\u00a0[2]: Copied! <pre>HTML('''&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Flex Grow Example&lt;/title&gt;\n    &lt;style&gt;\n        .container {\n            display: flex;\n            background-color: lightgrey;\n        }\n        .item {\n            padding: 10px;\n            color: white;\n        }\n        .item1 {\n            flex-grow: 1;\n            background-color: orange;\n        }\n        .item2 {\n            flex-grow: 2;\n            background-color: dodgerblue;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;div class=\"item item1\"&gt;Item 1&lt;/div&gt;\n        &lt;div class=\"item item2\"&gt;Item 2&lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;''')\n</pre> HTML('''  Flex Grow Example Item 1 Item 2  ''') Out[2]: Flex Grow Example Item 1 Item 2 In\u00a0[3]: Copied! <pre>HTML('''\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Flex Shrink Example&lt;/title&gt;\n    &lt;style&gt;\n        .item2 {\n            flex-shrink: 5;\n        }\n        .item1 {\n            flex-shrink: 2;         \n        }\n        .item {\n            min-width: 200px;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;div class=\"item item1\"&gt;Item 1&lt;/div&gt;\n        &lt;div class=\"item item2\"&gt;Item 2&lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n''')\n</pre> HTML('''   Flex Shrink Example Item 1 Item 2   ''') Out[3]: Flex Shrink Example Item 1 Item 2 In\u00a0[4]: Copied! <pre>HTML('''\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Flex Wrap Example&lt;/title&gt;\n    &lt;style&gt;\n        .container-wrap {\n            display: flex;\n            flex-wrap: wrap;\n            background-color: lightgrey;\n        }\n        .item-wrap {\n            background-color: dodgerblue;\n            padding: 10px;\n            margin: 5px;\n            color: white;\n            min-width: 200px;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"container-wrap\"&gt;\n        &lt;div class=\"item-wrap\"&gt;Item 1&lt;/div&gt;\n        &lt;div class=\"item-wrap\"&gt;Item 2&lt;/div&gt;\n        &lt;div class=\"item-wrap\"&gt;Item 3&lt;/div&gt;\n        &lt;div class=\"item-wrap\"&gt;Item 4&lt;/div&gt;\n        &lt;div class=\"item-wrap\"&gt;Item 5&lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n''')\n</pre> HTML('''   Flex Wrap Example Item 1 Item 2 Item 3 Item 4 Item 5   ''') Out[4]: Flex Wrap Example Item 1 Item 2 Item 3 Item 4 Item 5 In\u00a0[5]: Copied! <pre>HTML('''\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Flex Shrink Example&lt;/title&gt;\n    &lt;style&gt;\n        .item2 {\n            flex-shrink: 5;\n        }\n        .item1 {\n            flex-shrink: 2;         \n        }\n        .item {\n            flex-basis: 200px;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;div class=\"item item1\"&gt;Item 1&lt;/div&gt;\n        &lt;div class=\"item item2\"&gt;Item 2&lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n''')\n</pre> HTML('''   Flex Shrink Example Item 1 Item 2   ''') Out[5]: Flex Shrink Example Item 1 Item 2 In\u00a0[6]: Copied! <pre>HTML('''\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\" /&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n    &lt;title&gt;CSS Menu with Flexbox&lt;/title&gt;\n    &lt;style&gt;\n        * {\n            font-family: Verdana, Geneva, Tahoma, sans-serif;\n            margin: 0;\n        }\n\n        body {\n            background: #eee;\n        }\n\n        .wrapper {\n            width: 100%;\n            max-width: 960px;\n            margin: 0 auto;\n        }\n\n        /* menu base styles */\n\n        nav {\n            background: #333;\n        }\n\n        nav ul {\n            list-style-type: none;\n            padding: 0;\n        }\n\n        nav a {\n            text-decoration: none;\n            text-align: center;\n            color: #fff;\n            display: block;\n            padding: 10px;\n        }\n\n        nav a:hover {\n            background-color: #555;\n        }\n\n        /* flex styles */\n        @media screen and (min-width: 768px) {\n            nav ul {\n                display: flex;\n                justify-content: center;\n            }\n\n            nav {\n                display: flex;\n                justify-content: space-between;\n            }\n\n            nav li {\n                flex: 1 1 0;\n            }\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;div class=\"wrapper\"&gt;\n        &lt;nav&gt;\n            &lt;ul&gt;\n                &lt;li&gt;&lt;a href=\"\"&gt;Home&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=\"\"&gt;About&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=\"\"&gt;Store&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=\"\"&gt;Contact&lt;/a&gt;&lt;/li&gt;\n            &lt;/ul&gt;\n            &lt;ul class=\"social\"&gt;\n                &lt;li&gt;&lt;a href=\"\" class=\"fb\"&gt;Facebook&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=\"\" class=\"tw\"&gt;Twitter&lt;/a&gt;&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/nav&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n''')\n</pre> HTML('''   CSS Menu with Flexbox <ul> <li>Home</li> <li>About</li> <li>Store</li> <li>Contact</li> </ul> <ul> <li>Facebook</li> <li>Twitter</li> </ul>   ''') Out[6]: CSS Menu with Flexbox <ul> <li>Home</li> <li>About</li> <li>Store</li> <li>Contact</li> </ul> <ul> <li>Facebook</li> <li>Twitter</li> </ul> In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"Geoprocessing/CSS/05-css-flex/#css-flexbox","title":"CSS Flexbox\u00b6","text":"<ul> <li><p><code>Flexbox</code> is designed for laying out items in a single dimension (either as a row or column).</p> </li> <li><p><code>Flexbox</code> is more flexible and easier to manage for responsive designs compared to <code>floats</code>.</p> </li> <li><p>The following result is equivalent</p> <ul> <li>One</li> </ul> <pre>.flex-container {\n  display: flex;\n}\n\n.box {\n  height: 100px;\n  min-width: 100px;\n}\n</pre> <ul> <li>Two</li> </ul> <pre>.flex-container {\n}\n\n.box {\n  height: 100px;\n  min-width: 100px;\n  float: left;\n}\n\n.flex-container:after {\n  content: \"\";\n  display: block;\n  clear: both;\n}\n</pre> </li> </ul>"},{"location":"Geoprocessing/CSS/05-css-flex/#flex-grow","title":"flex-grow\u00b6","text":"<ul> <li><p>The <code>flex-grow</code> property specifies how much a <code>flex item</code> will grow relative to the rest of the <code>flex items</code> inside the same <code>container</code>.</p> </li> <li><p>It takes a unitless value that serves as a proportion.</p> <ul> <li>If all items have a <code>flex-grow</code> value of <code>1</code>, they will grow equally</li> <li>If one item has a <code>flex-grow</code> value of <code>2</code>, it will take up twice the amount of space compared to an item with a value of 1.</li> </ul> </li> <li><p>Example</p> </li> </ul>"},{"location":"Geoprocessing/CSS/05-css-flex/#flex-shrink","title":"flex-shrink\u00b6","text":"<ul> <li>The <code>flex-shrink</code> property specifies how much a <code>flex item</code> will shrink relative to the rest of the flex items in the same <code>container</code> when there isn't enough space.</li> <li>It takes a unitless value that serves as a proportion.</li> <li>Example</li> </ul>"},{"location":"Geoprocessing/CSS/05-css-flex/#flex-wrap","title":"flex-wrap\u00b6","text":"<ul> <li>The <code>flex-wrap</code> property specifies whether the <code>flex items</code> should wrap onto multiple lines within a <code>flex container</code>.</li> <li>By default, flex items will try to fit onto one line (<code>nowrap</code>).</li> <li>Common Use: Used to allow <code>flex items</code> to wrap onto multiple lines for better layout control.</li> <li>Example</li> </ul>"},{"location":"Geoprocessing/CSS/05-css-flex/#flex-basis","title":"flex-basis\u00b6","text":"<ul> <li>The <code>flex-basis</code> property specifies the initial main size of a <code>flex item</code> before any space is distributed according to the flex factors (<code>flex-grow</code> and <code>flex-shrink</code>).</li> <li>It can take values similar to the <code>width</code> property.</li> </ul>"},{"location":"Geoprocessing/CSS/05-css-flex/#creating-a-menu-with-flexbox","title":"Creating a Menu with Flexbox\u00b6","text":""},{"location":"Geoprocessing/JS/01-get-started/","title":"JS01 Web Maps","text":""},{"location":"Geoprocessing/JS/01-get-started/#introduction-to-arcgis-javascript-api","title":"Introduction to ArcGIS JavaScript API\u00b6","text":"<p>The <code>ArcGIS JavaScript API</code> is a powerful tool for building interactive web maps and geographic information system (GIS) applications.</p> <p>This tutorial will guide you through the basics of using the <code>ArcGIS JavaScript API</code>, including setting up your development environment, creating a simple map, adding layers, and working with spatial data.</p> <ul> <li>Add Points, lines and Polygons</li> <li>Host Web Maps</li> <li>Read after finish</li> </ul>"},{"location":"Geoprocessing/JS/01-get-started/#setting-up-your-development-environment","title":"Setting Up Your Development Environment\u00b6","text":"<p>Create a new HTML file (e.g., <code>index.html</code>) and open it in your favorite text editor, and include the <code>ArcGIS JavaScript API</code> in your <code>HTML</code> file by adding the following lines within the <code>&lt;head&gt;</code> section:</p> <pre>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;title&gt;ArcGIS JavaScript API Tutorial&lt;/title&gt;\n    &lt;link\n      rel=\"stylesheet\"\n      href=\"https://js.arcgis.com/4.25/esri/themes/light/main.css\"\n    /&gt;\n    &lt;script src=\"https://js.arcgis.com/4.25/\"&gt;&lt;/script&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div id=\"viewDiv\" style=\"height: 100vh;\"&gt;&lt;/div&gt;\n    &lt;script&gt;\n      require([\"esri/Map\", \"esri/views/MapView\"], function (Map, MapView) {\n        // Your code will go here\n      });\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</pre>"},{"location":"Geoprocessing/JS/01-get-started/#creating-a-basic-map","title":"Creating a Basic Map\u00b6","text":""},{"location":"Geoprocessing/JS/01-get-started/#initialize-the-map","title":"Initialize the Map\u00b6","text":"<p>Within the <code>&lt;script&gt;</code> tag, initialize a new <code>map</code> by creating an instance of the <code>Map</code> class:</p> <pre>var map = new Map({\n  basemap: \"topo-vector\", // Basemap layer service\n});\n</pre>"},{"location":"Geoprocessing/JS/01-get-started/#create-a-mapview","title":"Create a MapView\u00b6","text":"<p>Next, create a <code>MapView</code> to display the <code>map</code>. This defines the center and zoom level of the map:</p> <pre>var view = new MapView({\n  container: \"viewDiv\", // Reference to the scene div created in step 1\n  map: map, // Reference to the map object created before the view\n  center: [-118.805, 34.027], // Longitude, latitude\n  zoom: 13, // Zoom level\n});\n</pre>"},{"location":"Geoprocessing/JS/01-get-started/#add-points-lines-and-polygons","title":"Add Points, Lines, and Polygons\u00b6","text":""},{"location":"Geoprocessing/JS/01-get-started/#adding-a-point","title":"Adding a Point\u00b6","text":"<ul> <li><p>Point Geometry: Defines the location of the point.</p> </li> <li><p>Marker Symbol: Customizes the point's appearance with color and outline.</p> </li> <li><p>Popup Template: Specifies the template for pop-up information displayed when the graphic is clicked.</p> </li> <li><p>Attributes: Contains data attributes to be displayed in the popup.</p> </li> <li><p>Graphic Object: Combines geometry, symbol, and attributes into a graphic, which is then added to the graphics layer.</p> <pre>const point = {\n  type: \"point\",\n  longitude: -118.80657463861,\n  latitude: 34.0005930608889,\n};\n\nconst simpleMarkerSymbol = {\n  type: \"simple-marker\",\n  color: [226, 119, 40], // Orange\n  outline: {\n    color: [255, 255, 255], // White\n    width: 1,\n  },\n};\n\nconst popupTemplate = {\n  title: \"{Name}\",\n  content: \"{Description}\",\n};\n\nconst pointAttribute = {\n  Name: \"Points\",\n  Description: \"It's a sample Point\",\n};\n\nconst pointGraphic = new Graphic({\n  geometry: point,\n  symbol: simpleMarkerSymbol,\n  popupTemplate: popupTemplate,\n  attributes: pointAttribute,\n});\ngraphicsLayer.add(pointGraphic);\n</pre> </li> </ul>"},{"location":"Geoprocessing/JS/01-get-started/#adding-a-line","title":"Adding a Line\u00b6","text":"<ul> <li><p>Polyline Geometry: Defines the vertices of the line.</p> </li> <li><p>Line Symbol: Customizes the line's appearance with color and width.</p> <pre>const polyline = {\n  type: \"polyline\",\n  paths: [\n    [-118.821527826096, 34.0139576938577],\n    [-118.814893761649, 34.0080602407843],\n    [-118.808878330345, 34.0016642996246],\n  ],\n};\n\nconst simpleLineSymbol = {\n  type: \"simple-line\",\n  color: [226, 119, 40], // Orange\n  width: 2,\n};\n\nconst lineAttribute = {\n  Name: \"Lines\",\n  Description: \"It's a sample line\",\n};\n\nconst polylineGraphic = new Graphic({\n  geometry: polyline,\n  symbol: simpleLineSymbol,\n  popupTemplate: popupTemplate,\n  attributes: lineAttribute,\n});\ngraphicsLayer.add(polylineGraphic);\n</pre> </li> </ul>"},{"location":"Geoprocessing/JS/01-get-started/#adding-a-polygon","title":"Adding a Polygon\u00b6","text":"<ul> <li><p>Polygon Geometry: Defines the vertices of the polygon.</p> </li> <li><p>Fill Symbol: Customizes the polygon's appearance with color, opacity, and outline.</p> <pre>const polygon = {\n  type: \"polygon\",\n  rings: [\n    [-118.818984489994, 34.0137559967283],\n    [-118.806796597377, 34.0215816298725],\n    [-118.791432890735, 34.0163883241613],\n    [-118.79596686535, 34.008564864635],\n    [-118.808558110679, 34.0035027131376],\n  ],\n};\n\nconst simpleFillSymbol = {\n  type: \"simple-fill\",\n  color: [227, 139, 79, 0.8], // Orange, opacity 80%\n  outline: {\n    color: [255, 255, 255],\n    width: 1,\n  },\n};\n\nconst polygonAttributes = {\n  Name: \"Graphic\",\n  Description: \"I am a polygon\",\n};\n\nconst polygonGraphic = new Graphic({\n  geometry: polygon,\n  symbol: simpleFillSymbol,\n  attributes: polygonAttributes,\n  popupTemplate: popupTemplate,\n});\ngraphicsLayer.add(polygonGraphic);\n</pre> </li> </ul>"},{"location":"Geoprocessing/JS/01-get-started/#host-web-layers","title":"Host Web Layers\u00b6","text":"<p>In this section, we will explore how to host <code>web layers</code> using the <code>ArcGIS Maps SDK for JavaScript</code>.</p>"},{"location":"Geoprocessing/JS/01-get-started/#webmap","title":"WebMap\u00b6","text":"<p>The <code>WebMap</code> class is used to create and manipulate web maps.</p> <ul> <li><p>A web map is a configuration of layers, styles, and other settings that can be shared and accessed via a web service.</p> </li> <li><p>In this script, multiple WebMap instances are created using <code>unique web map IDs</code>.</p> <ul> <li>Constructor Parameters: The <code>WebMap</code> constructor takes an object with a <code>portalItem</code> property.</li> <li><code>portalItem</code>: This is an object that specifies the ID of the web map stored in the <code>ArcGIS Online portal</code>.</li> </ul> <pre>const webmaps = webmapids.map((webmapid) =&gt; {\n  return new WebMap({\n    portalItem: {\n      id: webmapid,\n    },\n  });\n});\n</pre> </li> </ul>"},{"location":"Geoprocessing/JS/01-get-started/#mapview","title":"MapView\u00b6","text":"<ul> <li><p>The <code>MapView</code> class is used to display a map in a specific HTML container.</p> </li> <li><p>It allows you to interact with the map, including <code>panning</code>, <code>zooming</code>, and <code>adding layers</code>.</p> <ul> <li><p><code>map</code>: The WebMap instance to display.</p> </li> <li><p><code>container</code>: The ID of the HTML element where the map will be rendered.</p> </li> <li><p><code>center</code>: The initial center point of the map.</p> </li> <li><p><code>zoom</code>: The initial zoom level of the map.</p> <pre>const view = new MapView({\n  map: webmaps[0],\n  container: \"viewDiv\",\n  center: mapConfigurations[0].center,\n  zoom: mapConfigurations[0].zoom,\n});\n</pre> </li> </ul> </li> </ul>"},{"location":"Geoprocessing/JS/02-manipulate-layers/","title":"JS02 Layers and Widgets","text":"<pre>view.on(\"click\", function (event) {\n  view.hitTest(event).then(function (response) {\n    if (response.results.length &gt; 0) {\n      const graphic = response.results.filter((result) =&gt; {\n        return (\n          result.graphic.layer === trailheads ||\n          result.graphic.layer === trailsLayer ||\n          result.graphic.layer === parksLayer\n        );\n      })[0].graphic;\n\n      if (graphic) {\n        view.goTo({\n          target: graphic.geometry,\n          zoom: 15,\n        });\n\n        view.popup.open({\n          features: [graphic],\n          location: event.mapPoint,\n        });\n      }\n    } else {\n      view.goTo(originalView);\n      view.popup.close();\n    }\n  });\n});\n</pre>"},{"location":"Geoprocessing/JS/02-manipulate-layers/#web-layers-and-widgets","title":"Web Layers and widgets\u00b6","text":"<ul> <li>Add Web Layers</li> <li>Widgets</li> <li>Read after finish</li> </ul>"},{"location":"Geoprocessing/JS/02-manipulate-layers/#adding-feature-layer-into-webmap","title":"Adding Feature Layer into WebMap\u00b6","text":"<ul> <li>In this section, we will discuss how to add <code>feature layers</code> to a <code>web map</code> using the <code>ArcGIS Maps SDK for JavaScript</code>.</li> <li>A <code>feature layer</code> is a type of layer that contains a set of features (<code>points</code>, <code>lines</code>, or <code>polygons</code>) and their <code>attributes</code>.</li> </ul>"},{"location":"Geoprocessing/JS/02-manipulate-layers/#feature-layer","title":"Feature Layer\u00b6","text":"<ul> <li>The FeatureLayer class is used to create a layer that can be added to a map. It connects to a feature service and retrieves the features and their attributes. Here\u2019s how you can add a feature layer to your map:</li> </ul> <ol> <li>Import the <code>FeatureLayer Class</code>: Ensure you import the <code>FeatureLayer class</code> from the <code>ArcGIS API</code>.</li> </ol> <pre>require([\n      \"esri/Map\",\n      \"esri/views/MapView\",\n      \"esri/layers/FeatureLayer\"\n  ], function (Map, MapView, FeatureLayer) {\n</pre> <ol> <li>Create a FeatureLayer Instance: Create a new instance of <code>FeatureLayer</code> by providing the <code>URL</code> to the feature service and any additional properties such as the renderer and labeling info.</li> </ol> <ul> <li><p><code>url</code>: The URL to the feature service.</p> </li> <li><p><code>renderer</code>: Defines how the features in the layer should be rendered.</p> </li> <li><p><code>labelingInfo</code>: Provides labeling information for the features.</p> <pre>const trailheads = new FeatureLayer({\n  url: \"https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads/FeatureServer/0\",\n  renderer: trailheadsRenderer,\n  labelingInfo: [trailheadsLabels],\n});\n</pre> </li> </ul> <ol> <li>Add the <code>FeatureLayer</code> to the <code>Map</code>: Add the created FeatureLayer instance to the map using the add method.</li> </ol> <pre>map.add(trailheads);\n</pre>"},{"location":"Geoprocessing/JS/02-manipulate-layers/#customized-rendering","title":"Customized Rendering\u00b6","text":"<p>In this section, we will discuss how to customize the rendering of <code>feature layers</code>. Customizing rendering allows you to control how the features in your layer are displayed, including their <code>symbols</code>, <code>colors</code>, <code>sizes</code>, and <code>labels</code>.</p>"},{"location":"Geoprocessing/JS/02-manipulate-layers/#renderers","title":"Renderers\u00b6","text":"<p>A renderer defines how features are visualized on the map.</p> <ul> <li>The <code>renderer</code> property of a <code>FeatureLayer</code> specifies the visual style for the features in the layer.</li> <li>There are several types of renderers, but in this example, we will focus on the <code>SimpleRenderer</code>.</li> </ul> <ol> <li><p><code>SimpleRenderer</code>: The <code>SimpleRenderer</code> class applies the same symbol to all features in the layer.</p> <ul> <li><code>type</code>: Specifies the type of renderer. In this case, it is \"simple\".</li> <li><code>symbol</code>: Defines the symbol used for rendering. Here, we are using a picture-marker symbol with a URL to an image.</li> </ul> <pre>const trailheadsRenderer = {\n  type: \"simple\",\n  symbol: {\n    type: \"picture-marker\",\n    url: \"http://static.arcgis.com/images/Symbols/NPS/npsPictograph_0231b.png\",\n    width: \"18px\",\n    height: \"18px\",\n  },\n};\n</pre> </li> <li><p><code>VisualVariables</code>: These allow you to vary the symbols used to render features based on their attributes.</p> <ul> <li>In the <code>trails</code> layer, the line thickness varies based on the <code>ELEV_GAIN</code> attribute.</li> <li><code>visualVariables</code>: An array of objects that define how to vary the symbol properties (such as size, color) based on attribute values.</li> <li><code>field</code>: The attribute field used to drive the visual variable.</li> <li><code>minDataValue</code> and maxDataValue: Define the range of data values.</li> <li><code>minSize</code> and <code>maxSize</code>: Define the minimum and maximum sizes for the symbol.</li> </ul> <pre>const trailsRenderer = {\n  type: \"simple\",\n  symbol: {\n    color: \"#BA55D3\",\n    type: \"simple-line\",\n    style: \"solid\",\n  },\n  visualVariables: [\n    {\n      type: \"size\",\n      field: \"ELEV_GAIN\",\n      minDataValue: 0,\n      maxDataValue: 2300,\n      minSize: \"3px\",\n      maxSize: \"7px\",\n    },\n  ],\n};\n</pre> </li> </ol>"},{"location":"Geoprocessing/JS/02-manipulate-layers/#labeling","title":"Labeling\u00b6","text":"<p>Labeling is used to display text labels for features.</p> <ul> <li><p>The <code>labelingInfo</code> property of a <code>FeatureLayer</code> specifies how labels should be rendered.</p> </li> <li><p><code>symbol</code>: Defines the text symbol for the label, including color, halo, and font properties.</p> </li> <li><p><code>labelPlacement</code>: Specifies the placement of the label relative to the feature.</p> </li> <li><p><code>labelExpressionInfo</code>: Defines the attribute field or expression used to generate the label text.</p> <pre>const trailheadsLabels = {\n  symbol: {\n    type: \"text\",\n    color: \"#FFFFFF\",\n    haloColor: \"#5E8D74\",\n    haloSize: \"2px\",\n    font: {\n      size: \"12px\",\n      family: \"Noto Sans\",\n      style: \"italic\",\n      weight: \"normal\",\n    },\n  },\n  labelPlacement: \"above-center\",\n  labelExpressionInfo: {\n    expression: \"$feature.TRL_NAME\",\n  },\n};\n</pre> </li> </ul>"},{"location":"Geoprocessing/JS/02-manipulate-layers/#pop-up","title":"Pop-up\u00b6","text":"<ul> <li><code>Popups</code> are a powerful feature that allow you to display <code>attribute</code> information when a feature is clicked.</li> <li>This enhances the user experience by providing interactive and detailed information about the map features.</li> </ul>"},{"location":"Geoprocessing/JS/02-manipulate-layers/#popup-template","title":"Popup Template\u00b6","text":"<ul> <li>Popups are configured using the <code>popupTemplate</code> property of the <code>FeatureLayer</code>.</li> <li>The <code>popupTemplate</code> property is an object that can contain various properties such as <code>title</code>, <code>content</code>, and <code>fieldInfos</code>.</li> </ul> <ol> <li>Basic Popup Configuration: A simple popup can display text content with attribute fields.</li> </ol> <ul> <li><p><code>title</code>: The title of the popup. It can include static text and attribute values.</p> </li> <li><p><code>content</code>: The HTML content of the popup. Attribute values are included using curly braces {}.</p> <pre>const popupTrailheads = {\n  title: \"Trailhead\",\n  content:\n    \"&lt;b&gt;Trail:&lt;/b&gt; {TRL_NAME}&lt;br&gt;\\\n    &lt;b&gt;City:&lt;/b&gt; {CITY_JUR}&lt;br&gt;\\\n    &lt;b&gt;Cross Street:&lt;/b&gt; {X_STREET}&lt;br&gt;\\\n    &lt;b&gt;Parking:&lt;/b&gt; {PARKING}&lt;br&gt;\\\n    &lt;b&gt;Elevation:&lt;/b&gt; {ELEV_FT} ft\",\n};\n</pre> </li> </ul> <ol> <li><p>Media Popups: You can include charts, images, and other media in your popup.</p> <ul> <li><code>mediaInfos</code>: Defines the media content. In this case, a <code>line chart </code>is displayed using the fields <code>ELEV_MIN</code> and <code>ELEV_MAX</code>.</li> </ul> <pre>const popupTrails = {\n  title: \"Trail Information\",\n  content: [\n    {\n      type: \"media\",\n      mediaInfos: [\n        {\n          type: \"line-chart\",\n          caption: \"\",\n          value: {\n            fields: [\"ELEV_MIN\", \"ELEV_MAX\"],\n            tooltipField: \"Min and max elevation values\",\n          },\n        },\n      ],\n    },\n  ],\n};\n</pre> </li> </ol>"},{"location":"Geoprocessing/JS/02-manipulate-layers/#adding-widgets","title":"Adding Widgets\u00b6","text":"<ul> <li><code>ArcGIS JavaScript API</code> provides various <code>widgets</code> to enhance the functionality of your map, such as a <code>scale bar</code>, <code>legend</code>, or <code>search widget</code>.</li> <li>Here is more</li> </ul>"},{"location":"Geoprocessing/JS/02-manipulate-layers/#scalebar-widget","title":"ScaleBar Widget\u00b6","text":"<p>The <code>ScaleBar</code> widget displays a scale bar on the map, which shows the map's scale.</p> <ul> <li><p><code>view</code>: The view in which the widget will be added.</p> </li> <li><p><code>unit</code>: Specifies the unit of measurement (<code>metric</code> or <code>non-metric</code>).</p> <pre>var scaleBar = new ScaleBar({ view: view, unit: \"metric\" });\nview.ui.add(scaleBar, \"bottom-right\");\n</pre> </li> </ul>"},{"location":"Geoprocessing/JS/02-manipulate-layers/#home-widget","title":"Home Widget\u00b6","text":"<p>The <code>Home widget</code> allows users to return to the map's initial extent.</p> <pre>var home = new Home({ view: view });\nview.ui.add(home, \"top-left\");\n</pre>"},{"location":"Geoprocessing/JS/02-manipulate-layers/#full-screen-widget","title":"Full-Screen Widget\u00b6","text":"<p>The <code>Full-screen widget</code> enables the view to be displayed in full-screen mode.</p> <pre>var fullscreen = new Fullscreen({ view: view });\nview.ui.add(fullscreen, \"top-right\");\n</pre>"},{"location":"Geoprocessing/JS/02-manipulate-layers/#layerlist-widget","title":"LayerList Widget\u00b6","text":"<p>The <code>LayerList widget</code> displays a list of layers in the map and allows users to toggle their visibility.</p> <pre>var layerList = new LayerList({ view: view });\nview.ui.add(layerList, \"top-right\");\n</pre>"},{"location":"Geoprocessing/JS/02-manipulate-layers/#basemapgallery-widget","title":"BasemapGallery Widget\u00b6","text":"<p>The <code>BasemapGallery widget</code> allows users to switch between different basemaps.</p> <pre>var basemapGallery = new BasemapGallery({ view: view });\nvar bgExpand = new Expand({ view: view, content: basemapGallery });\nview.ui.add(bgExpand, \"bottom-left\");\n</pre>"},{"location":"Geoprocessing/JS/02-manipulate-layers/#search-widget","title":"Search Widget\u00b6","text":"<p>The Search widget provides a search box that allows users to find locations on the map.</p> <pre>var search = new Search({ view: view });\nview.ui.add(search, \"top-right\");\n</pre>"},{"location":"Geoprocessing/JS/02-manipulate-layers/#interacting-with-the-map","title":"Interacting with the Map\u00b6","text":"<ul> <li>Here is more</li> </ul>"},{"location":"Geoprocessing/JS/02-manipulate-layers/#adding-a-click-event","title":"Adding a Click Event\u00b6","text":"<pre>view.on(\"click\", function (event) {\n  var lat = event.mapPoint.latitude;\n  var lon = event.mapPoint.longitude;\n  console.log(\"Latitude: \" + lat + \", Longitude: \" + lon);\n});\n</pre>"},{"location":"Geoprocessing/JS/02-manipulate-layers/#example-zoom-to-selected-feature","title":"Example: Zoom to selected feature\u00b6","text":"<ol> <li><p>Setting Up the Click Event Listener</p> <ul> <li>To add click functionality to the map, you use the <code>view.on(\"click\", function (event) {...})</code> method.</li> <li>This method sets up an <code>event listener</code> that triggers every time the user clicks on the map.</li> </ul> <pre>view.on(\"click\", function (event) {\n    view.hitTest(event).then(function (response) {\n        ...\n    });\n});\n</pre> </li> <li><p>Performing a Hit Test</p> <ul> <li>The <code>view.hitTest(event)</code> method performs a hit test at the location where the user clicked.</li> <li>A <code>hit test</code> identifies features at a given screen coordinate. The results of the hit test are processed within the <code>then</code> function.</li> </ul> </li> <li><p>Filtering Hit Test Results</p> <ul> <li>The hit test results are filtered to find <code>graphics</code> that belong to the specific layers you are interested in (<code>trailheads</code>, <code>trails</code>, <code>parks</code>).</li> <li>The filter method ensures that only relevant features are processed.</li> </ul> <pre>if (response.results.length &gt; 0) {\n const graphic = response.results.filter((result) =&gt; {\n     return (\n     result.graphic.layer === trailheads ||\n     result.graphic.layer === trailsLayer ||\n     result.graphic.layer === parksLayer\n     );\n })[0].graphic;\n</pre> </li> <li><p>Checking for Valid Graphics</p> <ul> <li>After filtering, it checks if a valid <code>graphic</code> was found.</li> <li>If a graphic is found, the map view zooms into the feature and opens a <code>pop-up</code> at the location where the user clicked.</li> </ul> <pre>if (graphic) {\n  view.goTo({\n    target: graphic.geometry,\n    zoom: 15,\n  });\n\n  view.popup.open({\n    features: [graphic],\n    location: event.mapPoint,\n  });\n}\n</pre> </li> <li><p>Handling Clicks Outside of Features</p> <ul> <li>If the hit test does not find any features (the user clicked on an empty area of the map), the pop-up is closed.</li> </ul> </li> </ol>"},{"location":"Geoprocessing/JS/03-spatial-query/","title":"JS03 Spatial Query","text":""},{"location":"Geoprocessing/JS/03-spatial-query/#working-with-spatial-data-with-arcgis-js-api","title":"Working with Spatial Data with ArcGIS JS API\u00b6","text":"<p>In this section, we'll dive deeper into working with spatial data using the <code>ArcGIS JavaScript API</code>.</p> <p>We'll cover <code>spatial queries</code>, <code>filtering</code>, and understanding the <code>data structure</code> of web maps and feature layers on <code>ArcGIS Online</code>.</p> <ul> <li>Read after finish</li> <li>Final Result</li> <li>SQL Query</li> <li>Feature Query</li> </ul>"},{"location":"Geoprocessing/JS/03-spatial-query/#performing-spatial-queries-using-sql","title":"Performing Spatial Queries Using SQL\u00b6","text":"<p>In this section, we'll explore how to perform <code>spatial queries</code> using <code>SQL</code> within a web map using the ArcGIS JavaScript API.</p> <ul> <li>This involves setting up a <code>feature layer</code>, defining <code>SQL where clauses</code> for filtering data, and executing queries to display results on the map.</li> </ul>"},{"location":"Geoprocessing/JS/03-spatial-query/#feature-layer-and-popup-template","title":"Feature Layer and Popup Template\u00b6","text":"<ul> <li><p>Define the <code>feature laye</code>r with a <code>popup</code> template to display information about each feature.</p> <pre>const trailsUrl =\n  \"https://services2.arcgis.com/VNo0ht0YPXJoI4oE/arcgis/rest/services/Trials/FeatureServer/0\";\n\nconst popupTemplate = {\n  title: \"Object ID: {OBJECTID}\",\n  fieldInfos: [\n    {\n      fieldName: \"trailName\",\n      label: \"trailName\",\n      format: { places: 0, digitSeperator: false },\n    },\n    {\n      fieldName: \"Shape__Length\",\n      label: \"Trail_Length\",\n      format: { places: 0, digitSeperator: true },\n    },\n    {\n      fieldName: \"manageOrg\",\n      label: \"manageOrg\",\n      format: { places: 0, digitSeperator: false },\n    },\n    {\n      fieldName: \"trailStatus\",\n      label: \"trailStatus\",\n      format: { places: 0, digitSeperator: false },\n    },\n  ],\n  content:\n    \"&lt;b&gt;Trail Name:&lt;/b&gt; {trailName} &lt;br&gt;\\\n            &lt;b&gt;Trail Length:&lt;/b&gt; {Shape__Length} Meter&lt;br&gt;\\\n            &lt;b&gt;Management Organization:&lt;/b&gt; {manageOrg}&lt;br&gt;\\\n            &lt;b&gt;Trail Status:&lt;/b&gt; {trailStatus}\",\n};\n\nconst featureLayer = new FeatureLayer({\n  url: trailsUrl,\n  popupTemplate: popupTemplate,\n});\nmap.add(featureLayer);\n</pre> </li> </ul>"},{"location":"Geoprocessing/JS/03-spatial-query/#setting-up-the-querytask-and-query","title":"Setting Up the QueryTask and Query\u00b6","text":"<ul> <li><p>Define the <code>QueryTask</code> and <code>Query</code> to execute <code>spatial queries</code> using <code>SQL</code>.</p> <pre>const qTask = new QueryTask({ url: trailsUrl });\nconst params = new Query({\n  returnGeometry: true,\n  outFields: [\"*\"],\n});\n</pre> </li> </ul>"},{"location":"Geoprocessing/JS/03-spatial-query/#defining-sql-where-clauses","title":"Defining SQL Where Clauses\u00b6","text":"<ul> <li><p>Create an array of <code>SQL</code> where clauses for the user to select from.</p> </li> <li><p>This array will be used to filter features based on different criteria.</p> <pre>const querySQL = [\n  \"Choose a SQL where clause...\",\n  \"hike = 'No'\",\n  \"hike = 'Yes'\",\n  \"bike = 'No'\",\n  \"bike = 'Yes'\",\n  \"horse = 'No'\",\n  \"horse = 'Yes'\",\n];\nlet whereClause = querySQL[0];\n\n// Add SQL UI\nconst select = document.createElement(\"select\");\nselect.setAttribute(\"class\", \"esri-widget esri-select\");\nselect.setAttribute(\n  \"style\",\n  \"width: 300px; font-family: 'Avenir Next'; font-size: 1em\"\n);\nquerySQL.forEach((query) =&gt; {\n  let option = document.createElement(\"option\");\n  option.innerHTML = query;\n  option.value = query;\n  select.appendChild(option);\n});\n\nview.ui.add(select, \"top-right\");\n</pre> </li> </ul>"},{"location":"Geoprocessing/JS/03-spatial-query/#executing-the-sql-query","title":"Executing the SQL Query\u00b6","text":"<ul> <li><p>Listen for changes in the selection and execute the <code>query</code> based on the selected <code>SQL where clause</code>.</p> <pre>select.addEventListener(\"change\", (event) =&gt; {\n  whereClause = event.target.value;\n  executeQuery(whereClause);\n});\n\nfunction executeQuery(whereClause) {\n  params.where = whereClause;\n\n  qTask\n    .execute(params)\n    .then((results) =&gt; {\n      console.log(\"Feature count: \" + results.features.length);\n      view.graphics.removeAll();\n      view.graphics.addMany(results.features);\n    })\n    .catch((error) =&gt; {\n      console.error(\"Error performing query:\", error);\n    });\n}\n</pre> </li> </ul> <pre><code>\n</code></pre>"},{"location":"Geoprocessing/JS/03-spatial-query/#additional-methods-and-best-practices","title":"Additional Methods and Best Practices\u00b6","text":"<p>Setting Up <code>Spatial Relationships</code></p> <ul> <li><p>In addition to <code>filtering by attributes</code>, you can also <code>filter by spatial relationships</code>, such as within a given area or <code>intersecting</code> another feature.</p> </li> <li><p>Here\u2019s an example of setting up a spatial relationship query:</p> <pre>const spatialQueryParams = new Query({\n  returnGeometry: true,\n  outFields: [\"*\"],\n  spatialRelationship: \"intersects\", // Can be intersects, contains, etc.\n  geometry: someGeometry, // Geometry to compare against\n});\n\nqTask.execute(spatialQueryParams).then((results) =&gt; {\n  console.log(\"Features found: \", results.features);\n});\n</pre> </li> </ul> <p>Improving Query Performance</p> <ul> <li><p>For better performance, especially with large datasets:</p> <ul> <li>Limit the <code>fields</code> you retrieve using <code>outFields</code>.</li> <li>Use <code>indexed</code> fields in your <code>SQL where clause</code>.</li> <li>Paginate results if dealing with large numbers of features.</li> </ul> <pre>params.outFields = [\"OBJECTID\", \"trailName\", \"Shape__Length\"];\nparams.where = \"Shape__Length &gt; 1000\"; // Example where clause to filter long trails\n\nqTask.executeForCount(params).then((count) =&gt; {\n  console.log(\"Total features found: \", count);\n});\n</pre> </li> </ul>"},{"location":"Geoprocessing/JS/03-spatial-query/#query-a-feature-layer-using-sketch-widgets","title":"Query a Feature Layer Using Sketch Widgets\u00b6","text":"<ul> <li>In this tutorial, we will learn how to use the <code>Sketch widget</code> to create geometries and perform <code>spatial queries</code> on a <code>feature laye</code>r using the <code>ArcGIS JavaScript API</code>.</li> <li>This tutorial will guide you through setting up the map, adding a Sketch widget, and performing queries based on <code>user-drawn geometries</code>.</li> <li>In this tutorial, we will review again what we learn in pervious sections</li> </ul>"},{"location":"Geoprocessing/JS/03-spatial-query/#setting-up-the-environment","title":"Setting Up the Environment\u00b6","text":"<ul> <li><p>First, ensure you have the <code>basic HTML structure</code> and include the necessary ArcGIS JavaScript and CSS files.</p> <pre>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;meta\n      name=\"viewport\"\n      content=\"initial-scale=1, maximum-scale=1, user-scalable=no\"\n    /&gt;\n    &lt;title&gt;\n      ArcGIS Maps SDK for JavaScript Tutorials: Query a feature layer\n      (spatial)\n    &lt;/title&gt;\n    &lt;style&gt;\n      html,\n      body,\n      #viewDiv {\n        padding: 0;\n        margin: 0;\n        height: 100%;\n        width: 100%;\n      }\n    &lt;/style&gt;\n    &lt;link\n      rel=\"stylesheet\"\n      href=\"https://js.arcgis.com/4.29/esri/themes/light/main.css\"\n    /&gt;\n    &lt;script src=\"https://js.arcgis.com/4.29/\"&gt;&lt;/script&gt;\n  &lt;/head&gt;\n\n  &lt;body&gt;\n    &lt;div id=\"viewDiv\"&gt;&lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</pre> </li> </ul>"},{"location":"Geoprocessing/JS/03-spatial-query/#adding-the-map-and-view","title":"Adding the Map and View\u00b6","text":"<ul> <li><p>Create the <code>map</code> and <code>map view</code> with a specified center and <code>zoom level</code>.</p> <pre>require([\n  \"esri/config\",\n  \"esri/Map\",\n  \"esri/views/MapView\",\n  \"esri/widgets/Sketch\",\n  \"esri/layers/GraphicsLayer\",\n  \"esri/layers/FeatureLayer\",\n], function (esriConfig, Map, MapView, Sketch, GraphicsLayer, FeatureLayer) {\n  esriConfig.portalUrl = \"https://jsapi.maps.arcgis.com\";\n\n  const map = new Map({\n    basemap: \"topo-vector\", // basemap styles service\n  });\n\n  const view = new MapView({\n    container: \"viewDiv\",\n    map: map,\n    center: [-118.80543, 34.03], // Longitude, latitude\n    zoom: 13,\n  });\n\n  // Continue with the next steps...\n});\n</pre> </li> </ul> <pre><code>\n</code></pre>"},{"location":"Geoprocessing/JS/03-spatial-query/#adding-the-feature-layer","title":"Adding the Feature Layer\u00b6","text":"<ul> <li><p>Add the <code>feature layer</code> that you want to query to the <code>map</code>.</p> <pre>const parcelLayer = new FeatureLayer({\n  url: \"https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/LA_County_Parcels/FeatureServer/0\",\n});\n\nmap.add(parcelLayer);\n</pre> </li> </ul>"},{"location":"Geoprocessing/JS/03-spatial-query/#adding-the-sketch-widget","title":"Adding the Sketch Widget\u00b6","text":"<ul> <li><p>Add a <code>GraphicsLayer</code> to the <code>map</code> for the <code>sketch widget</code> to use.</p> </li> <li><p>Then, create and configure the <code>sketch widget</code>.</p> <pre>const graphicsLayerSketch = new GraphicsLayer();\nmap.add(graphicsLayerSketch);\n\nconst sketch = new Sketch({\n  layer: graphicsLayerSketch,\n  view: view,\n  creationMode: \"update\", // Auto-select\n});\n\nview.ui.add(sketch, \"top-right\");\n</pre> </li> </ul>"},{"location":"Geoprocessing/JS/03-spatial-query/#querying-the-feature-layer","title":"Querying the Feature Layer\u00b6","text":"<ul> <li>Set up the <code>event listeners</code> for the <code>sketch widget</code> to handle the creation and modification of geometries.</li> <li>These geometries will be used to query the feature layer.</li> </ul> <ol> <li>Define the Query Object</li> </ol> <ul> <li><p>The <code>parcelQuery</code> object defines the <code>parameters</code> for querying the <code>feature layer</code>. Key properties include:</p> <ul> <li><code>spatialRelationship</code>: Specifies the spatial relationship to apply. In this case, intersects means we are looking for features that intersect the drawn geometry.</li> <li><code>geometry</code>: The geometry drawn by the user, which will be used as the <code>spatial filter</code>.</li> <li><code>outFields</code>: An array of <code>attribute field names</code> to include in the query results. This determines which attributes of the features will be returned.</li> <li><code>returnGeometry</code>: A boolean that indicates whether the geometry of the features should be returned.</li> </ul> <pre>function queryFeaturelayer(geometry) {\n  const parcelQuery = {\n    spatialRelationship: \"intersects\", // Relationship operation to apply\n    geometry: geometry, // The sketch feature geometry\n    outFields: [\"APN\", \"UseType\", \"TaxRateCity\", \"Roll_LandValue\"], // Attributes to return\n    returnGeometry: true,\n  };\n</pre> </li> </ul> <ol> <li><p>Executing the Query:</p> <ul> <li>Call <code>queryFeatures</code> on the <code>parcelLayer</code> with the <code>parcelQuery</code> object.</li> <li>Handle the <code>promise</code> returned by <code>queryFeatures</code> to process the results or catch any errors.</li> </ul> <pre>// Execute the query\nparcelLayer.queryFeatures(parcelQuery)\n .then((results) =&gt; {\n   console.log(\"Feature count: \" + results.features.length);\n   displayResults(results);\n })\n .catch((error) =&gt; {\n   console.log(error);\n });\n}\n</pre> </li> </ol>"},{"location":"Geoprocessing/JS/03-spatial-query/#displaying-the-query-results","title":"Displaying the Query Results\u00b6","text":"<ul> <li>Define a function to display the results of the query.</li> <li>This function will create graphics for each <code>feature</code> returned by the query and add them to the <code>map view</code>.</li> </ul> <ol> <li><p>Symbol Definition</p> <ul> <li>Define a symbol to style the features. Here, we use a <code>simple-fill symbol</code> with a <code>semi-transparent</code> fill color and a white outline.</li> </ul> <pre>function displayResults(results) {\n  const symbol = {\n    type: \"simple-fill\",\n    color: [150, 10, 100, 0.5],\n    outline: {\n      color: \"white\",\n      width: 0.5,\n    },\n  };\n</pre> </li> <li><p>Popup Template</p> <ul> <li>Define a <code>popup template</code> to display attribute information when a feature is clicked.</li> <li>The <code>title</code> and <code>content</code> properties of the template use attribute values.</li> </ul> <pre>const popupTemplate = {\n  title: \"Parcel {APN}\",\n  content:\n    \"Type: {UseType} &lt;br&gt; Land value: {Roll_LandValue} &lt;br&gt; Tax Rate City: {TaxRateCity}\",\n};\n</pre> </li> <li><p>Assign Symbol and Popup Template, Clear Previous Graphics and Add New Graphics</p> <ul> <li>For each <code>feature</code> in the results, assign the defined <code>symbol</code> and <code>popup</code> template.</li> </ul> <pre>// Set symbol and popup\nresults.features.map((feature) =&gt; {\n  feature.symbol = symbol;\n  feature.popupTemplate = popupTemplate;\n  return feature;\n});\n\n// Clear display\nview.closePopup();\nview.graphics.removeAll();\n// Add features to graphics layer\nview.graphics.addMany(results.features);\n</pre> </li> </ol>"},{"location":"Geoprocessing/JS/03-spatial-query/#final-script","title":"Final Script\u00b6","text":"<pre>&lt;html&gt;\n\n&lt;head&gt;\n&lt;meta charset=\"utf-8\"&gt;\n&lt;meta name=\"viewport\" content=\"initial-scale=1, maximum-scale=1, user-scalable=no\"&gt;\n&lt;title&gt;ArcGIS Maps SDK for JavaScript Tutorials: Query a feature layer (spatial)&lt;/title&gt;\n&lt;style&gt;\n    html,\n    body,\n    #viewDiv {\n    padding: 0;\n    margin: 0;\n    height: 100%;\n    width: 100%;\n    }\n&lt;/style&gt;\n&lt;link rel=\"stylesheet\" href=\"https://js.arcgis.com/4.29/esri/themes/light/main.css\"&gt;\n&lt;script src=\"https://js.arcgis.com/4.29/\"&gt;&lt;/script&gt;\n&lt;script&gt;\n    require([\n\n    \"esri/config\",\n    \"esri/Map\",\n    \"esri/views/MapView\",\n\n    \"esri/widgets/Sketch\",\n    \"esri/layers/GraphicsLayer\",\n    \"esri/layers/FeatureLayer\"\n\n    ], function (esriConfig, Map, MapView, Sketch, GraphicsLayer, FeatureLayer) {\n\n    esriConfig.portalUrl = \"https://jsapi.maps.arcgis.com\";\n\n    const map = new Map({\n        basemap: \"topo-vector\" // basemap styles service\n    });\n\n    const view = new MapView({\n        container: \"viewDiv\",\n        map: map,\n        center: [-118.80543, 34.03000], //Longitude, latitude\n        zoom: 13\n    });\n\n    // Add sketch widget\n    const graphicsLayerSketch = new GraphicsLayer();\n    map.add(graphicsLayerSketch);\n\n    const sketch = new Sketch({\n        layer: graphicsLayerSketch,\n        view: view,\n        creationMode: \"update\" // Auto-select\n    });\n\n    view.ui.add(sketch, \"top-right\");\n\n    // Add sketch events to listen for and execute query\n    sketch.on(\"update\", (event) =&gt; {\n\n        // Create\n        if (event.state === \"start\") {\n        queryFeaturelayer(event.graphics[0].geometry);\n        }\n        if (event.state === \"complete\") {\n        graphicsLayerSketch.remove(event.graphics[0]); // Clear the graphic when a user clicks off of it or sketches new one\n        }\n        // Change\n        if (event.toolEventInfo &amp;&amp; (event.toolEventInfo.type === \"scale-stop\" || event.toolEventInfo.type === \"reshape-stop\" || event.toolEventInfo.type === \"move-stop\")) {\n        queryFeaturelayer(event.graphics[0].geometry);\n        }\n\n    });\n\n    // Reference query layer\n    const parcelLayer = new FeatureLayer({\n        url: \"https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/LA_County_Parcels/FeatureServer/0\",\n    });\n\n    map.add(parcelLayer);\n\n    function queryFeaturelayer(geometry) {\n\n        const parcelQuery = {\n        spatialRelationship: \"intersects\", // Relationship operation to apply\n        geometry: geometry,  // The sketch feature geometry\n        outFields: [\"APN\", \"UseType\", \"TaxRateCity\", \"Roll_LandValue\"], // Attributes to return\n        returnGeometry: true\n        };\n\n        parcelLayer.queryFeatures(parcelQuery)\n        .then((results) =&gt; {\n\n            console.log(\"Feature count: \" + results.features.length)\n\n            displayResults(results);\n\n        }).catch((error) =&gt; {\n            console.log(error);\n        });\n\n    }\n\n    // Show features (graphics)\n    function displayResults(results) {\n\n        // Create a blue polygon\n        const symbol = {\n        type: \"simple-fill\",\n        color: [150, 10, 100, 0.5],\n        outline: {\n            color: \"white\",\n            width: .5\n        },\n        };\n\n        const popupTemplate = {\n        title: \"Parcel {APN}\",\n        content: \"Type: {UseType} &lt;br&gt; Land value: {Roll_LandValue} &lt;br&gt; Tax Rate City: {TaxRateCity}\"\n        };\n\n        // Set symbol and popup\n        results.features.map((feature) =&gt; {\n        feature.symbol = symbol;\n        feature.popupTemplate = popupTemplate;\n        return feature;\n        });\n\n        // Clear display\n        view.closePopup();\n        view.graphics.removeAll();\n        // Add features to graphics layer\n        view.graphics.addMany(results.features);\n\n    }\n\n    });\n&lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n&lt;div id=\"viewDiv\"&gt;&lt;/div&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>"},{"location":"IT/01-Batch/","title":"01 Batch Script","text":"<ul> <li>Platform: Windows</li> <li>Interpreter: <code>cmd.exe</code></li> <li>File Extension: <code>.bat</code> or <code>.cmd</code></li> <li>Syntax: Specific to DOS/Windows command line</li> </ul> <ul> <li>Iterating Over Files in a Directory<ul> <li>Syntax : <code>for %%variable in (path\\*extension) do command [command-parameters]</code></li> <li>Example</li> </ul> <pre>@echo off\nfor %%f in (*.txt) do (\n    echo Found file: %%f\n)\n:: Output\n:: Found file: file1.txt\n:: Found file: file2.txt\n</pre> </li> </ul> <ul> <li>Iterating with a <code>Counter</code><ul> <li>Syntax: <code>for /l %%variable in (start,step,end) do command [command-parameters]</code></li> <li>Example<ul> <li><code>(1,1,5)</code>: Start at 1, increment by 1, and end at 5.</li> <li><code>/l</code>: Specifies a numerical range.</li> </ul> <pre>@echo off\nfor /l %%i in (1,1,5) do (\n    echo Count: %%i\n)\n:: output\n:: Count: 1\n:: Count: 2\n:: Count: 3\n:: Count: 4\n:: Count: 5\n</pre> </li> </ul> </li> </ul>"},{"location":"IT/01-Batch/#batch-scripting","title":"Batch Scripting\u00b6","text":""},{"location":"IT/01-Batch/#introduction","title":"Introduction\u00b6","text":"<ul> <li><p><code>Batch</code> scripting is a simple scripting language that allows you to automate tasks in <code>Windows</code>.</p> </li> <li><p>Batch files are text files with a <code>.bat</code> extension, and they contain a series of commands to be executed by the command interpreter.</p> </li> </ul>"},{"location":"IT/01-Batch/#basic-concepts","title":"Basic Concepts\u00b6","text":""},{"location":"IT/01-Batch/#comments","title":"Comments\u00b6","text":"<ul> <li><p>Comments are lines that are not executed. In <code>batch</code> files, comments start with <code>REM</code> or <code>::</code>.</p> <pre>REM This is a comment\n:: This is also a comment\n</pre> </li> </ul>"},{"location":"IT/01-Batch/#print","title":"Print\u00b6","text":"<p>In <code>Batch</code> scripting, <code>command echoing</code> refers to the display of commands in the command prompt window as they are executed.</p> <ul> <li><p>By default, when you run a <code>batch</code> script, each command is displayed (echoed) in the command prompt before it is executed.</p> </li> <li><p>Echo: The <code>echo</code> command is used to display messages or toggle command echoing.</p> <ul> <li><p><code>@echo off</code>: Turns off command echoing for the batch file.</p> </li> <li><p><code>echo Hello, World!</code>: Displays the message \"Hello, World!\".</p> <pre>@echo off\necho Hello, World!\n</pre> </li> </ul> </li> </ul>"},{"location":"IT/01-Batch/#variables","title":"Variables\u00b6","text":"<ul> <li><p>Variables are used to store data. Use <code>set</code> to define variables.</p> <pre>set name=John\necho Hello, %name%!\n</pre> </li> </ul>"},{"location":"IT/01-Batch/#environment-variables","title":"Environment Variables\u00b6","text":"<ul> <li><p>Special variables that contain <code>system</code> and <code>user-specific</code> information.</p> </li> <li><p><code>echo %USERPROFILE%</code>: Displays the path to the user's profile directory.</p> <pre>echo %USERPROFILE%\n</pre> </li> <li><p>To set an environment variable for the current session, you can use the <code>set</code> command in the command prompt:</p> <pre>set MY_VARIABLE=MyValue\n</pre> </li> <li><p>To set an environment variable permanently, you can use the <code>setx</code> command:</p> <pre>setx MY_VARIABLE \"MyValue\"\n</pre> </li> </ul>"},{"location":"IT/01-Batch/#conditionals","title":"Conditionals\u00b6","text":"<ul> <li><p>Use <code>if</code> statements for conditional execution.</p> </li> <li><p><code>if \"%name%\"==\"John\"</code>: Checks if the name variable is \"John\".</p> <pre>if \"%name%\"==\"John\" (\n    echo Welcome, John!\n) else (\n    echo You are not John.\n)\n</pre> </li> </ul>"},{"location":"IT/01-Batch/#loops","title":"Loops\u00b6","text":"<p>The <code>for</code> loop in <code>Batch</code> scripting is used to iterate over a set of items or to perform a task repeatedly.</p> <ul> <li><p>Here\u2019s the detailed syntax and usage for different scenarios:</p> <pre>for %%variable in (set) do command [command-parameters]\n</pre> </li> <li><p>Example</p> <pre>@echo off\nfor %%i in (apple banana cherry) do (\n    echo %%i\n)\n:: Output\n:: apple\n:: banana\n:: cherry\n</pre> </li> </ul>"},{"location":"IT/01-Batch/#functions","title":"Functions\u00b6","text":"<p>In <code>Batch</code> scripting, <code>functions</code> are implemented as <code>subroutines</code>.</p> <ul> <li>These <code>subroutines</code> are sections of the script identified by labels. You can call them using the <code>call</code> command.</li> </ul>"},{"location":"IT/01-Batch/#defining-and-calling-a-function","title":"Defining and Calling a Function\u00b6","text":"<ul> <li><p>Syntax</p> <ul> <li><p><code>goto :eof</code>: Ensures the script returns to the point after the <code>call</code> command, instead of continuing into the next function.</p> <pre>:label\ncommands\ngoto :eof\n</pre> </li> </ul> </li> <li><p>Example</p> <pre>@echo off\n\nrem Call the function\ncall :myFunction\n\nrem Continue with the rest of the script\necho Script completed.\nexit /b\n\n:myFunction\necho This is a function.\ngoto :eof\n\n::output\n:: This is a function.\n:: Script completed.\n</pre> </li> </ul>"},{"location":"IT/01-Batch/#passing-parameters-to-functions","title":"Passing Parameters to Functions\u00b6","text":"<ul> <li><p>Syntax</p> <ul> <li><p><code>call :greet John Doe</code>: Calls the <code>greet</code> function with parameters <code>John</code> and <code>Doe</code></p> <pre>call :label parameter1 parameter2\n:label\ncommands %1 %2\ngoto :eof\n</pre> </li> </ul> </li> <li><p>Example</p> <ul> <li><code>echo Hello, %1 %2!</code>: Uses <code>%1</code> and <code>%2</code> to refer to the first and second parameters.<pre>@echo off\n\nrem Call the function with parameters\ncall :greet John Doe\n\nrem Continue with the rest of the script\necho Script completed.\nexit /b\n\n:greet\necho Hello, %1 %2!\ngoto :eof\n\n:: output\n:: Hello, John Doe!\n:: Script completed.\n</pre> </li> </ul> </li> </ul>"},{"location":"IT/01-Batch/#file-operations","title":"File Operations\u00b6","text":""},{"location":"IT/01-Batch/#creating-and-writing-to-files","title":"Creating and Writing to Files\u00b6","text":"<ul> <li><p><code>&gt;</code>: creates a new file or overwrites existing (Danger)</p> </li> <li><p><code>&gt;&gt;</code>: Appends output to an existing file.</p> <pre>:: Create a new / Overwrite file.txt\necho This is a line of text &gt; file.txt\n\n:: Append This is another line to file.txt\necho This is another line &gt;&gt; file.txt\n</pre> </li> </ul>"},{"location":"IT/01-Batch/#reading-files","title":"Reading Files\u00b6","text":"<ul> <li><p><code>type</code>: echo content of files</p> <pre>type file.txt\n</pre> </li> </ul>"},{"location":"IT/01-Batch/#deleting-files","title":"Deleting Files\u00b6","text":"<ul> <li><p><code>del file.txt</code>: Deletes <code>file.txt</code>.</p> <pre>del file.txt\n</pre> </li> </ul>"},{"location":"IT/01-Batch/#directory-operations","title":"Directory Operations\u00b6","text":""},{"location":"IT/01-Batch/#creating-directories","title":"Creating Directories\u00b6","text":"<ul> <li><p><code>mkdir newfolder</code>: Creates a directory named <code>newfolder</code>.</p> <pre>mkdir newfolder\n</pre> </li> </ul>"},{"location":"IT/01-Batch/#changing-directories","title":"Changing Directories\u00b6","text":"<ul> <li><p><code>cd newfolder</code>: Changes the current directory to <code>newfolder</code>.</p> <pre>cd newfolder\n</pre> </li> </ul>"},{"location":"IT/01-Batch/#listing-directories","title":"Listing Directories:\u00b6","text":"<ul> <li><code>dir</code>: Lists files and directories in the current directory.</li> </ul>"},{"location":"IT/01-Batch/#examples","title":"Examples\u00b6","text":"<ol> <li><p>Setting a Variable: Defines a variable <code>name</code> and displays a greeting.</p> </li> <li><p>Creating and Navigating a Directory: Creates <code>myfolder</code> and changes to it.</p> </li> <li><p>File Operations: Creates <code>myfile.txt</code>, writes to it, and reads it.</p> </li> <li><p>Conditional Check: Checks if <code>myfile.txt</code> exists.</p> </li> <li><p>Loop: Iterates through numbers and writes them to the file.</p> </li> <li><p>Function Call: Calls a function that displays a message.</p> </li> <li><p>Cleanup: Deletes the created directory and its contents.</p> <pre>@echo off\n\nREM Set and display a variable\nset name=John\necho Hello, %name%!\n\nREM Create a directory and navigate to it\nmkdir myfolder\ncd myfolder\n\nREM Create a file and write to it\necho This is the first line of text &gt; myfile.txt\necho This is the second line &gt;&gt; myfile.txt\n\nREM Read the file contents\ntype myfile.txt\n\nREM Check if a file exists\nif exist myfile.txt (\n    echo myfile.txt exists.\n) else (\n    echo myfile.txt does not exist.\n)\n\nREM Loop through numbers and write to a file\nfor %%i in (1 2 3) do (\n    echo Number %%i &gt;&gt; myfile.txt\n)\n\nREM Read the file contents again\ntype myfile.txt\n\nREM Call a function\ncall :myFunction\n\nREM Clean up\ncd ..\nrmdir /s /q myfolder\n\nexit /b\n\n:myFunction\necho This is inside the function.\nexit /b\n</pre> </li> </ol>"},{"location":"IT/01-Batch/#another-example","title":"Another Example\u00b6","text":"<ul> <li>Copy <code>arcgispro-py3</code> env to local and install required libraries</li> </ul> <ol> <li><code>if exist \"%DEST_DIR%\"</code> : The variable <code>%DEST_DIR%</code> is enclosed in quotes to handle directories with spaces correctly.</li> <li><code>set \"CONDA_DEFAULT_ENV=arcgispro-py3-addins\"</code>: The quotes around the entire assignment ensure that if the value contained spaces,<ol> <li>it would still be set correctly. In this case, the value <code>arcgispro-py3-addins</code> doesn't contain spaces, but using quotes is a good habit.</li> </ol> <pre>@echo off\n\n:: Set source and destination directories\nset SOURCE_DIR=C:\\Program Files\\ArcGIS\\Pro\\bin\\Python\\envs\\arcgispro-py3\nset DEST_DIR=%USERPROFILE%\\AppData\\Local\\ESRI\\conda\\envs\\arcgispro-py3-addins\n\n:: Check if the source directory exists\nif not exist \"%SOURCE_DIR%\" (\n    echo Source directory does not exist: %SOURCE_DIR%\n    exit /b 1\n)\n\n:: Copy the source directory to the destination\necho Copying from %SOURCE_DIR% to %DEST_DIR%...\nxcopy \"%SOURCE_DIR%\" \"%DEST_DIR%\" /E /I /H /C /Y\nif errorlevel 1 (\n    echo Failed to copy the directory.\n    exit /b 1\n)\n\necho Directory copied successfully.\n\nrem Check if the constructed path exists\nif exist \"%DEST_DIR%\" (\n    rem Set environment variables to mimic activation\n    set \"CONDA_DEFAULT_ENV=arcgispro-py3-addins\"\n    set \"CONDA_PREFIX=%DEST_DIR%\"\n\n    rem Add the environment's Scripts directory to the PATH\n    set \"PATH=%DEST_DIR%;%DEST_DIR%\\Scripts;%PATH%\"\n\n    rem Installing required libraries from requirements.txt...\n    pip install -r requirements.txt\n    echo Libraries installed successfully.\n) else (\n    echo Failed to install required libraries.\n)\n\n\npause\n</pre> </li> </ol>"},{"location":"IT/02-Shell/","title":"02 Shell Script","text":""},{"location":"IT/02-Shell/#shell-scripting","title":"Shell Scripting\u00b6","text":"<p>A <code>shell</code> script is a file containing a series of commands that the shell interprets and executes.</p> <ul> <li><p><code>Shell</code> scripts can automate repetitive tasks, manage system operations, or run complex scripts involving multiple commands.</p> </li> <li><p>Platform: Linux/Unix, macOS</p> </li> <li><p>Interpreter: Various (e.g., <code>sh</code>, <code>bash</code>, <code>zsh</code>, <code>ksh</code>)</p> </li> <li><p>File Extension: Usually none, but can use <code>.sh</code></p> </li> <li><p>Syntax: Varies slightly depending on the shell</p> </li> </ul>"},{"location":"IT/02-Shell/#basic-syntax","title":"Basic Syntax\u00b6","text":""},{"location":"IT/02-Shell/#shebang","title":"Shebang\u00b6","text":"<ul> <li><p>The first line of a shell script often specifies the interpreter using the shebang (<code>#!</code>).</p> </li> <li><p>This line tells the system to use the Bash shell to execute the script.</p> <pre>#!/bin/bash\n</pre> </li> </ul>"},{"location":"IT/02-Shell/#comments","title":"Comments\u00b6","text":"<ul> <li><p>Comments begin with <code>#</code> and extend to the end of the line. They are ignored by the <code>shell</code>.</p> <pre># This is a comment\n</pre> </li> </ul>"},{"location":"IT/02-Shell/#variable","title":"Variable\u00b6","text":"<ul> <li><p>Variables store data that can be referenced and manipulated.</p> <pre>NAME=\"John Doe\"\necho \"Hello, $NAME\"\n</pre> </li> <li><p>Use <code>export</code> to make variables available to subprocesses.</p> <pre>export NAME=\"John Doe\"\n</pre> </li> </ul>"},{"location":"IT/02-Shell/#quoting","title":"Quoting\u00b6","text":"<p>Quoting prevents the <code>shell</code> from interpreting special characters.</p> <ul> <li><p>Double Quotes (<code>\"</code>): Preserve the literal value of all characters except <code>$</code>, <code>'</code>, and <code>\\</code>.</p> <pre>echo \"Hello, $NAME\"\n</pre> </li> <li><p>Single Quotes (<code>'</code>): Preserve the literal value of all characters within the quotes.</p> <pre>echo 'Hello, $NAME'\n</pre> </li> <li><p>Backslash (<code>\\</code>): Escapes a single character.</p> <pre>echo \"Hello, \\$NAME\"\n</pre> </li> </ul>"},{"location":"IT/02-Shell/#control-structures","title":"Control Structures\u00b6","text":""},{"location":"IT/02-Shell/#conditional-statements","title":"Conditional Statements\u00b6","text":"<ul> <li><p>if-elif-else-then-else</p> <pre>if [ \"$NAME\" = \"John\" ]; then\n    echo \"Hello, John\"\nelif [ \"$NAME\" = \"Doe\" ]; then\n    echo \"Hello, Doe\"\nelse\n    echo \"You are not John or Doe\"\nfi\n</pre> </li> </ul>"},{"location":"IT/02-Shell/#loops","title":"Loops\u00b6","text":"<ul> <li><p>for loop</p> <pre>for i in 1 2 3 4 5; do\n    echo \"Iteration $i\"\ndone\n</pre> </li> <li><p>while Loop</p> <ul> <li><p><code>[ $COUNT -le 5 ]</code> uses the <code>-le</code> (less than or equal to) operator to compare <code>COUNT</code> with 5.</p> <pre>COUNT=1\nwhile [ $COUNT -le 5 ]; do\n    echo \"Iteration $COUNT\"\n    COUNT=$((COUNT + 1))\ndone\n</pre> </li> </ul> </li> </ul>"},{"location":"IT/02-Shell/#functions","title":"Functions\u00b6","text":"<ul> <li><p>Basic Definition</p> <pre>my_function() {\n    echo \"This is a function\"\n}\n\nmy_function\n</pre> </li> <li><p>Functions can accept parameters.</p> <pre>greet() {\n    echo \"Hello, $1\"\n}\n\ngreet \"John\"\n</pre> </li> </ul>"},{"location":"IT/02-Shell/#input-and-output","title":"Input and Output\u00b6","text":""},{"location":"IT/02-Shell/#reading-input","title":"Reading Input\u00b6","text":"<pre>echo \"Enter your name:\"\nread NAME\necho \"Hello, $NAME\"\n</pre>"},{"location":"IT/02-Shell/#output-to-file","title":"Output to file\u00b6","text":"<ul> <li><p>Redirecting Output</p> <pre>echo \"This is a test\" &gt; output.txt\ncat output.txt\n</pre> </li> <li><p>Append to a file</p> <pre>echo \"This is another test\" &gt;&gt; output.txt\n</pre> </li> </ul>"},{"location":"IT/02-Shell/#example","title":"Example\u00b6","text":""},{"location":"IT/02-Shell/#hello-world","title":"Hello World\u00b6","text":"<pre>#!/bin/bash\n# This is a simple hello world script\necho \"Hello, World!\"\n</pre>"},{"location":"IT/02-Shell/#backup","title":"Backup\u00b6","text":"<pre>#!/bin/bash\n# Backup script\n\nSOURCE_DIR=\"/path/to/source\"\nDEST_DIR=\"/path/to/backup\"\n\nif [ -d \"$SOURCE_DIR\" ]; then\n    cp -r \"$SOURCE_DIR\" \"$DEST_DIR\"\n    echo \"Backup completed successfully.\"\nelse\n    echo \"Source directory does not exist.\"\nfi\n</pre>"},{"location":"IT/02-Shell/#same-example-used-in-batch","title":"Same example used in Batch\u00b6","text":"<ul> <li><p><code>$HOME</code> is used instead of <code>%USERPROFILE%</code> for the user's home directory.</p> </li> <li><p><code>[ ! -d \"$SOURCE_DIR\" ]</code> checks if the source directory does not exist.</p> </li> <li><p><code>cp -r \"$SOURCE_DIR\" \"$DEST_DIR\"</code> copies the directory recursively.</p> </li> <li><p><code>$?</code> checks the exit status of the last command.</p> </li> <li><p><code>export PATH=\"$DEST_DIR:$DEST_DIR/Scripts:$PATH\"</code> modifies the <code>PATH</code> variable.</p> <pre>#!/bin/bash\n\n# Set source and destination directories\nSOURCE_DIR=\"/c/Program Files/ArcGIS/Pro/bin/Python/envs/arcgispro-py3\"\nDEST_DIR=\"$HOME/.local/share/ESRI/conda/envs/arcgispro-py3-addins\"\n\n# Check if the source directory exists\nif [ ! -d \"$SOURCE_DIR\" ]; then\n    echo \"Source directory does not exist: $SOURCE_DIR\"\n    exit 1\nfi\n\n# Copy the source directory to the destination\necho \"Copying from $SOURCE_DIR to $DEST_DIR...\"\ncp -r \"$SOURCE_DIR\" \"$DEST_DIR\"\nif [ $? -ne 0 ]; then\n    echo \"Failed to copy the directory.\"\n    exit 1\nfi\n\necho \"Directory copied successfully.\"\n\n# Check if the constructed path exists\nif [ -d \"$DEST_DIR\" ]; then\n    # Set environment variables to mimic activation\n    export CONDA_DEFAULT_ENV=\"arcgispro-py3-addins\"\n    export CONDA_PREFIX=\"$DEST_DIR\"\n\n    # Add the environment's Scripts directory to the PATH\n    export PATH=\"$DEST_DIR:$DEST_DIR/Scripts:$PATH\"\n\n    # Installing required libraries from requirements.txt...\n    pip install -r requirements.txt\n    if [ $? -eq 0 ]; then\n        echo \"Libraries installed successfully.\"\n    else\n        echo \"Failed to install libraries.\"\n        exit 1\n    fi\nelse\n    echo \"Failed to copy the directory.\"\n    exit 1\nfi\n\n# Pause the script (similar to 'pause' in batch files)\nread -p \"Press any key to continue...\"\n</pre> </li> <li><p>Usage</p> <ol> <li>Save the script to a file, for example, <code>script.sh</code>.</li> <li>Make the script: executable: <code>chmod +x script.sh</code><ul> <li>The <code>chmod +x</code> command is used to change the permissions of a file to make it executable. The <code>+x</code> option adds execute permissions to the file.</li> </ul> </li> <li>Run the script: <code>./script.sh</code></li> </ol> </li> </ul>"},{"location":"IT/03-XML/","title":"03 XML","text":""},{"location":"IT/03-XML/#xml","title":"XML\u00b6","text":""},{"location":"IT/03-XML/#1-what-is-xml","title":"1. What is XML?\u00b6","text":""},{"location":"IT/03-XML/#definition","title":"Definition\u00b6","text":"<ul> <li>XML stands for eXtensible Markup Language.</li> <li>XML is a markup language much like HTML but designed to store and transport data.</li> </ul>"},{"location":"IT/03-XML/#purpose","title":"Purpose\u00b6","text":"<ul> <li>XML is used to encode documents in a format that is both human-readable and machine-readable.</li> <li>It is platform-independent and language-independent, making it a versatile way to share data.</li> </ul>"},{"location":"IT/03-XML/#key-features","title":"Key Features\u00b6","text":"<ul> <li>Self-descriptive structure</li> <li>Separates data from presentation</li> <li>Facilitates data sharing across different systems</li> </ul>"},{"location":"IT/03-XML/#2-xml-syntax","title":"2. XML Syntax\u00b6","text":""},{"location":"IT/03-XML/#basic-rules","title":"Basic Rules\u00b6","text":"<ul> <li>XML documents must have a root element.</li> <li>Tags are case-sensitive.</li> <li>Elements must be properly nested.</li> <li>Attribute values must be quoted.</li> </ul>"},{"location":"IT/03-XML/#example","title":"Example\u00b6","text":"<pre>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;note&gt;\n    &lt;to&gt;Tove&lt;/to&gt;\n    &lt;from&gt;Jani&lt;/from&gt;\n    &lt;heading&gt;Reminder&lt;/heading&gt;\n    &lt;body&gt;Don't forget me this weekend!&lt;/body&gt;\n&lt;/note&gt;\n</pre>"},{"location":"IT/03-XML/#xml-structure","title":"XML Structure\u00b6","text":""},{"location":"IT/03-XML/#declaration","title":"Declaration\u00b6","text":"<ul> <li><p>The <code>XML</code> declaration defines the <code>XML version</code> and the character encoding used in the document.</p> <pre>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n</pre> </li> </ul>"},{"location":"IT/03-XML/#elements","title":"Elements\u00b6","text":"<ul> <li><p>Elements are the building blocks of XML.</p> <pre>&lt;element&gt;Content&lt;/element&gt;\n</pre> </li> <li><p>Elements can contain other elements.</p> <pre>&lt;parent&gt;\n    &lt;child&gt;Content&lt;/child&gt;\n&lt;/parent&gt;\n</pre> </li> </ul>"},{"location":"IT/03-XML/#comments","title":"Comments\u00b6","text":"<ul> <li><p>Comments in XML start with <code>&lt;!--</code> and end with<code> --&gt;</code></p> <pre>&lt;!-- This is a comment --&gt;\n</pre> </li> </ul>"},{"location":"IT/03-XML/#elements-and-attributes","title":"Elements and Attributes\u00b6","text":""},{"location":"IT/03-XML/#elements","title":"Elements\u00b6","text":"<ul> <li><p><code>Elements</code> represent data.</p> <pre>&lt;name&gt;John Doe&lt;/name&gt;\n</pre> </li> </ul>"},{"location":"IT/03-XML/#attributes","title":"Attributes\u00b6","text":"<ul> <li><p><code>Attributes</code> provide additional information about elements.</p> <pre>&lt;person id=\"123\" age=\"30\"&gt;John Doe&lt;/person&gt;\n</pre> </li> <li><p>Example with Attributes</p> <pre>&lt;note priority=\"high\"&gt;\n    &lt;to&gt;Tove&lt;/to&gt;\n    &lt;from&gt;Jani&lt;/from&gt;\n    &lt;heading&gt;Reminder&lt;/heading&gt;\n    &lt;body&gt;Don't forget me this weekend!&lt;/body&gt;\n&lt;/note&gt;\n</pre> </li> </ul>"},{"location":"IT/03-XML/#xml-namespaces","title":"XML Namespaces\u00b6","text":"<ul> <li><p><code>XML</code> namespaces provide a method to avoid <code>element name</code> conflicts.</p> </li> <li><p>Declared with <code>xmlns</code> attribute.</p> <pre>&lt;root xmlns:h=\"http://www.w3.org/TR/html4/\"&gt;\n    &lt;h:table&gt;\n        &lt;h:tr&gt;\n            &lt;h:td&gt;Apples&lt;/h:td&gt;\n            &lt;h:td&gt;Bananas&lt;/h:td&gt;\n        &lt;/h:tr&gt;\n    &lt;/h:table&gt;\n&lt;/root&gt;\n</pre> </li> </ul>"},{"location":"IT/03-XML/#xml-schema","title":"XML Schema\u00b6","text":"<ul> <li><p><code>XML Schema</code> defines the structure and data types of <code>XML</code> documents.</p> </li> <li><p>Ensures that <code>XML</code> documents follow a predefined structure.</p> <pre>&lt;xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"&gt;\n    &lt;xs:element name=\"note\"&gt;\n        &lt;xs:complexType&gt;\n            &lt;xs:sequence&gt;\n                &lt;xs:element name=\"to\" type=\"xs:string\"/&gt;\n                &lt;xs:element name=\"from\" type=\"xs:string\"/&gt;\n                &lt;xs:element name=\"heading\" type=\"xs:string\"/&gt;\n                &lt;xs:element name=\"body\" type=\"xs:string\"/&gt;\n            &lt;/xs:sequence&gt;\n        &lt;/xs:complexType&gt;\n    &lt;/xs:element&gt;\n&lt;/xs:schema&gt;\n</pre> </li> </ul>"},{"location":"IT/03-XML/#practical-examples","title":"Practical Examples\u00b6","text":""},{"location":"IT/03-XML/#simple-book-list","title":"Simple Book List\u00b6","text":"<pre>&lt;bookstore&gt;\n    &lt;book&gt;\n        &lt;title lang=\"en\"&gt;Harry Potter&lt;/title&gt;\n        &lt;author&gt;J.K. Rowling&lt;/author&gt;\n        &lt;year&gt;1997&lt;/year&gt;\n        &lt;price&gt;29.99&lt;/price&gt;\n    &lt;/book&gt;\n    &lt;book&gt;\n        &lt;title lang=\"en\"&gt;Learning XML&lt;/title&gt;\n        &lt;author&gt;Erik T. Ray&lt;/author&gt;\n        &lt;year&gt;2003&lt;/year&gt;\n        &lt;price&gt;39.95&lt;/price&gt;\n    &lt;/book&gt;\n&lt;/bookstore&gt;\n</pre>"},{"location":"IT/03-XML/#configuration-file","title":"Configuration File\u00b6","text":"<pre>&lt;configuration&gt;\n    &lt;appSettings&gt;\n        &lt;add key=\"ApplicationName\" value=\"XML Tutorial\"/&gt;\n        &lt;add key=\"Version\" value=\"1.0\"/&gt;\n    &lt;/appSettings&gt;\n    &lt;connectionStrings&gt;\n        &lt;add name=\"LocalDB\" connectionString=\"Server=localhost;Database=myDB;User Id=myUsername;Password=myPassword;\"/&gt;\n    &lt;/connectionStrings&gt;\n&lt;/configuration&gt;\n</pre>"},{"location":"IT/03-XML/#practice","title":"Practice\u00b6","text":"<ol> <li>Create an XML document representing a music playlist.<ul> <li>Each song should have elements like title, artist, album, and duration.</li> </ul> </li> <li>Validate your XML document with an XML schema.</li> </ol> <pre>&lt;playlist&gt;\n    &lt;song&gt;\n        &lt;title&gt;Imagine&lt;/title&gt;\n        &lt;artist&gt;John Lennon&lt;/artist&gt;\n        &lt;album&gt;Imagine&lt;/album&gt;\n        &lt;duration&gt;3:04&lt;/duration&gt;\n    &lt;/song&gt;\n    &lt;song&gt;\n        &lt;title&gt;Hey Jude&lt;/title&gt;\n        &lt;artist&gt;The Beatles&lt;/artist&gt;\n        &lt;album&gt;1&lt;/album&gt;\n        &lt;duration&gt;7:11&lt;/duration&gt;\n    &lt;/song&gt;\n&lt;/playlist&gt;\n</pre> <pre>&lt;xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"&gt;\n    &lt;xs:element name=\"playlist\"&gt;\n        &lt;xs:complexType&gt;\n            &lt;xs:sequence&gt;\n                &lt;xs:element name=\"song\" maxOccurs=\"unbounded\"&gt;\n                    &lt;xs:complexType&gt;\n                        &lt;xs:sequence&gt;\n                            &lt;xs:element name=\"title\" type=\"xs:string\"/&gt;\n                            &lt;xs:element name=\"artist\" type=\"xs:string\"/&gt;\n                            &lt;xs:element name=\"album\" type=\"xs:string\"/&gt;\n                            &lt;xs:element name=\"duration\" type=\"xs:string\"/&gt;\n                        &lt;/xs:sequence&gt;\n                    &lt;/xs:complexType&gt;\n                &lt;/xs:element&gt;\n            &lt;/xs:sequence&gt;\n        &lt;/xs:complexType&gt;\n    &lt;/xs:element&gt;\n&lt;/xs:schema&gt;\n</pre>"},{"location":"PostSQL/01-sql-comprehensive/","title":"00-SQL Basic","text":""},{"location":"PostSQL/01-sql-comprehensive/#sql","title":"SQL\u00b6","text":"<ul> <li>Reference</li> </ul> <p><code>SQL (Structured Query Language)</code>: <code>SQL</code> is a standard language for managing relational databases. It provides a set of commands for performing various operations such as querying data, updating data, creating and modifying database schema, and managing access controls.</p> <p></p>"},{"location":"PostSQL/01-sql-comprehensive/#key-types-in-sql","title":"Key Types in SQL\u00b6","text":""},{"location":"PostSQL/01-sql-comprehensive/#numeric-types","title":"Numeric Types\u00b6","text":"<ul> <li><p><code>INT</code> (Integer): Represents whole numbers.</p> </li> <li><p><code>DECIMAL</code>: Represents fixed-point numbers with exact precision.</p> <pre>CREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    Price DECIMAL(10, 2)\n);\n</pre> </li> </ul>"},{"location":"PostSQL/01-sql-comprehensive/#string-types","title":"String Types\u00b6","text":"<ul> <li><p><code>VARCHAR</code>: Represents variable-length character strings with a maximum length specified.</p> </li> <li><p><code>TEXT</code>: Represents variable-length character strings with a maximum length that can be extremely large.</p> <pre>CREATE TABLE Customers (\nCustomerID INT PRIMARY KEY,\nFirstName VARCHAR(50),\nLastName VARCHAR(50),\nAddress TEXT\n);\n</pre> </li> </ul>"},{"location":"PostSQL/01-sql-comprehensive/#datetime-types","title":"Date/Time Types\u00b6","text":"<ul> <li><p><code>DATE</code>: Represents a date value without time.</p> </li> <li><p><code>TIMESTAMP</code>: Represents date and time values.</p> <pre>CREATE TABLE Orders (\nOrderID INT PRIMARY KEY,\nOrderDate DATE,\nLastUpdated TIMESTAMP\n);\n</pre> </li> </ul>"},{"location":"PostSQL/01-sql-comprehensive/#boolean-type","title":"Boolean Type\u00b6","text":"<ul> <li><code>BIT</code>: Represents a single bit that can store boolean values (0 or 1).<pre>CREATE TABLE Employees (\nEmployeeID INT PRIMARY KEY,\nIsActive BIT\n);\n</pre> </li> </ul>"},{"location":"PostSQL/01-sql-comprehensive/#database-normalization","title":"Database normalization\u00b6","text":"<p><code>Database normalization</code> is a process used to organize a relational database into tables and columns to minimize <code>redundancy</code> and <code>dependency</code>. It aims to reduce data anomalies such as insertion, update, and deletion anomalies, which can occur when data is not properly organized.</p> <p>Let's illustrate normalization with a simple example:</p> <p>Suppose we have a database to store information about <code>students</code> and the <code>courses</code> they are enrolled in. Initially, we might design a single table like this:</p> <p>StudentCourses Table:</p> StudentID StudentName Course1 Course2 Course3 1 Alice Math Physics Chemistry 2 Bob Physics Biology 3 Carol Chemistry <p>In this table, each row represents a <code>student</code>, and each column represents a <code>course</code> they are enrolled in. However, this table violates the principles of normalization because:</p> <ol> <li>Data Redundancy: The <code>course</code> names are repeated in multiple rows, leading to redundancy.</li> <li>Insertion Anomaly: If a <code>student</code> wants to enroll in more <code>courses</code> than the available columns, we need to modify the table structure.</li> <li>Deletion Anomaly: If we delete a course from the database, we may lose information about which <code>students</code> were enrolled in that course.</li> <li>Update Anomaly: If we update the name of a <code>course</code>, we need to update it in multiple places, which can lead to inconsistencies.</li> </ol> <p>To normalize this database, we can break it down into multiple tables. We'll create separate tables for <code>Students</code> and <code>Courses</code> and introduce a linking table to represent the <code>many-to-many</code> relationship between them:</p> <p>In this normalized schema:</p> <ul> <li>Students Table stores information about <code>students</code>.</li> <li>Courses Table stores information about <code>courses</code>.</li> <li>Enrollments Table represents the <code>many-to-many</code> relationship between <code>students</code> and <code>courses</code>, indicating which student is enrolled in which course.</li> </ul> <p>Students Table:</p> StudentID StudentName 1 Alice 2 Bob 3 Carol <p>Courses Table:</p> CourseID CourseName 1 Math 2 Physics 3 Chemistry 4 Biology <p>Enrollments Table:</p> StudentID CourseID 1 1 1 2 1 3 2 2 2 4 3 3"},{"location":"PostSQL/01-sql-comprehensive/#constraints-in-sql","title":"Constraints in SQL\u00b6","text":""},{"location":"PostSQL/01-sql-comprehensive/#unique-constraint","title":"Unique Constraint\u00b6","text":"<p>The <code>unique constraint</code> ensures that all values in a column are unique (i.e., no duplicates are allowed).</p> <p>It can be applied to one or more columns in a table. If a unique constraint is defined on multiple columns, the combination of values across those columns must be unique.</p> <pre>CREATE TABLE Students (\n    StudentID INT PRIMARY KEY,\n    StudentName VARCHAR(50) UNIQUE,\n    Email VARCHAR(100) UNIQUE\n);\n</pre> <p>In this example, both <code>StudentName</code> and <code>Email</code> columns have <code>unique constraints</code>, meaning that each student's name and email must be unique within the table.</p>"},{"location":"PostSQL/01-sql-comprehensive/#check-constraint","title":"Check Constraint\u00b6","text":"<p>The <code>check constraint</code> is used to enforce a condition on the values allowed in a column. It ensures that all values <code>inserted</code> or <code>updated</code> in the column satisfy the specified condition.</p> <pre>CREATE TABLE Employees (\n    EmployeeID INT PRIMARY KEY,\n    Age INT CHECK (Age &gt;= 18),\n    Department VARCHAR(50) CHECK (Department IN ('IT', 'Finance', 'HR'))\n);\n</pre> <p>In this example, the check constraints ensure that the <code>Age</code> column contains values greater than or equal to <code>18</code> and the <code>Department</code> column only contains values <code>IT</code>, <code>Finance</code>, or <code>HR</code>.</p>"},{"location":"PostSQL/01-sql-comprehensive/#default-constraint","title":"Default Constraint\u00b6","text":"<p>The <code>default constraint</code> specifies a default value for a column when no value is explicitly provided during an <code>insert</code> operation. If a <code>default constraint</code> is defined on a column, the default value is used if no other value is specified.</p> <pre>CREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    OrderDate DATE DEFAULT CURRENT_DATE,\n    Status VARCHAR(20) DEFAULT 'Pending'\n);\n</pre> <p>In this example, if no value is provided for the <code>OrderDate</code> column during an <code>insert</code> operation, the current date is automatically inserted. Similarly, if no value is provided for the <code>Status</code> column, 'Pending' is inserted by default.</p>"},{"location":"PostSQL/01-sql-comprehensive/#foreign-key-constraint","title":"Foreign Key Constraint\u00b6","text":"<p>The <code>foreign key constraint</code> establishes a relationship between two tables by enforcing referential integrity. It ensures that values in a column (or a set of columns) in one table match values in another table's <code>primary key</code> or <code>unique key</code>.</p> <pre>CREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID)\n);\n</pre> <p>In this example, the <code>CustomerID</code> column in the <code>Orders</code> table is a <code>foreign key</code> that references the <code>CustomerID</code> column in the <code>Customers</code> table, ensuring that only valid customer IDs can be inserted into the Orders table.</p>"},{"location":"PostSQL/01-sql-comprehensive/#comprehensive-example","title":"Comprehensive Example\u00b6","text":"<p>let's create a comprehensive example using all four constraints: <code>Unique</code>, <code>Check</code>, <code>Default</code>, and <code>Foreign Key</code>.</p> <p>Suppose we're designing a database for a library management system. We'll create tables for <code>Books</code>, <code>Authors</code>, and <code>Members</code>, and we'll define various constraints to ensure data integrity.</p> <ul> <li>In the <code>Authors</code> table, we enforce a <code>unique constraint</code> on the <code>AuthorName</code> column to ensure that each author's name is unique.</li> <li>In the <code>Books</code> table, we use a <code>foreign key constraint</code> (<code>AuthorID</code>) to establish a relationship with the <code>Authors</code> table. We also define a <code>check constraint</code> on the <code>Status</code> column to ensure that it can only have specific values (<code>Available</code>, <code>On Loan</code>, <code>Damaged</code>). Additionally, we set a <code>default</code> value of <code>Available</code> for the <code>Status</code> column.</li> <li>In the <code>Members</code> table, we enforce <code>unique constraints</code> on both the <code>MemberName</code> and <code>Email</code> columns to ensure that each member's name and email are unique.</li> <li>In the <code>Loans</code> table, we use <code>foreign key constraints</code> (<code>BookID</code> and <code>MemberID</code>) to establish relationships with the <code>Books</code> and <code>Members</code> tables, respectively. We also define a <code>check constraint</code> on the <code>ReturnDate</code> column to ensure that it is greater than or equal to the <code>LoanDate</code>.</li> </ul> <pre>-- Create Authors table with unique constraint on AuthorID\nCREATE TABLE Authors (\n    AuthorID INT PRIMARY KEY,\n    AuthorName VARCHAR(100) UNIQUE\n);\n\n-- Create Books table with foreign key constraint on AuthorID, check constraint on Status, and default constraint on Status\nCREATE TABLE Books (\n    BookID INT PRIMARY KEY,\n    Title VARCHAR(200),\n    AuthorID INT,\n    Status VARCHAR(20) DEFAULT 'Available' CHECK (Status IN ('Available', 'On Loan', 'Damaged')),\n    FOREIGN KEY (AuthorID) REFERENCES Authors(AuthorID)\n);\n\n-- Create Members table with unique constraint on MemberID\nCREATE TABLE Members (\n    MemberID INT PRIMARY KEY,\n    MemberName VARCHAR(100) UNIQUE,\n    Email VARCHAR(100) UNIQUE\n);\n\n-- Create Loans table with foreign key constraints on BookID and MemberID, and check constraint on ReturnDate\nCREATE TABLE Loans (\n    LoanID INT PRIMARY KEY,\n    BookID INT,\n    MemberID INT,\n    LoanDate DATE DEFAULT CURRENT_DATE,\n    ReturnDate DATE CHECK (ReturnDate &gt;= LoanDate),\n    FOREIGN KEY (BookID) REFERENCES Books(BookID),\n    FOREIGN KEY (MemberID) REFERENCES Members(MemberID)\n);\n</pre>"},{"location":"PostSQL/01-sql-comprehensive/#dql-data-query-language","title":"DQL (Data Query Language)\u00b6","text":"<p><code>DQL</code> is a subset of <code>SQL</code> used for retrieving data from the database. The primary command in <code>DQL</code> is <code>SELECT</code>, which is used to retrieve data from one or more tables based on specified criteria.</p>"},{"location":"PostSQL/01-sql-comprehensive/#join","title":"Join\u00b6","text":"<p>In SQL, joins are used to combine rows from two or more tables based on a related column between them.</p> <p>Suppose we have two tables, <code>Students</code> and <code>Courses Register</code>, where <code>Students</code> contains information about students and <code>Courses Register</code> contains information about courses they are enrolled in. The tables are as follows:</p> <p>Students Table:</p> StudentID StudentName 1 Alice 2 Bob 3 Carol <p>Courses Register Table:</p> CourseID CourseName StudentID 1 Math 1 2 Physics 2 3 Chemistry 1 <ol> <li><p>Inner Join: Returns rows when there is at least one match in both tables based on the join condition.</p> <pre>SELECT *\n FROM Students\n INNER JOIN Courses ON Students.StudentID = CoursesRegister.StudentID;\n</pre> <p></p> </li> <li><p>Left Join (or Left Outer Join): Returns all rows from the left table (table1), and the matched rows from the right table (table2). If there is no match, <code>NULL</code> values are returned for the columns from the right table.</p> <pre>SELECT *\n FROM Students\n LEFT JOIN Courses ON Students.StudentID = CoursesRegister.StudentID;\n</pre> </li> <li><p>Right Join (or Right Outer Join): Returns all rows from the right table (table2), and the matched rows from the left table (table1). If there is no match, <code>NULL</code> values are returned for the columns from the left table.</p> </li> <li><p>Full Outer Join: Returns all rows when there is a match in either left or right table. If there is no match, <code>NULL</code> values are returned for the columns from the table without a match.</p> </li> </ol>"},{"location":"PostSQL/01-sql-comprehensive/#dml-data-manipulation-language","title":"DML (Data Manipulation Language)\u00b6","text":"<p><code>DML</code> is used to manipulate data stored in the database. It includes commands for <code>inserting</code>, <code>updating</code>, <code>deleting</code>, and <code>querying</code> data within tables.</p> <p>Common DML commands include <code>INSERT</code>, <code>UPDATE</code>, <code>DELETE</code>, and <code>SELECT</code>.</p>"},{"location":"PostSQL/01-sql-comprehensive/#insert","title":"Insert\u00b6","text":""},{"location":"PostSQL/01-sql-comprehensive/#update","title":"Update\u00b6","text":""},{"location":"PostSQL/01-sql-comprehensive/#delete","title":"Delete\u00b6","text":""},{"location":"PostSQL/01-sql-comprehensive/#operators","title":"Operators\u00b6","text":"<p>In <code>SQL</code>, operators are used to perform operations on data within queries. There are various types of operators in <code>SQL</code>, including <code>arithmetic operators</code>, <code>comparison operators</code>, <code>logical operators</code>, and more. Here's an introduction to some common SQL operators with examples:</p> <p></p>"},{"location":"PostSQL/01-sql-comprehensive/#arithmetic-operators","title":"Arithmetic Operators\u00b6","text":"<ul> <li>Addition (<code>+</code>), Subtraction (<code>-</code>), Multiplication (<code>*</code>), Division (<code>/</code>), and Modulus (<code>%</code>).</li> </ul> <pre>SELECT 10 + 5 AS Addition, 10 - 5 AS Subtraction, 10 * 5 AS Multiplication, 10 / 5 AS Division, 10 % 3 AS Modulus;\n</pre>"},{"location":"PostSQL/01-sql-comprehensive/#comparison-operators","title":"Comparison Operators\u00b6","text":"<p>Equal to (<code>=</code>), Not equal to (<code>&lt;&gt;</code> or <code>!=</code>), Greater than (<code>&gt;</code>), Less than (<code>&lt;</code>), Greater than or equal to (<code>&gt;=</code>), Less than or equal to (<code>&lt;</code>=).</p> <pre>SELECT * FROM Products WHERE Price &gt; 100;\n</pre>"},{"location":"PostSQL/01-sql-comprehensive/#concat-and-substring-operator","title":"<code>CONCAT</code> and <code>SUBSTRING</code> Operator\u00b6","text":"<p>Concatenates two or more strings together.</p> <pre>SELECT FirstName || ' ' || LastName AS FullName FROM Customers;\n</pre> <p></p>"},{"location":"PostSQL/01-sql-comprehensive/#in-operator","title":"<code>IN</code> Operator\u00b6","text":"<p>Checks if a value matches any value in a list.</p> <pre>SELECT * FROM Products WHERE Category IN ('Electronics', 'Appliances');\n</pre>"},{"location":"PostSQL/01-sql-comprehensive/#between-operator","title":"<code>BETWEEN</code> Operator\u00b6","text":"<p>Checks if a value is within a specified range.</p> <pre>SELECT * FROM Orders WHERE OrderDate BETWEEN '2022-01-01' AND '2022-01-31';\n</pre>"},{"location":"PostSQL/01-sql-comprehensive/#like-operator","title":"<code>LIKE</code> Operator\u00b6","text":"<p>Compares a value to similar values using <code>wildcard</code> characters (<code>%</code> for zero or more characters, <code>_</code> for a single character).</p> <pre>SELECT * FROM Products WHERE ProductName LIKE 'Apple%';\n</pre>"},{"location":"PostSQL/01-sql-comprehensive/#is-null-is-not-null-operators","title":"<code>IS NULL</code> / <code>IS NOT NULL</code> Operators\u00b6","text":"<p>Checks if a value is NULL or not NULL.</p> <pre>SELECT * FROM Employees WHERE ManagerID IS NULL;\n</pre>"},{"location":"PostSQL/01-sql-comprehensive/#any-all-operators","title":"<code>ANY</code> / <code>ALL</code> Operators\u00b6","text":"<ul> <li>The <code>ANY</code> operator returns <code>true</code> if the comparison is <code>true</code> for at least one of the values returned by the subquery.<pre>SELECT * FROM Products WHERE Price &gt; ANY (SELECT Price FROM SpecialOffers);\n</pre> <ul> <li>This query selects all <code>products</code> with a <code>price</code> greater than any <code>price</code> listed in the <code>SpecialOffers</code> table.</li> </ul> </li> <li>The <code>ALL</code> operator returns <code>true</code> if the comparison is <code>true</code> for all the values returned by the subquery.<pre>SELECT * FROM Orders WHERE TotalAmount &gt; ALL (SELECT Budget FROM Departments WHERE DepartmentName = 'Sales');\n</pre> <ul> <li>This query selects all <code>orders</code> with a total amount greater than the <code>budget</code> of the Sales department.</li> </ul> </li> </ul>"},{"location":"PostSQL/01-sql-comprehensive/#date-and-time-operator","title":"Date and Time Operator\u00b6","text":"<ol> <li>Addition and Subtraction Operators (<code>+</code> and <code>-</code>)<ul> <li>These operators are used to add or subtract <code>intervals</code> from date and time values.</li> <li>This query adds one day to the <code>OrderDate</code> and returns the next day.</li> </ul> <pre>SELECT OrderDate + INTERVAL 1 DAY AS NextDay FROM Orders;\n</pre> </li> <li><code>DATEDIFF</code> Function<ul> <li>The <code>DATEDIFF</code> function calculates the difference between two date or datetime values.</li> <li>This query calculates the number of days between December 25, 2021, and January 1, 2022.</li> </ul> <pre>SELECT DATEDIFF('2022-01-01', '2021-12-25') AS DaysDifference;\n</pre> </li> <li><code>DATE_ADD</code> and <code>DATE_SUB</code> Functions<ul> <li>These functions are used to add or subtract intervals from date and datetime values.</li> <li>This query adds one month to January 1, 2022, and returns the date of the next month.</li> </ul> <pre>SELECT DATE_ADD('2022-01-01', INTERVAL 1 MONTH) AS NextMonth;\n</pre> </li> <li><code>CURRENT_DATE</code> and <code>CURRENT_TIME</code> Functions:<ul> <li>These functions return the current date and time, respectively.</li> </ul> <pre>SELECT CURRENT_DATE AS Today, CURRENT_TIME AS CurrentTime;\n</pre> </li> <li><code>EXTRACT</code> Function:<ul> <li>The <code>EXTRACT</code> function extracts parts of a date or time value, such as <code>year</code>, <code>month</code>, <code>day</code>, <code>hour</code>, <code>minute</code>, etc.</li> <li>This query extracts the <code>year</code> from the <code>OrderDate</code> column.</li> </ul> <pre>SELECT EXTRACT(YEAR FROM OrderDate) AS OrderYear FROM Orders;\n</pre> </li> </ol>"},{"location":"PostSQL/01-sql-comprehensive/#group-by-and-having-operators","title":"<code>GROUP BY</code> and <code>HAVING</code> operators\u00b6","text":"<ol> <li><p>The <code>GROUP BY</code> clause is used to group rows based on one or more columns.</p> <ul> <li>This query calculates the total <code>revenue</code> for each <code>category</code> by grouping the rows based on the Category column.</li> </ul> <pre>SELECT Category, SUM(Revenue) AS TotalRevenue\nFROM Sales\nGROUP BY Category;\n</pre> </li> <li><p>The <code>HAVING</code> clause is used to filter the grouped rows based on specified conditions.</p> <ul> <li>This query calculates the total <code>revenue</code> for each <code>category</code> and filters out <code>categories</code> with total <code>revenue</code> less than 1000 using the <code>HAVING</code> clause.</li> </ul> <pre>SELECT Category, SUM(Revenue) AS TotalRevenue\nFROM Sales\nGROUP BY Category\nHAVING SUM(Revenue) &gt; 1000;\n</pre> </li> </ol> <p></p>"},{"location":"PostSQL/01-sql-comprehensive/#ddl-data-definition-language","title":"DDL (Data Definition Language)\u00b6","text":"<p><code>DDL</code> is used to define the structure and schema of a database. It includes commands for creating, modifying, and deleting database objects such as <code>tables</code>, <code>indexes</code>, <code>views</code>, and <code>schemas</code>.</p> <p>Common DDL commands include <code>CREATE</code>, <code>ALTER</code>, <code>DROP</code>, <code>TRUNCATE</code>, and <code>RENAME</code>.</p> <p></p>"},{"location":"PostSQL/01-sql-comprehensive/#create","title":"<code>CREATE</code>\u00b6","text":"<ul> <li>The <code>CREATE</code> command is used to create new database objects such as <code>tables</code>, <code>indexes</code>, <code>views</code>, etc.</li> <li>This command creates a new <code>table</code> named <code>Employees</code> with columns <code>EmployeeID</code>, <code>FirstName</code>, <code>LastName</code>, and <code>Department</code>.</li> </ul> <pre>CREATE TABLE Employees (\n    EmployeeID INT PRIMARY KEY,\n    FirstName VARCHAR(50),\n    LastName VARCHAR(50),\n    Department VARCHAR(50)\n);\n</pre>"},{"location":"PostSQL/01-sql-comprehensive/#alter","title":"<code>ALTER</code>\u00b6","text":"<ul> <li>The <code>ALTER</code> command is used to modify existing database objects.</li> <li>This command adds a new column named <code>Salary</code> to the <code>Employees</code> table.</li> </ul> <pre>ALTER TABLE Employees\nADD Salary DECIMAL(10, 2);\n</pre>"},{"location":"PostSQL/01-sql-comprehensive/#drop","title":"<code>DROP</code>\u00b6","text":"<ul> <li>The <code>DROP</code> command is used to delete existing database objects.</li> <li>This command deletes the <code>Employees</code> table and all its data from the database.</li> </ul> <pre>DROP TABLE Employees;\n</pre>"},{"location":"PostSQL/01-sql-comprehensive/#truncate","title":"<code>TRUNCATE</code>\u00b6","text":"<ul> <li>The <code>TRUNCATE</code> command is used to delete all rows from a table but keeps the table structure intact.</li> <li>This command removes all rows from the <code>Employees</code> table, but the table structure remains.</li> </ul> <pre>TRUNCATE TABLE Employees;\n</pre>"},{"location":"PostSQL/01-sql-comprehensive/#rename","title":"<code>RENAME</code>\u00b6","text":"<ul> <li>The <code>RENAME</code> command is used to rename existing database objects.</li> <li>This command renames the column <code>FirstName</code> in the <code>Employees</code> table to <code>First_Name</code>.</li> </ul> <pre>ALTER TABLE Employees\nRENAME COLUMN FirstName TO First_Name;\n</pre>"},{"location":"PostSQL/01-sql-comprehensive/#cast-and","title":"<code>CAST</code> and <code>::</code>\u00b6","text":"<ul> <li>The <code>CAST</code> command is used to explicitly specify the data type to which you want to convert a value.</li> </ul> <pre>SELECT CAST('10' AS INT);\nSELECT '10'::INT; -- Same\nSELECT * FROM Employees WHERE CAST(Salary AS DECIMAL) &gt; 50000;\n</pre>"},{"location":"PostSQL/01-sql-comprehensive/#dcl-data-control-language","title":"DCL (Data Control Language)\u00b6","text":"<p><code>DCL</code> is used to manage access permissions and control database operations. It includes commands for granting and revoking privileges to users and roles.</p> <p>Common DCL commands include <code>GRANT</code> and <code>REVOKE</code>.</p> <p></p>"},{"location":"PostSQL/01-sql-comprehensive/#grant","title":"<code>GRANT</code>\u00b6","text":"<ul> <li><p>The <code>GRANT</code> command is used to give specific privileges to a user or role.</p> </li> <li><p>This command grants the <code>SELECT</code> and <code>INSERT</code> privileges on the <code>Employees</code> table to the user named <code>user1</code>. Now, <code>user1</code> can select and insert data into the Employees table.</p> <pre>GRANT SELECT, INSERT ON Employees TO user1;\n</pre> </li> </ul>"},{"location":"PostSQL/01-sql-comprehensive/#revoke","title":"<code>REVOKE</code>\u00b6","text":"<ul> <li><p>The <code>REVOKE</code> command is used to revoke previously granted privileges from a user or role.</p> </li> <li><p>This command revokes the <code>INSERT</code> privilege on the <code>Employees</code> table from the user named <code>user1</code>. Now, user1 no longer has permission to insert data into the Employees table.</p> <pre>REVOKE INSERT ON Employees FROM user1;\n</pre> </li> </ul>"},{"location":"PostSQL/01-sql-comprehensive/#tcl-transaction-control-language","title":"TCL (Transaction Control Language)\u00b6","text":"<p>TCL is used to manage transactions within the database. It includes commands for starting, committing, and rolling back transactions to ensure data integrity and consistency.</p> <p>Common TCL commands include <code>COMMIT</code>, <code>ROLLBACK</code>, and <code>SAVEPOINT</code>.</p> <p></p>"},{"location":"PostSQL/01-sql-comprehensive/#example-script","title":"Example Script\u00b6","text":"<ul> <li><code>DECLARE</code>: This section is used to declare variables.</li> <li><code>BEGIN</code>: Marks the beginning of the main block of code.</li> <li><code>FOR ... LOOP</code>: This loop iterates over the result set returned by the <code>SELECT</code> query inside it.</li> </ul> <pre>DROP TABLE IF EXISTS stats_10000;\n\n-- Create the final output table\nCREATE TABLE IF NOT EXISTS stats_10000 (\n    geoid varchar,\n    dbar double precision,\n    stdev double precision,\n\tmu double precision,\n\tsigma double precision\n);\n-- Set the seed for reproducible results\nSELECT setseed(0.5);\n\nDO $$\nDECLARE\n    polygon_record RECORD;\nBEGIN\n\t\tFOR polygon_record IN\n\t\t\tSELECT id, area, n, geom\n\t\t\tFROM (\n\t\t\t\tSELECT\n\t\t\t\t\tid,\n\t\t\t\t\tST_Area(geom) AS area,\n\t\t\t\t\t((ST_Area(geom) / SUM(ST_Area(geom)) OVER()) * 10000)::INT AS n,\n\t\t\t\t\tgeom\n\t\t\t\tFROM \"DFW_CMA\"\n\t\t\t) AS areas_with_n\n\t\tLOOP\n        -- Generate random points within the current polygon using the calculated 'n'\n        CREATE TEMP TABLE IF NOT EXISTS temp_random_points AS SELECT (ST_Dump(ST_GeneratePoints(polygon_record.geom, polygon_record.n))).geom;\n        TRUNCATE TABLE temp_random_points;\n        INSERT INTO temp_random_points (geom)\n        SELECT (ST_Dump(ST_GeneratePoints(polygon_record.geom, polygon_record.n))).geom;\n\n        -- Calculate pairwise distances\n        CREATE TEMP TABLE IF NOT EXISTS temp_distances AS SELECT 0::double precision AS distance; -- Initialize with dummy data to set the data type\n        TRUNCATE TABLE temp_distances;\n        INSERT INTO temp_distances (distance)\n        SELECT ST_Distance(a.geom, b.geom) AS distance\n        FROM temp_random_points a, temp_random_points b\n        WHERE a.ctid &lt;&gt; b.ctid; -- Ensure not calculating distance of a point to itself\n\n        -- Compute mean and standard deviation of distances\n        INSERT INTO stats_10000 (geoid, dbar, stdev,mu,sigma)\n        SELECT  polygon_record.id,\n\t\t\t\tAVG(distance) AS dbar,\n\t\t\t\tSTDDEV_POP(distance) AS stdev,\n\t\t\t\tSQRT(2 * polygon_record.area / (3 * SQRT(3))) * 0.8262589495 AS mu,\n\t\t\t\tSQRT(2 * polygon_record.area / (3 * SQRT(3))) * 0.3881101412 AS sigma\n        FROM temp_distances;\n\n        -- Clean up temporary tables for the next iteration\n        DROP TABLE temp_random_points;\n        DROP TABLE temp_distances;\n    END LOOP;\nEND $$;\n\n-- Retrieve and view the final results\nSELECT * FROM stats_10000;\n</pre>"},{"location":"PostSQL/01_geo_database/","title":"01-Connect PostDB","text":"In\u00a0[1]: Copied! <pre>%load_ext sql\n</pre> %load_ext sql In\u00a0[2]: Copied! <pre>import os\n</pre> import os In\u00a0[3]: Copied! <pre>host = \"localhost\"\ndatabase = \"sdb\"\nuser = os.getenv('SQL_USER')\npassword = os.getenv('SQL_PASSWORD')\n</pre> host = \"localhost\" database = \"sdb\" user = os.getenv('SQL_USER') password = os.getenv('SQL_PASSWORD') <p><code>pip install sqlalchemy==1.4.4</code>  downgrade sqlalchemy to 1.4.4</p> In\u00a0[4]: Copied! <pre>connection_string = f\"postgresql://{user}:{password}@{host}/{database}\"\n</pre> connection_string = f\"postgresql://{user}:{password}@{host}/{database}\" In\u00a0[5]: Copied! <pre>%sql $connection_string\n</pre> %sql $connection_string Out[5]: <pre>'Connected: postgres@sdb'</pre> In\u00a0[6]: Copied! <pre>%%sql \n\nSELECT * FROM us_cities LIMIT 10\n</pre> %%sql   SELECT * FROM us_cities LIMIT 10 <pre> * postgresql://postgres:***@localhost/sdb\n10 rows affected.\n</pre> Out[6]: gid id pop_2010 elev_in_ft state geom 1 53 40888.000000000000000 1611.000000000000000 ND 0101000020E6100000982BDE23F65259C040410DDFC21D4840 2 101 52838.000000000000000 830.000000000000000 ND 0101000020E61000004481994A1A4258C0703398D06EF64740 3 153 15427.000000000000000 1407.000000000000000 ND 0101000020E610000064B4B00257AD58C0B04901B38C744740 4 177 105549.000000000000000 902.000000000000000 ND 0101000020E610000040518F238C3258C0F87F03A447704740 5 192 17787.000000000000000 2411.000000000000000 ND 0101000020E610000050C8F03389B259C080B878D388704740 6 199 18331.000000000000000 1647.000000000000000 ND 0101000020E6100000309303D1EE3859C070B33401D0694740 7 238 33039.000000000000000 115.000000000000000 ME 0101000020E6100000245888B3C73151C008D292228D664640 8 296 19989.000000000000000 138.000000000000000 NY 0101000020E6100000F87C4A84FC5C52C0D8BBC2CC88594640 9 297 11128.000000000000000 295.000000000000000 NY 0101000020E6100000AC36B52220DF52C05037C87FDC584640 10 302 19136.000000000000000 121.000000000000000 ME 0101000020E61000006044C428E37151C0D06CCF87C2274640 In\u00a0[7]: Copied! <pre>from sqlalchemy import create_engine\nfrom sqlalchemy import inspect\nimport pandas as pd\n</pre> from sqlalchemy import create_engine from sqlalchemy import inspect import pandas as pd In\u00a0[8]: Copied! <pre>engine = create_engine(connection_string)\ninsp = inspect(engine)\ninsp.get_table_names()\n</pre> engine = create_engine(connection_string) insp = inspect(engine) insp.get_table_names() Out[8]: <pre>['spatial_ref_sys',\n 'us_states',\n 'countries',\n 'us_cities',\n 'us_counties',\n 'cities5000']</pre> <ul> <li>Seems we have incompatible <code>pandas</code> and  <code>sqlalchemy</code>,</li> <li>Usually, <code>df = pd.read_sql('SELECT * from cities LIMIT 10', engine)</code> will work</li> </ul> In\u00a0[9]: Copied! <pre>connection = engine.raw_connection()\ndf = pd.read_sql('SELECT * from cities5000 LIMIT 10', con = connection)\ndf\n</pre> connection = engine.raw_connection() df = pd.read_sql('SELECT * from cities5000 LIMIT 10', con = connection) df <pre>C:\\Users\\yyang\\AppData\\Local\\Temp\\ipykernel_11880\\1650048968.py:2: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql('SELECT * from cities5000 LIMIT 10', con = connection)\n</pre> Out[9]: id geonameid name asciiname alternatenames latitude longitude feature_class feature_code country_code cc2 admin1_code admin2_code admin3_code admin4_code population elevation dem timezone modification_date 0 1 3039163 Sant Juli\u00e0 de L\u00f2ria Sant Julia de Loria San Julia,San Juli\u00e0,Sant Julia de Loria,Sant J... 42.46372 1.49129 P PPLA AD 06 8022 921 Europe/Andorra 2013-11-23 1 2 3039678 Ordino Ordino Ordino,ao er di nuo,orudino jiao qu,\u041e\u0440\u0434\u0438\u043d\u043e,\u30aa\u30eb\u30c7... 42.55623 1.53319 P PPLA AD 05 3066 1296 Europe/Andorra 2018-10-26 2 3 3040051 les Escaldes les Escaldes Ehskal'des-Ehndzhordani,Escaldes,Escaldes-Engo... 42.50729 1.53414 P PPLA AD 08 15853 1033 Europe/Andorra 2008-10-15 3 4 3040132 la Massana la Massana La Macana,La Massana,La Ma\u00e7ana,La-Massana,la M... 42.54499 1.51483 P PPLA AD 04 7211 1245 Europe/Andorra 2008-10-15 4 5 3040686 Encamp Encamp Ehnkam,Encamp,en kan pu,enkanpu jiao qu,\u042d\u043d\u043a\u0430\u043c,... 42.53474 1.58014 P PPLA AD 03 11223 1257 Europe/Andorra 2018-10-26 5 6 3041204 Canillo Canillo Canillo,Kanil'o,ka ni e,kaniryo jiao qu,\u041a\u0430\u043d\u0438\u043b\u044c... 42.5676 1.59756 P PPLA AD 02 3292 1561 Europe/Andorra 2018-10-26 6 7 3041563 Andorra la Vella Andorra la Vella ALV,Ando-la-Vyey,Andora,Andora la Vela,Andora ... 42.50779 1.52109 P PPLC AD 07 20430 1037 Europe/Andorra 2020-03-03 7 8 290594 Umm Al Quwain City Umm Al Quwain City Oumm al Qaiwain,Oumm al Qa\u00efwa\u00efn,Um al Kawain,U... 25.56473 55.55517 P PPLA AE 07 62747 2 Asia/Dubai 2019-10-24 8 9 291074 Ras Al Khaimah City Ras Al Khaimah City Julfa,Khaimah,RAK City,RKT,Ra's al Khaymah,Ra'... 25.78953 55.9432 P PPLA AE 05 351943 2 Asia/Dubai 2019-09-09 9 10 291279 Muzayri\u2018 Muzayri` Mezaira'a,Mezaira\u2019a,Mizeir`ah,Mizeir\u2018ah,Mozayr... 23.14355 53.7881 P PPL AE 01 10000 123 Asia/Dubai 2013-10-24"},{"location":"PostSQL/01_geo_database/#postgresql-and-postgis","title":"PostgreSQL and PostGIS\u00b6","text":""},{"location":"PostSQL/01_geo_database/#postgresql","title":"PostgreSQL\u00b6","text":"<ul> <li>Open-source relational database management system (<code>RDBMS</code>).</li> <li>Highly extensible with support for custom functions and extensions.</li> <li>Offers advanced features like <code>full-text search</code>, <code>JSON</code> support, and multi-version concurrency control (MVCC).</li> </ul>"},{"location":"PostSQL/01_geo_database/#postgis","title":"PostGIS\u00b6","text":"<ul> <li>Spatial database extender for PostgreSQL.</li> <li>Enables storage, querying, and analysis of geographic information.<ul> <li>Adds support for geographic objects and functions for spatial data operations.</li> </ul> </li> </ul>"},{"location":"PostSQL/01_geo_database/#install-postgis-extension","title":"Install PostGIS Extension\u00b6","text":"<ul> <li><p>use <code>CREATE EXTENSION postgis</code> in query tool to install build-in functions of POSTGIS</p> <p></p> </li> <li><p>use <code>SELECT * FROM spatial_ref_sys</code> to check the build-in spatial reference table</p> <p></p> </li> </ul>"},{"location":"PostSQL/01_geo_database/#import-data-into-postgis","title":"Import data into PostGIS\u00b6","text":"<ol> <li><p>Use GUI (PostGIS Shapefile Import/Export Manager)</p> <p></p> </li> <li><p>Import data using QGIS (need to be connected first)</p> <ul> <li>Choose DB Manager</li> <li><code>Schema</code> is like subfolder within a database</li> <li>Check <code>Create Spatial Index</code> is very important, it will boost the spatial query speed.</li> </ul> <p></p> </li> </ol>"},{"location":"PostSQL/01_geo_database/#change-column-type-using-sql","title":"Change column type using SQL\u00b6","text":"<pre><code>ALTER TABLE cities5000\nALTER COLUMN dem TYPE INT\nUSING dem::integer\n</code></pre>"},{"location":"PostSQL/01_geo_database/#using-postgresql-in-jupyter-notebook","title":"Using PostgreSQL in Jupyter Notebook\u00b6","text":"<ul> <li>Reference Book</li> <li>Reference Class</li> </ul>"},{"location":"PostSQL/01_geo_database/#1-installation","title":"1. Installation\u00b6","text":"<pre><code>conda create -n sql python\nconda activate sql\nconda install ipython-sql sqlalchemy psycopg2 notebook pandas -c conda-forge\n</code></pre>"},{"location":"PostSQL/01_geo_database/#using-ipython-sql","title":"Using ipython-sql\u00b6","text":""},{"location":"PostSQL/01_geo_database/#using-sqlalchemy","title":"Using sqlalchemy\u00b6","text":""},{"location":"PostSQL/01_geo_database/#qgis","title":"QGIS\u00b6","text":"<ul> <li><p>Install basemap using python script</p> <p></p> </li> <li><p>Connect with PostGIS</p> <p></p> </li> </ul>"},{"location":"PostSQL/02_SQL_in_Notebook/","title":"02-SQL Basic","text":"In\u00a0[1]: Copied! <pre>%load_ext sql\n</pre> %load_ext sql In\u00a0[2]: Copied! <pre>import os\n</pre> import os In\u00a0[3]: Copied! <pre>host = \"localhost\"\ndatabase = \"sdb\"\nuser = os.getenv('SQL_USER')\npassword = os.getenv('SQL_PASSWORD')\n</pre> host = \"localhost\" database = \"sdb\" user = os.getenv('SQL_USER') password = os.getenv('SQL_PASSWORD') In\u00a0[4]: Copied! <pre>connection_string = f\"postgresql://{user}:{password}@{host}/{database}\"\n%sql $connection_string\n</pre> connection_string = f\"postgresql://{user}:{password}@{host}/{database}\" %sql $connection_string Out[4]: <pre>'Connected: postgres@sdb'</pre> In\u00a0[5]: Copied! <pre>%%sql \n\nSELECT * FROM cities5000 LIMIT 10\n</pre> %%sql   SELECT * FROM cities5000 LIMIT 10 <pre> * postgresql://postgres:***@localhost/sdb\n10 rows affected.\n</pre> Out[5]: id geonameid name asciiname alternatenames latitude longitude feature_class feature_code country_code cc2 admin1_code admin2_code admin3_code admin4_code population elevation dem timezone modification_date 1 3039163 Sant Juli\u00e0 de L\u00f2ria Sant Julia de Loria San Julia,San Juli\u00e0,Sant Julia de Loria,Sant Juli\u00e0 de L\u00f2ria,Sant-Zhulija-de-Lorija,sheng hu li ya-de luo li ya,\u0421\u0430\u043d\u0442-\u0416\u0443\u043b\u0438\u044f-\u0434\u0435-\u041b\u043e\u0440\u0438\u044f,\u30b5\u30f3\u30fb\u30b8\u30e5\u30ea\u30a2\u30fb\u30c7\u30fb\u30ed\u30ea\u30a2\u6559\u533a,\u5723\u80e1\u5229\u5a05-\u5fb7\u6d1b\u91cc\u4e9a,\u5723\u80e1\u5229\u5a05\uff0d\u5fb7\u6d1b\u91cc\u4e9a 42.46372 1.49129 P PPLA AD 06 8022 921 Europe/Andorra 2013-11-23 2 3039678 Ordino Ordino Ordino,ao er di nuo,orudino jiao qu,\u041e\u0440\u0434\u0438\u043d\u043e,\u30aa\u30eb\u30c7\u30a3\u30ce\u6559\u533a,\u5965\u5c14\u8fea\u8bfa 42.55623 1.53319 P PPLA AD 05 3066 1296 Europe/Andorra 2018-10-26 3 3040051 les Escaldes les Escaldes Ehskal'des-Ehndzhordani,Escaldes,Escaldes-Engordany,Les Escaldes,esukarudesu=engorudani jiao qu,lai sai si ka er de-en ge er da,\u042d\u0441\u043a\u0430\u043b\u044c\u0434\u0435\u0441-\u042d\u043d\u0434\u0436\u043e\u0440\u0434\u0430\u043d\u0438,\u30a8\u30b9\u30ab\u30eb\u30c7\u30b9\uff1d\u30a8\u30f3\u30b4\u30eb\u30c0\u30cb\u6559\u533a,\u840a\u585e\u65af\u5361\u723e\u5fb7-\u6069\u6208\u723e\u9054,\u840a\u585e\u65af\u5361\u723e\u5fb7\uff0d\u6069\u6208\u723e\u9054 42.50729 1.53414 P PPLA AD 08 15853 1033 Europe/Andorra 2008-10-15 4 3040132 la Massana la Massana La Macana,La Massana,La Ma\u00e7ana,La-Massana,la Massana,ma sa na,\u041b\u0430-\u041c\u0430\u0441\u0441\u0430\u043d\u0430,\u30e9\u30fb\u30de\u30b5\u30ca\u6559\u533a,\u9a6c\u8428\u7eb3 42.54499 1.51483 P PPLA AD 04 7211 1245 Europe/Andorra 2008-10-15 5 3040686 Encamp Encamp Ehnkam,Encamp,en kan pu,enkanpu jiao qu,\u042d\u043d\u043a\u0430\u043c,\u30a8\u30f3\u30ab\u30f3\u30d7\u6559\u533a,\u6069\u574e\u666e 42.53474 1.58014 P PPLA AD 03 11223 1257 Europe/Andorra 2018-10-26 6 3041204 Canillo Canillo Canillo,Kanil'o,ka ni e,kaniryo jiao qu,\u041a\u0430\u043d\u0438\u043b\u044c\u043e,\u30ab\u30cb\u30fc\u30ea\u30e7\u6559\u533a,\u5361\u5c3c\u7565 42.5676 1.59756 P PPLA AD 02 3292 1561 Europe/Andorra 2018-10-26 7 3041563 Andorra la Vella Andorra la Vella ALV,Ando-la-Vyey,Andora,Andora la Vela,Andora la Velja,Andora lja Vehl'ja,Andoro Malnova,Andorra,Andorra Tuan,Andorra a Vella,Andorra la Biella,Andorra la Vella,Andorra la Vielha,Andorra-a-Velha,Andorra-la-Vel'ja,Andorra-la-Vielye,Andorre-la-Vieille,And\u00f2-la-Vy\u00e8y,And\u00f2rra la Vi\u00e8lha,an dao er cheng,andolalabeya,andwra la fyla,\u0391\u03bd\u03b4\u03cc\u03c1\u03c1\u03b1,\u0410\u043d\u0434\u043e\u0440\u0430 \u043b\u0430 \u0412\u0435\u043b\u044f,\u0410\u043d\u0434\u043e\u0440\u0430 \u043b\u0430 \u0412\u0435\u0459\u0430,\u0410\u043d\u0434\u043e\u0440\u0430 \u043b\u044f \u0412\u044d\u043b\u044c\u044f,\u0410\u043d\u0434\u043e\u0440\u0440\u0430-\u043b\u0430-\u0412\u0435\u043b\u044c\u044f,\u05d0\u05e0\u05d3\u05d5\u05e8\u05d4 \u05dc\u05d4 \u05d5\u05d5\u05dc\u05d4,\u0623\u0646\u062f\u0648\u0631\u0627 \u0644\u0627 \u0641\u064a\u0644\u0627,\u12a0\u1295\u12f6\u122b \u120b \u126c\u120b,\u30a2\u30f3\u30c9\u30e9\u30fb\u30e9\u30fb\u30f4\u30a7\u30ea\u30e3,\u5b89\u9053\u723e\u57ce,\uc548\ub3c4\ub77c\ub77c\ubca0\uc57c 42.50779 1.52109 P PPLC AD 07 20430 1037 Europe/Andorra 2020-03-03 8 290594 Umm Al Quwain City Umm Al Quwain City Oumm al Qaiwain,Oumm al Qa\u00efwa\u00efn,Um al Kawain,Um al Quweim,Umm Al Quwain City,Umm al Qaiwain,Umm al Qawain,Umm al Qaywayn,Umm al-Quwain,Umm-ehl'-Kajvajn,Yumul al Quwain,am alqywyn,mdynt am alqywyn,\u0423\u043c\u043c-\u044d\u043b\u044c-\u041a\u0430\u0439\u0432\u0430\u0439\u043d,\u0623\u0645 \u0627\u0644\u0642\u064a\u0648\u064a\u0646,\u0645\u062f\u064a\u0646\u0629 \u0627\u0645 \u0627\u0644\u0642\u064a\u0648\u064a\u0646 25.56473 55.55517 P PPLA AE 07 62747 2 Asia/Dubai 2019-10-24 9 291074 Ras Al Khaimah City Ras Al Khaimah City Julfa,Khaimah,RAK City,RKT,Ra's al Khaymah,Ra's al-Chaima,Ras Al Khaimah City,Ras al Khaimah,Ras al-Khaimah,Ras el Khaimah,Ras el Kha\u00efmah,Ras el-Kheima,Ras-ehl'-Khajma,Ra\u2019s al Khaymah,Ra\u2019s al-Chaima,mdynt ras alkhymt,ras alkhymt,\u0420\u0430\u0441-\u044d\u043b\u044c-\u0425\u0430\u0439\u043c\u0430,\u0631\u0623\u0633 \u0627\u0644\u062e\u064a\u0645\u0629,\u0645\u062f\u064a\u0646\u0629 \u0631\u0623\u0633 \u0627\u0644\u062e\u064a\u0645\u0629 25.78953 55.9432 P PPLA AE 05 351943 2 Asia/Dubai 2019-09-09 10 291279 Muzayri\u2018 Muzayri` Mezaira'a,Mezaira\u2019a,Mizeir`ah,Mizeir\u2018ah,Mozayri`,Mozayri\u2018,Muzairi,Muzayri`,Muzayri\u2018,\u041c\u0443\u0437\u0430\u0438\u0440\u0438 23.14355 53.7881 P PPL AE 01 10000 123 Asia/Dubai 2013-10-24 In\u00a0[6]: Copied! <pre>%%sql\n\nSELECT name, country_code, dem FROM cities5000 \nWHERE country_code LIKE 'C_'\nORDER BY dem DESC \nLIMIT 10\n</pre> %%sql  SELECT name, country_code, dem FROM cities5000  WHERE country_code LIKE 'C_' ORDER BY dem DESC  LIMIT 10 <pre> * postgresql://postgres:***@localhost/sdb\n10 rows affected.\n</pre> Out[6]: name country_code dem Nagqu CN 4512 Jiangzi CN 4036 D\u00eaq\u00ean CN 3974 Burang CN 3892 Rikaze CN 3847 Daocheng CN 3756 Lhasa CN 3651 Gahai CN 3546 Awancang CN 3504 Maima CN 3495 In\u00a0[7]: Copied! <pre>%%sql\n\nSELECT DISTINCT country_code FROM cities5000 \nLIMIT 10\n</pre> %%sql  SELECT DISTINCT country_code FROM cities5000  LIMIT 10 <pre> * postgresql://postgres:***@localhost/sdb\n10 rows affected.\n</pre> Out[7]: country_code RU FK KP DK SN SI PN CZ KR VE In\u00a0[8]: Copied! <pre>%%sql\n\nSELECT COUNT(DISTINCT country_code) FROM cities5000\n</pre> %%sql  SELECT COUNT(DISTINCT country_code) FROM cities5000 <pre> * postgresql://postgres:***@localhost/sdb\n1 rows affected.\n</pre> Out[8]: count 245 In\u00a0[9]: Copied! <pre>%%sql\n\nSELECT MAX(dem) FROM cities5000\n</pre> %%sql  SELECT MAX(dem) FROM cities5000 <pre> * postgresql://postgres:***@localhost/sdb\n1 rows affected.\n</pre> Out[9]: max 5022 In\u00a0[10]: Copied! <pre>%%sql\n\nSELECT SUM(population) FROM cities5000;\n</pre> %%sql  SELECT SUM(population) FROM cities5000; <pre> * postgresql://postgres:***@localhost/sdb\n(psycopg2.errors.UndefinedFunction) function sum(character varying) does not exist\nLINE 1: SELECT SUM(population) FROM cities5000;\n               ^\nHINT:  No function matches the given name and argument types. You might need to add explicit type casts.\n\n[SQL: SELECT SUM(population) FROM cities5000;]\n(Background on this error at: http://sqlalche.me/e/14/f405)\n</pre> In\u00a0[11]: Copied! <pre>%%sql\n\nSELECT SUM(CAST(population AS INTEGER)) FROM cities5000;\n</pre> %%sql  SELECT SUM(CAST(population AS INTEGER)) FROM cities5000; <pre> * postgresql://postgres:***@localhost/sdb\n1 rows affected.\n</pre> Out[11]: sum 3228361637 In\u00a0[12]: Copied! <pre>%%sql\n\nSELECT AVG(CAST(population AS INTEGER)) FROM cities5000;\n</pre> %%sql  SELECT AVG(CAST(population AS INTEGER)) FROM cities5000; <pre> * postgresql://postgres:***@localhost/sdb\n1 rows affected.\n</pre> Out[12]: avg 62503.371415848677 In\u00a0[13]: Copied! <pre>%%sql\n\nSELECT name, country_code, dem, CAST(population AS INTEGER) FROM cities5000 \nORDER BY dem DESC, population DESC\nLIMIT 10\n</pre> %%sql  SELECT name, country_code, dem, CAST(population AS INTEGER) FROM cities5000  ORDER BY dem DESC, population DESC LIMIT 10 <pre> * postgresql://postgres:***@localhost/sdb\n10 rows affected.\n</pre> Out[13]: name country_code dem population La Rinconada PE 5022 29678 La Rinconada Ana Maria (La Rinconada) PE 5016 12183 Lobujya NP 4972 8767 Hacienda Huancane PE 4531 7831 Nagqu CN 4512 30000 Morococha PE 4512 7890 Macusani PE 4360 6044 Yanacancha PE 4348 24105 Cerro de Pasco PE 4336 78910 Paragsha- San Andres - Jose Carlos Mariategui PE 4336 6316 In\u00a0[14]: Copied! <pre>%%sql\n\nSELECT * FROM cities5000 WHERE country_code='US' LIMIT 10\n</pre> %%sql  SELECT * FROM cities5000 WHERE country_code='US' LIMIT 10 <pre> * postgresql://postgres:***@localhost/sdb\n10 rows affected.\n</pre> Out[14]: id geonameid name asciiname alternatenames latitude longitude feature_class feature_code country_code cc2 admin1_code admin2_code admin3_code admin4_code population elevation dem timezone modification_date 45910 4702785 Keene Keene 32.39681 -97.3239 P PPL US TX 251 6181 272.0 279 America/Chicago 2017-03-09 43474 4046255 Bay Minette Bay Minette Bay Minette,Bay Minette Station,Bej Minet,Bej-Minett,bay mynyty,be minetta,bei mi nei te,by mynt,\u0411\u0435\u0439-\u041c\u0456\u043d\u0435\u0442\u0442,\u0411\u0435\u0458 \u041c\u0438\u043d\u0435\u0442,\u0628\u0627\u064a \u0645\u064a\u0646\u064a\u062a\u064a,\u0628\u06cc \u0645\u06cc\u0646\u062a,\u092c\u0947 \u092e\u093f\u0928\u0947\u0924\u094d\u0924,\u8d1d\u7c73\u5185\u7279 30.88296 -87.77305 P PPLA2 US AL 003 9118 82.0 85 America/Chicago 2017-03-09 43475 4046274 Edna Edna Edna,Ednaville,Macaroni Station,adna,adna  tgzas,\u0415\u0434\u043d\u0430,\u0625\u062f\u0646\u0627,\u0627\u062f\u0646\u0627\u060c \u062a\u06af\u0632\u0627\u0633 28.97859 -96.64609 P PPLA2 US TX 239 5792 20.0 24 America/Chicago 2017-03-09 43476 4046332 Henderson Henderson Khenderson,hndrswn,hndrswn  tgzas,\u0425\u0435\u043d\u0434\u0435\u0440\u0441\u043e\u043d,\u0647\u0646\u062f\u0631\u0633\u0648\u0646,\u0647\u0646\u062f\u0631\u0633\u0648\u0646\u060c \u062a\u06af\u0632\u0627\u0633 32.15322 -94.79938 P PPLA2 US TX 401 13529 156.0 160 America/Chicago 2017-03-09 43477 4046704 Fort Hunt Fort Hunt 38.73289 -77.05803 P PPL US VA 059 16045 10.0 16 America/New_York 2011-05-14 43478 4047906 Trinity Trinity 28.18085 -82.68177 P PPL US FL 101 10907 6.0 15 America/New_York 2011-05-14 43479 4047914 Villas Villas 26.55035 -81.8687 P PPL US FL 071 11569 3.0 6 America/New_York 2011-05-14 43480 4048023 Bessemer Bessemer Besemer,Bessemer,bei se mo,bes'semara,beseomeo,bsmr,bysmyr,\u0411\u0435\u0441\u0435\u043c\u0435\u0440,\u0411\u0435\u0441\u0441\u0435\u043c\u0435\u0440,\u0628\u0633\u0645\u0631,\u0628\u064a\u0633\u0645\u064a\u0631,\u092c\u0947\u0938\u094d\u0938\u0947\u092e\u0930,\u8d1d\u745f\u9ed8,\ubca0\uc11c\uba38 33.40178 -86.95444 P PPL US AL 073 26730 155.0 161 America/Chicago 2017-03-09 43481 4048662 Paducah Paducah PAH,Padaka,Padjuka,Paducah,Paduka,Pekin,badwka,pa di you ka,padeyuka,pdwka  kntaky,peodyuka,\u041f\u0430\u0434\u0430\u043a\u0430,\u041f\u0430\u0434\u0443\u043a\u0430,\u041f\u0430\u0434\u0458\u0443\u043a\u0430,\u0628\u0627\u062f\u0648\u0643\u0627,\u067e\u0627\u0688\u0648\u06a9\u0627\u06c1\u060c \u06a9\u06cc\u0646\u0679\u06a9\u06cc,\u067e\u062f\u0648\u06a9\u0627\u060c \u06a9\u0646\u062a\u0627\u06a9\u06cc,\u30d1\u30c7\u30e5\u30fc\u30ab,\u5e15\u8fea\u5c24\u5361,\ud37c\ub4c0\uce74 37.08339 -88.60005 P PPLA2 US KY 145 24864 104.0 104 America/Chicago 2018-01-03 43482 4048888 Red Chute Red Chute 32.55598 -93.61323 P PPL US LA 015 6261 65.0 67 America/Chicago 2011-05-14 In\u00a0[15]: Copied! <pre>%%sql\n\nSELECT * FROM cities5000 WHERE country_code='US' OR country_code='CA' LIMIT 5\n</pre> %%sql  SELECT * FROM cities5000 WHERE country_code='US' OR country_code='CA' LIMIT 5 <pre> * postgresql://postgres:***@localhost/sdb\n5 rows affected.\n</pre> Out[15]: id geonameid name asciiname alternatenames latitude longitude feature_class feature_code country_code cc2 admin1_code admin2_code admin3_code admin4_code population elevation dem timezone modification_date 5902 5901272 Binbrook Binbrook 43.12135 -79.81104 P PPLX CA 08 3525 8796 216 America/Toronto 2018-01-20 5903 5903510 Blainville Blainville 45.66678 -73.88249 P PPL CA 10 15 73015 46493 73 America/Toronto 2019-02-26 5904 5904501 Bluewater Bluewater 43.46679 -81.59977 P PPL CA 08 7044 249 America/Toronto 2013-05-05 5872 5881791 Abbotsford Abbotsford Abbotsford,Abotsford,Abotsfordas,YXX,abottsufodo,abwtsfwrd,abwtsfwrd  brytysh klmbya,aebeocheupeodeu,ya bo si fu,\u0410\u0431\u0431\u043e\u0442\u0441\u0444\u043e\u0440\u0434,\u0410\u0431\u043e\u0442\u0441\u0444\u043e\u0440\u0434,\u0623\u0628\u0648\u062a\u0633\u0641\u0648\u0631\u062f,\u0627\u0628\u0648\u062a\u0633\u0641\u0648\u0631\u062f\u060c \u0628\u0631\u06cc\u062a\u06cc\u0634 \u06a9\u0644\u0645\u0628\u06cc\u0627,\u0627\u06cc\u0628\u0627\u0679\u0633\u0641\u0648\u0631\u0688,\u0627\u06cc\u0628\u0679\u0633 \u0641\u0648\u0631\u0688\u060c \u0628\u0631\u0679\u0634 \u06a9\u0648\u0644\u0645\u0628\u06cc\u0627,\u30a2\u30dc\u30c3\u30c4\u30d5\u30a9\u30fc\u30c9,\u4e9e\u535a\u65af\u798f,\uc560\ubc84\uce20\ud37c\ub4dc 49.05798 -122.25257 P PPL CA 02 5909 5909052 141397 114 America/Vancouver 2021-12-05 5873 5882142 Acton Vale Acton Vale Akton Veil,Akton Vejl,Aktonvejl,aktwn wal  kbk,\u0386\u03ba\u03c4\u03bf\u03bd \u0392\u03ad\u03b9\u03bb,\u0410\u043a\u0442\u043e\u043d \u0412\u0435\u0458\u043b,\u0410\u043a\u0442\u043e\u043d\u0432\u0435\u0439\u043b,\u0627\u06a9\u062a\u0648\u0646 \u0648\u0627\u0644\u060c \u06a9\u0628\u06a9,\u0627\u06cc\u06a9\u0679\u0646 \u0648\u0627\u0644\u06cc 45.65007 -72.56582 P PPL CA 10 16 48028 7656 90 America/Toronto 2021-11-12 In\u00a0[16]: Copied! <pre>%%sql \n\nSELECT name,population,country_code,dem FROM cities5000 \nWHERE country_code='US' AND CAST(population AS INTEGER)&gt;1000000\n</pre> %%sql   SELECT name,population,country_code,dem FROM cities5000  WHERE country_code='US' AND CAST(population AS INTEGER)&gt;1000000  <pre> * postgresql://postgres:***@localhost/sdb\n14 rows affected.\n</pre> Out[16]: name population country_code dem Philadelphia 1567442 US 40 Dallas 1300092 US 139 Houston 2296224 US 30 San Antonio 1469845 US 202 Chicago 2720546 US 180 The Bronx 1385108 US 19 Brooklyn 2300664 US 18 Manhattan 1487536 US 38 New York City 8175133 US 57 Queens 2272771 US 13 Phoenix 1563025 US 366 Los Angeles 3971883 US 96 San Diego 1394928 US 20 San Jose 1026908 US 23 In\u00a0[17]: Copied! <pre>%%sql\n\nSELECT name,population,country_code,dem  FROM cities5000 \nWHERE name LIKE 'U%' LIMIT 5\n</pre> %%sql  SELECT name,population,country_code,dem  FROM cities5000  WHERE name LIKE 'U%' LIMIT 5 <pre> * postgresql://postgres:***@localhost/sdb\n5 rows affected.\n</pre> Out[17]: name population country_code dem Umm Al Quwain City 62747 AE 2 Uruzg\u0101n 13388 AF 2026 U\u00edge 60008 AO 825 Uacu Cungo 10970 AO 1304 Urdinarrain 7992 AR 68 In\u00a0[18]: Copied! <pre>%%sql\n\nSELECT name,population,country_code,dem FROM cities5000 \nWHERE country_code LIKE 'C_' LIMIT 10\n</pre> %%sql  SELECT name,population,country_code,dem FROM cities5000  WHERE country_code LIKE 'C_' LIMIT 10 <pre> * postgresql://postgres:***@localhost/sdb\n10 rows affected.\n</pre> Out[18]: name population country_code dem Sinfra 59919 CI 265 Hekou 47281 CN 41 Songlou 79763 CN 40 Sunlou 46941 CN 40 Zhuzhai 56908 CN 40 Wanchao 12067 CN 835 Binbrook 8796 CA 216 Blainville 46493 CA 73 Bluewater 7044 CA 249 Abbotsford 141397 CA 114 In\u00a0[19]: Copied! <pre>%%sql \n\nSELECT name,population,country_code,dem FROM cities5000 \nWHERE name LIKE 'He__' LIMIT 10\n</pre> %%sql   SELECT name,population,country_code,dem FROM cities5000  WHERE name LIKE 'He__' LIMIT 10 <pre> * postgresql://postgres:***@localhost/sdb\n8 rows affected.\n</pre> Out[19]: name population country_code dem Hepu 192813 CN 12 Hepo 131238 CN 41 Heze 1346717 CN 53 Hede 89107 CN 2 Hebi 634721 CN 138 Heba 32538 CN 1772 Heek 8272 DE 52 Heer 7615 NL 58 In\u00a0[20]: Copied! <pre>%%sql \n\nSELECT name,population,country_code,dem FROM cities5000 \nWHERE dem BETWEEN 3500 AND 3600\n</pre> %%sql   SELECT name,population,country_code,dem FROM cities5000  WHERE dem BETWEEN 3500 AND 3600 <pre> * postgresql://postgres:***@localhost/sdb\n6 rows affected.\n</pre> Out[20]: name population country_code dem Gahai 5257 CN 3546 Awancang 6619 CN 3504 Padam 25000 IN 3560 Leh 37475 IN 3502 Sicuani 33575 PE 3551 San Miguel de Cauri 5326 PE 3586 <p>Get number of rows</p> In\u00a0[21]: Copied! <pre>%%sql \n\nSELECT COUNT(*) FROM cities\n</pre> %%sql   SELECT COUNT(*) FROM cities <pre> * postgresql://postgres:***@localhost/sdb\n1 rows affected.\n</pre> Out[21]: count 1249 In\u00a0[22]: Copied! <pre>%%sql \n\nSELECT * FROM cities LIMIT 10\n</pre> %%sql   SELECT * FROM cities LIMIT 10 <pre> * postgresql://postgres:***@localhost/sdb\n10 rows affected.\n</pre> Out[22]: id name country latitude longitude population 1 Bombo UGA 0.5833 32.5333 75000 2 Fort Portal UGA 0.671 30.275 42670 3 Potenza ITA 40.642 15.799 69060 4 Campobasso ITA 41.563 14.656 50762 5 Aosta ITA 45.737 7.315 34062 6 Mariehamn ALD 60.097 19.949 10682 7 Ramallah PSE 31.90294 35.20621 24599 8 Vatican City VAT 41.90001 12.44781 832 9 Poitier FRA 46.58329 0.33328 85960 10 Clermont-Ferrand FRA 45.77998 3.08001 233050 In\u00a0[23]: Copied! <pre>%%sql \n\nSELECT COUNT(*) FROM countries\n</pre> %%sql   SELECT COUNT(*) FROM countries <pre> * postgresql://postgres:***@localhost/sdb\n1 rows affected.\n</pre> Out[23]: count 243 In\u00a0[24]: Copied! <pre>%%sql \n\nSELECT * FROM countries LIMIT 10\n</pre> %%sql   SELECT * FROM countries LIMIT 10 <pre> * postgresql://postgres:***@localhost/sdb\n10 rows affected.\n</pre> Out[24]: id Country Alpha2_code Alpha3_code Numeric_code Latitude Longitude 1 Afghanistan AF AFG 4 33 65 2 Albania AL ALB 8 41 20 3 Algeria DZ DZA 12 28 3 4 American Samoa AS ASM 16 -14.3333 -170 5 Andorra AD AND 20 42.5 1.6 6 Angola AO AGO 24 -12.5 18.5 7 Anguilla AI AIA 660 18.25 -63.1667 8 Antarctica AQ ATA 10 -90 0 9 Antigua and Barbuda AG ATG 28 17.05 -61.8 10 Argentina AR ARG 32 -34 -64 In\u00a0[25]: Copied! <pre>%%sql\n\nSELECT * FROM cities INNER JOIN countries ON cities.country = countries.\"Alpha3_code\" LIMIT 10\n</pre> %%sql  SELECT * FROM cities INNER JOIN countries ON cities.country = countries.\"Alpha3_code\" LIMIT 10 <pre> * postgresql://postgres:***@localhost/sdb\n10 rows affected.\n</pre> Out[25]: id name country latitude longitude population id_1 Country Alpha2_code Alpha3_code Numeric_code Latitude Longitude 1 Bombo UGA 0.5833 32.5333 75000 226 Uganda UG UGA 800 1 32 2 Fort Portal UGA 0.671 30.275 42670 226 Uganda UG UGA 800 1 32 3 Potenza ITA 40.642 15.799 69060 106 Italy IT ITA 380 42.8333 12.8333 4 Campobasso ITA 41.563 14.656 50762 106 Italy IT ITA 380 42.8333 12.8333 5 Aosta ITA 45.737 7.315 34062 106 Italy IT ITA 380 42.8333 12.8333 7 Ramallah PSE 31.90294 35.20621 24599 167 Palestinian Territory, Occupied PS PSE 275 32 35.25 8 Vatican City VAT 41.90001 12.44781 832 94 Holy See (Vatican City State) VA VAT 336 41.9 12.45 9 Poitier FRA 46.58329 0.33328 85960 72 France FR FRA 250 46 2 10 Clermont-Ferrand FRA 45.77998 3.08001 233050 72 France FR FRA 250 46 2 11 Besancon FRA 47.23 6.03001 128426 72 France FR FRA 250 46 2 In\u00a0[26]: Copied! <pre>%%sql\n\nSELECT name, country, countries.\"Country\" \nFROM cities INNER JOIN countries ON cities.country = countries.\"Alpha3_code\"\nLIMIT 20\n</pre> %%sql  SELECT name, country, countries.\"Country\"  FROM cities INNER JOIN countries ON cities.country = countries.\"Alpha3_code\" LIMIT 20 <pre> * postgresql://postgres:***@localhost/sdb\n20 rows affected.\n</pre> Out[26]: name country Country Bombo UGA Uganda Fort Portal UGA Uganda Potenza ITA Italy Campobasso ITA Italy Aosta ITA Italy Ramallah PSE Palestinian Territory, Occupied Vatican City VAT Holy See (Vatican City State) Poitier FRA France Clermont-Ferrand FRA France Besancon FRA France Artigas Base ATA Antarctica Chipata ZMB Zambia Jinja UGA Uganda Arua UGA Uganda Mbale UGA Uganda Moroto UGA Uganda Masaka UGA Uganda Mbarara UGA Uganda Otjiwarongo NAM Namibia Bologna ITA Italy In\u00a0[27]: Copied! <pre>%%sql\n\nSELECT * FROM cities LEFT JOIN countries ON cities.country = countries.\"Alpha3_code\"\nLIMIT 10\n</pre> %%sql  SELECT * FROM cities LEFT JOIN countries ON cities.country = countries.\"Alpha3_code\" LIMIT 10 <pre> * postgresql://postgres:***@localhost/sdb\n10 rows affected.\n</pre> Out[27]: id name country latitude longitude population id_1 Country Alpha2_code Alpha3_code Numeric_code Latitude Longitude 1 Bombo UGA 0.5833 32.5333 75000 226 Uganda UG UGA 800 1 32 2 Fort Portal UGA 0.671 30.275 42670 226 Uganda UG UGA 800 1 32 3 Potenza ITA 40.642 15.799 69060 106 Italy IT ITA 380 42.8333 12.8333 4 Campobasso ITA 41.563 14.656 50762 106 Italy IT ITA 380 42.8333 12.8333 5 Aosta ITA 45.737 7.315 34062 106 Italy IT ITA 380 42.8333 12.8333 6 Mariehamn ALD 60.097 19.949 10682 None None None None None None None 7 Ramallah PSE 31.90294 35.20621 24599 167 Palestinian Territory, Occupied PS PSE 275 32 35.25 8 Vatican City VAT 41.90001 12.44781 832 94 Holy See (Vatican City State) VA VAT 336 41.9 12.45 9 Poitier FRA 46.58329 0.33328 85960 72 France FR FRA 250 46 2 10 Clermont-Ferrand FRA 45.77998 3.08001 233050 72 France FR FRA 250 46 2 In\u00a0[28]: Copied! <pre>%%sql\n\nSELECT * FROM cities RIGHT JOIN countries ON cities.country = countries.\"Alpha3_code\"\nLIMIT 10\n</pre> %%sql  SELECT * FROM cities RIGHT JOIN countries ON cities.country = countries.\"Alpha3_code\" LIMIT 10 <pre> * postgresql://postgres:***@localhost/sdb\n10 rows affected.\n</pre> Out[28]: id name country latitude longitude population id_1 Country Alpha2_code Alpha3_code Numeric_code Latitude Longitude 1 Bombo UGA 0.5833 32.5333 75000 226 Uganda UG UGA 800 1 32 2 Fort Portal UGA 0.671 30.275 42670 226 Uganda UG UGA 800 1 32 3 Potenza ITA 40.642 15.799 69060 106 Italy IT ITA 380 42.8333 12.8333 4 Campobasso ITA 41.563 14.656 50762 106 Italy IT ITA 380 42.8333 12.8333 5 Aosta ITA 45.737 7.315 34062 106 Italy IT ITA 380 42.8333 12.8333 7 Ramallah PSE 31.90294 35.20621 24599 167 Palestinian Territory, Occupied PS PSE 275 32 35.25 8 Vatican City VAT 41.90001 12.44781 832 94 Holy See (Vatican City State) VA VAT 336 41.9 12.45 9 Poitier FRA 46.58329 0.33328 85960 72 France FR FRA 250 46 2 10 Clermont-Ferrand FRA 45.77998 3.08001 233050 72 France FR FRA 250 46 2 11 Besancon FRA 47.23 6.03001 128426 72 France FR FRA 250 46 2 In\u00a0[29]: Copied! <pre>%%sql\n\nSELECT * FROM cities FULL JOIN countries ON cities.country = countries.\"Alpha3_code\"\nLIMIT 10\n</pre> %%sql  SELECT * FROM cities FULL JOIN countries ON cities.country = countries.\"Alpha3_code\" LIMIT 10 <pre> * postgresql://postgres:***@localhost/sdb\n10 rows affected.\n</pre> Out[29]: id name country latitude longitude population id_1 Country Alpha2_code Alpha3_code Numeric_code Latitude Longitude 1 Bombo UGA 0.5833 32.5333 75000 226 Uganda UG UGA 800 1 32 2 Fort Portal UGA 0.671 30.275 42670 226 Uganda UG UGA 800 1 32 3 Potenza ITA 40.642 15.799 69060 106 Italy IT ITA 380 42.8333 12.8333 4 Campobasso ITA 41.563 14.656 50762 106 Italy IT ITA 380 42.8333 12.8333 5 Aosta ITA 45.737 7.315 34062 106 Italy IT ITA 380 42.8333 12.8333 6 Mariehamn ALD 60.097 19.949 10682 None None None None None None None 7 Ramallah PSE 31.90294 35.20621 24599 167 Palestinian Territory, Occupied PS PSE 275 32 35.25 8 Vatican City VAT 41.90001 12.44781 832 94 Holy See (Vatican City State) VA VAT 336 41.9 12.45 9 Poitier FRA 46.58329 0.33328 85960 72 France FR FRA 250 46 2 10 Clermont-Ferrand FRA 45.77998 3.08001 233050 72 France FR FRA 250 46 2 In\u00a0[30]: Copied! <pre>%%sql\n\nSELECT COUNT(country) FROM (\n    SELECT country FROM cities\n    INTERSECT \n    SELECT \"Alpha3_code\" FROM countries\n) AS intersection_result;\n</pre> %%sql  SELECT COUNT(country) FROM (     SELECT country FROM cities     INTERSECT      SELECT \"Alpha3_code\" FROM countries ) AS intersection_result; <pre> * postgresql://postgres:***@localhost/sdb\n1 rows affected.\n</pre> Out[30]: count 196 In\u00a0[31]: Copied! <pre>%%sql\n\nSELECT COUNT(country) FROM (\n    SELECT country FROM cities\n    UNION \n    SELECT \"Alpha3_code\" FROM countries\n) AS union_result;\n</pre> %%sql  SELECT COUNT(country) FROM (     SELECT country FROM cities     UNION      SELECT \"Alpha3_code\" FROM countries ) AS union_result; <pre> * postgresql://postgres:***@localhost/sdb\n1 rows affected.\n</pre> Out[31]: count 247 In\u00a0[32]: Copied! <pre>%%sql\n\nSELECT COUNT(country) AS difference_result  FROM cities\nWHERE country NOT IN (SELECT \"Alpha3_code\" FROM countries);\n</pre> %%sql  SELECT COUNT(country) AS difference_result  FROM cities WHERE country NOT IN (SELECT \"Alpha3_code\" FROM countries);  <pre> * postgresql://postgres:***@localhost/sdb\n1 rows affected.\n</pre> Out[32]: difference_result 5 In\u00a0[33]: Copied! <pre>%%sql\n\nSELECT COUNT(name), country \nFROM cities \nGROUP BY country \nORDER BY COUNT(name) DESC\nLIMIT 10\n</pre> %%sql  SELECT COUNT(name), country  FROM cities  GROUP BY country  ORDER BY COUNT(name) DESC LIMIT 10 <pre> * postgresql://postgres:***@localhost/sdb\n10 rows affected.\n</pre> Out[33]: count country 114 USA 100 CHN 81 RUS 69 IND 46 BRA 45 CAN 40 ATA 36 AUS 30 FRA 27 MEX In\u00a0[34]: Copied! <pre>%%sql\n\nSELECT countries.\"Country\", COUNT(name)\nFROM cities\nLEFT JOIN countries ON cities.country = countries.\"Alpha3_code\"\nGROUP BY countries.\"Country\"\nORDER BY COUNT(name) DESC\nLIMIT 10\n</pre> %%sql  SELECT countries.\"Country\", COUNT(name) FROM cities LEFT JOIN countries ON cities.country = countries.\"Alpha3_code\" GROUP BY countries.\"Country\" ORDER BY COUNT(name) DESC LIMIT 10 <pre> * postgresql://postgres:***@localhost/sdb\n10 rows affected.\n</pre> Out[34]: Country count United States 114 China 100 Russia 81 India 69 Brazil 46 Canada 45 Antarctica 40 Australia 36 France 30 Mexico 27 In\u00a0[35]: Copied! <pre>%%sql \n\nSELECT COUNT(name), countries.\"Country\"\nFROM cities\nLEFT JOIN countries ON cities.country = countries.\"Alpha3_code\"\nGROUP BY countries.\"Country\"\nHAVING COUNT(name) &gt; 40\nORDER BY COUNT(name) DESC\n</pre> %%sql   SELECT COUNT(name), countries.\"Country\" FROM cities LEFT JOIN countries ON cities.country = countries.\"Alpha3_code\" GROUP BY countries.\"Country\" HAVING COUNT(name) &gt; 40 ORDER BY COUNT(name) DESC  <pre> * postgresql://postgres:***@localhost/sdb\n6 rows affected.\n</pre> Out[35]: count Country 114 United States 100 China 81 Russia 69 India 46 Brazil 45 Canada In\u00a0[36]: Copied! <pre>%%sql \n\nSELECT COUNT(name), country\nFROM cities\nGROUP BY country\nHAVING COUNT(name) &gt; 40\nORDER BY COUNT(name) DESC\n</pre> %%sql   SELECT COUNT(name), country FROM cities GROUP BY country HAVING COUNT(name) &gt; 40 ORDER BY COUNT(name) DESC <pre> * postgresql://postgres:***@localhost/sdb\n6 rows affected.\n</pre> Out[36]: count country 114 USA 100 CHN 81 RUS 69 IND 46 BRA 45 CAN In\u00a0[37]: Copied! <pre>%%sql\n\nSELECT name, population,\nCASE\n    WHEN CAST(population AS INTEGER) &gt; 10000000 THEN 'Megacity'\n    WHEN CAST(population AS INTEGER) &gt; 1000000 THEN 'Large city'\n    ELSE 'Small city'\nEND AS category\nFROM cities\nLIMIT 20\n</pre> %%sql  SELECT name, population, CASE     WHEN CAST(population AS INTEGER) &gt; 10000000 THEN 'Megacity'     WHEN CAST(population AS INTEGER) &gt; 1000000 THEN 'Large city'     ELSE 'Small city' END AS category FROM cities LIMIT 20 <pre> * postgresql://postgres:***@localhost/sdb\n20 rows affected.\n</pre> Out[37]: name population category Bombo 75000 Small city Fort Portal 42670 Small city Potenza 69060 Small city Campobasso 50762 Small city Aosta 34062 Small city Mariehamn 10682 Small city Ramallah 24599 Small city Vatican City 832 Small city Poitier 85960 Small city Clermont-Ferrand 233050 Small city Besancon 128426 Small city Artigas Base 60 Small city Chipata 85963 Small city Jinja 301619 Small city Arua 250000 Small city Mbale 402368 Small city Moroto 371 Small city Masaka 65373 Small city Mbarara 83700 Small city Otjiwarongo 24815 Small city In\u00a0[38]: Copied! <pre>%%sql\n\nSELECT *\nINTO cities_usa\nFROM cities\nWHERE country = 'USA'\n</pre> %%sql  SELECT * INTO cities_usa FROM cities WHERE country = 'USA' <pre> * postgresql://postgres:***@localhost/sdb\n(psycopg2.errors.DuplicateTable) relation \"cities_usa\" already exists\n\n[SQL: SELECT *\nINTO cities_usa\nFROM cities\nWHERE country = 'USA']\n(Background on this error at: http://sqlalche.me/e/14/f405)\n</pre> In\u00a0[39]: Copied! <pre>%%sql\n\nSELECT * FROM cities LIMIT 10 -- This is a comment;\n</pre> %%sql  SELECT * FROM cities LIMIT 10 -- This is a comment; <pre> * postgresql://postgres:***@localhost/sdb\n10 rows affected.\n</pre> Out[39]: id name country latitude longitude population 1 Bombo UGA 0.5833 32.5333 75000 2 Fort Portal UGA 0.671 30.275 42670 3 Potenza ITA 40.642 15.799 69060 4 Campobasso ITA 41.563 14.656 50762 5 Aosta ITA 45.737 7.315 34062 6 Mariehamn ALD 60.097 19.949 10682 7 Ramallah PSE 31.90294 35.20621 24599 8 Vatican City VAT 41.90001 12.44781 832 9 Poitier FRA 46.58329 0.33328 85960 10 Clermont-Ferrand FRA 45.77998 3.08001 233050"},{"location":"PostSQL/02_SQL_in_Notebook/#connecting-to-the-database","title":"Connecting to the database\u00b6","text":""},{"location":"PostSQL/02_SQL_in_Notebook/#the-sql-select-statement","title":"The SQL SELECT statement\u00b6","text":""},{"location":"PostSQL/02_SQL_in_Notebook/#the-where-clause","title":"The WHERE Clause\u00b6","text":""},{"location":"PostSQL/02_SQL_in_Notebook/#sql-joins","title":"SQL Joins\u00b6","text":"<p>Reference: https://www.w3schools.com/sql/sql_join.asp</p> <p>Here are the different types of the JOINs in SQL:</p> <ul> <li><p>(INNER) JOIN: Returns records that have matching values in both tables</p> </li> <li><p>LEFT (OUTER) JOIN: Returns all records from the left table, and the matched records from the right table</p> </li> <li><p>RIGHT (OUTER) JOIN: Returns all records from the right table, and the matched records from the left table</p> </li> <li><p>FULL (OUTER) JOIN: Returns all records when there is a match in either left or right table</p> </li> </ul> <p></p>"},{"location":"PostSQL/02_SQL_in_Notebook/#inner-join","title":"Inner Join\u00b6","text":""},{"location":"PostSQL/02_SQL_in_Notebook/#left-join","title":"Left Join\u00b6","text":""},{"location":"PostSQL/02_SQL_in_Notebook/#right-join","title":"Right Join\u00b6","text":""},{"location":"PostSQL/02_SQL_in_Notebook/#full-join","title":"Full Join\u00b6","text":""},{"location":"PostSQL/02_SQL_in_Notebook/#union-and-intersection","title":"Union and Intersection\u00b6","text":""},{"location":"PostSQL/02_SQL_in_Notebook/#aggregation","title":"Aggregation\u00b6","text":""},{"location":"PostSQL/02_SQL_in_Notebook/#group-by","title":"Group By\u00b6","text":""},{"location":"PostSQL/02_SQL_in_Notebook/#having","title":"Having\u00b6","text":""},{"location":"PostSQL/02_SQL_in_Notebook/#conditional-statements","title":"Conditional statements\u00b6","text":""},{"location":"PostSQL/02_SQL_in_Notebook/#saving-results","title":"Saving results\u00b6","text":""},{"location":"PostSQL/02_SQL_in_Notebook/#sql-comments","title":"SQL Comments\u00b6","text":""},{"location":"PostSQL/02_SQL_in_Notebook/#single-line-coments","title":"Single line coments\u00b6","text":""},{"location":"PostSQL/03_Spatial_Function_PostGIS/","title":"03-Spatial function in PostGIS","text":"In\u00a0[2]: Copied! <pre>import os\n</pre> import os In\u00a0[1]: Copied! <pre>%load_ext sql\n</pre> %load_ext sql In\u00a0[3]: Copied! <pre>host = \"localhost\"\ndatabase = \"nyc\"\nuser = os.getenv('SQL_USER')\npassword = os.getenv('SQL_PASSWORD')\n\nconnection_string = f\"postgresql://{user}:{password}@{host}/{database}\"\n%sql $connection_string\n</pre> host = \"localhost\" database = \"nyc\" user = os.getenv('SQL_USER') password = os.getenv('SQL_PASSWORD')  connection_string = f\"postgresql://{user}:{password}@{host}/{database}\" %sql $connection_string Out[3]: <pre>'Connected: postgres@nyc'</pre> <p>A quick a way to check columns from a table</p> In\u00a0[4]: Copied! <pre>%%sql \n\nSELECT * FROM nyc_neighborhoods WHERE FALSE\n</pre> %%sql   SELECT * FROM nyc_neighborhoods WHERE FALSE <pre> * postgresql://postgres:***@localhost/nyc\n0 rows affected.\n</pre> Out[4]: id geom boroname name In\u00a0[5]: Copied! <pre>%%sql \n\nSELECT id, boroname, name from nyc_neighborhoods LIMIT 10\n</pre> %%sql   SELECT id, boroname, name from nyc_neighborhoods LIMIT 10 <pre> * postgresql://postgres:***@localhost/nyc\n10 rows affected.\n</pre> Out[5]: id boroname name 1 Brooklyn Bensonhurst 2 Manhattan East Village 3 Manhattan West Village 4 The Bronx Throggs Neck 5 The Bronx Wakefield-Williamsbridge 6 Queens Auburndale 7 Manhattan Battery Park 8 Manhattan Carnegie Hill 9 Staten Island Mariners Harbor 10 Staten Island Rossville <p>Check PostGIS version</p> In\u00a0[6]: Copied! <pre>%%sql\n\nSELECT postgis_full_version()\n</pre> %%sql  SELECT postgis_full_version() <pre> * postgresql://postgres:***@localhost/nyc\n1 rows affected.\n</pre> Out[6]: postgis_full_version POSTGIS=\"3.4.1 3.4.1\" [EXTENSION] PGSQL=\"150\" GEOS=\"3.12.1-CAPI-1.18.1\" PROJ=\"8.2.1 NETWORK_ENABLED=OFF URL_ENDPOINT=https://cdn.proj.org USER_WRITABLE_DIRECTORY=C:\\WINDOWS\\ServiceProfiles\\NetworkService\\AppData\\Local/proj DATABASE_PATH=C:\\Program Files\\PostgreSQL\\15\\share\\contrib\\postgis-3.4\\proj\\proj.db\" LIBXML=\"2.9.14\" LIBJSON=\"0.12\" LIBPROTOBUF=\"1.2.1\" WAGYU=\"0.5.0 (Internal)\" <p>What are the names of all the neighborhoods in New York City?</p> In\u00a0[8]: Copied! <pre>%%sql\n\nSELECT name FROM nyc_neighborhoods LIMIT 10\n</pre> %%sql  SELECT name FROM nyc_neighborhoods LIMIT 10 <pre> * postgresql://postgres:***@localhost/nyc\n10 rows affected.\n</pre> Out[8]: name Bensonhurst East Village West Village Throggs Neck Wakefield-Williamsbridge Auburndale Battery Park Carnegie Hill Mariners Harbor Rossville <p>What are the names of all the neighborhoods in Brooklyn?</p> In\u00a0[10]: Copied! <pre>%%sql\n\nSELECT name\nFROM nyc_neighborhoods\nWHERE boroname = 'Brooklyn' LIMIT 10\n</pre> %%sql  SELECT name FROM nyc_neighborhoods WHERE boroname = 'Brooklyn' LIMIT 10 <pre> * postgresql://postgres:***@localhost/nyc\n10 rows affected.\n</pre> Out[10]: name Bensonhurst Bay Ridge Boerum Hill Cobble Hill Downtown Sunset Park Borough Park East Brooklyn Flatbush Park Slope <p>What is the number of letters in the names of all the neighborhoods in Brooklyn?</p> In\u00a0[13]: Copied! <pre>%%sql\n\nSELECT char_length(name) AS name_length, COUNT(*) AS count\nFROM nyc_neighborhoods\nWHERE boroname = 'Brooklyn'\nGROUP BY char_length(name)\nORDER BY name_length;\n</pre> %%sql  SELECT char_length(name) AS name_length, COUNT(*) AS count FROM nyc_neighborhoods WHERE boroname = 'Brooklyn' GROUP BY char_length(name) ORDER BY name_length; <pre> * postgresql://postgres:***@localhost/nyc\n9 rows affected.\n</pre> Out[13]: name_length count 8 5 9 2 10 2 11 5 12 3 13 2 15 1 18 2 24 1 <p>What is the average number of letters and standard deviation of number of letters in the names of all the neighborhoods in Brooklyn?</p> In\u00a0[14]: Copied! <pre>%%sql\n\nSELECT avg(char_length(name)) AS mean, stddev(char_length(name)) AS std\nFROM nyc_neighborhoods\nWHERE boroname = 'Brooklyn'\n</pre> %%sql  SELECT avg(char_length(name)) AS mean, stddev(char_length(name)) AS std FROM nyc_neighborhoods WHERE boroname = 'Brooklyn' <pre> * postgresql://postgres:***@localhost/nyc\n1 rows affected.\n</pre> Out[14]: mean std 11.7391304347826087 3.9105613559407395 <p>What is the average number of letters in the names of all the neighborhoods in New York City, reported by borough?</p> In\u00a0[15]: Copied! <pre>%%sql\n\nSELECT boroname, avg(char_length(name)) AS mean, stddev(char_length(name)) AS std\nFROM nyc_neighborhoods\nGROUP BY boroname\n</pre> %%sql  SELECT boroname, avg(char_length(name)) AS mean, stddev(char_length(name)) AS std FROM nyc_neighborhoods GROUP BY boroname <pre> * postgresql://postgres:***@localhost/nyc\n5 rows affected.\n</pre> Out[15]: boroname mean std Queens 11.6666666666666667 5.0057438272815975 Brooklyn 11.7391304347826087 3.9105613559407395 Staten Island 12.2916666666666667 5.2043390480959474 The Bronx 12.0416666666666667 3.6651017740975152 Manhattan 11.8214285714285714 4.3123729948325257 In\u00a0[16]: Copied! <pre>%%sql\n\nSELECT * FROM nyc_census_blocks WHERE FALSE\n</pre> %%sql  SELECT * FROM nyc_census_blocks WHERE FALSE <pre> * postgresql://postgres:***@localhost/nyc\n0 rows affected.\n</pre> Out[16]: id geom blkid popn_total popn_white popn_black popn_nativ popn_asian popn_other boroname <p>What is the population of the City of New York?</p> In\u00a0[17]: Copied! <pre>%%sql \n\nSELECT Sum(popn_total) AS population\nFROM nyc_census_blocks\n</pre> %%sql   SELECT Sum(popn_total) AS population FROM nyc_census_blocks <pre> * postgresql://postgres:***@localhost/nyc\n1 rows affected.\n</pre> Out[17]: population 8175032 <p>What is the population of the Bronx?</p> In\u00a0[18]: Copied! <pre>%%sql \n\nSELECT SUM(popn_total) AS population\nFROM nyc_census_blocks\nWHERE boroname = 'The Bronx'\n</pre> %%sql   SELECT SUM(popn_total) AS population FROM nyc_census_blocks WHERE boroname = 'The Bronx' <pre> * postgresql://postgres:***@localhost/nyc\n1 rows affected.\n</pre> Out[18]: population 1385108 <p>For each borough, what percentage of the population is white?</p> In\u00a0[19]: Copied! <pre>%%sql\n\nSELECT boroname, 100 * SUM(popn_white) / SUM(popn_total) AS white_pct\nFrom nyc_census_blocks\nGROUP BY boroname\n</pre> %%sql  SELECT boroname, 100 * SUM(popn_white) / SUM(popn_total) AS white_pct From nyc_census_blocks GROUP BY boroname <pre> * postgresql://postgres:***@localhost/nyc\n5 rows affected.\n</pre> Out[19]: boroname white_pct Queens 39.7220773945910130 Brooklyn 42.8011737932686549 The Bronx 27.9037446899447552 Manhattan 57.4493039480462811 Staten Island 72.8942034860154033 In\u00a0[21]: Copied! <pre>%%sql\n\nCREATE TABLE geometries (name varchar, geom geometry);\n\nINSERT INTO geometries VALUES\n  ('Point', 'POINT(0 0)'),\n  ('Linestring', 'LINESTRING(0 0, 1 1, 2 1, 2 2)'),\n  ('Polygon', 'POLYGON((0 0, 1 0, 1 1, 0 1, 0 0))'),\n  ('PolygonWithHole', 'POLYGON((0 0, 10 0, 10 10, 0 10, 0 0),(1 1, 1 2, 2 2, 2 1, 1 1))'),\n  ('Collection', 'GEOMETRYCOLLECTION(POINT(2 0),POLYGON((0 0, 1 0, 1 1, 0 1, 0 0)))');\n</pre> %%sql  CREATE TABLE geometries (name varchar, geom geometry);  INSERT INTO geometries VALUES   ('Point', 'POINT(0 0)'),   ('Linestring', 'LINESTRING(0 0, 1 1, 2 1, 2 2)'),   ('Polygon', 'POLYGON((0 0, 1 0, 1 1, 0 1, 0 0))'),   ('PolygonWithHole', 'POLYGON((0 0, 10 0, 10 10, 0 10, 0 0),(1 1, 1 2, 2 2, 2 1, 1 1))'),   ('Collection', 'GEOMETRYCOLLECTION(POINT(2 0),POLYGON((0 0, 1 0, 1 1, 0 1, 0 0)))'); <pre> * postgresql://postgres:***@localhost/nyc\n(psycopg2.errors.DuplicateTable) relation \"geometries\" already exists\n\n[SQL: CREATE TABLE geometries (name varchar, geom geometry);]\n(Background on this error at: http://sqlalche.me/e/14/f405)\n</pre> <ul> <li><code>ST_AsText</code>: convert geometry to text</li> </ul> In\u00a0[22]: Copied! <pre>%%sql\nSELECT name, ST_AsText(geom) FROM geometries;\n</pre> %%sql SELECT name, ST_AsText(geom) FROM geometries; <pre> * postgresql://postgres:***@localhost/nyc\n5 rows affected.\n</pre> Out[22]: name st_astext Point POINT(0 0) Linestring LINESTRING(0 0,1 1,2 1,2 2) Polygon POLYGON((0 0,1 0,1 1,0 1,0 0)) PolygonWithHole POLYGON((0 0,10 0,10 10,0 10,0 0),(1 1,1 2,2 2,2 1,1 1)) Collection GEOMETRYCOLLECTION(POINT(2 0),POLYGON((0 0,1 0,1 1,0 1,0 0))) In\u00a0[24]: Copied! <pre>%%sql \n\nSELECT * FROM spatial_ref_sys LIMIT 5\n</pre> %%sql   SELECT * FROM spatial_ref_sys LIMIT 5 <pre> * postgresql://postgres:***@localhost/nyc\n5 rows affected.\n</pre> Out[24]: srid auth_name auth_srid srtext proj4text 2000 EPSG 2000 PROJCS[\"Anguilla 1957 / British West Indies Grid\",GEOGCS[\"Anguilla 1957\",DATUM[\"Anguilla_1957\",SPHEROID[\"Clarke 1880 (RGS)\",6378249.145,293.465,AUTHORITY[\"EPSG\",\"7012\"]],AUTHORITY[\"EPSG\",\"6600\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4600\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",-62],PARAMETER[\"scale_factor\",0.9995],PARAMETER[\"false_easting\",400000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"2000\"]] +proj=tmerc +lat_0=0 +lon_0=-62 +k=0.9995000000000001 +x_0=400000 +y_0=0 +ellps=clrk80 +units=m +no_defs  2001 EPSG 2001 PROJCS[\"Antigua 1943 / British West Indies Grid\",GEOGCS[\"Antigua 1943\",DATUM[\"Antigua_1943\",SPHEROID[\"Clarke 1880 (RGS)\",6378249.145,293.465,AUTHORITY[\"EPSG\",\"7012\"]],TOWGS84[-255,-15,71,0,0,0,0],AUTHORITY[\"EPSG\",\"6601\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4601\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",-62],PARAMETER[\"scale_factor\",0.9995],PARAMETER[\"false_easting\",400000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"2001\"]] +proj=tmerc +lat_0=0 +lon_0=-62 +k=0.9995000000000001 +x_0=400000 +y_0=0 +ellps=clrk80 +towgs84=-255,-15,71,0,0,0,0 +units=m +no_defs  2002 EPSG 2002 PROJCS[\"Dominica 1945 / British West Indies Grid\",GEOGCS[\"Dominica 1945\",DATUM[\"Dominica_1945\",SPHEROID[\"Clarke 1880 (RGS)\",6378249.145,293.465,AUTHORITY[\"EPSG\",\"7012\"]],TOWGS84[725,685,536,0,0,0,0],AUTHORITY[\"EPSG\",\"6602\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4602\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",-62],PARAMETER[\"scale_factor\",0.9995],PARAMETER[\"false_easting\",400000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"2002\"]] +proj=tmerc +lat_0=0 +lon_0=-62 +k=0.9995000000000001 +x_0=400000 +y_0=0 +ellps=clrk80 +towgs84=725,685,536,0,0,0,0 +units=m +no_defs  2003 EPSG 2003 PROJCS[\"Grenada 1953 / British West Indies Grid\",GEOGCS[\"Grenada 1953\",DATUM[\"Grenada_1953\",SPHEROID[\"Clarke 1880 (RGS)\",6378249.145,293.465,AUTHORITY[\"EPSG\",\"7012\"]],TOWGS84[72,213.7,93,0,0,0,0],AUTHORITY[\"EPSG\",\"6603\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4603\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",-62],PARAMETER[\"scale_factor\",0.9995],PARAMETER[\"false_easting\",400000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"2003\"]] +proj=tmerc +lat_0=0 +lon_0=-62 +k=0.9995000000000001 +x_0=400000 +y_0=0 +ellps=clrk80 +towgs84=72,213.7,93,0,0,0,0 +units=m +no_defs  2004 EPSG 2004 PROJCS[\"Montserrat 1958 / British West Indies Grid\",GEOGCS[\"Montserrat 1958\",DATUM[\"Montserrat_1958\",SPHEROID[\"Clarke 1880 (RGS)\",6378249.145,293.465,AUTHORITY[\"EPSG\",\"7012\"]],TOWGS84[174,359,365,0,0,0,0],AUTHORITY[\"EPSG\",\"6604\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4604\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",-62],PARAMETER[\"scale_factor\",0.9995],PARAMETER[\"false_easting\",400000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"2004\"]] +proj=tmerc +lat_0=0 +lon_0=-62 +k=0.9995000000000001 +x_0=400000 +y_0=0 +ellps=clrk80 +towgs84=174,359,365,0,0,0,0 +units=m +no_defs  <p>Check the geometry of all tables</p> In\u00a0[25]: Copied! <pre>%%sql\n\nSELECT * FROM geometry_columns\n</pre> %%sql  SELECT * FROM geometry_columns <pre> * postgresql://postgres:***@localhost/nyc\n6 rows affected.\n</pre> Out[25]: f_table_catalog f_table_schema f_table_name f_geometry_column coord_dimension srid type nyc public nyc_subway_stations geom 2 26918 POINT nyc public nyc_neighborhoods geom 2 26918 MULTIPOLYGON nyc public nyc_census_blocks geom 2 26918 MULTIPOLYGON nyc public nyc_homicides geom 2 26918 POINT nyc public nyc_streets geom 2 26918 MULTILINESTRING nyc public geometries geom 2 0 GEOMETRY <ul> <li><code>ST_GeometryType</code>: get the real geometry type</li> <li><code>ST_SRID</code>: get the spatial reference id</li> </ul> In\u00a0[26]: Copied! <pre>%%sql \n\nSELECT name, ST_GeometryType(geom), ST_NDims(geom), ST_SRID(geom)\n  FROM geometries;\n</pre> %%sql   SELECT name, ST_GeometryType(geom), ST_NDims(geom), ST_SRID(geom)   FROM geometries; <pre> * postgresql://postgres:***@localhost/nyc\n5 rows affected.\n</pre> Out[26]: name st_geometrytype st_ndims st_srid Point ST_Point 2 0 Linestring ST_LineString 2 0 Polygon ST_Polygon 2 0 PolygonWithHole ST_Polygon 2 0 Collection ST_GeometryCollection 2 0 In\u00a0[27]: Copied! <pre>%%sql\n\nSELECT ST_AsText(geom)\n  FROM geometries\n  WHERE name = 'Point';\n</pre> %%sql  SELECT ST_AsText(geom)   FROM geometries   WHERE name = 'Point'; <pre> * postgresql://postgres:***@localhost/nyc\n1 rows affected.\n</pre> Out[27]: st_astext POINT(0 0) <p>Some of the specific spatial functions for working with points are:</p> <ul> <li><code>ST_X(geometry)</code> returns the X ordinate</li> <li><code>ST_Y(geometry)</code> returns the Y ordinate</li> </ul> <p>So, we can read the ordinates from a point like this:</p> In\u00a0[28]: Copied! <pre>%%sql\n\nSELECT ST_X(geom), ST_Y(geom)\n  FROM geometries\n  WHERE name = 'Point';\n</pre> %%sql  SELECT ST_X(geom), ST_Y(geom)   FROM geometries   WHERE name = 'Point'; <pre> * postgresql://postgres:***@localhost/nyc\n1 rows affected.\n</pre> Out[28]: st_x st_y 0.0 0.0 In\u00a0[29]: Copied! <pre>%%sql\n\nSELECT name, ST_AsText(geom)\n  FROM nyc_subway_stations\n  LIMIT 10;\n</pre> %%sql  SELECT name, ST_AsText(geom)   FROM nyc_subway_stations   LIMIT 10; <pre> * postgresql://postgres:***@localhost/nyc\n10 rows affected.\n</pre> Out[29]: name st_astext Cortlandt St POINT(583521.854408956 4507077.862599085) Rector St POINT(583324.4866324601 4506805.373160211) South Ferry POINT(583304.1823994748 4506069.654048115) 138th St POINT(590250.10594797 4518558.019924332) 149th St POINT(590454.7399891173 4519145.719617855) 149th St POINT(590465.8934191109 4519168.697483203) 161st St POINT(590573.169495527 4520214.766177284) 167th St POINT(591252.8314104103 4520950.353355553) 167th St POINT(590946.3972262995 4521077.318976877) 170th St POINT(591583.6111452815 4521434.846626811) In\u00a0[30]: Copied! <pre>%%sql\n\nSELECT name, ST_AsText(geom) AS geometry, ST_X(geom) AS X, ST_Y(geom) AS Y\n  FROM nyc_subway_stations\n  LIMIT 10;\n</pre> %%sql  SELECT name, ST_AsText(geom) AS geometry, ST_X(geom) AS X, ST_Y(geom) AS Y   FROM nyc_subway_stations   LIMIT 10; <pre> * postgresql://postgres:***@localhost/nyc\n10 rows affected.\n</pre> Out[30]: name geometry x y Cortlandt St POINT(583521.854408956 4507077.862599085) 583521.854408956 4507077.862599085 Rector St POINT(583324.4866324601 4506805.373160211) 583324.4866324601 4506805.373160211 South Ferry POINT(583304.1823994748 4506069.654048115) 583304.1823994748 4506069.654048115 138th St POINT(590250.10594797 4518558.019924332) 590250.10594797 4518558.019924332 149th St POINT(590454.7399891173 4519145.719617855) 590454.7399891173 4519145.719617855 149th St POINT(590465.8934191109 4519168.697483203) 590465.8934191109 4519168.697483203 161st St POINT(590573.169495527 4520214.766177284) 590573.169495527 4520214.766177284 167th St POINT(591252.8314104103 4520950.353355553) 591252.8314104103 4520950.353355553 167th St POINT(590946.3972262995 4521077.318976877) 590946.3972262995 4521077.318976877 170th St POINT(591583.6111452815 4521434.846626811) 591583.6111452815 4521434.846626811 In\u00a0[31]: Copied! <pre>%%sql\n\nSELECT ST_AsText(geom)\n  FROM geometries\n  WHERE name = 'Linestring';\n</pre> %%sql  SELECT ST_AsText(geom)   FROM geometries   WHERE name = 'Linestring'; <pre> * postgresql://postgres:***@localhost/nyc\n1 rows affected.\n</pre> Out[31]: st_astext LINESTRING(0 0,1 1,2 1,2 2) <p>Some of the specific spatial functions for working with linestrings are:</p> <ul> <li><code>ST_Length(geometry) </code>returns the length of the linestring</li> <li><code>ST_StartPoint(geometry)</code> returns the first coordinate as a point</li> <li><code>ST_EndPoint(geometry)</code> returns the last coordinate as a point</li> <li><code>ST_NPoints(geometry)</code> returns the number of coordinates in the linestring</li> </ul> <p>So, the length of our linestring is:</p> In\u00a0[32]: Copied! <pre>%%sql \n\nSELECT ST_Length(geom)\n  FROM geometries\n  WHERE name = 'Linestring';\n</pre> %%sql   SELECT ST_Length(geom)   FROM geometries   WHERE name = 'Linestring'; <pre> * postgresql://postgres:***@localhost/nyc\n1 rows affected.\n</pre> Out[32]: st_length 3.414213562373095 In\u00a0[33]: Copied! <pre>%%sql\n\nSELECT ST_AsText(geom)\n  FROM geometries\n  WHERE name LIKE 'Polygon%';\n</pre> %%sql  SELECT ST_AsText(geom)   FROM geometries   WHERE name LIKE 'Polygon%'; <pre> * postgresql://postgres:***@localhost/nyc\n2 rows affected.\n</pre> Out[33]: st_astext POLYGON((0 0,1 0,1 1,0 1,0 0)) POLYGON((0 0,10 0,10 10,0 10,0 0),(1 1,1 2,2 2,2 1,1 1)) <p>Some of the specific spatial functions for working with polygons are:</p> <ul> <li><code>ST_Area(geometry)</code> returns the area of the polygons</li> <li><code>ST_NRings(geometry)</code> returns the number of rings (usually 1, more of there are holes)</li> <li><code>ST_ExteriorRing(geometry)</code> returns the outer ring as a linestring</li> <li><code>ST_InteriorRingN(geometry,n)</code> returns a specified interior ring as a linestring</li> <li><code>ST_Perimeter(geometry)</code> returns the length of all the rings</li> </ul> <p>We can calculate the area of our polygons using the area function:</p> In\u00a0[34]: Copied! <pre>%%sql\n\nSELECT name, ST_Area(geom)\n  FROM geometries\n  WHERE name LIKE 'Polygon%';\n</pre> %%sql  SELECT name, ST_Area(geom)   FROM geometries   WHERE name LIKE 'Polygon%'; <pre> * postgresql://postgres:***@localhost/nyc\n2 rows affected.\n</pre> Out[34]: name st_area Polygon 1.0 PolygonWithHole 99.0 <p>Collections are another concept that shows up in GIS software more than in generic graphics software.</p> <ul> <li>They are useful for directly modeling real world objects as spatial objects.</li> <li>For example, how to model a lot that is split by a right-of-way?<ul> <li>As a MultiPolygon, with a part on either side of the right-of-way.</li> </ul> </li> </ul> In\u00a0[35]: Copied! <pre>%%sql\n\nSELECT name, ST_AsText(geom)\n  FROM geometries\n  WHERE name = 'Collection';\n</pre> %%sql  SELECT name, ST_AsText(geom)   FROM geometries   WHERE name = 'Collection'; <pre> * postgresql://postgres:***@localhost/nyc\n1 rows affected.\n</pre> Out[35]: name st_astext Collection GEOMETRYCOLLECTION(POINT(2 0),POLYGON((0 0,1 0,1 1,0 1,0 0))) <p>Some of the specific spatial functions for working with collections are:</p> <ul> <li><code>ST_NumGeometries(geometry)</code> returns the number of parts in the collection</li> <li><code>ST_GeometryN(geometry,n)</code> returns the specified part</li> <li><code>ST_Area(geometry)</code> returns the total area of all polygonal parts</li> <li><code>ST_Length(geometry)</code> returns the total length of all linear parts</li> </ul> <p>In addition to the <code>ST_GeometryFromText</code> function, there are many other ways to create geometries from well-known text or similar formatted inputs:</p> In\u00a0[36]: Copied! <pre>%%sql\n\n-- Using ST_GeomFromText with the SRID parameter\nSELECT ST_GeomFromText('POINT(2 2)',4326);\n</pre> %%sql  -- Using ST_GeomFromText with the SRID parameter SELECT ST_GeomFromText('POINT(2 2)',4326); <pre> * postgresql://postgres:***@localhost/nyc\n1 rows affected.\n</pre> Out[36]: st_geomfromtext 0101000020E610000000000000000000400000000000000040 In\u00a0[37]: Copied! <pre>%%sql\n-- Using ST_GeomFromText without the SRID parameter\nSELECT ST_SetSRID(ST_GeomFromText('POINT(2 2)'),4326);\n</pre> %%sql -- Using ST_GeomFromText without the SRID parameter SELECT ST_SetSRID(ST_GeomFromText('POINT(2 2)'),4326); <pre> * postgresql://postgres:***@localhost/nyc\n1 rows affected.\n</pre> Out[37]: st_setsrid 0101000020E610000000000000000000400000000000000040 In\u00a0[38]: Copied! <pre>%%sql\n-- Using a ST_Make* function\nSELECT ST_SetSRID(ST_MakePoint(2, 2), 4326);\n</pre> %%sql -- Using a ST_Make* function SELECT ST_SetSRID(ST_MakePoint(2, 2), 4326); <pre> * postgresql://postgres:***@localhost/nyc\n1 rows affected.\n</pre> Out[38]: st_setsrid 0101000020E610000000000000000000400000000000000040 <p>PostgreSQL casting syntax <code>value::[Target Type]</code></p> In\u00a0[39]: Copied! <pre>%%sql\n-- Using PostgreSQL casting syntax and ISO WKT\nSELECT ST_SetSRID('POINT(2 2)'::geometry, 4326);\n</pre> %%sql -- Using PostgreSQL casting syntax and ISO WKT SELECT ST_SetSRID('POINT(2 2)'::geometry, 4326); <pre> * postgresql://postgres:***@localhost/nyc\n1 rows affected.\n</pre> Out[39]: st_setsrid 0101000020E610000000000000000000400000000000000040 In\u00a0[40]: Copied! <pre>%%sql\n-- Using PostgreSQL casting syntax and extended WKT\nSELECT 'SRID=4326;POINT(2 2)'::geometry;\n</pre> %%sql -- Using PostgreSQL casting syntax and extended WKT SELECT 'SRID=4326;POINT(2 2)'::geometry; <pre> * postgresql://postgres:***@localhost/nyc\n1 rows affected.\n</pre> Out[40]: geometry 0101000020E610000000000000000000400000000000000040 In\u00a0[41]: Copied! <pre>%%sql\n\nSELECT 0.9::text;\n</pre> %%sql  SELECT 0.9::text; <pre> * postgresql://postgres:***@localhost/nyc\n1 rows affected.\n</pre> Out[41]: text 0.9 <p>Less trivially, this SQL converts a WKT string into a geometry:</p> In\u00a0[42]: Copied! <pre>%%sql\n\nSELECT 'POINT(0 0)'::geometry;\n</pre> %%sql  SELECT 'POINT(0 0)'::geometry; <pre> * postgresql://postgres:***@localhost/nyc\n1 rows affected.\n</pre> Out[42]: geometry 010100000000000000000000000000000000000000 <p>One thing to note about using casting to create geometries: unless you specify the SRID, you will get a geometry with an unknown SRID. You can specify the SRID using the \u201cextended\u201d well-known text form, which includes an SRID block at the front:</p> In\u00a0[43]: Copied! <pre>%%sql\n\nSELECT 'SRID=4326;POINT(0 0)'::geometry;\n</pre> %%sql  SELECT 'SRID=4326;POINT(0 0)'::geometry; <pre> * postgresql://postgres:***@localhost/nyc\n1 rows affected.\n</pre> Out[43]: geometry 0101000020E610000000000000000000000000000000000000"},{"location":"PostSQL/03_Spatial_Function_PostGIS/#reference","title":"Reference\u00b6","text":"<ul> <li>Introduction to PostGIS</li> <li>Using SQL with Geodatabases</li> </ul>"},{"location":"PostSQL/03_Spatial_Function_PostGIS/#connecting-to-the-database","title":"Connecting to the database\u00b6\u00b6","text":""},{"location":"PostSQL/03_Spatial_Function_PostGIS/#simple-sql","title":"Simple SQL\u00b6","text":""},{"location":"PostSQL/03_Spatial_Function_PostGIS/#hands-on-nyc-project","title":"Hands-ON NYC Project\u00b6","text":""},{"location":"PostSQL/03_Spatial_Function_PostGIS/#nyc-neighborhoods","title":"NYC Neighborhoods\u00b6","text":""},{"location":"PostSQL/03_Spatial_Function_PostGIS/#nyc-census-blocks","title":"NYC Census Blocks\u00b6","text":""},{"location":"PostSQL/03_Spatial_Function_PostGIS/#working-with-geometries","title":"Working with Geometries\u00b6","text":""},{"location":"PostSQL/03_Spatial_Function_PostGIS/#creating-geometries","title":"Creating geometries\u00b6","text":"<ul> <li><p>Built-in type of geometries in PostGIS</p> <p></p> </li> <li><p>View is the virtual table created by query</p> <p></p> </li> </ul>"},{"location":"PostSQL/03_Spatial_Function_PostGIS/#metadata-tables","title":"Metadata tables\u00b6","text":""},{"location":"PostSQL/03_Spatial_Function_PostGIS/#points","title":"Points\u00b6","text":""},{"location":"PostSQL/03_Spatial_Function_PostGIS/#linestrings","title":"Linestrings\u00b6","text":"<ul> <li>A linestring is a path between locations. It takes the form of an ordered series of two or more points.</li> <li>Roads and rivers are typically represented as linestrings.</li> <li>A linestring is said to be closed if it starts and ends on the same point.</li> <li>It is said to be simple if it does not cross or touch itself (except at its endpoints if it is closed).</li> <li>A linestring can be both closed and simple.</li> </ul>"},{"location":"PostSQL/03_Spatial_Function_PostGIS/#polygons","title":"Polygons\u00b6","text":"<ul> <li>A polygon is a representation of an area.</li> <li>The outer boundary of the polygon is represented by a ring. This ring is a linestring that is both closed and simple as defined above.</li> <li>Holes within the polygon are also represented by rings.</li> </ul>"},{"location":"PostSQL/03_Spatial_Function_PostGIS/#collections","title":"Collections\u00b6","text":"<p>There are four collection types, which group multiple simple geometries into sets.</p> <ul> <li><code>MultiPoint</code>, a collection of points</li> <li><code>MultiLineString</code>, a collection of linestrings</li> <li><code>MultiPolygon</code>, a collection of polygons</li> <li><code>GeometryCollection</code>, a heterogeneous collection of any geometry (including other collections)</li> </ul>"},{"location":"PostSQL/03_Spatial_Function_PostGIS/#geometry-input-and-output","title":"Geometry Input and Output\u00b6","text":"<p>Within the database, geometries are stored on disk in a format only used by the PostGIS program.</p> <ul> <li><p>In order for external programs to insert and retrieve useful geometries, they need to be converted into a format that other applications can understand.</p> </li> <li><p>Fortunately, PostGIS supports emitting and consuming geometries in a large number of formats:</p> </li> <li><p>Well-known text (WKT)</p> <ul> <li><code>ST_GeomFromText(text, srid)</code> returns geometry</li> <li><code>ST_AsText(geometry)</code> returns text</li> <li><code>ST_AsEWKT(geometry)</code> returns text</li> </ul> </li> <li><p>Well-known binary (WKB)</p> <ul> <li><p><code>ST_GeomFromWKB(bytea)</code> returns geometry</p> </li> <li><p><code>ST_AsBinary(geometry)</code> returns bytea</p> </li> <li><p><code>ST_AsEWKB(geometry)</code> returns bytea</p> </li> </ul> </li> <li><p>Geographic Mark-up Language (GML)</p> <ul> <li><p><code>ST_GeomFromGML(text)</code> returns geometry</p> </li> <li><p><code>ST_AsGML(geometry)</code> returns text</p> </li> </ul> </li> <li><p>Keyhole Mark-up Language (KML)</p> <ul> <li><p><code>ST_GeomFromKML(text)</code> returns geometry</p> </li> <li><p><code>ST_AsKML(geometry)</code> returns text</p> </li> </ul> </li> <li><p>GeoJSON</p> <ul> <li><code>ST_AsGeoJSON(geometry)</code> returns text</li> </ul> </li> <li><p>Scalable Vector Graphics (SVG)</p> <ul> <li><code>ST_AsSVG(geometry)</code> returns text</li> </ul> </li> </ul>"},{"location":"PostSQL/03_Spatial_Function_PostGIS/#type-casting-in-sql","title":"Type Casting in SQL\u00b6","text":"<ul> <li><p>The <code>WKT</code> strings we\u2019ve see so far have been of type \u2018text\u2019 and we have been converting them to type \u2018geometry\u2019 using PostGIS functions like <code>ST_GeomFromText()</code>.</p> </li> <li><p>PostgreSQL includes a short form syntax that allows data to be converted from one type to another, the casting syntax, oldata::newtype. So for example, this SQL converts a double into a text string.</p> </li> </ul>"},{"location":"PostSQL/03_Spatial_Function_PostGIS/#function-list","title":"Function List\u00b6","text":"<ul> <li><p><code>ST_Area</code>: Returns the area of the surface if it is a polygon or multi-polygon. For \u201cgeometry\u201d type area is in SRID units. For \u201cgeography\u201d area is in square meters.</p> </li> <li><p><code>ST_AsText</code>: Returns the Well-Known Text (WKT) representation of the geometry/geography without SRID metadata.</p> </li> <li><p><code>ST_AsBinary</code>: Returns the Well-Known Binary (WKB) representation of the geometry/geography without SRID meta data.</p> </li> <li><p><code>ST_EndPoint</code>: Returns the last point of a LINESTRING geometry as a POINT.</p> </li> <li><p><code>ST_AsEWKB</code>: Returns the Well-Known Binary (WKB) representation of the geometry with SRID meta data.</p> </li> <li><p><code>ST_AsEWKT</code>: Returns the Well-Known Text (WKT) representation of the geometry with SRID meta data.</p> </li> <li><p><code>ST_AsGeoJSON</code>: Returns the geometry as a GeoJSON element.</p> </li> <li><p><code>ST_AsGML</code>: Returns the geometry as a GML version 2 or 3 element.</p> </li> <li><p><code>ST_AsKML</code>: Returns the geometry as a KML element. Several variants. Default version=2, default precision=15.</p> </li> <li><p><code>ST_AsSVG</code>: Returns a Geometry in SVG path data given a geometry or geography object.</p> </li> <li><p><code>ST_ExteriorRing</code>: Returns a line string representing the exterior ring of the POLYGON geometry. Return NULL if the geometry is not a polygon. Will not work with MULTIPOLYGON</p> </li> <li><p><code>ST_GeometryN</code>: Returns the 1-based Nth geometry if the geometry is a GEOMETRYCOLLECTION, MULTIPOINT, MULTILINESTRING, MULTICURVE or MULTIPOLYGON. Otherwise, return NULL.</p> </li> <li><p><code>ST_GeomFromGML</code>: Takes as input GML representation of geometry and outputs a PostGIS geometry object.</p> </li> <li><p><code>ST_GeomFromKML</code>: Takes as input KML representation of geometry and outputs a PostGIS geometry object</p> </li> <li><p><code>ST_GeomFromText</code>: Returns a specified ST_Geometry value from Well-Known Text representation (WKT).</p> </li> <li><p><code>ST_GeomFromWKB</code>: Creates a geometry instance from a Well-Known Binary geometry representation (WKB) and optional SRID.</p> </li> <li><p><code>ST_GeometryType</code>: Returns the geometry type of the ST_Geometry value.</p> </li> <li><p><code>ST_InteriorRingN</code>: Returns the Nth interior linestring ring of the polygon geometry. Return NULL if the geometry is not a polygon or the given N is out of range.</p> </li> <li><p><code>ST_Length</code>: Returns the 2d length of the geometry if it is a linestring or multilinestring. geometry are in units of spatial reference and geogra</p> </li> </ul>"},{"location":"PostSQL/04-Spatial-Relationships/","title":"04-Spatial relationship query","text":"In\u00a0[1]: Copied! <pre>import os\n%load_ext sql\n</pre> import os %load_ext sql In\u00a0[2]: Copied! <pre>host = \"localhost\"\ndatabase = \"nyc\"\nuser = os.getenv('SQL_USER')\npassword = os.getenv('SQL_PASSWORD')\nconnection_string = f\"postgresql://{user}:{password}@{host}/{database}\"\n%sql $connection_string\n</pre> host = \"localhost\" database = \"nyc\" user = os.getenv('SQL_USER') password = os.getenv('SQL_PASSWORD') connection_string = f\"postgresql://{user}:{password}@{host}/{database}\" %sql $connection_string Out[2]: <pre>'Connected: postgres@nyc'</pre> In\u00a0[3]: Copied! <pre>%%sql \n\nSELECT * from nyc_subway_stations LIMIT 5\n</pre> %%sql   SELECT * from nyc_subway_stations LIMIT 5 <pre> * postgresql://postgres:***@localhost/nyc\n5 rows affected.\n</pre> Out[3]: id geom objectid name alt_name cross_st long_name label borough nghbhd routes transfers color express closed 376 010100002026690000371775B5C3CE2141CBD2347771315141 1 Cortlandt St None Church St Cortlandt St (R,W) Manhattan Cortlandt St (R,W) Manhattan None R,W R,W YELLOW None None 2 010100002026690000CBE327F938CD21415EDBE1572D315141 2 Rector St None None Rector St (1) Manhattan Rector St (1) Manhattan None 1 1 RED None None 1 010100002026690000C676635D10CD2141A0ECDB6975305141 3 South Ferry None None South Ferry (1) Manhattan South Ferry (1) Manhattan None 1 1 RED None None 125 010100002026690000F4CF3E3654032241B5704681A73C5141 4 138th St Grand Concourse Grand Concourse 138th St / Grand Concourse (4,5) Bronx 138th St / Grand Concourse (4,5) Bronx None 4,5 4,5 GREEN None None 126 01010000202669000084DADF7AED0422410C380E6E3A3D5141 5 149th St Grand Concourse Grand Concourse 149th St / Grand Concourse (4) Bronx 149th St / Grand Concourse (4) Bronx None 4 2,4,5 GREEN express None <p>First, let\u2019s retrieve a representation of a point from our nyc_subway_stations table. We\u2019ll take just the entry for \u2018Broad St\u2019.</p> In\u00a0[4]: Copied! <pre>%%sql\n\nSELECT name, geom, ST_AsText(geom)\nFROM nyc_subway_stations\nWHERE name = 'Broad St';\n</pre> %%sql  SELECT name, geom, ST_AsText(geom) FROM nyc_subway_stations WHERE name = 'Broad St'; <pre> * postgresql://postgres:***@localhost/nyc\n1 rows affected.\n</pre> Out[4]: name geom st_astext Broad St 0101000020266900000EEBD4CF27CF2141BC17D69516315141 POINT(583571.9059213118 4506714.341192182) <p>Then, plug the geometry representation back into an ST_Equals test:</p> In\u00a0[5]: Copied! <pre>%%sql\n\nSELECT name\nFROM nyc_subway_stations\nWHERE ST_Equals(geom, '0101000020266900000EEBD4CF27CF2141BC17D69516315141');\n</pre> %%sql  SELECT name FROM nyc_subway_stations WHERE ST_Equals(geom, '0101000020266900000EEBD4CF27CF2141BC17D69516315141'); <pre> * postgresql://postgres:***@localhost/nyc\n1 rows affected.\n</pre> Out[5]: name Broad St <p>Let\u2019s take our Broad Street subway station and determine its neighborhood using the ST_Intersects function:</p> In\u00a0[6]: Copied! <pre>%%sql\n\nSELECT name, ST_AsText(geom)\nFROM nyc_subway_stations\nWHERE name = 'Broad St';\n</pre> %%sql  SELECT name, ST_AsText(geom) FROM nyc_subway_stations WHERE name = 'Broad St'; <pre> * postgresql://postgres:***@localhost/nyc\n1 rows affected.\n</pre> Out[6]: name st_astext Broad St POINT(583571.9059213118 4506714.341192182) In\u00a0[7]: Copied! <pre>%%sql\n\nSELECT name, boroname\nFROM nyc_neighborhoods\nWHERE ST_Intersects(geom, ST_GeomFromText('POINT(583571 4506714)',26918));\n</pre> %%sql  SELECT name, boroname FROM nyc_neighborhoods WHERE ST_Intersects(geom, ST_GeomFromText('POINT(583571 4506714)',26918)); <pre> * postgresql://postgres:***@localhost/nyc\n1 rows affected.\n</pre> Out[7]: name boroname Financial District Manhattan In\u00a0[8]: Copied! <pre>%%sql\n\nSELECT ST_Distance(\n  ST_GeometryFromText('POINT(0 5)'),\n  ST_GeometryFromText('LINESTRING(-2 2, 2 2)'));\n</pre> %%sql  SELECT ST_Distance(   ST_GeometryFromText('POINT(0 5)'),   ST_GeometryFromText('LINESTRING(-2 2, 2 2)')); <pre> * postgresql://postgres:***@localhost/nyc\n1 rows affected.\n</pre> Out[8]: st_distance 3.0 <p>For testing whether two objects are within a distance of one another, the <code>ST_DWithin</code> function provides an index-accelerated <code>true/false</code> test.</p> <ul> <li>This is useful for questions like \u201chow many trees are within a 500 meter buffer of the road?\u201d.</li> <li>You don\u2019t have to calculate an actual buffer, you just have to test the distance relationship.</li> </ul> <p></p> <p>Using our Broad Street subway station again, we can find the streets nearby (within 10 meters of) the subway stop:</p> In\u00a0[9]: Copied! <pre>%%sql\n\nSELECT name\nFROM nyc_streets\nWHERE ST_DWithin(\n        geom,\n        ST_GeomFromText('POINT(583571 4506714)',26918),\n        10\n      );\n</pre> %%sql  SELECT name FROM nyc_streets WHERE ST_DWithin(         geom,         ST_GeomFromText('POINT(583571 4506714)',26918),         10       ); <pre> * postgresql://postgres:***@localhost/nyc\n3 rows affected.\n</pre> Out[9]: name Broad St Wall St Nassau St <p>And we can verify the answer on a map. The Broad St station is actually at the intersection of Wall, Broad and Nassau Streets. </p>"},{"location":"PostSQL/04-Spatial-Relationships/#reference","title":"Reference\u00b6","text":"<ul> <li>Introduction to PostGIS</li> <li>Using SQL with Geodatabases</li> <li>Relational functions for ST_Geometry</li> </ul>"},{"location":"PostSQL/04-Spatial-Relationships/#connecting-to-the-database","title":"Connecting to the database\u00b6","text":""},{"location":"PostSQL/04-Spatial-Relationships/#spatial-relationships","title":"Spatial Relationships\u00b6","text":"<ul> <li><p>So far we have only used spatial functions that measure (<code>ST_Area</code>, <code>ST_Length</code>), serialize (<code>ST_GeomFromText</code>) or deserialize (<code>ST_AsGML</code>) geometries. What these functions have in common is that they only work on one geometry at a time.</p> </li> <li><p>Spatial databases are powerful because they not only store geometry, they also have the ability to compare relationships between geometries.</p> <ul> <li>Questions like \u201cWhich are the closest bike racks to a park?\u201d or \u201cWhere are the intersections of subway lines and streets?\u201d can only be answered by comparing geometries representing the bike racks, streets, and subway lines.</li> </ul> </li> <li><p>The OGC standard defines the following set of methods to compare geometries.</p> </li> </ul>"},{"location":"PostSQL/04-Spatial-Relationships/#st_equals","title":"ST_Equals\u00b6","text":"<ul> <li><code>ST_Equals(geometry A, geometry B)</code>tests the spatial equality of two geometries. </li> </ul> <p><code>ST_Equals</code> returns <code>TRUE</code> if two geometries of the same type have identical x,y coordinate values, i.e. if the second shape is equal (identical) to the first shape.</p>"},{"location":"PostSQL/04-Spatial-Relationships/#st_intersects-st_disjoint-st_crosses-and-st_overlaps","title":"ST_Intersects, ST_Disjoint, ST_Crosses and ST_Overlaps\u00b6","text":"<ul> <li><code>ST_Intersects</code>, <code>ST_Crosses</code>, and <code>ST_Overlaps</code> test whether the interiors of the geometries intersect.</li> </ul> <p><code>ST_Intersects(geometry A, geometry B)</code> returns t (TRUE) if the two shapes have any space in common, i.e., if their boundaries or interiors intersect.</p> <p></p> <p>The opposite of <code>ST_Intersects</code> is <code>ST_Disjoint(geometry A , geometry B)</code>.</p> <ul> <li>If two geometries are disjoint, they do not intersect, and vice-versa. In fact,<ul> <li>it is often more efficient to test \u201cnot intersects\u201d than to test \u201cdisjoint\u201d because the intersects tests can be spatially indexed, while the disjoint test cannot.</li> </ul> </li> </ul> <p></p> <p>For <code>multipoint/polygon</code>, <code>multipoint/linestring</code>, <code>linestring/linestring</code>, <code>linestring/polygon</code>, and <code>linestring/multipolygon</code> comparisons, <code>ST_Crosses(geometry A, geometry B)</code> returns t (TRUE) if the intersection results in a geometry whose dimension is one less than the maximum dimension of the two source geometries and the intersection set is interior to both source geometries.</p> <p></p> <p><code>ST_Overlaps(geometry A, geometry B) </code>compares two geometries of the same dimension and returns TRUE if their intersection set results in a geometry different from both but of the same dimension.</p>"},{"location":"PostSQL/04-Spatial-Relationships/#st_touches","title":"ST_Touches\u00b6","text":"<p><code>ST_Touches</code> tests whether two geometries touch at their boundaries, but do not intersect in their interiors</p> <p></p> <p><code>ST_Touches(geometry A, geometry B)</code> returns <code>TRUE</code> if either of the geometries\u2019 boundaries intersect or if only one of the geometry\u2019s interiors intersects the other\u2019s boundary.</p>"},{"location":"PostSQL/04-Spatial-Relationships/#st_within-and-st_contains","title":"ST_Within and ST_Contains\u00b6","text":"<p><code>ST_Within</code> and <code>ST_Contains</code> test whether one geometry is fully within the other.</p> <p></p> <p><code>ST_Within(geometry A , geometry B)</code> returns <code>TRUE</code> if the first geometry is completely within the second geometry. <code>ST_Within</code> tests for the exact opposite result of <code>ST_Contains</code>.</p> <p><code>ST_Contains(geometry A, geometry B)</code> returns <code>TRUE</code> if the second geometry is completely contained by the first geometry.</p>"},{"location":"PostSQL/04-Spatial-Relationships/#st_distance-and-st_dwithin","title":"ST_Distance and ST_DWithin\u00b6","text":"<p>An extremely common GIS question is \u201cfind all the stuff within distance X of this other stuff\u201d.</p> <p>The <code>ST_Distance(geometry A, geometry B)</code> calculates the shortest distance between two geometries and returns it as a float. This is useful for actually reporting back the distance between objects.</p>"},{"location":"PostSQL/04-Spatial-Relationships/#function-list","title":"Function List\u00b6","text":"<ul> <li><p><code>ST_Contains(geometry A, geometry B)</code>: Returns true if and only if no points of B lie in the exterior of A, and at least one point of the interior of B lies in the interior of A.</p> </li> <li><p><code>ST_Crosses(geometry A, geometry B)</code>: Returns TRUE if the supplied geometries have some, but not all, interior points in common.</p> </li> <li><p><code>ST_Disjoint(geometry A , geometry B)</code>: Returns TRUE if the Geometries do not \u201cspatially intersect\u201d - if they do not share any space together.</p> </li> <li><p><code>ST_Distance(geometry A, geometry B)</code>: Returns the 2-dimensional cartesian minimum distance (based on spatial ref) between two geometries in projected units.</p> </li> <li><p><code>ST_DWithin(geometry A, geometry B, radius)</code>: Returns true if the geometries are within the specified distance (radius) of one another.</p> </li> <li><p><code>ST_Equals(geometry A, geometry B)</code>: Returns true if the given geometries represent the same geometry. Directionality is ignored.</p> </li> <li><p><code>ST_Intersects(geometry A, geometry B)</code>: Returns TRUE if the Geometries/Geography \u201cspatially intersect\u201d - (share any portion of space) and FALSE if they don\u2019t (they are Disjoint).</p> </li> <li><p><code>ST_Overlaps(geometry A, geometry B)</code>: Returns TRUE if the Geometries share space, are of the same dimension, but are not completely contained by each other.</p> </li> <li><p><code>ST_Touches(geometry A, geometry B)</code>: Returns TRUE if the geometries have at least one point in common, but their interiors do not intersect.</p> </li> <li><p><code>ST_Within(geometry A , geometry B)</code>: Returns true if the geometry A is completely inside geometry B</p> </li> </ul>"},{"location":"PostSQL/05-Projecting-Data/","title":"05-Projecting data","text":"In\u00a0[1]: Copied! <pre>import os\n%load_ext sql\n</pre> import os %load_ext sql In\u00a0[2]: Copied! <pre>host = \"localhost\"\ndatabase = \"nyc\"\nuser = os.getenv(\"SQL_USER\")\npassword = os.getenv(\"SQL_PASSWORD\")\n</pre> host = \"localhost\" database = \"nyc\" user = os.getenv(\"SQL_USER\") password = os.getenv(\"SQL_PASSWORD\") In\u00a0[3]: Copied! <pre>connection_string = f\"postgresql://{user}:{password}@{host}/{database}\"\n%sql $connection_string\n</pre> connection_string = f\"postgresql://{user}:{password}@{host}/{database}\" %sql $connection_string Out[3]: <pre>'Connected: postgres@nyc'</pre> In\u00a0[4]: Copied! <pre>%%sql \n\nSELECT * from nyc_subway_stations LIMIT 5\n</pre> %%sql   SELECT * from nyc_subway_stations LIMIT 5 <pre> * postgresql://postgres:***@localhost/nyc\n5 rows affected.\n</pre> Out[4]: id geom objectid name alt_name cross_st long_name label borough nghbhd routes transfers color express closed 376 010100002026690000371775B5C3CE2141CBD2347771315141 1 Cortlandt St None Church St Cortlandt St (R,W) Manhattan Cortlandt St (R,W) Manhattan None R,W R,W YELLOW None None 2 010100002026690000CBE327F938CD21415EDBE1572D315141 2 Rector St None None Rector St (1) Manhattan Rector St (1) Manhattan None 1 1 RED None None 1 010100002026690000C676635D10CD2141A0ECDB6975305141 3 South Ferry None None South Ferry (1) Manhattan South Ferry (1) Manhattan None 1 1 RED None None 125 010100002026690000F4CF3E3654032241B5704681A73C5141 4 138th St Grand Concourse Grand Concourse 138th St / Grand Concourse (4,5) Bronx 138th St / Grand Concourse (4,5) Bronx None 4,5 4,5 GREEN None None 126 01010000202669000084DADF7AED0422410C380E6E3A3D5141 5 149th St Grand Concourse Grand Concourse 149th St / Grand Concourse (4) Bronx 149th St / Grand Concourse (4) Bronx None 4 2,4,5 GREEN express None <p>We can confirm the <code>SRID</code> of our data with the <code>ST_SRID</code> function:</p> In\u00a0[5]: Copied! <pre>%%sql\n\nSELECT ST_SRID(geom) FROM nyc_streets LIMIT 1;\n</pre> %%sql  SELECT ST_SRID(geom) FROM nyc_streets LIMIT 1; <pre> * postgresql://postgres:***@localhost/nyc\n1 rows affected.\n</pre> Out[5]: st_srid 26918 <p>And what is definition of \u201c26918\u201d?</p> <ul> <li>As we saw in loading data section, the definition is contained in the <code>spatial_ref_sys</code> table. In fact, two definitions are there.<ul> <li>The <code>\u201cwell-known text\u201d (WKT)</code> definition is in the <code>srtext</code> column,</li> <li>and there is a second definition in \u201c<code>proj.4</code>\u201d format in the <code>proj4text</code> column.</li> </ul> </li> </ul> In\u00a0[6]: Copied! <pre>%%sql\n\nSELECT * FROM spatial_ref_sys \nWHERE srid = 26918\n</pre> %%sql  SELECT * FROM spatial_ref_sys  WHERE srid = 26918 <pre> * postgresql://postgres:***@localhost/nyc\n1 rows affected.\n</pre> Out[6]: srid auth_name auth_srid srtext proj4text 26918 EPSG 26918 PROJCS[\"NAD83 / UTM zone 18N\",GEOGCS[\"NAD83\",DATUM[\"North_American_Datum_1983\",SPHEROID[\"GRS 1980\",6378137,298.257222101,AUTHORITY[\"EPSG\",\"7019\"]],TOWGS84[0,0,0,0,0,0,0],AUTHORITY[\"EPSG\",\"6269\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4269\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",-75],PARAMETER[\"scale_factor\",0.9996],PARAMETER[\"false_easting\",500000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"26918\"]] +proj=utm +zone=18 +datum=NAD83 +units=m +no_defs  <p>In fact, for the internal PostGIS re-projection calculations, it is the contents of the <code>proj4text</code> column that are used. For our 26918 projection, here is the <code>proj.4 text:</code></p> In\u00a0[7]: Copied! <pre>%%sql\n\nSELECT proj4text FROM spatial_ref_sys WHERE srid = 26918\n</pre> %%sql  SELECT proj4text FROM spatial_ref_sys WHERE srid = 26918 <pre> * postgresql://postgres:***@localhost/nyc\n1 rows affected.\n</pre> Out[7]: proj4text +proj=utm +zone=18 +datum=NAD83 +units=m +no_defs  <p>In practice, both the <code>srtext</code> and the <code>proj4text</code> columns are important:</p> <ul> <li>the <code>srtext</code> column is used by external programs like <code>GeoServer</code>, <code>QGIS</code>, and <code>FME</code> and others;</li> <li>the <code>proj4text</code> column is used internally.</li> </ul> <p>Taken together, a coordinate and an <code>SRID</code> define a location on the globe. Without an <code>SRID</code>, a coordinate is just an abstract notion.</p> <ul> <li>A \u201cCartesian\u201d coordinate plane is defined as a \u201cflat\u201d coordinate system placed on the surface of Earth.</li> <li>Because PostGIS functions work on such a plane, comparison operations require that both geometries be represented in the same <code>SRID</code>.</li> </ul> <p>If you feed in geometries with differing SRIDs you will just get an error:</p> In\u00a0[8]: Copied! <pre>%%sql\n\nSELECT ST_Equals(\n         ST_GeomFromText('POINT(0 0)', 4326),\n         ST_GeomFromText('POINT(0 0)', 26918)\n         )\n</pre> %%sql  SELECT ST_Equals(          ST_GeomFromText('POINT(0 0)', 4326),          ST_GeomFromText('POINT(0 0)', 26918)          ) <pre> * postgresql://postgres:***@localhost/nyc\n</pre> <pre>\n---------------------------------------------------------------------------\nInternalError_                            Traceback (most recent call last)\nFile d:\\Anaconda3\\envs\\mybase\\Lib\\site-packages\\sqlalchemy\\engine\\base.py:1705, in Connection._execute_context(self, dialect, constructor, statement, parameters, execution_options, *args, **kw)\n   1704     if not evt_handled:\n-&gt; 1705         self.dialect.do_execute(\n   1706             cursor, statement, parameters, context\n   1707         )\n   1709 if self._has_events or self.engine._has_events:\n\nFile d:\\Anaconda3\\envs\\mybase\\Lib\\site-packages\\sqlalchemy\\engine\\default.py:681, in DefaultDialect.do_execute(self, cursor, statement, parameters, context)\n    680 def do_execute(self, cursor, statement, parameters, context=None):\n--&gt; 681     cursor.execute(statement, parameters)\n\nInternalError_: ST_Equals: Operation on mixed SRID geometries (Point, 4326) != (Point, 26918)\n\n\nThe above exception was the direct cause of the following exception:\n\nInternalError                             Traceback (most recent call last)\nCell In[8], line 1\n----&gt; 1 get_ipython().run_cell_magic('sql', '', \"\\nSELECT ST_Equals(\\n         ST_GeomFromText('POINT(0 0)', 4326),\\n         ST_GeomFromText('POINT(0 0)', 26918)\\n         )\\n\")\n\nFile d:\\Anaconda3\\envs\\mybase\\Lib\\site-packages\\IPython\\core\\interactiveshell.py:2478, in InteractiveShell.run_cell_magic(self, magic_name, line, cell)\n   2476 with self.builtin_trap:\n   2477     args = (magic_arg_s, cell)\n-&gt; 2478     result = fn(*args, **kwargs)\n   2480 # The code below prevents the output from being displayed\n   2481 # when using magics with decodator @output_can_be_silenced\n   2482 # when the last Python token in the expression is a ';'.\n   2483 if getattr(fn, magic.MAGIC_OUTPUT_CAN_BE_SILENCED, False):\n\nFile d:\\Anaconda3\\envs\\mybase\\Lib\\site-packages\\sql\\magic.py:95, in SqlMagic.execute(self, line, cell, local_ns)\n     92     return self._persist_dataframe(parsed['sql'], conn, user_ns)\n     94 try:\n---&gt; 95     result = sql.run.run(conn, parsed['sql'], self, user_ns)\n     97     if result is not None and not isinstance(result, str) and self.column_local_vars:\n     98         #Instead of returning values, set variables directly in the\n     99         #users namespace. Variable names given by column names\n    101         if self.autopandas:\n\nFile d:\\Anaconda3\\envs\\mybase\\Lib\\site-packages\\sql\\run.py:340, in run(conn, sql, config, user_namespace)\n    338 else:\n    339     txt = sqlalchemy.sql.text(statement)\n--&gt; 340     result = conn.session.execute(txt, user_namespace)\n    341 _commit(conn=conn, config=config)\n    342 if result and config.feedback:\n\nFile d:\\Anaconda3\\envs\\mybase\\Lib\\site-packages\\sqlalchemy\\engine\\base.py:1200, in Connection.execute(self, statement, *multiparams, **params)\n   1196     util.raise_(\n   1197         exc.ObjectNotExecutableError(statement), replace_context=err\n   1198     )\n   1199 else:\n-&gt; 1200     return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)\n\nFile d:\\Anaconda3\\envs\\mybase\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py:313, in ClauseElement._execute_on_connection(self, connection, multiparams, params, execution_options)\n    309 def _execute_on_connection(\n    310     self, connection, multiparams, params, execution_options\n    311 ):\n    312     if self.supports_execution:\n--&gt; 313         return connection._execute_clauseelement(\n    314             self, multiparams, params, execution_options\n    315         )\n    316     else:\n    317         raise exc.ObjectNotExecutableError(self)\n\nFile d:\\Anaconda3\\envs\\mybase\\Lib\\site-packages\\sqlalchemy\\engine\\base.py:1389, in Connection._execute_clauseelement(self, elem, multiparams, params, execution_options)\n   1377 compiled_cache = execution_options.get(\n   1378     \"compiled_cache\", self.engine._compiled_cache\n   1379 )\n   1381 compiled_sql, extracted_params, cache_hit = elem._compile_w_cache(\n   1382     dialect=dialect,\n   1383     compiled_cache=compiled_cache,\n   (...)\n   1387     linting=self.dialect.compiler_linting | compiler.WARN_LINTING,\n   1388 )\n-&gt; 1389 ret = self._execute_context(\n   1390     dialect,\n   1391     dialect.execution_ctx_cls._init_compiled,\n   1392     compiled_sql,\n   1393     distilled_params,\n   1394     execution_options,\n   1395     compiled_sql,\n   1396     distilled_params,\n   1397     elem,\n   1398     extracted_params,\n   1399     cache_hit=cache_hit,\n   1400 )\n   1401 if has_events:\n   1402     self.dispatch.after_execute(\n   1403         self,\n   1404         elem,\n   (...)\n   1408         ret,\n   1409     )\n\nFile d:\\Anaconda3\\envs\\mybase\\Lib\\site-packages\\sqlalchemy\\engine\\base.py:1748, in Connection._execute_context(self, dialect, constructor, statement, parameters, execution_options, *args, **kw)\n   1745             branched.close()\n   1747 except BaseException as e:\n-&gt; 1748     self._handle_dbapi_exception(\n   1749         e, statement, parameters, cursor, context\n   1750     )\n   1752 return result\n\nFile d:\\Anaconda3\\envs\\mybase\\Lib\\site-packages\\sqlalchemy\\engine\\base.py:1929, in Connection._handle_dbapi_exception(self, e, statement, parameters, cursor, context)\n   1927     util.raise_(newraise, with_traceback=exc_info[2], from_=e)\n   1928 elif should_wrap:\n-&gt; 1929     util.raise_(\n   1930         sqlalchemy_exception, with_traceback=exc_info[2], from_=e\n   1931     )\n   1932 else:\n   1933     util.raise_(exc_info[1], with_traceback=exc_info[2])\n\nFile d:\\Anaconda3\\envs\\mybase\\Lib\\site-packages\\sqlalchemy\\util\\compat.py:211, in raise_(***failed resolving arguments***)\n    208     exception.__cause__ = replace_context\n    210 try:\n--&gt; 211     raise exception\n    212 finally:\n    213     # credit to\n    214     # https://cosmicpercolator.com/2016/01/13/exception-leaks-in-python-2-and-3/\n    215     # as the __traceback__ object creates a cycle\n    216     del exception, replace_context, from_, with_traceback\n\nFile d:\\Anaconda3\\envs\\mybase\\Lib\\site-packages\\sqlalchemy\\engine\\base.py:1705, in Connection._execute_context(self, dialect, constructor, statement, parameters, execution_options, *args, **kw)\n   1703                 break\n   1704     if not evt_handled:\n-&gt; 1705         self.dialect.do_execute(\n   1706             cursor, statement, parameters, context\n   1707         )\n   1709 if self._has_events or self.engine._has_events:\n   1710     self.dispatch.after_cursor_execute(\n   1711         self,\n   1712         cursor,\n   (...)\n   1716         context.executemany,\n   1717     )\n\nFile d:\\Anaconda3\\envs\\mybase\\Lib\\site-packages\\sqlalchemy\\engine\\default.py:681, in DefaultDialect.do_execute(self, cursor, statement, parameters, context)\n    680 def do_execute(self, cursor, statement, parameters, context=None):\n--&gt; 681     cursor.execute(statement, parameters)\n\nInternalError: (psycopg2.errors.InternalError_) ST_Equals: Operation on mixed SRID geometries (Point, 4326) != (Point, 26918)\n\n[SQL: SELECT ST_Equals(\n         ST_GeomFromText('POINT(0 0)', 4326),\n         ST_GeomFromText('POINT(0 0)', 26918)\n         )]\n(Background on this error at: http://sqlalche.me/e/14/2j85)</pre> <p>Be careful of getting too happy with using <code>ST_Transform</code> for on-the-fly conversion.</p> <ul> <li>Spatial indexes are built using <code>SRID</code> of the stored geometries.<ul> <li>If comparison are done in a different <code>SRID</code>, spatial indexes are (often) not used. It is best practice to choose one <code>SRID</code> for all the tables in your database.</li> <li>Only use the transformation function when you are reading or writing data to external applications.</li> </ul> </li> </ul> <p>To convert data from one <code>SRID</code> to another</p> <ol> <li>you must first verify that your geometry has a valid <code>SRID</code>.</li> <li>Since we have already confirmed a valid <code>SRID</code>, we next need the <code>SRID</code> of the projection to transform into. In other words, what is the <code>SRID</code> of geographic coordinates?</li> </ol> <p>The most common SRID for geographic coordinates is <code>4326</code>, which corresponds to \u201clongitude/latitude on the WGS84 spheroid\u201d. You can see the definition at the spatialreference.org site:</p> <ul> <li>http://spatialreference.org/ref/epsg/4326/</li> </ul> <p>You can also pull the definitions from the <code>spatial_ref_sys</code> table:</p> In\u00a0[9]: Copied! <pre>%%sql\n\nSELECT srtext FROM spatial_ref_sys \nWHERE srid = 4326;\n</pre> %%sql  SELECT srtext FROM spatial_ref_sys  WHERE srid = 4326; <pre> * postgresql://postgres:***@localhost/nyc\n1 rows affected.\n</pre> Out[9]: srtext GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]] <p>Let\u2019s convert the coordinates of the \u2018Broad St\u2019 subway station into geographics:</p> In\u00a0[10]: Copied! <pre>%%sql\n\nSELECT ST_AsText(geom)\nFROM nyc_subway_stations \nWHERE name = 'Broad St';\n</pre> %%sql  SELECT ST_AsText(geom) FROM nyc_subway_stations  WHERE name = 'Broad St'; <pre> * postgresql://postgres:***@localhost/nyc\n1 rows affected.\n</pre> Out[10]: st_astext POINT(583571.9059213118 4506714.341192182) In\u00a0[11]: Copied! <pre>%%sql\n\nSELECT ST_AsText(ST_Transform(geom,4326))\nFROM nyc_subway_stations \nWHERE name = 'Broad St';\n</pre> %%sql  SELECT ST_AsText(ST_Transform(geom,4326)) FROM nyc_subway_stations  WHERE name = 'Broad St'; <pre> * postgresql://postgres:***@localhost/nyc\n1 rows affected.\n</pre> Out[11]: st_astext POINT(-74.01067146887341 40.70710481558761) <p>If you load data or create a new geometry without specifying an <code>SRID</code>, the <code>SRID</code> value will be 0.</p> <ul> <li>Recall in geometries, that when we created our geometries table we didn\u2019t specify an <code>SRID</code>.</li> <li>If we query our database, we should expect all the <code>nyc_ </code>tables to have an <code>SRID</code> of <code>26918</code></li> <li>while the geometries table defaulted to an <code>SRID</code> of <code>0</code>.</li> </ul> <p>To view a table\u2019s <code>SRID</code> assignment, query the database\u2019s geometry_columns table.</p> In\u00a0[12]: Copied! <pre>%%sql\n\nSELECT f_table_name AS name, srid \nFROM geometry_columns;\n</pre> %%sql  SELECT f_table_name AS name, srid  FROM geometry_columns; <pre> * postgresql://postgres:***@localhost/nyc\n6 rows affected.\n</pre> Out[12]: name srid nyc_subway_stations 26918 nyc_neighborhoods 26918 nyc_census_blocks 26918 nyc_homicides 26918 nyc_streets 26918 geometries 0 <p>However, if you know what the <code>SRID</code> of the coordinates is supposed to be, you can set it post-facto, using <code>ST_SetSRID</code> on the geometry. Then you will be able to transform the geometry into other systems.</p> In\u00a0[13]: Copied! <pre>%%sql\n\nSELECT ST_AsText(\n ST_Transform(\n   ST_SetSRID(geom,26918),\n 4326)\n)\nFROM geometries;\n</pre> %%sql  SELECT ST_AsText(  ST_Transform(    ST_SetSRID(geom,26918),  4326) ) FROM geometries; <pre> * postgresql://postgres:***@localhost/nyc\n5 rows affected.\n</pre> Out[13]: st_astext POINT(-79.48874388438705 0) LINESTRING(-79.48874388438705 0,-79.48873492539037 0.000009019375921,-79.48872596639353 0.000009019376033,-79.48872596639369 0.000018038752065) POLYGON((-79.48874388438705 0,-79.4887349253903 0,-79.48873492539037 0.000009019375921,-79.4887438843871 0.00000901937581,-79.48874388438705 0)) POLYGON((-79.48874388438705 0,-79.48865429441472 0,-79.48865429442024 0.000090193769243,-79.48874388439259 0.000090193758097,-79.48874388438705 0),(-79.48873492539037 0.000009019375921,-79.48873492539053 0.000018038751842,-79.48872596639369 0.000018038752065,-79.48872596639353 0.000009019376033,-79.48873492539037 0.000009019375921)) GEOMETRYCOLLECTION(POINT(-79.48872596639346 0),POLYGON((-79.48874388438705 0,-79.4887349253903 0,-79.48873492539037 0.000009019375921,-79.4887438843871 0.00000901937581,-79.48874388438705 0)))"},{"location":"PostSQL/05-Projecting-Data/#reference","title":"Reference\u00b6","text":"<ul> <li>Introduction to PostGIS</li> <li>Using SQL with Geodatabases</li> </ul>"},{"location":"PostSQL/05-Projecting-Data/#connecting-to-database","title":"Connecting to database\u00b6","text":""},{"location":"PostSQL/05-Projecting-Data/#check-srid","title":"Check SRID\u00b6","text":"<ul> <li>We\u2019ve already encountered projections when we loaded our <code>nyc</code> data. (Recall that <code>pesky SRID 26918</code>).<ul> <li>Sometimes, however, you need to transform and re-project between spatial reference systems.</li> <li>PostGIS includes built-in support for changing the projection of data, using the <code>ST_Transform(geometry, srid)</code> function.</li> <li>For managing the spatial reference identifiers on geometries, PostGIS provides the <code>ST_SRID(geometry)</code> and <code>ST_SetSRID(geometry, srid)</code> functions.</li> </ul> </li> </ul>"},{"location":"PostSQL/05-Projecting-Data/#comparing-data","title":"Comparing Data\u00b6","text":""},{"location":"PostSQL/05-Projecting-Data/#transforming-data","title":"Transforming Data\u00b6","text":"<p>If we return to our <code>proj4</code> definition for <code>SRID 26918</code>, we can see that our working projection is UTM (Universal Transverse Mercator) of zone 18, with meters as the unit of measurement.</p> <pre><code>+proj=utm +zone=18 +ellps=GRS80 +datum=NAD83 +units=m +no_defs \n</code></pre> <p>Let\u2019s convert some data from our working projection to geographic coordinates \u2013 also known as \u201clongitude/latitude\u201d.</p>"},{"location":"PostSQL/05-Projecting-Data/#function-list","title":"Function List\u00b6","text":"<ul> <li><p><code>ST_AsText</code>: Returns the Well-Known Text (WKT) representation of the geometry/geography without SRID metadata.</p> </li> <li><p><code>ST_SetSRID(geometry, srid)</code>: Sets the SRID on a geometry to a particular integer value.</p> </li> <li><p><code>ST_SRID(geometry)</code>: Returns the spatial reference identifier for the ST_Geometry as defined in spatial_ref_sys table.</p> </li> <li><p><code>ST_Transform(geometry, srid)</code>: Returns a new geometry with its coordinates transformed to the SRID referenced by the integer parameter.</p> </li> </ul>"},{"location":"PostSQL/06-geopandas/","title":"06-Geopandas","text":"In\u00a0[1]: Copied! <pre>import os\nfrom sqlalchemy import create_engine\nfrom sqlalchemy import inspect\nimport geopandas as gpd\n</pre> import os from sqlalchemy import create_engine from sqlalchemy import inspect import geopandas as gpd In\u00a0[2]: Copied! <pre>host = \"localhost\"\ndatabase = \"nyc\"\nuser = os.getenv('SQL_USER')\npassword = os.getenv('SQL_PASSWORD')\n</pre> host = \"localhost\" database = \"nyc\" user = os.getenv('SQL_USER') password = os.getenv('SQL_PASSWORD') In\u00a0[3]: Copied! <pre>connection_string = f\"postgresql://{user}:{password}@{host}/{database}\"\nengine = create_engine(connection_string)\n</pre> connection_string = f\"postgresql://{user}:{password}@{host}/{database}\" engine = create_engine(connection_string) In\u00a0[4]: Copied! <pre>insp = inspect(engine)\ninsp.get_table_names()\n</pre> insp = inspect(engine) insp.get_table_names() Out[4]: <pre>['spatial_ref_sys',\n 'nyc_census_blocks',\n 'nyc_homicides',\n 'nyc_subway_stations',\n 'nyc_streets',\n 'geometries',\n 'nyc_neighborhoods']</pre> In\u00a0[5]: Copied! <pre>sql = 'SELECT * FROM nyc_neighborhoods'\ngdf = gpd.read_postgis(sql, con=engine)\ngdf.head()\n</pre> sql = 'SELECT * FROM nyc_neighborhoods' gdf = gpd.read_postgis(sql, con=engine) gdf.head() Out[5]: id geom boroname name 0 1 MULTIPOLYGON (((582771.426 4495167.427, 584651... Brooklyn Bensonhurst 1 2 MULTIPOLYGON (((585508.753 4509691.267, 586826... Manhattan East Village 2 3 MULTIPOLYGON (((583263.278 4509242.626, 583276... Manhattan West Village 3 4 MULTIPOLYGON (((597640.009 4520272.720, 597647... The Bronx Throggs Neck 4 5 MULTIPOLYGON (((595285.205 4525938.798, 595348... The Bronx Wakefield-Williamsbridge In\u00a0[6]: Copied! <pre>gdf.crs\n</pre> gdf.crs Out[6]: <pre>&lt;Projected CRS: EPSG:26918&gt;\nName: NAD83 / UTM zone 18N\nAxis Info [cartesian]:\n- E[east]: Easting (metre)\n- N[north]: Northing (metre)\nArea of Use:\n- name: North America - between 78\u00b0W and 72\u00b0W - onshore and offshore. Canada - Nunavut; Ontario; Quebec. United States (USA) - Connecticut; Delaware; Maryland; Massachusetts; New Hampshire; New Jersey; New York; North Carolina; Pennsylvania; Virginia; Vermont.\n- bounds: (-78.0, 28.28, -72.0, 84.0)\nCoordinate Operation:\n- name: UTM zone 18N\n- method: Transverse Mercator\nDatum: North American Datum 1983\n- Ellipsoid: GRS 1980\n- Prime Meridian: Greenwich</pre> In\u00a0[7]: Copied! <pre>out_dir = os.path.expanduser('~/Downloads')\nif not os.path.exists(out_dir):\n    os.makedirs(out_dir)\n</pre> out_dir = os.path.expanduser('~/Downloads') if not os.path.exists(out_dir):     os.makedirs(out_dir) In\u00a0[8]: Copied! <pre>out_shp = os.path.join(out_dir, 'nyc_neighborhoods.shp')\ngdf.to_file(out_shp)\n</pre> out_shp = os.path.join(out_dir, 'nyc_neighborhoods.shp') gdf.to_file(out_shp) In\u00a0[9]: Copied! <pre>gdf.crs\n</pre> gdf.crs Out[9]: <pre>&lt;Projected CRS: EPSG:26918&gt;\nName: NAD83 / UTM zone 18N\nAxis Info [cartesian]:\n- E[east]: Easting (metre)\n- N[north]: Northing (metre)\nArea of Use:\n- name: North America - between 78\u00b0W and 72\u00b0W - onshore and offshore. Canada - Nunavut; Ontario; Quebec. United States (USA) - Connecticut; Delaware; Maryland; Massachusetts; New Hampshire; New Jersey; New York; North Carolina; Pennsylvania; Virginia; Vermont.\n- bounds: (-78.0, 28.28, -72.0, 84.0)\nCoordinate Operation:\n- name: UTM zone 18N\n- method: Transverse Mercator\nDatum: North American Datum 1983\n- Ellipsoid: GRS 1980\n- Prime Meridian: Greenwich</pre> In\u00a0[10]: Copied! <pre>gdf = gdf.set_index(\"name\")\ngdf[\"area\"] = gdf.area\ngdf[\"area\"].info\n</pre> gdf = gdf.set_index(\"name\") gdf[\"area\"] = gdf.area gdf[\"area\"].info Out[10]: <pre>&lt;bound method Series.info of name\nBensonhurst                 5.828014e+06\nEast Village                1.632117e+06\nWest Village                1.044615e+06\nThroggs Neck                8.274104e+06\nWakefield-Williamsbridge    6.925334e+06\n                                ...     \nRed Hook                    1.146229e+05\nDouglastown-Little Neck     1.753248e+07\nWhitestone                  2.804182e+04\nSteinway                    1.232809e+06\nRosebank                    4.855008e+04\nName: area, Length: 129, dtype: float64&gt;</pre> In\u00a0[11]: Copied! <pre>gdf['boundary'] = gdf.boundary\ngdf['boundary']\n</pre> gdf['boundary'] = gdf.boundary gdf['boundary'] Out[11]: <pre>name\nBensonhurst                 MULTILINESTRING ((582771.426 4495167.427, 5846...\nEast Village                MULTILINESTRING ((585508.753 4509691.267, 5868...\nWest Village                MULTILINESTRING ((583263.278 4509242.626, 5832...\nThroggs Neck                MULTILINESTRING ((597640.009 4520272.720, 5976...\nWakefield-Williamsbridge    MULTILINESTRING ((595285.205 4525938.798, 5953...\n                                                  ...                        \nRed Hook                    MULTILINESTRING ((584212.898 4502321.474, 5843...\nDouglastown-Little Neck     MULTILINESTRING ((605082.288 4513540.148, 6050...\nWhitestone                  MULTILINESTRING ((600138.493 4516909.499, 6001...\nSteinway                    MULTILINESTRING ((593231.553 4515088.539, 5933...\nRosebank                    MULTILINESTRING ((579051.030 4495284.647, 5790...\nName: boundary, Length: 129, dtype: geometry</pre> In\u00a0[12]: Copied! <pre>gdf['centroid'] = gdf.centroid\ngdf['centroid']\n</pre> gdf['centroid'] = gdf.centroid gdf['centroid'] Out[12]: <pre>name\nBensonhurst                 POINT (584653.928 4495863.485)\nEast Village                POINT (585979.191 4508859.571)\nWest Village                POINT (583832.311 4509898.957)\nThroggs Neck                POINT (599226.101 4519629.728)\nWakefield-Williamsbridge    POINT (596720.653 4527170.627)\n                                         ...              \nRed Hook                    POINT (583382.229 4501563.758)\nDouglastown-Little Neck     POINT (607360.858 4511731.933)\nWhitestone                  POINT (599563.892 4517128.417)\nSteinway                    POINT (592429.851 4515507.528)\nRosebank                    POINT (579260.556 4495409.906)\nName: centroid, Length: 129, dtype: geometry</pre> In\u00a0[13]: Copied! <pre>gdf.plot()\n</pre> gdf.plot() Out[13]: <pre>&lt;Axes: &gt;</pre> In\u00a0[14]: Copied! <pre>gdf.plot(\"area\", legend=True, figsize=(10, 8))\n</pre> gdf.plot(\"area\", legend=True, figsize=(10, 8)) Out[14]: <pre>&lt;Axes: &gt;</pre> In\u00a0[15]: Copied! <pre>gdf = gdf.set_geometry(\"centroid\")\ngdf.plot(\"area\", legend=True,figsize=(10, 8))\n</pre> gdf = gdf.set_geometry(\"centroid\") gdf.plot(\"area\", legend=True,figsize=(10, 8)) Out[15]: <pre>&lt;Axes: &gt;</pre> In\u00a0[16]: Copied! <pre>ax = gdf[\"geom\"].plot(figsize=(10, 8))\ngdf[\"centroid\"].plot(ax=ax, color=\"black\")\n</pre> ax = gdf[\"geom\"].plot(figsize=(10, 8)) gdf[\"centroid\"].plot(ax=ax, color=\"black\") Out[16]: <pre>&lt;Axes: &gt;</pre> In\u00a0[17]: Copied! <pre>gdf = gdf.set_geometry(\"geom\")\n</pre> gdf = gdf.set_geometry(\"geom\") In\u00a0[18]: Copied! <pre>sql = 'SELECT * FROM nyc_neighborhoods'\ngdf = gpd.read_postgis(sql, con=engine)\ngdf_crs = gdf.to_crs(epsg=\"4326\")\ngdf_crs.head()\n</pre> sql = 'SELECT * FROM nyc_neighborhoods' gdf = gpd.read_postgis(sql, con=engine) gdf_crs = gdf.to_crs(epsg=\"4326\") gdf_crs.head() Out[18]: id geom boroname name 0 1 MULTIPOLYGON (((-74.02167 40.60318, -73.99913 ... Brooklyn Bensonhurst 1 2 MULTIPOLYGON (((-73.98734 40.73372, -73.97184 ... Manhattan East Village 2 3 MULTIPOLYGON (((-74.01399 40.72991, -74.01381 ... Manhattan West Village 3 4 MULTIPOLYGON (((-73.84204 40.82767, -73.84190 ... The Bronx Throggs Neck 4 5 MULTIPOLYGON (((-73.86910 40.87898, -73.86831 ... The Bronx Wakefield-Williamsbridge In\u00a0[19]: Copied! <pre>geojson = gdf_crs.__geo_interface__\n</pre> geojson = gdf_crs.__geo_interface__ In\u00a0[20]: Copied! <pre>import geemap\n</pre> import geemap In\u00a0[21]: Copied! <pre>m = geemap.Map(center=[40.7341, -73.9113], zoom=10, ee_initialize=False)\nm\n</pre> m = geemap.Map(center=[40.7341, -73.9113], zoom=10, ee_initialize=False) m Out[21]: <pre>Map(center=[40.7341, -73.9113], controls=(WidgetControl(options=['position', 'transparent_bg'], widget=SearchD\u2026</pre> In\u00a0[22]: Copied! <pre>style = {\n    \"stroke\": True,\n    \"color\": \"#000000\",\n    \"weight\": 2,\n    \"opacity\": 1,\n    \"fill\": True,\n    \"fillColor\": \"#0000ff\",\n    \"fillOpacity\": 0.4,\n}\n\nm.add_geojson(geojson, style=style, layer_name=\"nyc neighborhoods\")\n</pre> style = {     \"stroke\": True,     \"color\": \"#000000\",     \"weight\": 2,     \"opacity\": 1,     \"fill\": True,     \"fillColor\": \"#0000ff\",     \"fillOpacity\": 0.4, }  m.add_geojson(geojson, style=style, layer_name=\"nyc neighborhoods\") In\u00a0[23]: Copied! <pre>sql2 = 'SELECT * FROM nyc_subway_stations'\ngdf_subway = gpd.read_postgis(sql2, con=engine)\ngdf_subway_crs = gdf_subway.to_crs(epsg=\"4326\")\nsubway_geojson = gdf_subway_crs.__geo_interface__\nm.add_geojson(subway_geojson, layer_name=\"nyc subway stations\")\n</pre> sql2 = 'SELECT * FROM nyc_subway_stations' gdf_subway = gpd.read_postgis(sql2, con=engine) gdf_subway_crs = gdf_subway.to_crs(epsg=\"4326\") subway_geojson = gdf_subway_crs.__geo_interface__ m.add_geojson(subway_geojson, layer_name=\"nyc subway stations\")"},{"location":"PostSQL/06-geopandas/#reference","title":"Reference\u00b6","text":"<ul> <li>Introduction to PostGIS</li> <li>Using SQL with Geodatabases</li> </ul>"},{"location":"PostSQL/06-geopandas/#connecting-to-the-database","title":"Connecting to the database\u00b6","text":""},{"location":"PostSQL/06-geopandas/#reading-data-from-postgis","title":"Reading data from PostGIS\u00b6","text":""},{"location":"PostSQL/06-geopandas/#writing-files","title":"Writing files\u00b6","text":""},{"location":"PostSQL/06-geopandas/#measuring-area","title":"Measuring area\u00b6","text":""},{"location":"PostSQL/06-geopandas/#getting-polygon-bounary","title":"Getting polygon bounary\u00b6","text":""},{"location":"PostSQL/06-geopandas/#getting-polygon-centroid","title":"Getting polygon centroid\u00b6","text":""},{"location":"PostSQL/06-geopandas/#making-maps","title":"Making maps\u00b6","text":""},{"location":"PostSQL/06-geopandas/#reprojecting-data","title":"Reprojecting data\u00b6","text":""},{"location":"PostSQL/06-geopandas/#displaying-data-on-an-interative-map","title":"Displaying data on an interative map\u00b6","text":""},{"location":"PostSQL/Certificate/","title":"Certificate","text":""},{"location":"PyQT/01-qt-signals/","title":"01 Signals, Slots and Events","text":""},{"location":"PyQT/01-qt-signals/#getting-started-with-pyqt6","title":"Getting Started with PyQt6\u00b6","text":"<p><code>PyQt6</code> is a set of Python bindings for the <code>Qt</code> application framework.</p> <ul> <li>It allows you to create desktop applications with <code>Python</code>.</li> <li>Reference</li> </ul>"},{"location":"PyQT/01-qt-signals/#installation","title":"Installation\u00b6","text":"<ul> <li><p>Before we start, ensure you have PyQt5 installed. You can install it via pip:</p> <pre>pip install PyQt6\n</pre> </li> </ul>"},{"location":"PyQT/01-qt-signals/#creating-a-simple-window","title":"Creating a Simple Window\u00b6","text":"<p>Let's start by creating a simple window. Create a new Python file (<code>main.py</code> for example) and add the following code:</p> <pre>import sys\nfrom PyQt6.QtWidgets import QApplication,QWidget\n\napp = QApplication(sys.argv)\n\nwindow = QWidget()\nwindow.setWindowTitle(\"Test Demo\")\nwindow.setGeometry(100,100,300,200) # (x,y,width,height)\n\nwindow.show()\n\nsys.exit(app.exec())\n</pre> <ul> <li><code>app = QApplication(sys.argv)</code>: We create an instance of QApplication. <code>sys.argv</code> is a list of command-line arguments.</li> <li><code>window = QWidget()</code>: We create a QWidget instance, which represents our application's main window.</li> <li><code>sys.exit(app.exec())</code>: Start the application's event loop and exit gracefully when it's done.</li> </ul>"},{"location":"PyQT/01-qt-signals/#pyqt6-signals-slots-events","title":"PyQt6 Signals, Slots &amp; Events\u00b6","text":""},{"location":"PyQT/01-qt-signals/#signals-slots","title":"Signals &amp; Slots\u00b6","text":"<p><code>Signals</code> are notifications emitted by widgets when something happens.</p> <ol> <li>That something can be any number of things, from <code>pressing a button</code>, to the <code>text of an input box changing</code>, to the <code>text of the window changing</code>.</li> <li>Many signals are initiated by user action, but this is not a rule.</li> </ol> <p><code>Slots</code> is the name Qt uses for the receivers of <code>signals</code>.</p> <ol> <li><p>In Python, any <code>function</code> (or <code>method</code>) in your application can be used as a <code>slot</code> -- simply by connecting the <code>signal</code> to it.</p> </li> <li><p>If the <code>signal</code> sends data, then the receiving function will receive that data too.</p> </li> <li> <p>Let's take a look at the basics of Qt signals and how you can use them to hook widgets up to make things happen in your apps.</p> <p>We've heard already that signals can also send data to provide more information about what has just happened.</p> <p>The <code>.clicked</code> signal is no exception, also providing a checked (or toggled) state for the button.</p> <p>For normal buttons this is always <code>False</code>, so our first slot ignored this data. However, we can make our button <code>checkable</code> and see the effect.</p> <pre>class MainWindow(QMainWindow):\n    def __init__(self):\n        super().__init__()\n\n        self.button_is_checked = True\n\n        self.setWindowTitle(\"My App\")\n\n        button = QPushButton(\"Press Me!\")\n        button.setCheckable(True)\n        button.clicked.connect(self.the_button_was_toggled)\n        button.setChecked(self.button_is_checked)\n\n        self.setCentralWidget(button)\n\n    def the_button_was_toggled(self, checked):\n        self.button_is_checked = checked\n\n        print(self.button_is_checked)\n</pre>"},{"location":"PyQT/01-qt-signals/#qpushbutton-signals","title":"<code>QPushButton</code> Signals\u00b6","text":"<p>We create a simple custom <code>slot</code> named <code>the_button_was_clicked</code> which accepts the clicked <code>signal</code> from the <code>QPushButton</code>.</p> <pre>import sys\nfrom PyQt6.QtWidgets import QApplication, QMainWindow, QPushButton\n\n\nclass MainWindow(QMainWindow):\n    def __init__(self):\n        super().__init__()\n\n        self.setWindowTitle(\"My App\")\n\n        button = QPushButton(\"Press Me!\")\n        button.setCheckable(True)\n        button.clicked.connect(self.the_button_was_clicked)\n\n        # Set the central widget of the Window.\n        self.setCentralWidget(button)\n\n    def the_button_was_clicked(self):\n        print(\"Clicked!\")\n\n\napp = QApplication(sys.argv)\n\nwindow = MainWindow()\nwindow.show()\n\napp.exec()\n</pre>"},{"location":"PyQT/01-qt-signals/#connecting-widgets-together-directly-not-suggested","title":"Connecting widgets together directly [Not suggested]\u00b6","text":"<p>So far we've seen examples of connecting widget <code>signals</code> to Python <code>methods</code>. When a <code>signal</code> is fired from the widget, our Python <code>method</code> is called and receives the data from the <code>signal</code>.</p> <p>But you don't always need to use a Python <code>function</code> to handle <code>signals</code> -- you can also connect <code>Qt widgets</code> directly to one another.</p> <pre>from PyQt6.QtWidgets import QApplication, QMainWindow, QLabel, QLineEdit, QVBoxLayout, QWidget\n\nimport sys\n\n\nclass MainWindow(QMainWindow):\n    def __init__(self):\n        super().__init__()\n\n        self.setWindowTitle(\"My App\")\n\n        self.label = QLabel()\n\n        self.input = QLineEdit()\n        self.input.textChanged.connect(self.label.setText)\n\n        layout = QVBoxLayout()\n        layout.addWidget(self.input)\n        layout.addWidget(self.label)\n\n        container = QWidget()\n        container.setLayout(layout)\n\n        # Set the central widget of the Window.\n        self.setCentralWidget(container)\n\n\napp = QApplication(sys.argv)\n\nwindow = MainWindow()\nwindow.show()\n\napp.exec()\n</pre>"},{"location":"PyQT/01-qt-signals/#events","title":"Events\u00b6","text":"<p>Every interaction the user has with a Qt application is an <code>event</code>. Qt represents these events using <code>event</code> objects which package up information about what happened.</p> <p>One of the main events which widgets receive is the <code>QMouseEvent</code>. <code>QMouseEvent</code> events are created for each and every mouse movement and button click on a widget. The following event handlers are available for handling mouse events</p> Method Returns <code>Event handler</code> Event type moved <code>mouseMoveEvent</code> Mouse moved <code>mousePressEvent</code> Mouse button pressed <code>mouseReleaseEvent</code> Mouse button released <code>mouseDoubleClickEvent</code> Double click detected <ul> <li><p>All <code>mouse events</code> in Qt are tracked with the <code>QMouseEvent</code> object, with information about the event being readable from the following event methods.</p> Method Returns <code>.button()</code> Specific button that triggered this event <code>.buttons()</code> State of all mouse buttons (OR'ed flags) <code>.position()</code> Widget-relative position as a <code>QPoint</code> integer </li> </ul>"},{"location":"PyQT/01-qt-signals/#context-menus","title":"Context Menus\u00b6","text":"<p><code>Context menus</code> are small context-sensitive menus which typically appear when <code>right clicking</code> on a window. Qt has support for generating these menus using the <code>.contextMenuEvent</code> function from a <code>QMainWindow</code>.</p> <pre>import sys\n\nfrom PyQt6.QtCore import Qt\nfrom PyQt6.QtGui import QAction\nfrom PyQt6.QtWidgets import QApplication, QLabel, QMainWindow, QMenu\n\n\nclass MainWindow(QMainWindow):\n    def __init__(self):\n        super().__init__()\n\n    def contextMenuEvent(self, e):\n        context = QMenu(self)\n        context.addAction(QAction(\"test 1\", self))\n        context.addAction(QAction(\"test 2\", self))\n        context.addAction(QAction(\"test 3\", self))\n        context.exec(e.globalPos())\n\n\napp = QApplication(sys.argv)\n\nwindow = MainWindow()\nwindow.show()\n\napp.exec()\n</pre> <p>Just for completeness, there is actually a <code>signal</code>-based approach to creating <code>context menus</code>. It's exactly same as follows:</p> <pre>class MainWindow(QMainWindow):\n    def __init__(self):\n        super().__init__()\n        self.show()\n\n        self.setContextMenuPolicy(Qt.ContextMenuPolicy.CustomContextMenu)\n        self.customContextMenuRequested.connect(self.on_context_menu)\n\n    def on_context_menu(self, pos):\n        context = QMenu(self)\n        context.addAction(QAction(\"test 1\", self))\n        context.addAction(QAction(\"test 2\", self))\n        context.addAction(QAction(\"test 3\", self))\n        context.exec(self.mapToGlobal(pos))\n</pre>"},{"location":"PyQT/01-qt-signals/#a-comprehensive-example","title":"A comprehensive Example\u00b6","text":"<pre>from PyQt6.QtCore import Qt\nfrom PyQt6.QtWidgets import QWidget, QMainWindow, QPushButton, QLabel, QGridLayout, QApplication, QLineEdit, QComboBox, QMenu\nfrom PyQt6.QtGui import QIcon, QAction\n\nclass Window(QMainWindow):\n    def __init__(self) -&gt; None:\n        super().__init__()\n        self.clicked_times = 0\n\n        self.setMinimumSize(300,300)\n\n        grid_layout = QGridLayout()\n        self.label = QLabel(\"This is a label\", alignment=Qt.AlignmentFlag.AlignCenter)\n        self.btn = QPushButton(\"Click Me!\")\n        self.lineEdit = QLineEdit()\n        self.lineEdit.setPlaceholderText(\"Please Enter your last name\")\n        self.comboBox = QComboBox()\n        self.comboBox.addItem(\"Red\")\n        self.comboBox.addItem(\"Green\")\n        self.comboBox.addItem(\"Yellow\")\n        self.comboBox.addItem(QIcon(\"./asset/utd.jpg\"), \"UTD\")\n\n        self.btn.clicked.connect(self.clickHandler)\n        self.lineEdit.textChanged.connect(self.textChangeHandler)\n        self.lineEdit.setMaxLength(10)\n        self.comboBox.currentTextChanged.connect(self.comboChange)\n\n        grid_layout.addWidget(self.label, 0, 0)\n        grid_layout.addWidget(self.comboBox, 1, 0)\n        grid_layout.addWidget(self.lineEdit, 2, 0)\n        grid_layout.addWidget(self.btn, 3, 0)\n        centerWidget = QWidget()\n        centerWidget.setLayout(grid_layout)\n\n        self.setCentralWidget(centerWidget)\n\n    def clickHandler(self):\n        print(\"Button clicked!\")\n        self.clicked_times += 1\n        self.label.setText(f\"Button has Been Clicked {self.clicked_times} times!\")\n\n    def textChangeHandler(self):\n        self.label.setText(f\"Your last name is {self.lineEdit.text()}\")\n\n    def comboChange(self):\n        self.label.setText(f\"Current Combo Box text is {self.comboBox.currentText()}\")\n\n    def mousePressEvent(self, e):\n        if e.button() == Qt.MouseButton.LeftButton:\n            # handle the left-button press in here\n            self.label.setText(\"mousePressEvent LEFT\")\n\n        elif e.button() == Qt.MouseButton.MiddleButton:\n            # handle the middle-button press in here.\n            self.label.setText(\"mousePressEvent MIDDLE\")\n\n        elif e.button() == Qt.MouseButton.RightButton:\n            # handle the right-button press in here.\n            self.label.setText(\"mousePressEvent RIGHT\")\n\n    def mouseReleaseEvent(self, e):\n        if e.button() == Qt.MouseButton.LeftButton:\n            self.label.setText(\"mouseReleaseEvent LEFT\")\n\n        elif e.button() == Qt.MouseButton.MiddleButton:\n            self.label.setText(\"mouseReleaseEvent MIDDLE\")\n\n        elif e.button() == Qt.MouseButton.RightButton:\n            self.label.setText(\"mouseReleaseEvent RIGHT\")\n\n    def mouseDoubleClickEvent(self, e):\n        if e.button() == Qt.MouseButton.LeftButton:\n            self.label.setText(\"mouseDoubleClickEvent LEFT\")\n\n        elif e.button() == Qt.MouseButton.MiddleButton:\n            self.label.setText(\"mouseDoubleClickEvent MIDDLE\")\n\n        elif e.button() == Qt.MouseButton.RightButton:\n            self.label.setText(\"mouseDoubleClickEvent RIGHT\")\n\n    def contextMenuEvent(self, e):\n        context = QMenu(self)\n\n        action1 = QAction(\"test 1\", self)\n        action2 = QAction(\"test 2\", self)\n        action3 = QAction(\"test 3\", self)\n\n        context.addAction(action1)\n        context.addAction(action2)\n        context.addAction(action3)\n\n        action1.triggered.connect(lambda: self.setLabelText(\"test 1 from context menu\"))\n        action2.triggered.connect(lambda: self.setLabelText(\"test 2 from context menu\"))\n        action3.triggered.connect(lambda: self.setLabelText(\"test 3 from context menu\"))\n\n        context.exec(e.globalPos())\n\n    def setLabelText(self, text):\n        self.label.setText(text)\n\napp = QApplication([])\n\nwindow = Window()\n\nwindow.show()\n\napp.exec()\n</pre>"},{"location":"PyQT/02-qt-widgets/","title":"02 Widgets","text":""},{"location":"PyQT/02-qt-widgets/#qt-widgets","title":"QT Widgets\u00b6","text":""},{"location":"PyQT/02-qt-widgets/#exploring-widgets-in-pyqt6","title":"Exploring Widgets in PyQt6\u00b6","text":"<p><code>PyQt6</code> offers a wide range of <code>widgets</code> that you can use to build interactive graphical user interfaces (GUIs).</p> <p>In this section, we'll explore some commonly used widgets and provide examples of how to use them.</p> <ul> <li>Reference</li> </ul>"},{"location":"PyQT/02-qt-widgets/#a-quick-demo","title":"A quick demo\u00b6","text":"<pre>import sys\n\nfrom PyQt6.QtCore import Qt\nfrom PyQt6.QtWidgets import (\n    QApplication,\n    QCheckBox,\n    QComboBox,\n    QDateEdit,\n    QDateTimeEdit,\n    QDial,\n    QDoubleSpinBox,\n    QFontComboBox,\n    QLabel,\n    QLCDNumber,\n    QLineEdit,\n    QMainWindow,\n    QProgressBar,\n    QPushButton,\n    QRadioButton,\n    QSlider,\n    QSpinBox,\n    QTimeEdit,\n    QVBoxLayout,\n    QWidget,\n)\n\n\n# Subclass QMainWindow to customize your application's main window\nclass MainWindow(QMainWindow):\n    def __init__(self):\n        super().__init__()\n\n        self.setWindowTitle(\"Widgets App\")\n\n        layout = QVBoxLayout()\n        widgets = [\n            QCheckBox,\n            QComboBox,\n            QDateEdit,\n            QDateTimeEdit,\n            QDial,\n            QDoubleSpinBox,\n            QFontComboBox,\n            QLCDNumber,\n            QLabel,\n            QLineEdit,\n            QProgressBar,\n            QPushButton,\n            QRadioButton,\n            QSlider,\n            QSpinBox,\n            QTimeEdit,\n        ]\n\n        for w in widgets:\n            layout.addWidget(w())\n\n        widget = QWidget()\n        widget.setLayout(layout)\n\n        # Set the central widget of the Window. Widget will expand\n        # to take up all the space in the window by default.\n        self.setCentralWidget(widget)\n\n\napp = QApplication(sys.argv)\nwindow = MainWindow()\nwindow.show()\n\napp.exec()\n</pre> <ul> <li><p>Lets have a look at all the example <code>widgets</code>, from top to bottom:</p> Widget What it does <code>QCheckbox</code> A checkbox <code>QComboBox</code> A dropdown list box <code>QDateEdit</code> For editing dates and datetimes <code>QDateTimeEdit</code> For editing dates and datetimes <code>QDial</code> Rotatable dial <code>QDoubleSpinBox</code> A number spinner for floats <code>QFontComboBox</code> A list of fonts <code>QLCDNumber</code> A quite ugly LCD display <code>QLabel</code> Just a label, not interactive <code>QLineEdit</code> Enter a line of text <code>QProgressBar</code> A progress bar <code>QPushButton</code> A button <code>QRadioButton</code> A toggle set, with only one active item <code>QSlider</code> A slider <code>QSpinBox</code> An integer spinner <code>QTimeEdit</code> For editing times </li> </ul>"},{"location":"PyQT/02-qt-widgets/#qlabel","title":"QLabel:\u00b6","text":"<p><code>QLabel</code> is used to display text or images. Here's an example of how to create a <code>QLabel</code>:</p> <pre>class MainWindow(QMainWindow):\n\n    def __init__(self):\n        super(MainWindow, self).__init__()\n\n        self.setWindowTitle(\"My App\")\n\n        widget = QLabel(\"Hello\")\n        font = widget.font()\n        font.setPointSize(30)\n        widget.setFont(font)\n        widget.setAlignment(Qt.AlignmentFlag.AlignHCenter | Qt.AlignmentFlag.AlignVCenter)\n\n        self.setCentralWidget(widget)\n</pre> <ul> <li>Customizing Font: You can customize the <code>font</code> used by <code>QLabel</code> to make your text stand out. Here's how you can set the font for a QLabel:</li> </ul> <pre>label = QLabel('Hello, PyQt5!')\nfont = QFont('Arial', 16)  # Set font family and size\nlabel.setFont(font)\n</pre> <ul> <li><p>The alignment is specified by using a flag from the <code>Qt.AlignmentFlag</code>.</p> </li> <li><p>You can combine flags together using pipes (<code>|</code>), however note that you can only use <code>vertical</code> or <code>horizontal alignment flag</code> at a time.</p> </li> <li><p>The flags available for horizontal alignment are:</p> PyQt6 flag (horizontal alignment) Behavior <code>Qt.AlignmentFlag.AlignLeft</code> Aligns with the left edge. <code>Qt.AlignmentFlag.AlignRight</code> Aligns with the right edge. <code>Qt.AlignmentFlag.AlignHCenter</code> Centers horizontally in the available space. <code>Qt.AlignmentFlag.AlignJustify</code> Justifies the text in the available space. PyQt6 flag (vertical alignment) Behavior <code>Qt.AlignmentFlag.AlignTop</code> Aligns with the top. <code>Qt.AlignmentFlag.AlignBottom</code> Aligns with the bottom. <code>Qt.AlignmentFlag.AlignVCenter</code> Centers vertically in the available space. <code>Qt.AlignmentFlag.AlignCenter</code> Centers <code>horizontally</code> and <code>vertically</code>. </li> <li><p>You can also use <code>QLabel</code> to display an image using <code>.setPixmap()</code>.</p> <ul> <li>This accepts an <code>pixmap</code>, which you can create by passing an image filename to <code>QPixmap</code>.</li> </ul> </li> </ul> <pre>widget.setPixmap(QPixmap('otje.jpg'))\n</pre> <p></p>"},{"location":"PyQT/02-qt-widgets/#qcheckbox","title":"QCheckBox\u00b6","text":"<p><code>QCheckBox()</code> presents a checkable box to the user.</p> <p></p> <p>You can set a checkbox state programmatically using <code>.setChecked</code> or <code>.setCheckState</code>.</p> <ul> <li><p>The former accepts either <code>True</code> or <code>False</code> representing checked or unchecked, respectively.</p> </li> <li><p>However, with <code>.setCheckState</code> you also specify a particular checked state using a <code>Qt.CheckState flag</code>:</p> <ul> <li>If you set the value to <code>Qt.CheckState.PartiallyChecked</code> the checkbox will become <code>tristate</code>.</li> <li>You can also set a checkbox to be tri-state without setting the current state to partially checked by using <code>.setTriState(True)</code></li> </ul> PyQt6 flag (long name) Behavior <code>Qt.CheckState.Unchecked</code> Item is unchecked <code>Qt.CheckState.PartiallyChecked</code> Item is partially checked <code>Qt.CheckState.Checked</code> Item is checked </li> <li><p>Example</p> <pre>class MainWindow(QMainWindow):\n\n    def __init__(self):\n        super(MainWindow, self).__init__()\n\n        self.setWindowTitle(\"My App\")\n\n        widget = QCheckBox()\n        widget.setCheckState(Qt.CheckState.Checked)\n\n        # For tristate: widget.setCheckState(Qt.PartiallyChecked)\n        # Or: widget.setTriState(True)\n        widget.stateChanged.connect(self.show_state)\n\n        self.setCentralWidget(widget)\n\n    def show_state(self, s):\n        print(s == Qt.CheckState.Checked.value)\n        print(s)\n</pre> </li> </ul>"},{"location":"PyQT/02-qt-widgets/#qcombobox","title":"QComboBox\u00b6","text":"<p>The <code>QComboBox</code> is a drop down list, closed by default with an arrow to open it. It is suited to selection of a choice from a long list of options.</p> <ul> <li><p>Example</p> <ul> <li>The <code>.currentIndexChanged</code> signal is triggered when the currently selected item is updated, by default passing the <code>index</code> of the selected item in the list.</li> <li>There is also a <code>.currentTextChanged</code> signal which instead provides the <code>label</code> of the currently selected item, which is often more useful.</li> </ul> <pre>class MainWindow(QMainWindow):\n\n    def __init__(self):\n        super(MainWindow, self).__init__()\n\n        self.setWindowTitle(\"My App\")\n\n        widget = QComboBox()\n        widget.addItems([\"One\", \"Two\", \"Three\"])\n\n        # Sends the current index (position) of the selected item.\n        widget.currentIndexChanged.connect( self.index_changed )\n\n        # There is an alternate signal to send the text.\n        widget.currentTextChanged.connect( self.text_changed )\n\n        self.setCentralWidget(widget)\n\n\n    def index_changed(self, i): # i is an int\n        print(i)\n\n    def text_changed(self, s): # s is a str\n        print(s)\n</pre> </li> <li><p>You can also limit the number of items allowed in the box by using .setMaxCount, e.g. <code>widget.setMaxCount(10)</code></p> </li> </ul>"},{"location":"PyQT/02-qt-widgets/#qlistwidget","title":"QListWidget\u00b6","text":"<ul> <li><p>This widget is similar to <code>QComboBox</code>, except options are presented as a scrollable list of items.</p> <ul> <li>It also supports selection of multiple items at once.</li> <li>A <code>QListWidget</code> offers an <code>currentItemChanged</code> signal which sends the <code>QListWidgetItem</code> (the element of the list widget), and a <code>currentTextChanged</code> signal which sends the <code>text</code> of the current item.</li> </ul> </li> <li><p>Example</p> <pre>class MainWindow(QMainWindow):\n\n    def __init__(self):\n        super(MainWindow, self).__init__()\n\n        self.setWindowTitle(\"My App\")\n\n        widget = QListWidget()\n        widget.addItems([\"One\", \"Two\", \"Three\"])\n\n        widget.currentItemChanged.connect(self.index_changed)\n        widget.currentTextChanged.connect(self.text_changed)\n\n        self.setCentralWidget(widget)\n\n\n    def index_changed(self, i): # Not an index, i is a QListWidgetItem\n        print(i.text())\n\n    def text_changed(self, s): # s is a str\n        print(s)\n</pre> </li> </ul>"},{"location":"PyQT/02-qt-widgets/#qlineedit","title":"QLineEdit\u00b6","text":"<p>The <code>QLineEdit</code> widget is a simple single-line text editing box, into which users can type input.</p> <ul> <li><p>The <code>QLineEdit</code> has a number of <code>signals</code> available for different editing events including when return is pressed (by the user), when the user selection is changed.</p> </li> <li><p>There are also two edit <code>signals</code>, one for when the text in the box has been edited and one for when it has been changed.</p> </li> <li><p>Example</p> <pre>class MainWindow(QMainWindow):\n\n    def __init__(self):\n        super(MainWindow, self).__init__()\n\n        self.setWindowTitle(\"My App\")\n\n        widget = QLineEdit()\n        widget.setMaxLength(10)\n        widget.setPlaceholderText(\"Enter your text\")\n\n        #widget.setReadOnly(True) # uncomment this to make readonly\n\n        widget.returnPressed.connect(self.return_pressed)\n        widget.selectionChanged.connect(self.selection_changed)\n        widget.textChanged.connect(self.text_changed)\n        widget.textEdited.connect(self.text_edited)\n\n        self.setCentralWidget(widget)\n\n\n    def return_pressed(self):\n        print(\"Return pressed!\")\n        self.centralWidget().setText(\"BOOM!\")\n\n    def selection_changed(self):\n        print(\"Selection changed\")\n        print(self.centralWidget().selectedText())\n\n    def text_changed(self, s):\n        print(\"Text changed...\")\n        print(s)\n\n    def text_edited(self, s):\n        print(\"Text edited...\")\n        print(s)\n</pre> </li> <li><p>Additionally, it is possible to perform input validation using an <code>input mask</code> to define which characters are supported and where. This can be applied to the field as follows:</p> <ul> <li><p>It allow a series of 3-digit numbers separated with periods, and could therefore be used to validate <code>IPv4</code> addresses.</p> <pre>widget.setInputMask('000.000.000.000;_')\n</pre> </li> </ul> </li> </ul>"},{"location":"PyQT/02-qt-widgets/#qspinbox-and-qdoublespinbox","title":"QSpinBox and QDoubleSpinBox\u00b6","text":"<ul> <li><p><code>QSpinBox</code> provides a small numerical input box with arrows to increase and decrease the value.</p> </li> <li><p><code>QSpinBox</code> supports <code>integers</code> while the related widget <code>QDoubleSpinBox</code> supports <code>floats</code>.</p> </li> <li><p>Example</p> <ul> <li>The value shows pre and post fix units, and is limited to the range +3 to -10.</li> <li>To set the range of acceptable values you can use <code>setMinimum</code> and <code>setMaximum</code>, or alternatively use <code>setRange</code> to set both simultaneously.</li> </ul> <pre>class MainWindow(QMainWindow):\n    def __init__(self):\n        super().__init__()\n\n        self.setWindowTitle(\"My App\")\n\n        widget = QSpinBox()\n        # Or: widget = QDoubleSpinBox()\n\n        widget.setMinimum(-10)\n        widget.setMaximum(3)\n        # Or: widget.setRange(-10,3)\n\n        widget.setPrefix(\"$\")\n        widget.setSuffix(\"c\")\n        widget.setSingleStep(3)  # Or e.g. 0.5 for QDoubleSpinBox\n        widget.valueChanged.connect(self.value_changed)\n        widget.textChanged.connect(self.value_changed_str)\n\n        self.setCentralWidget(widget)\n\n    def value_changed(self, i):\n        print(i)\n\n    def value_changed_str(self, s):\n        print(s)\n</pre> </li> <li><p>Both <code>QSpinBox</code> and <code>QDoubleSpinBox</code> have a <code>.valueChanged</code> signal which fires whenever their value is altered.</p> <ul> <li>The raw <code>.valueChanged</code> signal sends the <code>numeric</code> value (either an int or a float)</li> <li><code>.textChanged</code> sends the value as a <code>string</code>, including both the prefix and suffix characters.</li> </ul> </li> <li><p>You can optionally disable text input on the spin box line edit, by setting it to read-only. With this set, the value can only by changed using the controls</p> <pre>widget.lineEdit().setReadOnly(True)\n</pre> </li> </ul>"},{"location":"PyQT/02-qt-widgets/#qslider","title":"QSlider\u00b6","text":"<p><code>QPushButton</code> creates a clickable button. Here's how to create a <code>QPushButton</code>:</p> <ul> <li><p>There is an additional <code>.sliderMoved</code> <code>signal</code> that is triggered whenever the slider moves position</p> </li> <li><p>and a .<code>sliderPressed</code> signal that emits whenever the slider is clicked.</p> <pre>class MainWindow(QMainWindow):\n    def __init__(self):\n        super().__init__()\n\n        self.setWindowTitle(\"My App\")\n\n        widget = QSlider()\n\n        widget.setMinimum(-10)\n        widget.setMaximum(3)\n        # Or: widget.setRange(-10,3)\n\n        widget.setSingleStep(3)\n\n        widget.valueChanged.connect(self.value_changed)\n        widget.sliderMoved.connect(self.slider_position)\n        widget.sliderPressed.connect(self.slider_pressed)\n        widget.sliderReleased.connect(self.slider_released)\n\n        self.setCentralWidget(widget)\n\n    def value_changed(self, i):\n        print(i)\n\n    def slider_position(self, p):\n        print(\"position\", p)\n\n    def slider_pressed(self):\n        print(\"Pressed!\")\n\n    def slider_released(self):\n        print(\"Released\")\n</pre> </li> <li><p>You can also construct a slider with a <code>vertical</code> or <code>horizontal</code> orientation by passing the orientation in as you create it. The <code>orientation flags</code> are defined in the <code>Qt. namespace</code>.</p> <pre>widget = QSlider(Qt.Orientiation.Vertical)\nwidget = QSlider(Qt.Orientiation.Horizontal)\n</pre> </li> </ul>"},{"location":"PyQT/03-qt-layout/","title":"03 Layouts","text":""},{"location":"PyQT/03-qt-layout/#qt-layouts","title":"QT layouts\u00b6","text":"<ul> <li><p>There are 4 basic <code>layouts</code> available in Qt, which are listed in the following table.</p> <ul> <li>There are three <code>positional layouts</code> available in <code>Qt</code>. The <code>QVBoxLayout</code>, <code>QHBoxLayout</code> and <code>QGridLayout</code>.</li> <li>In addition there is also <code>QStackedLayout</code> which allows you to place widgets one on top of the other within the same space, yet showing only one layout at a time.</li> </ul> Layout Behavior QHBoxLayout Linear horizontal layout QVBoxLayout Linear vertical layout QGridLayout In indexable grid XxY QStackedLayout Stacked (z) in front of one another </li> </ul>"},{"location":"PyQT/03-qt-layout/#qvboxlayout","title":"<code>QVBoxLayout</code>\u00b6","text":"<ul> <li><p>With <code>QVBoxLayout</code> you arrange widgets one above the other linearly. Adding a widget adds it to the bottom of the column.</p> <p></p> </li> <li><p>Example</p> <pre>class MainWindow(QMainWindow):\n\n    def __init__(self):\n        super(MainWindow, self).__init__()\n\n        self.setWindowTitle(\"My App\")\n\n        layout = QVBoxLayout()\n\n        layout.addWidget(Color('red'))\n        layout.addWidget(Color('green'))\n        layout.addWidget(Color('blue'))\n\n        widget = QWidget()\n        widget.setLayout(layout)\n        self.setCentralWidget(widget)\n</pre> </li> </ul>"},{"location":"PyQT/03-qt-layout/#qhboxlayout","title":"<code>QHBoxLayout</code>\u00b6","text":"<ul> <li><p><code>QHBoxLayout</code> is the same, except moving horizontally. Adding a widget adds it to the right hand side.</p> <p></p> </li> <li><p>Example</p> <p></p> <pre>import sys\nfrom PyQt6.QtWidgets import QApplication, QMainWindow, QWidget, QHBoxLayout, QVBoxLayout\nfrom PyQt6.QtGui import QPalette, QColor\n\nclass Color(QWidget):\n\n    def __init__(self, color):\n        super(Color, self).__init__()\n        self.setAutoFillBackground(True)\n\n        palette = self.palette()\n        palette.setColor(QPalette.ColorRole.Window, QColor(color))\n        self.setPalette(palette)\n\nclass MainWindow(QMainWindow):\n\n    def __init__(self):\n        super(MainWindow, self).__init__()\n\n        self.setWindowTitle(\"My App\")\n        self.setMinimumSize(700,500)\n\n        layout1 = QHBoxLayout()\n        layout2 = QVBoxLayout()\n        layout3 = QVBoxLayout()\n\n        layout1.setContentsMargins(0,0,0,0)\n        layout1.setSpacing(20)\n\n        layout2.addWidget(Color('red'))\n        layout2.addWidget(Color('yellow'))\n        layout2.addWidget(Color('purple'))\n\n        layout1.addLayout( layout2 )\n\n        layout1.addWidget(Color('green'))\n\n        layout3.addWidget(Color('red'))\n        layout3.addWidget(Color('purple'))\n\n        layout1.addLayout( layout3 )\n\n        widget = QWidget()\n        widget.setLayout(layout1)\n        self.setCentralWidget(widget)\n\n\napp = QApplication(sys.argv)\n\nwindow = MainWindow()\nwindow.show()\n\napp.exec()\n</pre> </li> </ul>"},{"location":"PyQT/03-qt-layout/#qgridlayout","title":"<code>QGridLayout</code>\u00b6","text":"<ul> <li><p><code>QGridLayout</code> widgets arranged in a grid</p> <p></p> </li> <li><p>Example</p> <pre>class MainWindow(QMainWindow):\n\n    def __init__(self):\n        super(MainWindow, self).__init__()\n\n        self.setWindowTitle(\"My App\")\n\n        layout = QGridLayout()\n\n        layout.addWidget(Color('red'), 0, 0)\n        layout.addWidget(Color('green'), 1, 0)\n        layout.addWidget(Color('blue'), 1, 1)\n        layout.addWidget(Color('purple'), 2, 1)\n\n        widget = QWidget()\n        widget.setLayout(layout)\n        self.setCentralWidget(widget)\n</pre> </li> </ul>"},{"location":"PyQT/03-qt-layout/#qstackedlayout","title":"<code>QStackedLayout</code>\u00b6","text":"<ul> <li><p>As described, this layout allows you to position elements directly in front of one another.</p> </li> <li><p>Note there is also <code>QStackedWidget</code> which is a <code>container widget</code> that works in exactly the same way.</p> <ul> <li>This is useful if you want to add a stack directly to a <code>QMainWindow</code> with <code>.setCentralWidget</code>.</li> </ul> </li> <li><p><code>QStackedLayout</code> \u2014 in use only the uppermost widget is visible, which is by default the first widget added to the layout.</p> <p></p> </li> <li><p><code>QStackedLayout</code>, with the 2nd (1) widget selected and brought to the front.</p> <p></p> </li> <li><p>Example</p> <ul> <li><code>Qt</code> actually provide a built-in <code>TabWidget</code> that provides this kind of layout out of the box - albeit in widget form. Below the tab demo is recreated using <code>QTabWidget</code></li> <li>You can set the position of the tabs using the cardinal directions, toggle whether tabs are moveable with <code>.setMoveable</code>.</li> <li>On <code>macOS</code> this is typically used for tabbed configuration panels. For documents, you can turn on <code>document mode</code> to give slimline tabs similar to what you see on other platforms.</li> </ul> <p></p> <pre>import sys\n\nfrom PyQt6.QtGui import QPalette, QColor\nfrom PyQt6.QtCore import Qt\nfrom PyQt6.QtWidgets import (\n    QApplication,\n    QLabel,\n    QMainWindow,\n    QPushButton,\n    QTabWidget,\n    QWidget,\n)\n\nclass Color(QWidget):\n\n    def __init__(self, color):\n        super(Color, self).__init__()\n        self.setAutoFillBackground(True)\n\n        palette = self.palette()\n        palette.setColor(QPalette.ColorRole.Window, QColor(color))\n        self.setPalette(palette)\n\n\nclass MainWindow(QMainWindow):\n    def __init__(self):\n        super().__init__()\n\n        self.setWindowTitle(\"My App\")\n        self.setMinimumSize(700,500)\n\n        tabs = QTabWidget()\n        tabs.setTabPosition(QTabWidget.TabPosition.North)\n        tabs.setDocumentMode(True)\n        tabs.setMovable(True)\n\n        for n, color in enumerate([\"red\", \"green\", \"blue\", \"yellow\"]):\n            tabs.addTab(Color(color), color)\n\n        self.setCentralWidget(tabs)\n\n\napp = QApplication(sys.argv)\n\nwindow = MainWindow()\nwindow.show()\n\napp.exec()\n</pre> </li> </ul>"},{"location":"PyQT/04-Tooltips-dialogs-Menus/","title":"04 Tooltips, Dialogs and Menu","text":"<ul> <li><p>Another Example</p> <pre>class MessageBoxDemo(QWidget):\n    def __init__(self):\n        super().__init__()\n\n        self.setWindowTitle(\"Message Box Demo\")\n        self.setGeometry(100, 100, 300, 200)\n\n        layout = QVBoxLayout()\n\n        self.info_btn = QPushButton(\"Show Information\")\n        self.info_btn.clicked.connect(self.show_information)\n        layout.addWidget(self.info_btn)\n\n        self.warning_btn = QPushButton(\"Show Warning\")\n        self.warning_btn.clicked.connect(self.show_warning)\n        layout.addWidget(self.warning_btn)\n\n        self.error_btn = QPushButton(\"Show Error\")\n        self.error_btn.clicked.connect(self.show_error)\n        layout.addWidget(self.error_btn)\n\n        self.question_btn = QPushButton(\"Show Question\")\n        self.question_btn.clicked.connect(self.show_question)\n        layout.addWidget(self.question_btn)\n\n        self.setLayout(layout)\n\n    def show_information(self):\n        QMessageBox.information(self, \"Information\", \"This is an information message.\")\n\n    def show_warning(self):\n        QMessageBox.warning(self, \"Warning\", \"This is a warning message.\")\n\n    def show_error(self):\n        QMessageBox.critical(self, \"Error\", \"This is an error message.\")\n\n    def show_question(self):\n        reply = QMessageBox.question(self, \"Question\", \"Do you like PyQt6?\", QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No)\n        if reply == QMessageBox.StandardButton.Yes:\n            print(\"User likes PyQt6!\")\n        else:\n            print(\"User doesn't like PyQt6!\")\n</pre> </li> </ul> In\u00a0[15]: Copied! <pre>import pandas as pd\n\npd.read_html(\"https://doc.qt.io/qt-6/qkeysequence.html\")[5]\n</pre> import pandas as pd  pd.read_html(\"https://doc.qt.io/qt-6/qkeysequence.html\")[5] Out[15]: StandardKey Windows Apple platforms KDE Plasma GNOME 0 HelpContents F1 Ctrl+? F1 F1 1 WhatsThis Shift+F1 Shift+F1 Shift+F1 Shift+F1 2 Open Ctrl+O Ctrl+O Ctrl+O Ctrl+O 3 Close Ctrl+F4, Ctrl+W Ctrl+W, Ctrl+F4 Ctrl+W Ctrl+W 4 Save Ctrl+S Ctrl+S Ctrl+S Ctrl+S ... ... ... ... ... ... 65 DeleteCompleteLine (none) (none) Ctrl+U Ctrl+U 66 InsertParagraphSeparator Enter Enter Enter Enter 67 InsertLineSeparator Shift+Enter Meta+Enter, Meta+O Shift+Enter Shift+Enter 68 Backspace (none) Delete, Meta+H (none) (none) 69 Cancel Escape Escape, Ctrl+. Escape Escape <p>70 rows \u00d7 5 columns</p>"},{"location":"PyQT/04-Tooltips-dialogs-Menus/#tooltips-dialogs-and-menu","title":"Tooltips, Dialogs and Menu\u00b6","text":"<ul> <li>Dialogs Reference</li> <li>Menus Reference</li> </ul>"},{"location":"PyQT/04-Tooltips-dialogs-Menus/#tooltips","title":"Tooltips\u00b6","text":"<ul> <li><p>Tooltips in PyQt6 provide helpful hints to users about the functionality of various widgets in your application.</p> <p></p> <pre>class PasswordForm(QWidget):\n    def __init__(self):\n        super().__init__()\n\n        self.initUI()\n\n    def initUI(self):\n        self.setWindowTitle('Password Form')\n        self.setGeometry(100, 100, 500, 300)\n\n        layout = QVBoxLayout()\n\n        self.email_label = QLabel('Email Address')\n        layout.addWidget(self.email_label)\n        self.email_input = QLineEdit()\n        layout.addWidget(self.email_input)\n\n        self.password_label = QLabel('Password')\n        layout.addWidget(self.password_label)\n        self.password_input = QLineEdit()\n        self.password_input.setEchoMode(QLineEdit.EchoMode.Password)\n        layout.addWidget(self.password_input)\n        self.password_input.setToolTip(\n            'Passwords should be at least 10 characters long and include 1 uppercase \\nand 1 lowercase alpha character, '\n            '1 number and 1 special character. Passwords are case sensitive.')\n\n        self.confirm_password_label = QLabel('Confirm Password')\n        layout.addWidget(self.confirm_password_label)\n        self.confirm_password_input = QLineEdit()\n        self.confirm_password_input.setEchoMode(QLineEdit.EchoMode.Password)\n        layout.addWidget(self.confirm_password_input)\n\n        self.create_account_button = QPushButton('CREATE ACCOUNT')\n        layout.addWidget(self.create_account_button)\n\n        self.setLayout(layout)\n</pre> </li> </ul>"},{"location":"PyQT/04-Tooltips-dialogs-Menus/#basic-tooltips","title":"Basic Tooltips\u00b6","text":"<ul> <li><p>Setting a basic <code>tooltip</code> for a widget in PyQt6 is straightforward. You use the <code>setToolTip</code> method on the widget.</p> </li> <li><p>Example</p> <pre>import sys\nfrom PyQt6.QtWidgets import QApplication, QWidget, QPushButton, QVBoxLayout\n\nclass TooltipDemo(QWidget):\n    def __init__(self):\n        super().__init__()\n\n        self.setWindowTitle(\"Tooltip Demo\")\n        self.setGeometry(100, 100, 300, 200)\n\n        layout = QVBoxLayout()\n\n        self.button = QPushButton(\"Hover over me\")\n        self.button.setToolTip(\"This is a button tooltip\")\n        layout.addWidget(self.button)\n\n        self.setLayout(layout)\n\napp = QApplication(sys.argv)\nwindow = TooltipDemo()\nwindow.show()\napp.exec()\n</pre> </li> </ul>"},{"location":"PyQT/04-Tooltips-dialogs-Menus/#customizing-tooltip-appearance","title":"Customizing Tooltip Appearance\u00b6","text":"<p>Tooltips in PyQt6 can be customized globally using the <code>QToolTip</code> class. You can set the <code>font</code> and <code>color</code> for all tooltips in your application.</p> <ul> <li><p>Example</p> <p></p> <pre>import sys\nfrom PyQt6.QtWidgets import QApplication, QWidget, QPushButton, QVBoxLayout, QToolTip\nfrom PyQt6.QtGui import QFont\n\nclass CustomTooltipDemo(QWidget):\n    def __init__(self):\n        super().__init__()\n\n        self.setWindowTitle(\"Custom Tooltip Demo\")\n        self.setGeometry(100, 100, 300, 200)\n\n        # Set global font for tooltips\n        QToolTip.setFont(QFont('SansSerif', 10))\n\n        layout = QVBoxLayout()\n\n        self.button = QPushButton(\"Hover over me\")\n        self.button.setToolTip(\"&lt;b style='color:blue;'&gt;This is a blue tooltip&lt;/b&gt;\")\n        layout.addWidget(self.button)\n\n        self.setLayout(layout)\n\napp = QApplication(sys.argv)\nwindow = CustomTooltipDemo()\nwindow.show()\napp.exec()\n</pre> </li> </ul>"},{"location":"PyQT/04-Tooltips-dialogs-Menus/#dialogs","title":"Dialogs\u00b6","text":"<ul> <li><p>Standard GUI features \u2014 A file Open dialog</p> <p></p> </li> </ul>"},{"location":"PyQT/04-Tooltips-dialogs-Menus/#custom-dialog","title":"Custom Dialog\u00b6","text":"<ul> <li>In Qt dialog boxes are handled by the <code>QDialog</code> class.</li> <li>To create a new dialog box simply create a new object of <code>QDialog</code> type passing in another widget, e.g. <code>QMainWindow</code>, as its parent.<ul> <li>This will make the <code>dialog</code> a modal window of <code>QMainWindow</code>. This means the dialog will completely block interaction with the parent window.</li> </ul> </li> <li>Once we have created the dialog, we start it using <code>.exec()</code> - just like we did for <code>QApplication</code> to create the main <code>event loop</code> of our application.</li> </ul> <ul> <li><p>Example</p> <ul> <li>The first step in creating a dialog button box is to define the buttons want to show, using namespace attributes from <code>QDialogButtonBox</code>.</li> <li>The full list of buttons available is below.</li> </ul> <pre>- QMessageBox.StandardButton.Ok\n    - QMessageBox.StandardButton.Open\n    - QMessageBox.StandardButton.Save\n    - QMessageBox.StandardButton.Cancel\n    - QMessageBox.StandardButton.Close\n    - QMessageBox.StandardButton.Discard\n    - QMessageBox.StandardButton.Apply\n    - QMessageBox.StandardButton.Reset\n    - QMessageBox.StandardButton.RestoreDefaults\n    - QMessageBox.StandardButton.Help\n    - QMessageBox.StandardButton.SaveAll\n    - QMessageBox.StandardButton.Yes\n    - QMessageBox.StandardButton.YesToAll\n    - QMessageBox.StandardButton.No\n    - QMessageBox.StandardButton.NoToAll\n    - QMessageBox.StandardButton.Abort\n    - QMessageBox.StandardButton.Retry\n    - QMessageBox.StandardButton.Ignore\n    - QMessageBox.StandardButton.NoButton\n</pre> <p></p> <pre>import sys\nfrom PyQt6.QtGui import QIcon\nfrom PyQt6.QtWidgets import QApplication, QDialog, QMainWindow, QPushButton,QDialogButtonBox,QVBoxLayout,QLabel, QMessageBox\n\nclass CustomDialog(QDialog):\n    def __init__(self, parent=None):\n        super().__init__(parent)\n\n        self.setWindowTitle(\"HELLO!\")\n\n        QBtn = QDialogButtonBox.StandardButton.Ok | QDialogButtonBox.StandardButton.Cancel\n\n        self.buttonBox = QDialogButtonBox(QBtn)\n        self.buttonBox.accepted.connect(self.accept)\n        self.buttonBox.rejected.connect(self.reject)\n        self.setWindowIcon(QIcon(\"../asset/utd/jpg\"))\n\n        self.layout = QVBoxLayout()\n        message = QLabel(\"Something happened, is that OK?\")\n        self.layout.addWidget(message)\n        self.layout.addWidget(self.buttonBox)\n        self.setLayout(self.layout)\n\n\nclass MainWindow(QMainWindow):\n    def __init__(self):\n        super().__init__()\n\n        self.setWindowTitle(\"My App\")\n\n        button = QPushButton(\"Press me for a dialog!\")\n        button.clicked.connect(self.button_clicked)\n        self.setCentralWidget(button)\n\n    def button_clicked(self, s):\n        print(\"click\", s)\n\n        dlg = CustomDialog(self)\n        if dlg.exec():\n            print(\"Success!\")\n        else:\n            print(\"Cancel!\")\n\napp = QApplication(sys.argv)\n\nwindow = MainWindow()\nwindow.show()\n\napp.exec()\n</pre> </li> <li><p>Another Example</p> <p></p> <pre>class CustomDialog(QDialog):\n    def __init__(self):\n        super().__init__()\n\n        self.setWindowTitle(\"Custom Dialog\")\n        self.setGeometry(100, 100, 300, 200)\n\n        layout = QVBoxLayout()\n\n        self.label = QLabel(\"Enter your details:\")\n        layout.addWidget(self.label)\n\n        self.name_input = QLineEdit()\n        self.name_input.setPlaceholderText(\"Name\")\n        layout.addWidget(self.name_input)\n\n        self.age_input = QLineEdit()\n        self.age_input.setPlaceholderText(\"Age\")\n        layout.addWidget(self.age_input)\n\n        self.buttons = QDialogButtonBox(QDialogButtonBox.StandardButton.Ok | QDialogButtonBox.StandardButton.Cancel)\n        self.buttons.accepted.connect(self.accept)\n        self.buttons.rejected.connect(self.reject)\n        layout.addWidget(self.buttons)\n\n        self.setLayout(layout)\n\n    def accept(self):\n        name = self.name_input.text()\n        age = self.age_input.text()\n        print(f\"Name: {name}, Age: {age}\")\n        super().accept()\n\nclass MainWindow(QWidget):\n    def __init__(self):\n        super().__init__()\n\n        self.setWindowTitle(\"Main Window\")\n        self.setGeometry(100, 100, 300, 200)\n\n        layout = QVBoxLayout()\n\n        self.custom_dialog_btn = QPushButton(\"Open Custom Dialog\")\n        self.custom_dialog_btn.clicked.connect(self.open_custom_dialog)\n        layout.addWidget(self.custom_dialog_btn)\n\n        self.setLayout(layout)\n\n    def open_custom_dialog(self):\n        dialog = CustomDialog()\n        if dialog.exec():\n            print(\"Dialog accepted!\")\n        else:\n            print(\"Dialog rejected!\")\n</pre> </li> </ul>"},{"location":"PyQT/04-Tooltips-dialogs-Menus/#qmessagebox","title":"<code>QMessageBox</code>\u00b6","text":"<ul> <li>Qt also provides a built-in message dialog class called <code>QMessageBox</code>. This can be used to create <code>information</code>, <code>warning</code>, <code>about</code> or <code>question dialogs</code>.</li> </ul> <ul> <li>You can also tweak the <code>icon</code> shown on the dialog by setting the icon with one of the following.</li> </ul> Icon state Description QMessageBox.Icon.NoIcon The message box does not have an icon. QMessageBox.Icon.Question The message is asking a question. QMessageBox.Icon.Information The message is informational only. QMessageBox.Icon.Warning The message is warning. QMessageBox.Icon.Critical The message indicates a critical problem. <ul> <li><p>The four <code>information</code>, <code>question</code>, <code>warning</code> and <code>critical</code> methods also accept optional buttons and defaultButton arguments which can be used to tweak the buttons shown on the dialog and select one by default.</p> <p></p> <pre>def button_clicked(self, s):\n\n        button = QMessageBox.critical(\n            self,\n            \"Oh dear!\",\n            \"Something went very wrong.\",\n            buttons=QMessageBox.StandardButton.Discard | QMessageBox.StandardButton.NoToAll | QMessageBox.StandardButton.Ignore,\n            defaultButton=QMessageBox.StandardButton.Discard,\n        )\n\n        if button == QMessageBox.StandardButton.Discard:\n            print(\"Discard!\")\n        elif button == QMessageBox.StandardButton.NoToAll:\n            print(\"No to all!\")\n        else:\n            print(\"Ignore!\")\n</pre> </li> </ul>"},{"location":"PyQT/04-Tooltips-dialogs-Menus/#input-dialogs","title":"Input Dialogs\u00b6","text":"<ul> <li><p>Input dialogs are used to get input from the user. PyQt6 provides a simple way to create input dialogs using <code>QInputDialog</code>.</p> <p></p> </li> <li><p>Example</p> <pre>class InputDialogDemo(QWidget):\n    def __init__(self):\n        super().__init__()\n\n        self.setWindowTitle(\"Input Dialog Demo\")\n        self.setGeometry(100, 100, 300, 200)\n\n        layout = QVBoxLayout()\n\n        self.text_btn = QPushButton(\"Get Text\")\n        self.text_btn.clicked.connect(self.get_text)\n        layout.addWidget(self.text_btn)\n\n        self.int_btn = QPushButton(\"Get Integer\")\n        self.int_btn.clicked.connect(self.get_integer)\n        layout.addWidget(self.int_btn)\n\n        self.double_btn = QPushButton(\"Get Double\")\n        self.double_btn.clicked.connect(self.get_double)\n        layout.addWidget(self.double_btn)\n\n        self.combo_btn = QPushButton(\"Get Combo Box Selection\")\n        self.combo_btn.clicked.connect(self.get_combobox_selection)\n        layout.addWidget(self.combo_btn)\n\n        self.setLayout(layout)\n\n    def get_text(self):\n        text, ok = QInputDialog.getText(self, \"Input Text\", \"Enter your name:\")\n        if ok:\n            print(f\"Name: {text}\")\n\n    def get_integer(self):\n        number, ok = QInputDialog.getInt(self, \"Input Integer\", \"Enter your age:\", 25, 0, 100, 1)\n        if ok:\n            print(f\"Age: {number}\")\n\n    def get_double(self):\n        number, ok = QInputDialog.getDouble(self, \"Input Double\", \"Enter your salary:\", 50000.0, 0, 1000000, 2)\n        if ok:\n            print(f\"Salary: {number}\")\n\n    def get_combobox_selection(self):\n        items = [\"Option 1\", \"Option 2\", \"Option 3\", \"Option 4\"]\n        item, ok = QInputDialog.getItem(self, \"Select an Option\", \"Options:\", items, 0, False)\n        if ok and item:\n            print(f\"Selected: {item}\")\n</pre> </li> </ul>"},{"location":"PyQT/04-Tooltips-dialogs-Menus/#file-dialogs","title":"File Dialogs\u00b6","text":"<ul> <li><p>File dialogs allow the user to select files or directories from the file system. PyQt6 provides <code>QFileDialog</code> for this purpose.</p> <p></p> </li> <li><p>Example</p> <pre>class FileDialogDemo(QWidget):\n    def __init__(self):\n        super().__init__()\n\n        self.setWindowTitle(\"File Dialog Demo\")\n        self.setGeometry(100, 100, 300, 200)\n\n        layout = QVBoxLayout()\n\n        self.open_file_btn = QPushButton(\"Open File\")\n        self.open_file_btn.clicked.connect(self.open_file)\n        layout.addWidget(self.open_file_btn)\n\n        self.save_file_btn = QPushButton(\"Save File\")\n        self.save_file_btn.clicked.connect(self.save_file)\n        layout.addWidget(self.save_file_btn)\n\n        self.open_dir_btn = QPushButton(\"Open Directory\")\n        self.open_dir_btn.clicked.connect(self.open_directory)\n        layout.addWidget(self.open_dir_btn)\n\n        self.setLayout(layout)\n\n    def open_file(self):\n        file_name, _ = QFileDialog.getOpenFileName(self, \"Open File\", \"\", \"All Files (*);;Text Files (*.txt)\")\n        if file_name:\n            print(f\"Selected File: {file_name}\")\n\n    def save_file(self):\n        file_name, _ = QFileDialog.getSaveFileName(self, \"Save File\", \"\", \"All Files (*);;Text Files (*.txt)\")\n        if file_name:\n            print(f\"File to Save: {file_name}\")\n\n    def open_directory(self):\n        dir_name = QFileDialog.getExistingDirectory(self, \"Open Directory\", \"\")\n        if dir_name:\n            print(f\"Selected Directory: {dir_name}\")\n</pre> </li> </ul>"},{"location":"PyQT/04-Tooltips-dialogs-Menus/#menu-and-toolbar","title":"Menu and Toolbar\u00b6","text":""},{"location":"PyQT/04-Tooltips-dialogs-Menus/#menu","title":"Menu\u00b6","text":"<ol> <li>Creating the <code>Menu Bar</code></li> </ol> <ul> <li><p>In PyQt6, the <code>QMainWindow</code> class provides a built-in method <code>menuBar()</code> to create a menu bar.</p> <pre>menubar = self.menuBar()\n</pre> </li> </ul> <ol> <li><p>Adding Menus to the Menu Bar</p> <ul> <li><p>Next, we create and add menus to the menu bar. Menus like \"File\", \"Edit\", and \"Help\" are common in many applications.</p> <pre>file_menu = menubar.addMenu('File')\nedit_menu = menubar.addMenu('Edit')\nhelp_menu = menubar.addMenu('Help')\n</pre> </li> </ul> </li> <li><p>Creating and Adding Actions</p> <ul> <li><p>Actions are the building blocks of menus. An action in <code>PyQt6</code> is an instance of the <code>QAction</code> class.</p> </li> <li><p>We add actions to the <code>Edit</code> menu for common text-editing functions such as <code>Undo</code>, <code>Redo</code>, <code>Cut</code>, <code>Copy</code>, and <code>Paste</code>.</p> </li> <li><p>We also assign standard keyboard shortcuts using <code>QKeySequence</code>.</p> <pre># Create actions for the Edit menu\nundo_action = QAction('Undo', self)\nundo_action.setShortcut(QKeySequence.StandardKey.Undo)\nedit_menu.addAction(undo_action)\n\nredo_action = QAction('Redo', self)\nredo_action.setShortcut(QKeySequence.StandardKey.Redo)\nedit_menu.addAction(redo_action)\n\n# Add separator\nedit_menu.addSeparator()\n\ncut_action = QAction('Cut', self)\ncut_action.setShortcut(QKeySequence.StandardKey.Cut)\nedit_menu.addAction(cut_action)\n\ncopy_action = QAction('Copy', self)\ncopy_action.setShortcut(QKeySequence.StandardKey.Copy)\nedit_menu.addAction(copy_action)\n\npaste_action = QAction('Paste', self)\npaste_action.setShortcut(QKeySequence.StandardKey.Paste)\nedit_menu.addAction(paste_action)\n</pre> </li> </ul> </li> <li><p>Adding a Submenu</p> <ul> <li><code>Submenus</code> are useful for organizing related actions under a common parent menu item.</li> <li>For instance, the <code>Format</code> submenu under the <code>Edit</code> menu groups text formatting actions.</li> </ul> <pre># Create Format submenu\nformat_menu = QMenu('Format', self)\nedit_menu.addMenu(format_menu)\n</pre> </li> </ol> <ul> <li><p>Example</p> <pre>class MenuDemo(QMainWindow):\n    def __init__(self):\n        super().__init__()\n\n        self.setWindowTitle(\"Menus\")\n        self.setGeometry(100, 100, 600, 400)\n\n        # Create a central widget\n        self.text_edit = QTextEdit()\n        self.setCentralWidget(self.text_edit)\n\n        # Create a menu bar\n        menubar = self.menuBar()\n\n        # Add File menu\n        file_menu = menubar.addMenu('File')\n\n        # Add Edit menu\n        edit_menu = menubar.addMenu('Edit')\n\n        # Add Help menu\n        help_menu = menubar.addMenu('Help')\n\n        # Add actions to the Edit menu\n        undo_action = QAction('Undo', self)\n        undo_action.setShortcut(QKeySequence.StandardKey.Undo)\n        edit_menu.addAction(undo_action)\n\n        redo_action = QAction('Redo', self)\n        redo_action.setShortcut(QKeySequence.StandardKey.Redo)\n        edit_menu.addAction(redo_action)\n\n        edit_menu.addSeparator()\n\n        cut_action = QAction('Cut', self)\n        cut_action.setShortcut(QKeySequence.StandardKey.Cut)\n        edit_menu.addAction(cut_action)\n\n        copy_action = QAction('Copy', self)\n        copy_action.setShortcut(QKeySequence.StandardKey.Copy)\n        edit_menu.addAction(copy_action)\n\n        paste_action = QAction('Paste', self)\n        paste_action.setShortcut(QKeySequence.StandardKey.Paste)\n        edit_menu.addAction(paste_action)\n\n        # Add Format submenu to Edit menu\n        format_menu = QMenu('Format', self)\n        edit_menu.addMenu(format_menu)\n\n        bold_action = QAction('Bold', self)\n        bold_action.setShortcut('Ctrl+B')\n        format_menu.addAction(bold_action)\n\n        italic_action = QAction('Italic', self)\n        italic_action.setShortcut('Ctrl+I')\n        format_menu.addAction(italic_action)\n\n        format_menu.addSeparator()\n\n        left_align_action = QAction('Left Align', self)\n        left_align_action.setShortcut('Ctrl+L')\n        left_align_action.setCheckable(True)\n        left_align_action.setChecked(True)\n        format_menu.addAction(left_align_action)\n\n        right_align_action = QAction('Right Align', self)\n        right_align_action.setShortcut('Ctrl+R')\n        right_align_action.setCheckable(True)\n        format_menu.addAction(right_align_action)\n\n        justify_action = QAction('Justify', self)\n        justify_action.setShortcut('Ctrl+J')\n        justify_action.setCheckable(True)\n        format_menu.addAction(justify_action)\n\n        center_action = QAction('Center', self)\n        center_action.setShortcut('Ctrl+E')\n        center_action.setCheckable(True)\n        format_menu.addAction(center_action)\n\n        format_menu.addSeparator()\n\n        line_spacing_action = QAction('Set Line Spacing...', self)\n        format_menu.addAction(line_spacing_action)\n\n        paragraph_spacing_action = QAction('Set Paragraph Spacing...', self)\n        format_menu.addAction(paragraph_spacing_action)\n\n        self.show()\n</pre> </li> </ul>"},{"location":"PyQT/04-Tooltips-dialogs-Menus/#the-standard-key-in-qkeysequence","title":"The standard key in <code>QKeySequence</code>\u00b6","text":""},{"location":"PyQT/04-Tooltips-dialogs-Menus/#toolbar","title":"Toolbar\u00b6","text":"<p>Toolbars are bars of <code>icons</code> and/or <code>text</code> used to perform common tasks within an application, for which accessing via a menu would be cumbersome.</p> <p></p> <ol> <li><p>Creating a Toolbar</p> <ul> <li>The toolbar is created using the <code>QToolBar</code> class and added to the main window using <code>addToolBar()</code>.</li> </ul> <pre>toolbar = QToolBar(\"My main toolbar\")\nself.addToolBar(toolbar)\n</pre> </li> <li><p>Adding Actions to the Toolbar</p> <ul> <li>Actions, represented by instances of <code>QAction</code>, are added to the toolbar.</li> <li>These actions typically represent commands or functionalities accessible via toolbar buttons.</li> </ul> <pre>button_action = QAction(QIcon(\"./docs/PyQT/asset/utd.jpg\"), \"Your button\", self)\nbutton_action.setStatusTip(\"This is your button\")\nbutton_action.triggered.connect(self.onMyToolBarButtonClick)\nbutton_action.setCheckable(True)\ntoolbar.addAction(button_action)\n</pre> </li> <li><p>Adding Widgets to the Toolbar</p> <ul> <li>Apart from actions, <code>widgets</code> can also be added to the toolbar using <code>addWidget()</code>.</li> <li>In the provided script, a <code>QLabel</code> and a <code>QCheckBox</code> are added to the toolbar.</li> </ul> <pre>toolbar.addWidget(QLabel(\"Hello\"))\ntoolbar.addWidget(QCheckBox())\n</pre> </li> </ol> <ul> <li><p>Example</p> <pre>class MainWindow(QMainWindow):\n\n   def __init__(self):\n      super(MainWindow, self).__init__()\n\n      self.setWindowTitle(\"My Awesome App\")\n      label = QLabel(\"Hello!\")\n      label.setAlignment(Qt.AlignmentFlag.AlignCenter)\n\n      self.setCentralWidget(label)\n\n      toolbar = QToolBar(\"My main toolbar\")\n      self.addToolBar(toolbar)\n\n      button_action = QAction(QIcon(\"./docs/PyQT/asset/utd.jpg\"),\"Your button\", self)\n      button_action.setStatusTip(\"This is your button\")\n      button_action.triggered.connect(self.onMyToolBarButtonClick)\n      button_action.setCheckable(True)\n      toolbar.addAction(button_action)\n\n\n      toolbar.addSeparator()\n\n      button_action2 = QAction(QIcon(\"./docs/PyQT/asset/utd.jpg\"), \"Your &amp;button2\", self)\n      button_action2.setStatusTip(\"This is your button2\")\n      button_action2.triggered.connect(self.onMyToolBarButtonClick)\n      button_action2.setCheckable(True)\n      toolbar.addAction(button_action2)\n\n      toolbar.addWidget(QLabel(\"Hello\"))\n      toolbar.addWidget(QCheckBox())\n\n      self.setStatusBar(QStatusBar(self))\n\n   def onMyToolBarButtonClick(self, s):\n      print(\"click\", s)\n</pre> </li> </ul>"},{"location":"PyQT/05-qt-designer/","title":"05 Qt Designer","text":"In\u00a0[\u00a0]: Copied! <pre># QT Designer\n</pre> # QT Designer"},{"location":"PyQT/06-MVC-in-qt/","title":"06 MVC in qt","text":"In\u00a0[\u00a0]: Copied! <pre># MVC in PyQt6\n</pre> # MVC in PyQt6"},{"location":"PyQT/06-multithreading-in-qt/","title":"06 multithreading in qt","text":"In\u00a0[\u00a0]: Copied! <pre># Multithreading in PyQt6\n</pre> # Multithreading in PyQt6"},{"location":"PyQT/07-customize-widget/","title":"07 customize widget","text":"In\u00a0[\u00a0]: Copied! <pre># Customize Widget\n</pre> # Customize Widget"},{"location":"PyQT/08-packaging/","title":"08 packaging","text":"In\u00a0[\u00a0]: Copied! <pre># Packaging\n</pre> # Packaging"},{"location":"PyQT/__init__/","title":"init","text":""},{"location":"PyQT/script/04_toolBar/","title":"04 toolBar","text":"In\u00a0[\u00a0]: Copied! <pre>import sys\nfrom PyQt6.QtWidgets import (\n    QMainWindow, QApplication,\n    QLabel, QToolBar, QStatusBar,QCheckBox\n)\nfrom PyQt6.QtGui import QAction, QIcon \nfrom PyQt6.QtCore import Qt\n</pre> import sys from PyQt6.QtWidgets import (     QMainWindow, QApplication,     QLabel, QToolBar, QStatusBar,QCheckBox ) from PyQt6.QtGui import QAction, QIcon  from PyQt6.QtCore import Qt In\u00a0[\u00a0]: Copied! <pre>class MainWindow(QMainWindow):\n\n    def __init__(self):\n        super(MainWindow, self).__init__()\n\n        self.setWindowTitle(\"My Awesome App\")\n        label = QLabel(\"Hello!\")\n        label.setAlignment(Qt.AlignmentFlag.AlignCenter)\n\n        self.setCentralWidget(label)\n\n        toolbar = QToolBar(\"My main toolbar\")\n        self.addToolBar(toolbar)\n        \n        button_action = QAction(QIcon(\"./docs/PyQT/asset/utd.jpg\"),\"Your button\", self)\n        button_action.setStatusTip(\"This is your button\")\n        button_action.triggered.connect(self.onMyToolBarButtonClick)\n        button_action.setCheckable(True)\n        toolbar.addAction(button_action)\n        \n\n        toolbar.addSeparator()\n\n        button_action2 = QAction(QIcon(\"./docs/PyQT/asset/utd.jpg\"), \"Your &amp;button2\", self)\n        button_action2.setStatusTip(\"This is your button2\")\n        button_action2.triggered.connect(self.onMyToolBarButtonClick)\n        button_action2.setCheckable(True)\n        toolbar.addAction(button_action2)\n\n        toolbar.addWidget(QLabel(\"Hello\"))\n        toolbar.addWidget(QCheckBox())\n\n        self.setStatusBar(QStatusBar(self))\n        \n    def onMyToolBarButtonClick(self, s):\n        print(\"click\", s)\n</pre> class MainWindow(QMainWindow):      def __init__(self):         super(MainWindow, self).__init__()          self.setWindowTitle(\"My Awesome App\")         label = QLabel(\"Hello!\")         label.setAlignment(Qt.AlignmentFlag.AlignCenter)          self.setCentralWidget(label)          toolbar = QToolBar(\"My main toolbar\")         self.addToolBar(toolbar)                  button_action = QAction(QIcon(\"./docs/PyQT/asset/utd.jpg\"),\"Your button\", self)         button_action.setStatusTip(\"This is your button\")         button_action.triggered.connect(self.onMyToolBarButtonClick)         button_action.setCheckable(True)         toolbar.addAction(button_action)                   toolbar.addSeparator()          button_action2 = QAction(QIcon(\"./docs/PyQT/asset/utd.jpg\"), \"Your &amp;button2\", self)         button_action2.setStatusTip(\"This is your button2\")         button_action2.triggered.connect(self.onMyToolBarButtonClick)         button_action2.setCheckable(True)         toolbar.addAction(button_action2)          toolbar.addWidget(QLabel(\"Hello\"))         toolbar.addWidget(QCheckBox())          self.setStatusBar(QStatusBar(self))              def onMyToolBarButtonClick(self, s):         print(\"click\", s) In\u00a0[\u00a0]: Copied! <pre>app = QApplication(sys.argv)\nw = MainWindow()\nw.show()\napp.exec()\n</pre> app = QApplication(sys.argv) w = MainWindow() w.show() app.exec()"},{"location":"PyQT/script/customDialog/","title":"customDialog","text":"In\u00a0[\u00a0]: Copied! <pre>import sys\nfrom PyQt6.QtGui import QIcon\nfrom PyQt6.QtWidgets import QApplication, QDialog, QMainWindow, QPushButton,QDialogButtonBox,QVBoxLayout,QLabel, QMessageBox\n</pre> import sys from PyQt6.QtGui import QIcon from PyQt6.QtWidgets import QApplication, QDialog, QMainWindow, QPushButton,QDialogButtonBox,QVBoxLayout,QLabel, QMessageBox In\u00a0[\u00a0]: Copied! <pre>class CustomDialog(QDialog):\n    def __init__(self, parent=None):\n        super().__init__(parent)\n\n        self.setWindowTitle(\"HELLO!\")\n\n        QBtn = QDialogButtonBox.StandardButton.Ok | QDialogButtonBox.StandardButton.Cancel\n\n        self.buttonBox = QDialogButtonBox(QBtn)\n        self.buttonBox.accepted.connect(self.accept)\n        self.buttonBox.rejected.connect(self.reject)\n        self.setWindowIcon(QIcon(\"../asset/utd/jpg\"))\n\n        self.layout = QVBoxLayout()\n        message = QLabel(\"Something happened, is that OK?\")\n        self.layout.addWidget(message)\n        self.layout.addWidget(self.buttonBox)\n        self.setLayout(self.layout)\n</pre> class CustomDialog(QDialog):     def __init__(self, parent=None):         super().__init__(parent)          self.setWindowTitle(\"HELLO!\")          QBtn = QDialogButtonBox.StandardButton.Ok | QDialogButtonBox.StandardButton.Cancel          self.buttonBox = QDialogButtonBox(QBtn)         self.buttonBox.accepted.connect(self.accept)         self.buttonBox.rejected.connect(self.reject)         self.setWindowIcon(QIcon(\"../asset/utd/jpg\"))          self.layout = QVBoxLayout()         message = QLabel(\"Something happened, is that OK?\")         self.layout.addWidget(message)         self.layout.addWidget(self.buttonBox)         self.setLayout(self.layout) In\u00a0[\u00a0]: Copied! <pre>class MainWindow(QMainWindow):\n    def __init__(self):\n        super().__init__()\n\n        self.setWindowTitle(\"My App\")\n\n        button = QPushButton(\"Press me for a dialog!\")\n        button.clicked.connect(self.button_clicked)\n        self.setCentralWidget(button)\n\n    def button_clicked(self, s):\n        print(\"click\", s)\n\n        dlg = CustomDialog(self)\n        if dlg.exec():\n            print(\"Success!\")\n        else:\n            print(\"Cancel!\")\n</pre> class MainWindow(QMainWindow):     def __init__(self):         super().__init__()          self.setWindowTitle(\"My App\")          button = QPushButton(\"Press me for a dialog!\")         button.clicked.connect(self.button_clicked)         self.setCentralWidget(button)      def button_clicked(self, s):         print(\"click\", s)          dlg = CustomDialog(self)         if dlg.exec():             print(\"Success!\")         else:             print(\"Cancel!\") In\u00a0[\u00a0]: Copied! <pre>app = QApplication(sys.argv)\n</pre> app = QApplication(sys.argv) In\u00a0[\u00a0]: Copied! <pre>window = MainWindow()\nwindow.show()\n</pre> window = MainWindow() window.show() In\u00a0[\u00a0]: Copied! <pre>app.exec()\n</pre> app.exec()"},{"location":"PyQT/script/customDialog2/","title":"customDialog2","text":"In\u00a0[\u00a0]: Copied! <pre>import sys\nfrom PyQt6.QtWidgets import QApplication, QDialog, QVBoxLayout, QLabel, QLineEdit, QPushButton, QDialogButtonBox,QWidget\n</pre> import sys from PyQt6.QtWidgets import QApplication, QDialog, QVBoxLayout, QLabel, QLineEdit, QPushButton, QDialogButtonBox,QWidget In\u00a0[\u00a0]: Copied! <pre>class CustomDialog(QDialog):\n    def __init__(self):\n        super().__init__()\n\n        self.setWindowTitle(\"Custom Dialog\")\n        self.setGeometry(100, 100, 300, 200)\n        \n        layout = QVBoxLayout()\n        \n        self.label = QLabel(\"Enter your details:\")\n        layout.addWidget(self.label)\n        \n        self.name_input = QLineEdit()\n        self.name_input.setPlaceholderText(\"Name\")\n        layout.addWidget(self.name_input)\n        \n        self.age_input = QLineEdit()\n        self.age_input.setPlaceholderText(\"Age\")\n        layout.addWidget(self.age_input)\n        \n        self.buttons = QDialogButtonBox(QDialogButtonBox.StandardButton.Ok | QDialogButtonBox.StandardButton.Cancel)\n        self.buttons.accepted.connect(self.accept)\n        self.buttons.rejected.connect(self.reject)\n        layout.addWidget(self.buttons)\n        \n        self.setLayout(layout)\n\n    def accept(self):\n        name = self.name_input.text()\n        age = self.age_input.text()\n        print(f\"Name: {name}, Age: {age}\")\n        super().accept()\n</pre> class CustomDialog(QDialog):     def __init__(self):         super().__init__()          self.setWindowTitle(\"Custom Dialog\")         self.setGeometry(100, 100, 300, 200)                  layout = QVBoxLayout()                  self.label = QLabel(\"Enter your details:\")         layout.addWidget(self.label)                  self.name_input = QLineEdit()         self.name_input.setPlaceholderText(\"Name\")         layout.addWidget(self.name_input)                  self.age_input = QLineEdit()         self.age_input.setPlaceholderText(\"Age\")         layout.addWidget(self.age_input)                  self.buttons = QDialogButtonBox(QDialogButtonBox.StandardButton.Ok | QDialogButtonBox.StandardButton.Cancel)         self.buttons.accepted.connect(self.accept)         self.buttons.rejected.connect(self.reject)         layout.addWidget(self.buttons)                  self.setLayout(layout)      def accept(self):         name = self.name_input.text()         age = self.age_input.text()         print(f\"Name: {name}, Age: {age}\")         super().accept() In\u00a0[\u00a0]: Copied! <pre>class MainWindow(QWidget):\n    def __init__(self):\n        super().__init__()\n\n        self.setWindowTitle(\"Main Window\")\n        self.setGeometry(100, 100, 300, 200)\n        \n        layout = QVBoxLayout()\n        \n        self.custom_dialog_btn = QPushButton(\"Open Custom Dialog\")\n        self.custom_dialog_btn.clicked.connect(self.open_custom_dialog)\n        layout.addWidget(self.custom_dialog_btn)\n        \n        self.setLayout(layout)\n\n    def open_custom_dialog(self):\n        dialog = CustomDialog()\n        if dialog.exec():\n            print(\"Dialog accepted!\")\n        else:\n            print(\"Dialog rejected!\")\n</pre> class MainWindow(QWidget):     def __init__(self):         super().__init__()          self.setWindowTitle(\"Main Window\")         self.setGeometry(100, 100, 300, 200)                  layout = QVBoxLayout()                  self.custom_dialog_btn = QPushButton(\"Open Custom Dialog\")         self.custom_dialog_btn.clicked.connect(self.open_custom_dialog)         layout.addWidget(self.custom_dialog_btn)                  self.setLayout(layout)      def open_custom_dialog(self):         dialog = CustomDialog()         if dialog.exec():             print(\"Dialog accepted!\")         else:             print(\"Dialog rejected!\") In\u00a0[\u00a0]: Copied! <pre>app = QApplication(sys.argv)\nwindow = MainWindow()\nwindow.show()\napp.exec()\n</pre> app = QApplication(sys.argv) window = MainWindow() window.show() app.exec()"},{"location":"PyQT/script/design/","title":"Design","text":"<p>Form implementation generated from reading ui file 'design-01.ui'</p> <p>Created by: PyQt6 UI code generator 6.7.0</p> <p>WARNING: Any manual changes made to this file will be lost when pyuic6 is run again.  Do not edit this file unless you know what you are doing.</p> In\u00a0[\u00a0]: Copied! <pre>from PyQt6 import QtCore, QtGui, QtWidgets\n</pre> from PyQt6 import QtCore, QtGui, QtWidgets In\u00a0[\u00a0]: Copied! <pre>class Ui_MainWindow(object):\n    def setupUi(self, MainWindow):\n        MainWindow.setObjectName(\"MainWindow\")\n        MainWindow.resize(643, 491)\n        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)\n        self.centralwidget.setObjectName(\"centralwidget\")\n        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)\n        self.gridLayout.setObjectName(\"gridLayout\")\n        self.lineEdit = QtWidgets.QLineEdit(parent=self.centralwidget)\n        self.lineEdit.setMinimumSize(QtCore.QSize(544, 0))\n        font = QtGui.QFont()\n        font.setPointSize(11)\n        self.lineEdit.setFont(font)\n        self.lineEdit.setObjectName(\"lineEdit\")\n        self.gridLayout.addWidget(self.lineEdit, 2, 0, 1, 1)\n        self.label = QtWidgets.QLabel(parent=self.centralwidget)\n        font = QtGui.QFont()\n        font.setPointSize(12)\n        font.setBold(True)\n        self.label.setFont(font)\n        self.label.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading|QtCore.Qt.AlignmentFlag.AlignLeft|QtCore.Qt.AlignmentFlag.AlignTop)\n        self.label.setObjectName(\"label\")\n        self.gridLayout.addWidget(self.label, 0, 0, 1, 2, QtCore.Qt.AlignmentFlag.AlignHCenter)\n        self.listWidget = QtWidgets.QListWidget(parent=self.centralwidget)\n        self.listWidget.setObjectName(\"listWidget\")\n        self.gridLayout.addWidget(self.listWidget, 1, 0, 1, 2)\n        self.pushButton = QtWidgets.QPushButton(parent=self.centralwidget)\n        font = QtGui.QFont()\n        font.setPointSize(10)\n        self.pushButton.setFont(font)\n        self.pushButton.setObjectName(\"pushButton\")\n        self.gridLayout.addWidget(self.pushButton, 2, 1, 1, 1)\n        MainWindow.setCentralWidget(self.centralwidget)\n        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)\n        self.menubar.setGeometry(QtCore.QRect(0, 0, 643, 22))\n        self.menubar.setObjectName(\"menubar\")\n        MainWindow.setMenuBar(self.menubar)\n        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)\n        self.statusbar.setObjectName(\"statusbar\")\n        MainWindow.setStatusBar(self.statusbar)\n\n        self.retranslateUi(MainWindow)\n        QtCore.QMetaObject.connectSlotsByName(MainWindow)\n\n    def retranslateUi(self, MainWindow):\n        _translate = QtCore.QCoreApplication.translate\n        MainWindow.setWindowTitle(_translate(\"MainWindow\", \"MainWindow\"))\n        self.label.setText(_translate(\"MainWindow\", \"ToDo List\"))\n        self.pushButton.setText(_translate(\"MainWindow\", \"Submit\"))\n</pre> class Ui_MainWindow(object):     def setupUi(self, MainWindow):         MainWindow.setObjectName(\"MainWindow\")         MainWindow.resize(643, 491)         self.centralwidget = QtWidgets.QWidget(parent=MainWindow)         self.centralwidget.setObjectName(\"centralwidget\")         self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)         self.gridLayout.setObjectName(\"gridLayout\")         self.lineEdit = QtWidgets.QLineEdit(parent=self.centralwidget)         self.lineEdit.setMinimumSize(QtCore.QSize(544, 0))         font = QtGui.QFont()         font.setPointSize(11)         self.lineEdit.setFont(font)         self.lineEdit.setObjectName(\"lineEdit\")         self.gridLayout.addWidget(self.lineEdit, 2, 0, 1, 1)         self.label = QtWidgets.QLabel(parent=self.centralwidget)         font = QtGui.QFont()         font.setPointSize(12)         font.setBold(True)         self.label.setFont(font)         self.label.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading|QtCore.Qt.AlignmentFlag.AlignLeft|QtCore.Qt.AlignmentFlag.AlignTop)         self.label.setObjectName(\"label\")         self.gridLayout.addWidget(self.label, 0, 0, 1, 2, QtCore.Qt.AlignmentFlag.AlignHCenter)         self.listWidget = QtWidgets.QListWidget(parent=self.centralwidget)         self.listWidget.setObjectName(\"listWidget\")         self.gridLayout.addWidget(self.listWidget, 1, 0, 1, 2)         self.pushButton = QtWidgets.QPushButton(parent=self.centralwidget)         font = QtGui.QFont()         font.setPointSize(10)         self.pushButton.setFont(font)         self.pushButton.setObjectName(\"pushButton\")         self.gridLayout.addWidget(self.pushButton, 2, 1, 1, 1)         MainWindow.setCentralWidget(self.centralwidget)         self.menubar = QtWidgets.QMenuBar(parent=MainWindow)         self.menubar.setGeometry(QtCore.QRect(0, 0, 643, 22))         self.menubar.setObjectName(\"menubar\")         MainWindow.setMenuBar(self.menubar)         self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)         self.statusbar.setObjectName(\"statusbar\")         MainWindow.setStatusBar(self.statusbar)          self.retranslateUi(MainWindow)         QtCore.QMetaObject.connectSlotsByName(MainWindow)      def retranslateUi(self, MainWindow):         _translate = QtCore.QCoreApplication.translate         MainWindow.setWindowTitle(_translate(\"MainWindow\", \"MainWindow\"))         self.label.setText(_translate(\"MainWindow\", \"ToDo List\"))         self.pushButton.setText(_translate(\"MainWindow\", \"Submit\"))"},{"location":"PyQT/script/dialog_QThread/","title":"dialog QThread","text":"In\u00a0[\u00a0]: Copied! <pre>import sys\nimport time\nfrom PyQt6.QtWidgets import QApplication, QWidget, QPushButton, QVBoxLayout, QProgressDialog\nfrom PyQt6.QtCore import QThread, QObject, pyqtSignal, Qt\n</pre> import sys import time from PyQt6.QtWidgets import QApplication, QWidget, QPushButton, QVBoxLayout, QProgressDialog from PyQt6.QtCore import QThread, QObject, pyqtSignal, Qt In\u00a0[\u00a0]: Copied! <pre>class Worker(QObject):\n    finished = pyqtSignal()\n    progress = pyqtSignal(list)\n\n    def run(self):\n        for i in range(10):\n            time.sleep(1)\n            self.progress.emit([f\"Working on step {i + 1}\",(i + 1) * 10])  # Emit progress as percentage\n        self.finished.emit()\n</pre> class Worker(QObject):     finished = pyqtSignal()     progress = pyqtSignal(list)      def run(self):         for i in range(10):             time.sleep(1)             self.progress.emit([f\"Working on step {i + 1}\",(i + 1) * 10])  # Emit progress as percentage         self.finished.emit() In\u00a0[\u00a0]: Copied! <pre>class TestApp(QWidget):\n    def __init__(self):\n        super().__init__()\n        self.initUI()\n\n    def initUI(self):\n        self.setWindowTitle('PyQt6 Button Click Example')\n        self.setGeometry(100, 100, 300, 200)\n        layout = QVBoxLayout()\n        \n        self.btn = QPushButton('Click me', self)\n        self.btn.clicked.connect(self.showDialog)\n        layout.addWidget(self.btn)\n        \n        self.setLayout(layout)\n\n    def showDialog(self):\n        self.progressDialog = QProgressDialog(\"Task in progress...\", \"Cancel\", 0, 100, self)\n        self.progressDialog.setWindowTitle(\"Task Progress\")\n        self.progressDialog.setWindowModality(Qt.WindowModality.WindowModal)\n        self.progressDialog.setMinimumDuration(0)\n        \n        self.thread = QThread()\n        self.worker = Worker()\n        self.worker.moveToThread(self.thread)\n        self.thread.started.connect(self.worker.run)\n        self.worker.finished.connect(self.thread.quit)\n        self.worker.finished.connect(self.worker.deleteLater)\n        self.worker.finished.connect(self.thread.deleteLater)\n        self.worker.progress.connect(self.updateProgressDialog)\n        self.thread.start()\n        \n        self.btn.setEnabled(False)\n        self.thread.finished.connect(lambda: self.btn.setEnabled(True))\n        self.thread.finished.connect(self.progressDialog.close)\n\n    def updateProgressDialog(self, value):\n        self.progressDialog.setLabelText(value[0])\n        self.progressDialog.setValue(value[1])\n</pre> class TestApp(QWidget):     def __init__(self):         super().__init__()         self.initUI()      def initUI(self):         self.setWindowTitle('PyQt6 Button Click Example')         self.setGeometry(100, 100, 300, 200)         layout = QVBoxLayout()                  self.btn = QPushButton('Click me', self)         self.btn.clicked.connect(self.showDialog)         layout.addWidget(self.btn)                  self.setLayout(layout)      def showDialog(self):         self.progressDialog = QProgressDialog(\"Task in progress...\", \"Cancel\", 0, 100, self)         self.progressDialog.setWindowTitle(\"Task Progress\")         self.progressDialog.setWindowModality(Qt.WindowModality.WindowModal)         self.progressDialog.setMinimumDuration(0)                  self.thread = QThread()         self.worker = Worker()         self.worker.moveToThread(self.thread)         self.thread.started.connect(self.worker.run)         self.worker.finished.connect(self.thread.quit)         self.worker.finished.connect(self.worker.deleteLater)         self.worker.finished.connect(self.thread.deleteLater)         self.worker.progress.connect(self.updateProgressDialog)         self.thread.start()                  self.btn.setEnabled(False)         self.thread.finished.connect(lambda: self.btn.setEnabled(True))         self.thread.finished.connect(self.progressDialog.close)      def updateProgressDialog(self, value):         self.progressDialog.setLabelText(value[0])         self.progressDialog.setValue(value[1]) In\u00a0[\u00a0]: Copied! <pre>if __name__ == '__main__':\n    app = QApplication(sys.argv)\n    ex = TestApp()\n    ex.show()\n    sys.exit(app.exec())\n</pre> if __name__ == '__main__':     app = QApplication(sys.argv)     ex = TestApp()     ex.show()     sys.exit(app.exec())"},{"location":"PyQT/script/dialog_QThread5/","title":"dialog QThread5","text":"In\u00a0[\u00a0]: Copied! <pre>import sys\nimport time\nfrom PyQt5.QtWidgets import QApplication, QWidget, QPushButton, QVBoxLayout, QProgressDialog, QMessageBox\nfrom PyQt5.QtCore import QRunnable, QThreadPool, pyqtSignal, QObject, Qt\n</pre> import sys import time from PyQt5.QtWidgets import QApplication, QWidget, QPushButton, QVBoxLayout, QProgressDialog, QMessageBox from PyQt5.QtCore import QRunnable, QThreadPool, pyqtSignal, QObject, Qt In\u00a0[\u00a0]: Copied! <pre>class WorkerSignals(QObject):\n    finished = pyqtSignal()\n    progress = pyqtSignal(int)\n    error = pyqtSignal(str)\n</pre> class WorkerSignals(QObject):     finished = pyqtSignal()     progress = pyqtSignal(int)     error = pyqtSignal(str) In\u00a0[\u00a0]: Copied! <pre>class Worker(QRunnable):\n    def __init__(self):\n        super().__init__()\n        self.signals = WorkerSignals()\n\n    def run(self):\n        try:\n            for i in range(10):\n                if i == 9:\n                    raise IndexError(\"Index out of range error at step 9\")\n                time.sleep(1)\n                self.signals.progress.emit((i + 1) * 10)  # Emit progress as percentage\n        except Exception as e:\n            self.signals.error.emit(str(e))\n        finally:\n            self.signals.finished.emit()\n</pre> class Worker(QRunnable):     def __init__(self):         super().__init__()         self.signals = WorkerSignals()      def run(self):         try:             for i in range(10):                 if i == 9:                     raise IndexError(\"Index out of range error at step 9\")                 time.sleep(1)                 self.signals.progress.emit((i + 1) * 10)  # Emit progress as percentage         except Exception as e:             self.signals.error.emit(str(e))         finally:             self.signals.finished.emit() In\u00a0[\u00a0]: Copied! <pre>class TestApp(QWidget):\n    def __init__(self):\n        super().__init__()\n        self.initUI()\n\n    def initUI(self):\n        self.setWindowTitle('PyQt5 Button Click Example')\n        self.setGeometry(100, 100, 300, 200)\n        layout = QVBoxLayout()\n        \n        self.btn = QPushButton('Click me', self)\n        self.btn.clicked.connect(self.showDialog)\n        layout.addWidget(self.btn)\n        \n        self.setLayout(layout)\n        self.threadPool = QThreadPool()\n\n    def showDialog(self):\n        self.progressDialog = QProgressDialog(\"Task in progress...\", \"Cancel\", 0, 100, self)\n        self.progressDialog.setWindowTitle(\"Task Progress\")\n        self.progressDialog.setWindowModality(Qt.WindowModal)\n        self.progressDialog.setMinimumDuration(0)\n        \n        self.worker = Worker()\n        self.worker.signals.progress.connect(self.updateProgressDialog)\n        self.worker.signals.finished.connect(self.taskFinished)\n        self.worker.signals.error.connect(self.showError)\n        \n        self.btn.setEnabled(False)\n        self.threadPool.start(self.worker)\n\n    def updateProgressDialog(self, value):\n        self.progressDialog.setLabelText(f\"Working on {value}...\")\n        self.progressDialog.setValue(value)\n\n    def taskFinished(self):\n        self.btn.setEnabled(True)\n        self.progressDialog.close()\n\n    def showError(self, message):\n        msgBox = QMessageBox()\n        msgBox.setIcon(QMessageBox.Critical)\n        msgBox.setText(\"An error occurred\")\n        msgBox.setInformativeText(message)\n        msgBox.setWindowTitle(\"Error\")\n        msgBox.exec()\n</pre> class TestApp(QWidget):     def __init__(self):         super().__init__()         self.initUI()      def initUI(self):         self.setWindowTitle('PyQt5 Button Click Example')         self.setGeometry(100, 100, 300, 200)         layout = QVBoxLayout()                  self.btn = QPushButton('Click me', self)         self.btn.clicked.connect(self.showDialog)         layout.addWidget(self.btn)                  self.setLayout(layout)         self.threadPool = QThreadPool()      def showDialog(self):         self.progressDialog = QProgressDialog(\"Task in progress...\", \"Cancel\", 0, 100, self)         self.progressDialog.setWindowTitle(\"Task Progress\")         self.progressDialog.setWindowModality(Qt.WindowModal)         self.progressDialog.setMinimumDuration(0)                  self.worker = Worker()         self.worker.signals.progress.connect(self.updateProgressDialog)         self.worker.signals.finished.connect(self.taskFinished)         self.worker.signals.error.connect(self.showError)                  self.btn.setEnabled(False)         self.threadPool.start(self.worker)      def updateProgressDialog(self, value):         self.progressDialog.setLabelText(f\"Working on {value}...\")         self.progressDialog.setValue(value)      def taskFinished(self):         self.btn.setEnabled(True)         self.progressDialog.close()      def showError(self, message):         msgBox = QMessageBox()         msgBox.setIcon(QMessageBox.Critical)         msgBox.setText(\"An error occurred\")         msgBox.setInformativeText(message)         msgBox.setWindowTitle(\"Error\")         msgBox.exec() In\u00a0[\u00a0]: Copied! <pre>if __name__ == '__main__':\n    app = QApplication(sys.argv)\n    ex = TestApp()\n    ex.show()\n    sys.exit(app.exec_())\n</pre> if __name__ == '__main__':     app = QApplication(sys.argv)     ex = TestApp()     ex.show()     sys.exit(app.exec_())"},{"location":"PyQT/script/dialog_QThreadpool/","title":"dialog QThreadpool","text":"In\u00a0[\u00a0]: Copied! <pre>import sys\nimport time\nfrom PyQt6.QtWidgets import QApplication, QWidget, QPushButton, QVBoxLayout, QProgressDialog, QMessageBox\nfrom PyQt6.QtCore import QRunnable, QThreadPool, pyqtSignal, QObject, Qt\n</pre> import sys import time from PyQt6.QtWidgets import QApplication, QWidget, QPushButton, QVBoxLayout, QProgressDialog, QMessageBox from PyQt6.QtCore import QRunnable, QThreadPool, pyqtSignal, QObject, Qt In\u00a0[\u00a0]: Copied! <pre>class WorkerSignals(QObject):\n    finished = pyqtSignal()\n    progress = pyqtSignal(int)\n    error = pyqtSignal(str)\n</pre> class WorkerSignals(QObject):     finished = pyqtSignal()     progress = pyqtSignal(int)     error = pyqtSignal(str) In\u00a0[\u00a0]: Copied! <pre>class Worker(QRunnable):\n    def __init__(self):\n        super().__init__()\n        self.signals = WorkerSignals()\n\n    def run(self):\n        try:\n            for i in range(10):\n                if i == 9:\n                    raise IndexError(\"Index out of range error at step 9\")\n                time.sleep(1)\n                self.signals.progress.emit((i + 1) * 10)  # Emit progress as percentage\n        except Exception as e:\n            self.signals.error.emit(str(e))\n        finally:\n            self.signals.finished.emit()\n</pre> class Worker(QRunnable):     def __init__(self):         super().__init__()         self.signals = WorkerSignals()      def run(self):         try:             for i in range(10):                 if i == 9:                     raise IndexError(\"Index out of range error at step 9\")                 time.sleep(1)                 self.signals.progress.emit((i + 1) * 10)  # Emit progress as percentage         except Exception as e:             self.signals.error.emit(str(e))         finally:             self.signals.finished.emit() In\u00a0[\u00a0]: Copied! <pre>class TestApp(QWidget):\n    def __init__(self):\n        super().__init__()\n        self.initUI()\n\n    def initUI(self):\n        self.setWindowTitle('PyQt6 Button Click Example')\n        self.setGeometry(100, 100, 300, 200)\n        layout = QVBoxLayout()\n        \n        self.btn = QPushButton('Click me', self)\n        self.btn.clicked.connect(self.showDialog)\n        layout.addWidget(self.btn)\n        \n        self.setLayout(layout)\n        self.threadPool = QThreadPool()\n\n    def showDialog(self):\n        self.progressDialog = QProgressDialog(\"Task in progress...\", \"Cancel\", 0, 100, self)\n        self.progressDialog.setWindowTitle(\"Task Progress\")\n        self.progressDialog.setWindowModality(Qt.WindowModality.WindowModal)\n        self.progressDialog.setMinimumDuration(0)\n        \n        self.worker = Worker()\n        self.worker.signals.progress.connect(self.updateProgressDialog)\n        self.worker.signals.finished.connect(self.taskFinished)\n        self.worker.signals.error.connect(self.showError)\n        \n        self.btn.setEnabled(False)\n        self.threadPool.start(self.worker)\n\n    def updateProgressDialog(self, value):\n        self.progressDialog.setLabelText(f\"Working on {value}...\")\n        self.progressDialog.setValue(value)\n\n    def taskFinished(self):\n        self.btn.setEnabled(True)\n        self.progressDialog.close()\n\n    def showError(self, message):\n        msgBox = QMessageBox()\n        msgBox.setIcon(QMessageBox.Icon.Critical)\n        msgBox.setText(\"An error occurred\")\n        msgBox.setInformativeText(message)\n        msgBox.setWindowTitle(\"Error\")\n        msgBox.exec()\n</pre> class TestApp(QWidget):     def __init__(self):         super().__init__()         self.initUI()      def initUI(self):         self.setWindowTitle('PyQt6 Button Click Example')         self.setGeometry(100, 100, 300, 200)         layout = QVBoxLayout()                  self.btn = QPushButton('Click me', self)         self.btn.clicked.connect(self.showDialog)         layout.addWidget(self.btn)                  self.setLayout(layout)         self.threadPool = QThreadPool()      def showDialog(self):         self.progressDialog = QProgressDialog(\"Task in progress...\", \"Cancel\", 0, 100, self)         self.progressDialog.setWindowTitle(\"Task Progress\")         self.progressDialog.setWindowModality(Qt.WindowModality.WindowModal)         self.progressDialog.setMinimumDuration(0)                  self.worker = Worker()         self.worker.signals.progress.connect(self.updateProgressDialog)         self.worker.signals.finished.connect(self.taskFinished)         self.worker.signals.error.connect(self.showError)                  self.btn.setEnabled(False)         self.threadPool.start(self.worker)      def updateProgressDialog(self, value):         self.progressDialog.setLabelText(f\"Working on {value}...\")         self.progressDialog.setValue(value)      def taskFinished(self):         self.btn.setEnabled(True)         self.progressDialog.close()      def showError(self, message):         msgBox = QMessageBox()         msgBox.setIcon(QMessageBox.Icon.Critical)         msgBox.setText(\"An error occurred\")         msgBox.setInformativeText(message)         msgBox.setWindowTitle(\"Error\")         msgBox.exec() In\u00a0[\u00a0]: Copied! <pre>if __name__ == '__main__':\n    app = QApplication(sys.argv)\n    ex = TestApp()\n    ex.show()\n    sys.exit(app.exec())\n</pre> if __name__ == '__main__':     app = QApplication(sys.argv)     ex = TestApp()     ex.show()     sys.exit(app.exec())"},{"location":"PyQT/script/dialog_test/","title":"Dialog test","text":"In\u00a0[\u00a0]: Copied! <pre>import sys\nfrom time import sleep\n</pre> import sys from time import sleep In\u00a0[\u00a0]: Copied! <pre>from PyQt5.QtCore import Qt, QObject, QThread, pyqtSignal\nfrom PyQt5.QtWidgets import (\n    QApplication,\n    QLabel,\n    QMainWindow,\n    QPushButton,\n    QVBoxLayout,\n    QWidget,\n)\n</pre> from PyQt5.QtCore import Qt, QObject, QThread, pyqtSignal from PyQt5.QtWidgets import (     QApplication,     QLabel,     QMainWindow,     QPushButton,     QVBoxLayout,     QWidget, ) In\u00a0[\u00a0]: Copied! <pre># Step 1: Create a worker class\nclass Worker(QObject):\n    finished = pyqtSignal()\n    progress = pyqtSignal(int)\n\n    def run(self):\n        \"\"\"Long-running task.\"\"\"\n        for i in range(5):\n            sleep(1)\n            self.progress.emit(i + 1)\n        self.finished.emit()\n</pre> # Step 1: Create a worker class class Worker(QObject):     finished = pyqtSignal()     progress = pyqtSignal(int)      def run(self):         \"\"\"Long-running task.\"\"\"         for i in range(5):             sleep(1)             self.progress.emit(i + 1)         self.finished.emit() In\u00a0[\u00a0]: Copied! <pre>class Window(QMainWindow):\n    def __init__(self, parent=None):\n        super().__init__(parent)\n        self.clicksCount = 0\n        self.setupUi()\n\n    def setupUi(self):\n        self.setWindowTitle(\"Freezing GUI\")\n        self.resize(300, 150)\n        self.centralWidget = QWidget()\n        self.setCentralWidget(self.centralWidget)\n        # Create and connect widgets\n        self.clicksLabel = QLabel(\"Counting: 0 clicks\", self)\n        self.clicksLabel.setAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\n        self.stepLabel = QLabel(\"Long-Running Step: 0\")\n        self.stepLabel.setAlignment(Qt.AlignHCenter | Qt.AlignVCenter)\n        self.countBtn = QPushButton(\"Click me!\", self)\n        self.countBtn.clicked.connect(self.countClicks)\n        self.longRunningBtn = QPushButton(\"Long-Running Task!\", self)\n        self.longRunningBtn.clicked.connect(self.runLongTask)\n        # Set the layout\n        layout = QVBoxLayout()\n        layout.addWidget(self.clicksLabel)\n        layout.addWidget(self.countBtn)\n        layout.addStretch()\n        layout.addWidget(self.stepLabel)\n        layout.addWidget(self.longRunningBtn)\n        self.centralWidget.setLayout(layout)\n\n    def countClicks(self):\n        self.clicksCount += 1\n        self.clicksLabel.setText(f\"Counting: {self.clicksCount} clicks\")\n\n    def reportProgress(self, n):\n        self.stepLabel.setText(f\"Long-Running Step: {n}\")\n\n    def runLongTask(self):\n        # Step 2: Create a QThread object\n        self.thread = QThread()\n        # Step 3: Create a worker object\n        self.worker = Worker()\n        # Step 4: Move worker to the thread\n        self.worker.moveToThread(self.thread)\n        # Step 5: Connect signals and slots\n        self.thread.started.connect(self.worker.run)\n        self.worker.finished.connect(self.thread.quit)\n        self.worker.finished.connect(self.worker.deleteLater)\n        self.thread.finished.connect(self.thread.deleteLater)\n        self.worker.progress.connect(self.reportProgress)\n        # Step 6: Start the thread\n        self.thread.start()\n        \n        # Final resets\n        self.longRunningBtn.setEnabled(False)\n        self.thread.finished.connect(\n            lambda: self.longRunningBtn.setEnabled(True)\n        )\n        self.thread.finished.connect(\n            lambda: self.stepLabel.setText(\"Long-Running Step: 0\")\n        )\n</pre> class Window(QMainWindow):     def __init__(self, parent=None):         super().__init__(parent)         self.clicksCount = 0         self.setupUi()      def setupUi(self):         self.setWindowTitle(\"Freezing GUI\")         self.resize(300, 150)         self.centralWidget = QWidget()         self.setCentralWidget(self.centralWidget)         # Create and connect widgets         self.clicksLabel = QLabel(\"Counting: 0 clicks\", self)         self.clicksLabel.setAlignment(Qt.AlignHCenter | Qt.AlignVCenter)         self.stepLabel = QLabel(\"Long-Running Step: 0\")         self.stepLabel.setAlignment(Qt.AlignHCenter | Qt.AlignVCenter)         self.countBtn = QPushButton(\"Click me!\", self)         self.countBtn.clicked.connect(self.countClicks)         self.longRunningBtn = QPushButton(\"Long-Running Task!\", self)         self.longRunningBtn.clicked.connect(self.runLongTask)         # Set the layout         layout = QVBoxLayout()         layout.addWidget(self.clicksLabel)         layout.addWidget(self.countBtn)         layout.addStretch()         layout.addWidget(self.stepLabel)         layout.addWidget(self.longRunningBtn)         self.centralWidget.setLayout(layout)      def countClicks(self):         self.clicksCount += 1         self.clicksLabel.setText(f\"Counting: {self.clicksCount} clicks\")      def reportProgress(self, n):         self.stepLabel.setText(f\"Long-Running Step: {n}\")      def runLongTask(self):         # Step 2: Create a QThread object         self.thread = QThread()         # Step 3: Create a worker object         self.worker = Worker()         # Step 4: Move worker to the thread         self.worker.moveToThread(self.thread)         # Step 5: Connect signals and slots         self.thread.started.connect(self.worker.run)         self.worker.finished.connect(self.thread.quit)         self.worker.finished.connect(self.worker.deleteLater)         self.thread.finished.connect(self.thread.deleteLater)         self.worker.progress.connect(self.reportProgress)         # Step 6: Start the thread         self.thread.start()                  # Final resets         self.longRunningBtn.setEnabled(False)         self.thread.finished.connect(             lambda: self.longRunningBtn.setEnabled(True)         )         self.thread.finished.connect(             lambda: self.stepLabel.setText(\"Long-Running Step: 0\")         ) In\u00a0[\u00a0]: Copied! <pre>app = QApplication(sys.argv)\nwin = Window()\nwin.show()\napp.exec()\n</pre> app = QApplication(sys.argv) win = Window() win.show() app.exec()"},{"location":"PyQT/script/eventsHandling/","title":"eventsHandling","text":"In\u00a0[\u00a0]: Copied! <pre>from PyQt6.QtCore import Qt\nfrom PyQt6.QtWidgets import QWidget, QMainWindow, QPushButton, QLabel, QGridLayout, QApplication, QLineEdit, QComboBox, QMenu\nfrom PyQt6.QtGui import QIcon, QAction\n</pre> from PyQt6.QtCore import Qt from PyQt6.QtWidgets import QWidget, QMainWindow, QPushButton, QLabel, QGridLayout, QApplication, QLineEdit, QComboBox, QMenu from PyQt6.QtGui import QIcon, QAction In\u00a0[\u00a0]: Copied! <pre>class Window(QMainWindow):    \n    def __init__(self) -&gt; None:\n        super().__init__()\n        self.clicked_times = 0\n        \n        self.setMinimumSize(300,300)\n        \n        grid_layout = QGridLayout()\n        self.label = QLabel(\"This is a label\", alignment=Qt.AlignmentFlag.AlignCenter)\n        self.btn = QPushButton(\"Click Me!\")\n        self.lineEdit = QLineEdit()\n        self.lineEdit.setPlaceholderText(\"Please Enter your last name\")\n        self.comboBox = QComboBox()\n        self.comboBox.addItem(\"Red\")\n        self.comboBox.addItem(\"Green\")\n        self.comboBox.addItem(\"Yellow\")\n        self.comboBox.addItem(QIcon(\"./asset/utd.jpg\"), \"UTD\")\n             \n        self.btn.clicked.connect(self.clickHandler)\n        self.lineEdit.textChanged.connect(self.textChangeHandler)\n        self.lineEdit.setMaxLength(10)\n        self.comboBox.currentTextChanged.connect(self.comboChange)          \n        \n        grid_layout.addWidget(self.label, 0, 0)\n        grid_layout.addWidget(self.comboBox, 1, 0)\n        grid_layout.addWidget(self.lineEdit, 2, 0)\n        grid_layout.addWidget(self.btn, 3, 0)\n        centerWidget = QWidget()\n        centerWidget.setLayout(grid_layout)\n        \n        self.setCentralWidget(centerWidget)\n        \n    def clickHandler(self):\n        print(\"Button clicked!\")\n        self.clicked_times += 1 \n        self.label.setText(f\"Button has Been Clicked {self.clicked_times} times!\")\n        \n    def textChangeHandler(self):\n        self.label.setText(f\"Your last name is {self.lineEdit.text()}\")\n        \n    def comboChange(self):\n        self.label.setText(f\"Current Combo Box text is {self.comboBox.currentText()}\")\n        \n    def mousePressEvent(self, e):\n        if e.button() == Qt.MouseButton.LeftButton:\n            # handle the left-button press in here\n            self.label.setText(\"mousePressEvent LEFT\")\n\n        elif e.button() == Qt.MouseButton.MiddleButton:\n            # handle the middle-button press in here.\n            self.label.setText(\"mousePressEvent MIDDLE\")\n\n        elif e.button() == Qt.MouseButton.RightButton:\n            # handle the right-button press in here.\n            self.label.setText(\"mousePressEvent RIGHT\")\n\n    def mouseReleaseEvent(self, e):\n        if e.button() == Qt.MouseButton.LeftButton:\n            self.label.setText(\"mouseReleaseEvent LEFT\")\n\n        elif e.button() == Qt.MouseButton.MiddleButton:\n            self.label.setText(\"mouseReleaseEvent MIDDLE\")\n\n        elif e.button() == Qt.MouseButton.RightButton:\n            self.label.setText(\"mouseReleaseEvent RIGHT\")\n\n    def mouseDoubleClickEvent(self, e):\n        if e.button() == Qt.MouseButton.LeftButton:\n            self.label.setText(\"mouseDoubleClickEvent LEFT\")\n\n        elif e.button() == Qt.MouseButton.MiddleButton:\n            self.label.setText(\"mouseDoubleClickEvent MIDDLE\")\n\n        elif e.button() == Qt.MouseButton.RightButton:\n            self.label.setText(\"mouseDoubleClickEvent RIGHT\")\n            \n    def contextMenuEvent(self, e):\n        context = QMenu(self)\n        \n        action1 = QAction(\"test 1\", self)\n        action2 = QAction(\"test 2\", self)\n        action3 = QAction(\"test 3\", self)\n        \n        context.addAction(action1)\n        context.addAction(action2)\n        context.addAction(action3)\n        \n        action1.triggered.connect(lambda: self.setLabelText(\"test 1 from context menu\"))\n        action2.triggered.connect(lambda: self.setLabelText(\"test 2 from context menu\"))\n        action3.triggered.connect(lambda: self.setLabelText(\"test 3 from context menu\"))\n        \n        context.exec(e.globalPos())\n    \n    def setLabelText(self, text):\n        self.label.setText(text)\n</pre> class Window(QMainWindow):         def __init__(self) -&gt; None:         super().__init__()         self.clicked_times = 0                  self.setMinimumSize(300,300)                  grid_layout = QGridLayout()         self.label = QLabel(\"This is a label\", alignment=Qt.AlignmentFlag.AlignCenter)         self.btn = QPushButton(\"Click Me!\")         self.lineEdit = QLineEdit()         self.lineEdit.setPlaceholderText(\"Please Enter your last name\")         self.comboBox = QComboBox()         self.comboBox.addItem(\"Red\")         self.comboBox.addItem(\"Green\")         self.comboBox.addItem(\"Yellow\")         self.comboBox.addItem(QIcon(\"./asset/utd.jpg\"), \"UTD\")                       self.btn.clicked.connect(self.clickHandler)         self.lineEdit.textChanged.connect(self.textChangeHandler)         self.lineEdit.setMaxLength(10)         self.comboBox.currentTextChanged.connect(self.comboChange)                            grid_layout.addWidget(self.label, 0, 0)         grid_layout.addWidget(self.comboBox, 1, 0)         grid_layout.addWidget(self.lineEdit, 2, 0)         grid_layout.addWidget(self.btn, 3, 0)         centerWidget = QWidget()         centerWidget.setLayout(grid_layout)                  self.setCentralWidget(centerWidget)              def clickHandler(self):         print(\"Button clicked!\")         self.clicked_times += 1          self.label.setText(f\"Button has Been Clicked {self.clicked_times} times!\")              def textChangeHandler(self):         self.label.setText(f\"Your last name is {self.lineEdit.text()}\")              def comboChange(self):         self.label.setText(f\"Current Combo Box text is {self.comboBox.currentText()}\")              def mousePressEvent(self, e):         if e.button() == Qt.MouseButton.LeftButton:             # handle the left-button press in here             self.label.setText(\"mousePressEvent LEFT\")          elif e.button() == Qt.MouseButton.MiddleButton:             # handle the middle-button press in here.             self.label.setText(\"mousePressEvent MIDDLE\")          elif e.button() == Qt.MouseButton.RightButton:             # handle the right-button press in here.             self.label.setText(\"mousePressEvent RIGHT\")      def mouseReleaseEvent(self, e):         if e.button() == Qt.MouseButton.LeftButton:             self.label.setText(\"mouseReleaseEvent LEFT\")          elif e.button() == Qt.MouseButton.MiddleButton:             self.label.setText(\"mouseReleaseEvent MIDDLE\")          elif e.button() == Qt.MouseButton.RightButton:             self.label.setText(\"mouseReleaseEvent RIGHT\")      def mouseDoubleClickEvent(self, e):         if e.button() == Qt.MouseButton.LeftButton:             self.label.setText(\"mouseDoubleClickEvent LEFT\")          elif e.button() == Qt.MouseButton.MiddleButton:             self.label.setText(\"mouseDoubleClickEvent MIDDLE\")          elif e.button() == Qt.MouseButton.RightButton:             self.label.setText(\"mouseDoubleClickEvent RIGHT\")                  def contextMenuEvent(self, e):         context = QMenu(self)                  action1 = QAction(\"test 1\", self)         action2 = QAction(\"test 2\", self)         action3 = QAction(\"test 3\", self)                  context.addAction(action1)         context.addAction(action2)         context.addAction(action3)                  action1.triggered.connect(lambda: self.setLabelText(\"test 1 from context menu\"))         action2.triggered.connect(lambda: self.setLabelText(\"test 2 from context menu\"))         action3.triggered.connect(lambda: self.setLabelText(\"test 3 from context menu\"))                  context.exec(e.globalPos())          def setLabelText(self, text):         self.label.setText(text) In\u00a0[\u00a0]: Copied! <pre>app = QApplication([])\n</pre> app = QApplication([]) In\u00a0[\u00a0]: Copied! <pre>window = Window()\n</pre> window = Window() In\u00a0[\u00a0]: Copied! <pre>window.show()\n</pre> window.show() In\u00a0[\u00a0]: Copied! <pre>app.exec()\n</pre> app.exec()"},{"location":"PyQT/script/fileDialogs/","title":"fileDialogs","text":"In\u00a0[\u00a0]: Copied! <pre>import sys\nfrom PyQt6.QtWidgets import QApplication, QWidget, QPushButton, QVBoxLayout, QFileDialog\n</pre> import sys from PyQt6.QtWidgets import QApplication, QWidget, QPushButton, QVBoxLayout, QFileDialog In\u00a0[\u00a0]: Copied! <pre>class FileDialogDemo(QWidget):\n    def __init__(self):\n        super().__init__()\n\n        self.setWindowTitle(\"File Dialog Demo\")\n        self.setGeometry(100, 100, 300, 200)\n        \n        layout = QVBoxLayout()\n        \n        self.open_file_btn = QPushButton(\"Open File\")\n        self.open_file_btn.clicked.connect(self.open_file)\n        layout.addWidget(self.open_file_btn)\n        \n        self.save_file_btn = QPushButton(\"Save File\")\n        self.save_file_btn.clicked.connect(self.save_file)\n        layout.addWidget(self.save_file_btn)\n        \n        self.open_dir_btn = QPushButton(\"Open Directory\")\n        self.open_dir_btn.clicked.connect(self.open_directory)\n        layout.addWidget(self.open_dir_btn)\n        \n        self.setLayout(layout)\n\n    def open_file(self):\n        file_name, _ = QFileDialog.getOpenFileName(self, \"Open File\", \"\", \"All Files (*);;Text Files (*.txt)\")\n        if file_name:\n            print(f\"Selected File: {file_name}\")\n\n    def save_file(self):\n        file_name, _ = QFileDialog.getSaveFileName(self, \"Save File\", \"\", \"All Files (*);;Text Files (*.txt)\")\n        if file_name:\n            print(f\"File to Save: {file_name}\")\n\n    def open_directory(self):\n        dir_name = QFileDialog.getExistingDirectory(self, \"Open Directory\", \"\")\n        if dir_name:\n            print(f\"Selected Directory: {dir_name}\")\n</pre> class FileDialogDemo(QWidget):     def __init__(self):         super().__init__()          self.setWindowTitle(\"File Dialog Demo\")         self.setGeometry(100, 100, 300, 200)                  layout = QVBoxLayout()                  self.open_file_btn = QPushButton(\"Open File\")         self.open_file_btn.clicked.connect(self.open_file)         layout.addWidget(self.open_file_btn)                  self.save_file_btn = QPushButton(\"Save File\")         self.save_file_btn.clicked.connect(self.save_file)         layout.addWidget(self.save_file_btn)                  self.open_dir_btn = QPushButton(\"Open Directory\")         self.open_dir_btn.clicked.connect(self.open_directory)         layout.addWidget(self.open_dir_btn)                  self.setLayout(layout)      def open_file(self):         file_name, _ = QFileDialog.getOpenFileName(self, \"Open File\", \"\", \"All Files (*);;Text Files (*.txt)\")         if file_name:             print(f\"Selected File: {file_name}\")      def save_file(self):         file_name, _ = QFileDialog.getSaveFileName(self, \"Save File\", \"\", \"All Files (*);;Text Files (*.txt)\")         if file_name:             print(f\"File to Save: {file_name}\")      def open_directory(self):         dir_name = QFileDialog.getExistingDirectory(self, \"Open Directory\", \"\")         if dir_name:             print(f\"Selected Directory: {dir_name}\") In\u00a0[\u00a0]: Copied! <pre>app = QApplication(sys.argv)\nwindow = FileDialogDemo()\nwindow.show()\napp.exec()\n</pre> app = QApplication(sys.argv) window = FileDialogDemo() window.show() app.exec()"},{"location":"PyQT/script/glayout/","title":"Glayout","text":"In\u00a0[\u00a0]: Copied! <pre>import sys\nfrom PyQt6.QtWidgets import QApplication,QMainWindow,QLabel,QPushButton,QGridLayout,QWidget,QLineEdit\nfrom PyQt6.QtGui import QIcon\nfrom PyQt6.QtCore import Qt\n</pre> import sys from PyQt6.QtWidgets import QApplication,QMainWindow,QLabel,QPushButton,QGridLayout,QWidget,QLineEdit from PyQt6.QtGui import QIcon from PyQt6.QtCore import Qt In\u00a0[\u00a0]: Copied! <pre>application = QApplication(sys.argv)\n</pre> application = QApplication(sys.argv) In\u00a0[\u00a0]: Copied! <pre>window = QMainWindow()\nwindow.setWindowTitle(\"python-test\")\nwindow.setMinimumSize(300,300)\ncenterWidget = QWidget()\n</pre> window = QMainWindow() window.setWindowTitle(\"python-test\") window.setMinimumSize(300,300) centerWidget = QWidget() In\u00a0[\u00a0]: Copied! <pre>parent_layout = QGridLayout()\n</pre> parent_layout = QGridLayout() In\u00a0[\u00a0]: Copied! <pre>label = QLabel(\"Login\",alignment = Qt.AlignmentFlag.AlignCenter)\nlabel.setMaximumHeight(100)\nparent_layout.addWidget(label,0,0,1,4)\n</pre> label = QLabel(\"Login\",alignment = Qt.AlignmentFlag.AlignCenter) label.setMaximumHeight(100) parent_layout.addWidget(label,0,0,1,4) In\u00a0[\u00a0]: Copied! <pre>email_label = QLabel(\"Email:\")\nparent_layout.addWidget(email_label,1,0,1,1)\npass_label = QLabel(\"Password:\")\nparent_layout.addWidget(pass_label,2,0,1,1)\n</pre> email_label = QLabel(\"Email:\") parent_layout.addWidget(email_label,1,0,1,1) pass_label = QLabel(\"Password:\") parent_layout.addWidget(pass_label,2,0,1,1) In\u00a0[\u00a0]: Copied! <pre>email_text = QLineEdit()\npass_text = QLineEdit()\npass_text.setEchoMode(QLineEdit.EchoMode.Password)\nparent_layout.addWidget(email_text,1,1,1,3)\nparent_layout.addWidget(pass_text,2,1,1,3)\n</pre> email_text = QLineEdit() pass_text = QLineEdit() pass_text.setEchoMode(QLineEdit.EchoMode.Password) parent_layout.addWidget(email_text,1,1,1,3) parent_layout.addWidget(pass_text,2,1,1,3) In\u00a0[\u00a0]: Copied! <pre>submit_btn = QPushButton(\"Submit\")\nparent_layout.addWidget(submit_btn,3,0,1,4)\n</pre> submit_btn = QPushButton(\"Submit\") parent_layout.addWidget(submit_btn,3,0,1,4) <p>parent_layout.setHorizontalSpacing(10)</p> In\u00a0[\u00a0]: Copied! <pre>centerWidget.setLayout(parent_layout)\nwindow.setCentralWidget(centerWidget)\nwindow.show()\n</pre> centerWidget.setLayout(parent_layout) window.setCentralWidget(centerWidget) window.show() In\u00a0[\u00a0]: Copied! <pre>sys.exit(application.exec())\n</pre> sys.exit(application.exec()) In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"PyQT/script/inputDialog/","title":"inputDialog","text":"In\u00a0[\u00a0]: Copied! <pre>import sys\nfrom PyQt6.QtWidgets import QApplication, QWidget, QPushButton, QVBoxLayout, QInputDialog\n</pre> import sys from PyQt6.QtWidgets import QApplication, QWidget, QPushButton, QVBoxLayout, QInputDialog In\u00a0[\u00a0]: Copied! <pre>class InputDialogDemo(QWidget):\n    def __init__(self):\n        super().__init__()\n\n        self.setWindowTitle(\"Input Dialog Demo\")\n        self.setGeometry(100, 100, 300, 200)\n        \n        layout = QVBoxLayout()\n        \n        self.text_btn = QPushButton(\"Get Text\")\n        self.text_btn.clicked.connect(self.get_text)\n        layout.addWidget(self.text_btn)\n        \n        self.int_btn = QPushButton(\"Get Integer\")\n        self.int_btn.clicked.connect(self.get_integer)\n        layout.addWidget(self.int_btn)\n        \n        self.double_btn = QPushButton(\"Get Double\")\n        self.double_btn.clicked.connect(self.get_double)\n        layout.addWidget(self.double_btn)\n        \n        self.combo_btn = QPushButton(\"Get Combo Box Selection\")\n        self.combo_btn.clicked.connect(self.get_combobox_selection)\n        layout.addWidget(self.combo_btn)\n        \n        self.setLayout(layout)\n\n    def get_text(self):\n        text, ok = QInputDialog.getText(self, \"Input Text\", \"Enter your name:\")\n        if ok:\n            print(f\"Name: {text}\")\n\n    def get_integer(self):\n        number, ok = QInputDialog.getInt(self, \"Input Integer\", \"Enter your age:\", 25, 0, 100, 1)\n        if ok:\n            print(f\"Age: {number}\")\n\n    def get_double(self):\n        number, ok = QInputDialog.getDouble(self, \"Input Double\", \"Enter your salary:\", 50000.0, 0, 1000000, 2)\n        if ok:\n            print(f\"Salary: {number}\")\n\n    def get_combobox_selection(self):\n        items = [\"Option 1\", \"Option 2\", \"Option 3\", \"Option 4\"]\n        item, ok = QInputDialog.getItem(self, \"Select an Option\", \"Options:\", items, 0, False)\n        if ok and item:\n            print(f\"Selected: {item}\")\n</pre> class InputDialogDemo(QWidget):     def __init__(self):         super().__init__()          self.setWindowTitle(\"Input Dialog Demo\")         self.setGeometry(100, 100, 300, 200)                  layout = QVBoxLayout()                  self.text_btn = QPushButton(\"Get Text\")         self.text_btn.clicked.connect(self.get_text)         layout.addWidget(self.text_btn)                  self.int_btn = QPushButton(\"Get Integer\")         self.int_btn.clicked.connect(self.get_integer)         layout.addWidget(self.int_btn)                  self.double_btn = QPushButton(\"Get Double\")         self.double_btn.clicked.connect(self.get_double)         layout.addWidget(self.double_btn)                  self.combo_btn = QPushButton(\"Get Combo Box Selection\")         self.combo_btn.clicked.connect(self.get_combobox_selection)         layout.addWidget(self.combo_btn)                  self.setLayout(layout)      def get_text(self):         text, ok = QInputDialog.getText(self, \"Input Text\", \"Enter your name:\")         if ok:             print(f\"Name: {text}\")      def get_integer(self):         number, ok = QInputDialog.getInt(self, \"Input Integer\", \"Enter your age:\", 25, 0, 100, 1)         if ok:             print(f\"Age: {number}\")      def get_double(self):         number, ok = QInputDialog.getDouble(self, \"Input Double\", \"Enter your salary:\", 50000.0, 0, 1000000, 2)         if ok:             print(f\"Salary: {number}\")      def get_combobox_selection(self):         items = [\"Option 1\", \"Option 2\", \"Option 3\", \"Option 4\"]         item, ok = QInputDialog.getItem(self, \"Select an Option\", \"Options:\", items, 0, False)         if ok and item:             print(f\"Selected: {item}\") In\u00a0[\u00a0]: Copied! <pre>app = QApplication(sys.argv)\nwindow = InputDialogDemo()\nwindow.show()\napp.exec()\n</pre> app = QApplication(sys.argv) window = InputDialogDemo() window.show() app.exec()"},{"location":"PyQT/script/menu_bar/","title":"Menu bar","text":"In\u00a0[\u00a0]: Copied! <pre>import sys\nfrom PyQt6.QtWidgets import QApplication, QMainWindow, QMenu, QTextEdit\nfrom PyQt6.QtGui import QKeySequence,QAction\n</pre> import sys from PyQt6.QtWidgets import QApplication, QMainWindow, QMenu, QTextEdit from PyQt6.QtGui import QKeySequence,QAction In\u00a0[\u00a0]: Copied! <pre>class MenuDemo(QMainWindow):\n    def __init__(self):\n        super().__init__()\n\n        self.setWindowTitle(\"Menus\")\n        self.setGeometry(100, 100, 600, 400)\n        \n        # Create a central widget\n        self.text_edit = QTextEdit()\n        self.setCentralWidget(self.text_edit)\n\n        # Create a menu bar\n        menubar = self.menuBar()\n\n        # Add File menu\n        file_menu = menubar.addMenu('File')\n\n        # Add Edit menu\n        edit_menu = menubar.addMenu('Edit')\n\n        # Add Help menu\n        help_menu = menubar.addMenu('Help')\n\n        # Add actions to the Edit menu\n        undo_action = QAction('Undo', self)\n        undo_action.setShortcut(QKeySequence.StandardKey.Undo)\n        edit_menu.addAction(undo_action)\n\n        redo_action = QAction('Redo', self)\n        redo_action.setShortcut(QKeySequence.StandardKey.Redo)\n        edit_menu.addAction(redo_action)\n\n        edit_menu.addSeparator()\n\n        cut_action = QAction('Cut', self)\n        cut_action.setShortcut(QKeySequence.StandardKey.Cut)\n        edit_menu.addAction(cut_action)\n\n        copy_action = QAction('Copy', self)\n        copy_action.setShortcut(QKeySequence.StandardKey.Copy)\n        edit_menu.addAction(copy_action)\n\n        paste_action = QAction('Paste', self)\n        paste_action.setShortcut(QKeySequence.StandardKey.Paste)\n        edit_menu.addAction(paste_action)\n\n        # Add Format submenu to Edit menu\n        format_menu = QMenu('Format', self)\n        edit_menu.addMenu(format_menu)\n\n        bold_action = QAction('Bold', self)\n        bold_action.setShortcut('Ctrl+B')\n        format_menu.addAction(bold_action)\n\n        italic_action = QAction('Italic', self)\n        italic_action.setShortcut('Ctrl+I')\n        format_menu.addAction(italic_action)\n\n        format_menu.addSeparator()\n\n        left_align_action = QAction('Left Align', self)\n        left_align_action.setShortcut('Ctrl+L')\n        left_align_action.setCheckable(True)\n        left_align_action.setChecked(True)\n        format_menu.addAction(left_align_action)\n\n        right_align_action = QAction('Right Align', self)\n        right_align_action.setShortcut('Ctrl+R')\n        right_align_action.setCheckable(True)\n        format_menu.addAction(right_align_action)\n\n        justify_action = QAction('Justify', self)\n        justify_action.setShortcut('Ctrl+J')\n        justify_action.setCheckable(True)\n        format_menu.addAction(justify_action)\n\n        center_action = QAction('Center', self)\n        center_action.setShortcut('Ctrl+E')\n        center_action.setCheckable(True)\n        format_menu.addAction(center_action)\n\n        format_menu.addSeparator()\n\n        line_spacing_action = QAction('Set Line Spacing...', self)\n        format_menu.addAction(line_spacing_action)\n\n        paragraph_spacing_action = QAction('Set Paragraph Spacing...', self)\n        format_menu.addAction(paragraph_spacing_action)\n\n        self.show()\n</pre> class MenuDemo(QMainWindow):     def __init__(self):         super().__init__()          self.setWindowTitle(\"Menus\")         self.setGeometry(100, 100, 600, 400)                  # Create a central widget         self.text_edit = QTextEdit()         self.setCentralWidget(self.text_edit)          # Create a menu bar         menubar = self.menuBar()          # Add File menu         file_menu = menubar.addMenu('File')          # Add Edit menu         edit_menu = menubar.addMenu('Edit')          # Add Help menu         help_menu = menubar.addMenu('Help')          # Add actions to the Edit menu         undo_action = QAction('Undo', self)         undo_action.setShortcut(QKeySequence.StandardKey.Undo)         edit_menu.addAction(undo_action)          redo_action = QAction('Redo', self)         redo_action.setShortcut(QKeySequence.StandardKey.Redo)         edit_menu.addAction(redo_action)          edit_menu.addSeparator()          cut_action = QAction('Cut', self)         cut_action.setShortcut(QKeySequence.StandardKey.Cut)         edit_menu.addAction(cut_action)          copy_action = QAction('Copy', self)         copy_action.setShortcut(QKeySequence.StandardKey.Copy)         edit_menu.addAction(copy_action)          paste_action = QAction('Paste', self)         paste_action.setShortcut(QKeySequence.StandardKey.Paste)         edit_menu.addAction(paste_action)          # Add Format submenu to Edit menu         format_menu = QMenu('Format', self)         edit_menu.addMenu(format_menu)          bold_action = QAction('Bold', self)         bold_action.setShortcut('Ctrl+B')         format_menu.addAction(bold_action)          italic_action = QAction('Italic', self)         italic_action.setShortcut('Ctrl+I')         format_menu.addAction(italic_action)          format_menu.addSeparator()          left_align_action = QAction('Left Align', self)         left_align_action.setShortcut('Ctrl+L')         left_align_action.setCheckable(True)         left_align_action.setChecked(True)         format_menu.addAction(left_align_action)          right_align_action = QAction('Right Align', self)         right_align_action.setShortcut('Ctrl+R')         right_align_action.setCheckable(True)         format_menu.addAction(right_align_action)          justify_action = QAction('Justify', self)         justify_action.setShortcut('Ctrl+J')         justify_action.setCheckable(True)         format_menu.addAction(justify_action)          center_action = QAction('Center', self)         center_action.setShortcut('Ctrl+E')         center_action.setCheckable(True)         format_menu.addAction(center_action)          format_menu.addSeparator()          line_spacing_action = QAction('Set Line Spacing...', self)         format_menu.addAction(line_spacing_action)          paragraph_spacing_action = QAction('Set Paragraph Spacing...', self)         format_menu.addAction(paragraph_spacing_action)          self.show() In\u00a0[\u00a0]: Copied! <pre>if __name__ == '__main__':\n    app = QApplication(sys.argv)\n    window = MenuDemo()\n    sys.exit(app.exec())\n</pre> if __name__ == '__main__':     app = QApplication(sys.argv)     window = MenuDemo()     sys.exit(app.exec())"},{"location":"PyQT/script/mouseEvent/","title":"mouseEvent","text":"In\u00a0[\u00a0]: Copied! <pre>import sys\nfrom PyQt6.QtWidgets import QWidget,QApplication,QMainWindow,QLabel\nfrom PyQt6.QtCore import Qt\n</pre> import sys from PyQt6.QtWidgets import QWidget,QApplication,QMainWindow,QLabel from PyQt6.QtCore import Qt In\u00a0[\u00a0]: Copied! <pre>class MainWindow(QMainWindow):\n    def __init__(self) -&gt; None:\n        super().__init__()\n        self.label = QLabel(\"Click in this window\")\n        self.setMinimumSize(200,200)\n        self.setCentralWidget(self.label)\n        \n    def mouseMoveEvent(self, e):\n        self.label.setText(\"mouseMoveEvent\")\n\n    def mousePressEvent(self, e):\n        self.label.setText(\"mousePressEvent\")\n\n    def mouseReleaseEvent(self, e):\n        self.label.setText(\"mouseReleaseEvent\")\n\n    def mouseDoubleClickEvent(self, e):\n        self.label.setText(\"mouseDoubleClickEvent\")\n</pre> class MainWindow(QMainWindow):     def __init__(self) -&gt; None:         super().__init__()         self.label = QLabel(\"Click in this window\")         self.setMinimumSize(200,200)         self.setCentralWidget(self.label)              def mouseMoveEvent(self, e):         self.label.setText(\"mouseMoveEvent\")      def mousePressEvent(self, e):         self.label.setText(\"mousePressEvent\")      def mouseReleaseEvent(self, e):         self.label.setText(\"mouseReleaseEvent\")      def mouseDoubleClickEvent(self, e):         self.label.setText(\"mouseDoubleClickEvent\") In\u00a0[\u00a0]: Copied! <pre>app = QApplication(sys.argv)\nwindow = MainWindow()\nwindow.show()\napp.exec()\n</pre> app = QApplication(sys.argv) window = MainWindow() window.show() app.exec()"},{"location":"PyQT/script/multi-thread01/","title":"Multi thread01","text":"In\u00a0[\u00a0]: Copied! <pre>from PyQt6.QtGui import *\nfrom PyQt6.QtWidgets import *\nfrom PyQt6.QtCore import *\n</pre> from PyQt6.QtGui import * from PyQt6.QtWidgets import * from PyQt6.QtCore import * In\u00a0[\u00a0]: Copied! <pre>import time\n</pre> import time In\u00a0[\u00a0]: Copied! <pre>from PyQt6.QtWidgets import QWidget\n</pre> from PyQt6.QtWidgets import QWidget In\u00a0[\u00a0]: Copied! <pre>class MianWindow(QMainWindow):\n    def __init__(self) -&gt; None:\n        super().__init__()\n        self.label = QLabel(\"Start\")\n        self.button = QPushButton(\"Do not click\")\n        self.button.pressed.connect(self.btnPressed)\n        self.counter = 0\n        \n        layout = QGridLayout()\n        layout.addWidget(self.label,0,0)\n        layout.addWidget(self.button,1,0)\n        \n        container = QWidget()\n        container.setLayout(layout)\n        self.setCentralWidget(container)\n        \n        self.show()\n        \n        self.timer = QTimer()\n        self.timer.setInterval(1000)\n        self.timer.timeout.connect(self.recurring_timer)\n        self.timer.start()\n        \n    def btnPressed(self):\n        time.sleep(5)\n        \n    def recurring_timer(self):\n        self.counter +=1\n        self.label.setText(\"Counter: %d\" % self.counter)\n</pre> class MianWindow(QMainWindow):     def __init__(self) -&gt; None:         super().__init__()         self.label = QLabel(\"Start\")         self.button = QPushButton(\"Do not click\")         self.button.pressed.connect(self.btnPressed)         self.counter = 0                  layout = QGridLayout()         layout.addWidget(self.label,0,0)         layout.addWidget(self.button,1,0)                  container = QWidget()         container.setLayout(layout)         self.setCentralWidget(container)                  self.show()                  self.timer = QTimer()         self.timer.setInterval(1000)         self.timer.timeout.connect(self.recurring_timer)         self.timer.start()              def btnPressed(self):         time.sleep(5)              def recurring_timer(self):         self.counter +=1         self.label.setText(\"Counter: %d\" % self.counter) In\u00a0[\u00a0]: Copied! <pre>app = QApplication([])\nwindow = MianWindow()\napp.exec()\n</pre> app = QApplication([]) window = MianWindow() app.exec() In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"PyQT/script/multi-thread02/","title":"Multi thread02","text":"In\u00a0[\u00a0]: Copied! <pre>from PyQt6.QtGui import *\nfrom PyQt6.QtWidgets import *\nfrom PyQt6.QtCore import *\n</pre> from PyQt6.QtGui import * from PyQt6.QtWidgets import * from PyQt6.QtCore import * In\u00a0[\u00a0]: Copied! <pre>import time\n</pre> import time In\u00a0[\u00a0]: Copied! <pre>class Worker(QRunnable):\n    @pyqtSlot()\n    def run(self):\n        print(\"Thread start\")\n        time.sleep(5)\n        print(\"Thread complete\")\n</pre> class Worker(QRunnable):     @pyqtSlot()     def run(self):         print(\"Thread start\")         time.sleep(5)         print(\"Thread complete\") In\u00a0[\u00a0]: Copied! <pre>class MainWindow(QMainWindow):\n\n    def __init__(self, *args, **kwargs):\n        super(MainWindow, self).__init__(*args, **kwargs)\n\n        self.counter = 0\n\n        layout = QVBoxLayout()\n\n        self.l = QLabel(\"Start\")\n        b = QPushButton(\"DANGER!\")\n        b.pressed.connect(self.oh_no)\n\n        c = QPushButton(\"?\")\n        c.pressed.connect(self.change_message)\n\n        layout.addWidget(self.l)\n        layout.addWidget(b)\n\n        layout.addWidget(c)\n\n        w = QWidget()\n        w.setLayout(layout)\n\n        self.setCentralWidget(w)\n        self.threadpool = QThreadPool()\n        print(\"Multithreading with maximum %d threads\" % self.threadpool.maxThreadCount())\n\n        self.show()\n\n    def change_message(self):\n        self.message = \"OH NO\"\n        self.l.setText(self.message)\n\n    def oh_no(self):\n        worker = Worker()\n        self.threadpool.start(worker)\n</pre> class MainWindow(QMainWindow):      def __init__(self, *args, **kwargs):         super(MainWindow, self).__init__(*args, **kwargs)          self.counter = 0          layout = QVBoxLayout()          self.l = QLabel(\"Start\")         b = QPushButton(\"DANGER!\")         b.pressed.connect(self.oh_no)          c = QPushButton(\"?\")         c.pressed.connect(self.change_message)          layout.addWidget(self.l)         layout.addWidget(b)          layout.addWidget(c)          w = QWidget()         w.setLayout(layout)          self.setCentralWidget(w)         self.threadpool = QThreadPool()         print(\"Multithreading with maximum %d threads\" % self.threadpool.maxThreadCount())          self.show()      def change_message(self):         self.message = \"OH NO\"         self.l.setText(self.message)      def oh_no(self):         worker = Worker()         self.threadpool.start(worker) In\u00a0[\u00a0]: Copied! <pre>app = QApplication([])\nwindow = MainWindow()\napp.exec()\n</pre> app = QApplication([]) window = MainWindow() app.exec()"},{"location":"PyQT/script/multi-thread03/","title":"Multi thread03","text":"In\u00a0[\u00a0]: Copied! <pre>from PyQt6.QtGui import *\nfrom PyQt6.QtWidgets import *\nfrom PyQt6.QtCore import *\n</pre> from PyQt6.QtGui import * from PyQt6.QtWidgets import * from PyQt6.QtCore import * In\u00a0[\u00a0]: Copied! <pre>import time,sys,traceback\n</pre> import time,sys,traceback In\u00a0[\u00a0]: Copied! <pre>class Worker(QRunnable):\n    \n    def __init__(self,fn, *args, **kwargs) -&gt; None:\n        super(Worker,self).__init__()\n        self.fn = fn\n        self.args = args\n        self.kwargs = kwargs\n        \n    \n    @pyqtSlot()\n    def run(self) -&gt; None:\n        self.fn(*self.args,**self.kwargs)\n</pre> class Worker(QRunnable):          def __init__(self,fn, *args, **kwargs) -&gt; None:         super(Worker,self).__init__()         self.fn = fn         self.args = args         self.kwargs = kwargs                   @pyqtSlot()     def run(self) -&gt; None:         self.fn(*self.args,**self.kwargs) In\u00a0[\u00a0]: Copied! <pre>\n</pre> In\u00a0[\u00a0]: Copied! <pre>\n</pre> In\u00a0[\u00a0]: Copied! <pre>\n</pre> In\u00a0[\u00a0]: Copied! <pre>\n</pre> In\u00a0[\u00a0]: Copied! <pre>\n</pre> In\u00a0[\u00a0]: Copied! <pre>\n</pre> In\u00a0[\u00a0]: Copied! <pre>\n</pre> In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"PyQT/script/nested_layout/","title":"Nested layout","text":"In\u00a0[\u00a0]: Copied! <pre>import sys\nfrom PyQt6.QtWidgets import QApplication, QMainWindow, QWidget, QHBoxLayout, QVBoxLayout\nfrom PyQt6.QtGui import QPalette, QColor\n</pre> import sys from PyQt6.QtWidgets import QApplication, QMainWindow, QWidget, QHBoxLayout, QVBoxLayout from PyQt6.QtGui import QPalette, QColor In\u00a0[\u00a0]: Copied! <pre>class Color(QWidget):\n\n    def __init__(self, color):\n        super(Color, self).__init__()\n        self.setAutoFillBackground(True)\n\n        palette = self.palette()\n        palette.setColor(QPalette.ColorRole.Window, QColor(color))\n        self.setPalette(palette)\n</pre> class Color(QWidget):      def __init__(self, color):         super(Color, self).__init__()         self.setAutoFillBackground(True)          palette = self.palette()         palette.setColor(QPalette.ColorRole.Window, QColor(color))         self.setPalette(palette) In\u00a0[\u00a0]: Copied! <pre>class MainWindow(QMainWindow):\n\n    def __init__(self):\n        super(MainWindow, self).__init__()\n\n        self.setWindowTitle(\"My App\")\n        self.setMinimumSize(700,500)\n\n        layout1 = QHBoxLayout()\n        layout2 = QVBoxLayout()\n        layout3 = QVBoxLayout()\n\n        layout1.setContentsMargins(0,0,0,0)\n        layout1.setSpacing(20)\n\n        layout2.addWidget(Color('red'))\n        layout2.addWidget(Color('yellow'))\n        layout2.addWidget(Color('purple'))\n\n        layout1.addLayout( layout2 )\n\n        layout1.addWidget(Color('green'))\n\n        layout3.addWidget(Color('red'))\n        layout3.addWidget(Color('purple'))\n\n        layout1.addLayout( layout3 )\n\n        widget = QWidget()\n        widget.setLayout(layout1)\n        self.setCentralWidget(widget)\n</pre> class MainWindow(QMainWindow):      def __init__(self):         super(MainWindow, self).__init__()          self.setWindowTitle(\"My App\")         self.setMinimumSize(700,500)          layout1 = QHBoxLayout()         layout2 = QVBoxLayout()         layout3 = QVBoxLayout()          layout1.setContentsMargins(0,0,0,0)         layout1.setSpacing(20)          layout2.addWidget(Color('red'))         layout2.addWidget(Color('yellow'))         layout2.addWidget(Color('purple'))          layout1.addLayout( layout2 )          layout1.addWidget(Color('green'))          layout3.addWidget(Color('red'))         layout3.addWidget(Color('purple'))          layout1.addLayout( layout3 )          widget = QWidget()         widget.setLayout(layout1)         self.setCentralWidget(widget) In\u00a0[\u00a0]: Copied! <pre>app = QApplication(sys.argv)\n</pre> app = QApplication(sys.argv) In\u00a0[\u00a0]: Copied! <pre>window = MainWindow()\nwindow.show()\n</pre> window = MainWindow() window.show() In\u00a0[\u00a0]: Copied! <pre>app.exec()\n</pre> app.exec()"},{"location":"PyQT/script/popups/","title":"Popups","text":"In\u00a0[\u00a0]: Copied! <pre>import sys\nfrom PyQt6.QtWidgets import QApplication, QWidget, QPushButton, QMessageBox, QVBoxLayout\n</pre> import sys from PyQt6.QtWidgets import QApplication, QWidget, QPushButton, QMessageBox, QVBoxLayout In\u00a0[\u00a0]: Copied! <pre>class MessageBoxDemo(QWidget):\n    def __init__(self):\n        super().__init__()\n\n        self.setWindowTitle(\"Message Box Demo\")\n        self.setGeometry(100, 100, 300, 200)\n        \n        layout = QVBoxLayout()\n        \n        self.info_btn = QPushButton(\"Show Information\")\n        self.info_btn.clicked.connect(self.show_information)\n        layout.addWidget(self.info_btn)\n        \n        self.warning_btn = QPushButton(\"Show Warning\")\n        self.warning_btn.clicked.connect(self.show_warning)\n        layout.addWidget(self.warning_btn)\n        \n        self.error_btn = QPushButton(\"Show Error\")\n        self.error_btn.clicked.connect(self.show_error)\n        layout.addWidget(self.error_btn)\n        \n        self.question_btn = QPushButton(\"Show Question\")\n        self.question_btn.clicked.connect(self.show_question)\n        layout.addWidget(self.question_btn)\n        \n        self.setLayout(layout)\n\n    def show_information(self):\n        QMessageBox.information(self, \"Information\", \"This is an information message.\")\n\n    def show_warning(self):\n        QMessageBox.warning(self, \"Warning\", \"This is a warning message.\")\n\n    def show_error(self):\n        QMessageBox.critical(self, \"Error\", \"This is an error message.\")\n\n    def show_question(self):\n        reply = QMessageBox.question(self, \"Question\", \"Do you like PyQt6?\", QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No)\n        if reply == QMessageBox.StandardButton.Yes:\n            print(\"User likes PyQt6!\")\n        else:\n            print(\"User doesn't like PyQt6!\")\n</pre> class MessageBoxDemo(QWidget):     def __init__(self):         super().__init__()          self.setWindowTitle(\"Message Box Demo\")         self.setGeometry(100, 100, 300, 200)                  layout = QVBoxLayout()                  self.info_btn = QPushButton(\"Show Information\")         self.info_btn.clicked.connect(self.show_information)         layout.addWidget(self.info_btn)                  self.warning_btn = QPushButton(\"Show Warning\")         self.warning_btn.clicked.connect(self.show_warning)         layout.addWidget(self.warning_btn)                  self.error_btn = QPushButton(\"Show Error\")         self.error_btn.clicked.connect(self.show_error)         layout.addWidget(self.error_btn)                  self.question_btn = QPushButton(\"Show Question\")         self.question_btn.clicked.connect(self.show_question)         layout.addWidget(self.question_btn)                  self.setLayout(layout)      def show_information(self):         QMessageBox.information(self, \"Information\", \"This is an information message.\")      def show_warning(self):         QMessageBox.warning(self, \"Warning\", \"This is a warning message.\")      def show_error(self):         QMessageBox.critical(self, \"Error\", \"This is an error message.\")      def show_question(self):         reply = QMessageBox.question(self, \"Question\", \"Do you like PyQt6?\", QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No)         if reply == QMessageBox.StandardButton.Yes:             print(\"User likes PyQt6!\")         else:             print(\"User doesn't like PyQt6!\") In\u00a0[\u00a0]: Copied! <pre>app = QApplication(sys.argv)\nwindow = MessageBoxDemo()\nwindow.show()\napp.exec()\n</pre> app = QApplication(sys.argv) window = MessageBoxDemo() window.show() app.exec()"},{"location":"PyQT/script/qlineEdit_test/","title":"qlineEdit test","text":"In\u00a0[\u00a0]: Copied! <pre>from PyQt6.QtWidgets import *\n</pre> from PyQt6.QtWidgets import * In\u00a0[\u00a0]: Copied! <pre>class MainWindow(QMainWindow):\n\n    def __init__(self):\n        super(MainWindow, self).__init__()\n\n        self.setWindowTitle(\"My App\")\n\n        widget = QLineEdit()\n        widget.setMaxLength(10)\n        widget.setPlaceholderText(\"Enter your text\")\n\n        #widget.setReadOnly(True) # uncomment this to make readonly\n\n        widget.returnPressed.connect(self.return_pressed)\n        widget.selectionChanged.connect(self.selection_changed)\n        widget.textChanged.connect(self.text_changed)\n        widget.textEdited.connect(self.text_edited)\n\n        self.setCentralWidget(widget)\n\n\n    def return_pressed(self):\n        print(\"Return pressed!\")\n        self.centralWidget().setText(\"BOOM!\")\n\n    def selection_changed(self):\n        print(\"Selection changed\")\n        print(self.centralWidget().selectedText())\n\n    def text_changed(self, s):\n        print(\"Text changed...\")\n        print(s)\n\n    def text_edited(self, s):\n        print(\"Text edited...\")\n        print(s)\n</pre> class MainWindow(QMainWindow):      def __init__(self):         super(MainWindow, self).__init__()          self.setWindowTitle(\"My App\")          widget = QLineEdit()         widget.setMaxLength(10)         widget.setPlaceholderText(\"Enter your text\")          #widget.setReadOnly(True) # uncomment this to make readonly          widget.returnPressed.connect(self.return_pressed)         widget.selectionChanged.connect(self.selection_changed)         widget.textChanged.connect(self.text_changed)         widget.textEdited.connect(self.text_edited)          self.setCentralWidget(widget)       def return_pressed(self):         print(\"Return pressed!\")         self.centralWidget().setText(\"BOOM!\")      def selection_changed(self):         print(\"Selection changed\")         print(self.centralWidget().selectedText())      def text_changed(self, s):         print(\"Text changed...\")         print(s)      def text_edited(self, s):         print(\"Text edited...\")         print(s) In\u00a0[\u00a0]: Copied! <pre>app = QApplication([])\nwindow = MainWindow()\nwindow.show()\n</pre> app = QApplication([]) window = MainWindow() window.show() In\u00a0[\u00a0]: Copied! <pre>app.exec()\n</pre> app.exec()"},{"location":"PyQT/script/qt-widgets/","title":"Qt widgets","text":"In\u00a0[\u00a0]: Copied! <pre>import sys\n</pre> import sys In\u00a0[\u00a0]: Copied! <pre>from PyQt6.QtCore import Qt\nfrom PyQt6.QtWidgets import (\n    QApplication,\n    QCheckBox,\n    QComboBox,\n    QDateEdit,\n    QDateTimeEdit,\n    QDial,\n    QDoubleSpinBox,\n    QFontComboBox,\n    QLabel,\n    QLCDNumber,\n    QLineEdit,\n    QMainWindow,\n    QProgressBar,\n    QPushButton,\n    QRadioButton,\n    QSlider,\n    QSpinBox,\n    QTimeEdit,\n    QVBoxLayout,\n    QWidget,\n)\n</pre> from PyQt6.QtCore import Qt from PyQt6.QtWidgets import (     QApplication,     QCheckBox,     QComboBox,     QDateEdit,     QDateTimeEdit,     QDial,     QDoubleSpinBox,     QFontComboBox,     QLabel,     QLCDNumber,     QLineEdit,     QMainWindow,     QProgressBar,     QPushButton,     QRadioButton,     QSlider,     QSpinBox,     QTimeEdit,     QVBoxLayout,     QWidget, ) In\u00a0[\u00a0]: Copied! <pre># Subclass QMainWindow to customize your application's main window\nclass MainWindow(QMainWindow):\n    def __init__(self):\n        super().__init__()\n\n        self.setWindowTitle(\"Widgets App\")\n\n        layout = QVBoxLayout()\n        widgets = [\n            QCheckBox,\n            QComboBox,\n            QDateEdit,\n            QDateTimeEdit,\n            QDial,\n            QDoubleSpinBox,\n            QFontComboBox,\n            QLCDNumber,\n            QLabel,\n            QLineEdit,\n            QProgressBar,\n            QPushButton,\n            QRadioButton,\n            QSlider,\n            QSpinBox,\n            QTimeEdit,\n        ]\n\n        for w in widgets:\n            layout.addWidget(w())\n\n        widget = QWidget()\n        widget.setLayout(layout)\n\n        # Set the central widget of the Window. Widget will expand\n        # to take up all the space in the window by default.\n        self.setCentralWidget(widget)\n</pre> # Subclass QMainWindow to customize your application's main window class MainWindow(QMainWindow):     def __init__(self):         super().__init__()          self.setWindowTitle(\"Widgets App\")          layout = QVBoxLayout()         widgets = [             QCheckBox,             QComboBox,             QDateEdit,             QDateTimeEdit,             QDial,             QDoubleSpinBox,             QFontComboBox,             QLCDNumber,             QLabel,             QLineEdit,             QProgressBar,             QPushButton,             QRadioButton,             QSlider,             QSpinBox,             QTimeEdit,         ]          for w in widgets:             layout.addWidget(w())          widget = QWidget()         widget.setLayout(layout)          # Set the central widget of the Window. Widget will expand         # to take up all the space in the window by default.         self.setCentralWidget(widget) In\u00a0[\u00a0]: Copied! <pre>app = QApplication(sys.argv)\nwindow = MainWindow()\nwindow.show()\n</pre> app = QApplication(sys.argv) window = MainWindow() window.show() In\u00a0[\u00a0]: Copied! <pre>app.exec()\n</pre> app.exec()"},{"location":"PyQT/script/qt5-error-handling/","title":"Qt5 error handling","text":"In\u00a0[\u00a0]: Copied! <pre>import sys\nimport time\nfrom PyQt5.QtWidgets import QApplication, QWidget, QPushButton, QVBoxLayout, QProgressDialog, QMessageBox\nfrom PyQt5.QtCore import QRunnable, QThreadPool, pyqtSignal, QObject, Qt\n</pre> import sys import time from PyQt5.QtWidgets import QApplication, QWidget, QPushButton, QVBoxLayout, QProgressDialog, QMessageBox from PyQt5.QtCore import QRunnable, QThreadPool, pyqtSignal, QObject, Qt In\u00a0[\u00a0]: Copied! <pre>class WorkerSignals(QObject):\n    progress = pyqtSignal(int)\n    message = pyqtSignal(str)\n    finished = pyqtSignal(str)\n    result = pyqtSignal()\n    error = pyqtSignal(str)\n</pre> class WorkerSignals(QObject):     progress = pyqtSignal(int)     message = pyqtSignal(str)     finished = pyqtSignal(str)     result = pyqtSignal()     error = pyqtSignal(str) In\u00a0[\u00a0]: Copied! <pre>class Worker(QRunnable):\n    def __init__(self, func, name, *args, **kwargs):\n        super(Worker, self).__init__()\n        self.func = func \n        self.name = name \n        self.args = args\n        self.kwargs = kwargs\n        self.signals = WorkerSignals()\n    \n    def run(self):\n        try:\n            self.signals.message.emit(f\"{self.name} start\")\n            self.func(self.signals, *self.args, **self.kwargs)\n        except Exception as e:\n            self.signals.error.emit(str(e))\n        finally:\n            self.signals.finished.emit(f\"{self.name} has finished\")\n</pre> class Worker(QRunnable):     def __init__(self, func, name, *args, **kwargs):         super(Worker, self).__init__()         self.func = func          self.name = name          self.args = args         self.kwargs = kwargs         self.signals = WorkerSignals()          def run(self):         try:             self.signals.message.emit(f\"{self.name} start\")             self.func(self.signals, *self.args, **self.kwargs)         except Exception as e:             self.signals.error.emit(str(e))         finally:             self.signals.finished.emit(f\"{self.name} has finished\") In\u00a0[\u00a0]: Copied! <pre>def first_task(signals):\n    # Simulate a task that takes 10 seconds\n    for i in range(10):\n        time.sleep(1)\n        signals.progress.emit((i + 1) * 10)\n        signals.message.emit(f\"First Task: {i + 1} seconds passed\")\n    signals.progress.emit(50)\n</pre> def first_task(signals):     # Simulate a task that takes 10 seconds     for i in range(10):         time.sleep(1)         signals.progress.emit((i + 1) * 10)         signals.message.emit(f\"First Task: {i + 1} seconds passed\")     signals.progress.emit(50) In\u00a0[\u00a0]: Copied! <pre>def second_task(signals):\n    # Simulate a task that takes 5 seconds and raises an error\n    for i in range(4):\n        time.sleep(1)\n        signals.progress.emit(50 + (i + 1) * 10)\n        signals.message.emit(f\"Second Task: {i + 1} seconds passed\")\n    signals.progress.emit(100)\n    raise Exception(\"An error occurred in the second task\")\n</pre> def second_task(signals):     # Simulate a task that takes 5 seconds and raises an error     for i in range(4):         time.sleep(1)         signals.progress.emit(50 + (i + 1) * 10)         signals.message.emit(f\"Second Task: {i + 1} seconds passed\")     signals.progress.emit(100)     raise Exception(\"An error occurred in the second task\") In\u00a0[\u00a0]: Copied! <pre>class TestApp(QWidget):\n    def __init__(self):\n        super().__init__()\n        self.initUI()\n\n    def initUI(self):\n        self.setWindowTitle('PyQt5 Button Click Example')\n        self.setGeometry(100, 100, 300, 200)\n        layout = QVBoxLayout()\n        \n        self.btn = QPushButton('Click me', self)\n        self.btn.clicked.connect(self.runTasks)\n        layout.addWidget(self.btn)\n        \n        self.setLayout(layout)\n        self.threadPool = QThreadPool()\n\n    def runTasks(self):\n        self.progressDialog = QProgressDialog(\"Task in progress...\", \"Cancel\", 0, 100, self)\n        self.progressDialog.setWindowTitle(\"Task Progress\")\n        self.progressDialog.setWindowModality(Qt.WindowModal)\n        self.progressDialog.setMinimumDuration(0)\n        self.progressDialog.show()\n\n        self.worker1 = Worker(first_task, \"First Task\")\n        self.worker1.signals.message.connect(self.updateProgressDialog)\n        self.worker1.signals.progress.connect(self.updateProgressValue)\n        self.worker2 = Worker(second_task, \"Second Task\")\n        self.worker1.signals.error.connect(self.showError)\n        self.worker1.signals.finished.connect(lambda x: self.threadPool.start(self.worker2))\n        \n        self.worker2.signals.message.connect(self.updateProgressDialog)\n        self.worker2.signals.progress.connect(self.updateProgressValue)\n        self.worker2.signals.error.connect(self.showError)\n        self.worker2.signals.finished.connect(self.taskFinished)\n        \n        self.btn.setEnabled(False)\n        self.threadPool.start(self.worker1)\n        \n    def updateProgressDialog(self, message):\n        self.progressDialog.setLabelText(message)\n    \n    def updateProgressValue(self, value):\n        self.progressDialog.setValue(value)\n\n    def taskFinished(self, message):\n        self.updateProgressDialog(message)\n        self.btn.setEnabled(True)\n        self.progressDialog.close()\n\n    def showError(self, message):\n        msgBox = QMessageBox()\n        msgBox.setIcon(QMessageBox.Critical)\n        msgBox.setText(\"An error occurred\")\n        msgBox.setInformativeText(message)\n        msgBox.setWindowTitle(\"Error\")\n        msgBox.exec()\n        self.btn.setEnabled(True)\n        self.progressDialog.close()\n</pre> class TestApp(QWidget):     def __init__(self):         super().__init__()         self.initUI()      def initUI(self):         self.setWindowTitle('PyQt5 Button Click Example')         self.setGeometry(100, 100, 300, 200)         layout = QVBoxLayout()                  self.btn = QPushButton('Click me', self)         self.btn.clicked.connect(self.runTasks)         layout.addWidget(self.btn)                  self.setLayout(layout)         self.threadPool = QThreadPool()      def runTasks(self):         self.progressDialog = QProgressDialog(\"Task in progress...\", \"Cancel\", 0, 100, self)         self.progressDialog.setWindowTitle(\"Task Progress\")         self.progressDialog.setWindowModality(Qt.WindowModal)         self.progressDialog.setMinimumDuration(0)         self.progressDialog.show()          self.worker1 = Worker(first_task, \"First Task\")         self.worker1.signals.message.connect(self.updateProgressDialog)         self.worker1.signals.progress.connect(self.updateProgressValue)         self.worker2 = Worker(second_task, \"Second Task\")         self.worker1.signals.error.connect(self.showError)         self.worker1.signals.finished.connect(lambda x: self.threadPool.start(self.worker2))                  self.worker2.signals.message.connect(self.updateProgressDialog)         self.worker2.signals.progress.connect(self.updateProgressValue)         self.worker2.signals.error.connect(self.showError)         self.worker2.signals.finished.connect(self.taskFinished)                  self.btn.setEnabled(False)         self.threadPool.start(self.worker1)              def updateProgressDialog(self, message):         self.progressDialog.setLabelText(message)          def updateProgressValue(self, value):         self.progressDialog.setValue(value)      def taskFinished(self, message):         self.updateProgressDialog(message)         self.btn.setEnabled(True)         self.progressDialog.close()      def showError(self, message):         msgBox = QMessageBox()         msgBox.setIcon(QMessageBox.Critical)         msgBox.setText(\"An error occurred\")         msgBox.setInformativeText(message)         msgBox.setWindowTitle(\"Error\")         msgBox.exec()         self.btn.setEnabled(True)         self.progressDialog.close() In\u00a0[\u00a0]: Copied! <pre>if __name__ == '__main__':\n    app = QApplication(sys.argv)\n    ex = TestApp()\n    ex.show()\n    sys.exit(app.exec_())\n</pre> if __name__ == '__main__':     app = QApplication(sys.argv)     ex = TestApp()     ex.show()     sys.exit(app.exec_())"},{"location":"PyQT/script/qt5-worker-main/","title":"Qt5 worker main","text":"In\u00a0[\u00a0]: Copied! <pre>import sys\nimport time\nfrom PyQt5.QtWidgets import QApplication, QWidget, QPushButton, QVBoxLayout, QProgressDialog, QMessageBox\nfrom PyQt5.QtCore import Qt,QThreadPool\n</pre> import sys import time from PyQt5.QtWidgets import QApplication, QWidget, QPushButton, QVBoxLayout, QProgressDialog, QMessageBox from PyQt5.QtCore import Qt,QThreadPool In\u00a0[\u00a0]: Copied! <pre>from worker import task_decorator, WorkerSignals,Worker\n</pre> from worker import task_decorator, WorkerSignals,Worker In\u00a0[\u00a0]: Copied! <pre>class TestApp(QWidget):\n    def __init__(self):\n        super().__init__()\n        self.initUI()\n\n    def initUI(self):\n        self.setWindowTitle('PyQt5 Button Click Example')\n        self.setGeometry(100, 100, 300, 200)\n        layout = QVBoxLayout()\n        \n        self.btn = QPushButton('Click me', self)\n        self.btn.clicked.connect(self.runTasks)\n        layout.addWidget(self.btn)\n        \n        self.setLayout(layout)\n        self.threadPool = QThreadPool()\n\n    def runTasks(self):\n        self.progressDialog = QProgressDialog(\"Task in progress...\", \"Cancel\", 0, 100, self)\n        self.progressDialog.setWindowTitle(\"Task Progress\")\n        self.progressDialog.setWindowModality(Qt.WindowModal)\n        self.progressDialog.setMinimumDuration(0)\n        self.progressDialog.setAutoClose(False)\n        self.progressDialog.setAutoReset(False)\n        self.progressDialog.show()\n\n        self.worker1 = self.create_worker(first_task)\n        self.worker1.signals.error.connect(self.showError)\n        self.worker1.signals.finished.connect(self.runSecondTask)\n        \n        self.btn.setEnabled(False)\n        \n    def runSecondTask(self, message):\n        self.updateProgressDialog(message)\n        self.worker2 = self.create_worker(second_task)\n        self.worker2.signals.error.connect(self.showError)\n        self.worker2.signals.finished.connect(self.taskFinished)\n\n    def create_worker(self, func):\n        worker = Worker(func)\n        worker.signals.message.connect(self.updateProgressDialog)\n        worker.signals.progress.connect(self.updateProgressValue)\n        worker.signals.error.connect(self.showError)\n        worker.signals.finished.connect(self.taskFinished)\n        self.threadPool.start(worker)\n        return worker\n\n    def updateProgressDialog(self, message):\n        self.progressDialog.setLabelText(message)\n    \n    def updateProgressValue(self, value):\n        self.progressDialog.setValue(value)\n\n    def taskFinished(self, message):\n        self.updateProgressDialog(message)\n        self.btn.setEnabled(True)\n        self.progressDialog.close()\n\n    def showError(self, message):\n        msgBox = QMessageBox()\n        msgBox.setIcon(QMessageBox.Critical)\n        msgBox.setText(\"An error occurred\")\n        msgBox.setInformativeText(message)\n        msgBox.setWindowTitle(\"Error\")\n        msgBox.exec()\n        self.btn.setEnabled(True)\n        self.progressDialog.close()\n</pre> class TestApp(QWidget):     def __init__(self):         super().__init__()         self.initUI()      def initUI(self):         self.setWindowTitle('PyQt5 Button Click Example')         self.setGeometry(100, 100, 300, 200)         layout = QVBoxLayout()                  self.btn = QPushButton('Click me', self)         self.btn.clicked.connect(self.runTasks)         layout.addWidget(self.btn)                  self.setLayout(layout)         self.threadPool = QThreadPool()      def runTasks(self):         self.progressDialog = QProgressDialog(\"Task in progress...\", \"Cancel\", 0, 100, self)         self.progressDialog.setWindowTitle(\"Task Progress\")         self.progressDialog.setWindowModality(Qt.WindowModal)         self.progressDialog.setMinimumDuration(0)         self.progressDialog.setAutoClose(False)         self.progressDialog.setAutoReset(False)         self.progressDialog.show()          self.worker1 = self.create_worker(first_task)         self.worker1.signals.error.connect(self.showError)         self.worker1.signals.finished.connect(self.runSecondTask)                  self.btn.setEnabled(False)              def runSecondTask(self, message):         self.updateProgressDialog(message)         self.worker2 = self.create_worker(second_task)         self.worker2.signals.error.connect(self.showError)         self.worker2.signals.finished.connect(self.taskFinished)      def create_worker(self, func):         worker = Worker(func)         worker.signals.message.connect(self.updateProgressDialog)         worker.signals.progress.connect(self.updateProgressValue)         worker.signals.error.connect(self.showError)         worker.signals.finished.connect(self.taskFinished)         self.threadPool.start(worker)         return worker      def updateProgressDialog(self, message):         self.progressDialog.setLabelText(message)          def updateProgressValue(self, value):         self.progressDialog.setValue(value)      def taskFinished(self, message):         self.updateProgressDialog(message)         self.btn.setEnabled(True)         self.progressDialog.close()      def showError(self, message):         msgBox = QMessageBox()         msgBox.setIcon(QMessageBox.Critical)         msgBox.setText(\"An error occurred\")         msgBox.setInformativeText(message)         msgBox.setWindowTitle(\"Error\")         msgBox.exec()         self.btn.setEnabled(True)         self.progressDialog.close() In\u00a0[\u00a0]: Copied! <pre>@task_decorator\ndef first_task(signals):\n    for i in range(10):\n        time.sleep(1)\n        signals.progress.emit((i + 1) * 10)\n        signals.message.emit(f\"First Task: {i + 1} seconds passed\")\n</pre> @task_decorator def first_task(signals):     for i in range(10):         time.sleep(1)         signals.progress.emit((i + 1) * 10)         signals.message.emit(f\"First Task: {i + 1} seconds passed\") In\u00a0[\u00a0]: Copied! <pre>@task_decorator\ndef second_task(signals):\n    for i in range(4):\n        time.sleep(1)\n        signals.progress.emit(50 + (i + 1) * 10)\n        signals.message.emit(f\"Second Task: {i + 1} seconds passed\")\n    raise Exception(\"An error occurred in the second task\")\n</pre> @task_decorator def second_task(signals):     for i in range(4):         time.sleep(1)         signals.progress.emit(50 + (i + 1) * 10)         signals.message.emit(f\"Second Task: {i + 1} seconds passed\")     raise Exception(\"An error occurred in the second task\") In\u00a0[\u00a0]: Copied! <pre>if __name__ == '__main__':\n    app = QApplication(sys.argv)\n    ex = TestApp()\n    ex.show()\n    sys.exit(app.exec_())\n</pre> if __name__ == '__main__':     app = QApplication(sys.argv)     ex = TestApp()     ex.show()     sys.exit(app.exec_())"},{"location":"PyQT/script/qtDesign01/","title":"qtDesign01","text":"In\u00a0[\u00a0]: Copied! <pre>from PyQt6.QtCore import Qt\nfrom PyQt6.QtWidgets import QApplication,QWidget,QMainWindow,QPushButton\nimport design\n</pre> from PyQt6.QtCore import Qt from PyQt6.QtWidgets import QApplication,QWidget,QMainWindow,QPushButton import design  <p>class MyWindow(QMainWindow,design.Ui_MainWindow): def init(self) -&gt; None: super().init() self.setupUi(self)</p> <pre><code>    self.pushButton.clicked.connect(self.pushBtnHandler)</code></pre> <pre><code>def pushBtnHandler(self):\n    self.listWidget.addItem(self.lineEdit.text())\n    self.lineEdit.setText(\"\")</code></pre> In\u00a0[\u00a0]: Copied! <pre>class MainWindow(QMainWindow):\n    def __init__(self):\n        super().__init__()\n\n        self.setWindowTitle(\"My App\")\n\n        button = QPushButton(\"Press Me!\")\n        button.setCheckable(True)\n        button.clicked.connect(self.the_button_was_clicked)\n        button.clicked.connect(self.the_button_was_toggled)\n\n        self.setCentralWidget(button)\n\n    def the_button_was_clicked(self):\n        print(\"Clicked!\")\n\n    def the_button_was_toggled(self, checked):\n        print(\"Checked?\", checked)\n</pre> class MainWindow(QMainWindow):     def __init__(self):         super().__init__()          self.setWindowTitle(\"My App\")          button = QPushButton(\"Press Me!\")         button.setCheckable(True)         button.clicked.connect(self.the_button_was_clicked)         button.clicked.connect(self.the_button_was_toggled)          self.setCentralWidget(button)      def the_button_was_clicked(self):         print(\"Clicked!\")      def the_button_was_toggled(self, checked):         print(\"Checked?\", checked) In\u00a0[\u00a0]: Copied! <pre>app = QApplication([])\nwindow = MainWindow()\nwindow.show()\napp.exec()\n</pre> app = QApplication([]) window = MainWindow() window.show() app.exec()"},{"location":"PyQT/script/qt_stackedLayout/","title":"qt stackedLayout","text":"In\u00a0[\u00a0]: Copied! <pre>import sys\n</pre> import sys In\u00a0[\u00a0]: Copied! <pre>from PyQt6.QtGui import QPalette, QColor\nfrom PyQt6.QtCore import Qt\nfrom PyQt6.QtWidgets import (\n    QApplication,\n    QLabel,\n    QMainWindow,\n    QPushButton,\n    QTabWidget,\n    QWidget,\n)\n</pre> from PyQt6.QtGui import QPalette, QColor from PyQt6.QtCore import Qt from PyQt6.QtWidgets import (     QApplication,     QLabel,     QMainWindow,     QPushButton,     QTabWidget,     QWidget, ) In\u00a0[\u00a0]: Copied! <pre>class Color(QWidget):\n\n    def __init__(self, color):\n        super(Color, self).__init__()\n        self.setAutoFillBackground(True)\n\n        palette = self.palette()\n        palette.setColor(QPalette.ColorRole.Window, QColor(color))\n        self.setPalette(palette)\n</pre> class Color(QWidget):      def __init__(self, color):         super(Color, self).__init__()         self.setAutoFillBackground(True)          palette = self.palette()         palette.setColor(QPalette.ColorRole.Window, QColor(color))         self.setPalette(palette) In\u00a0[\u00a0]: Copied! <pre>class MainWindow(QMainWindow):\n    def __init__(self):\n        super().__init__()\n\n        self.setWindowTitle(\"My App\")\n        self.setMinimumSize(700,500)\n\n        tabs = QTabWidget()\n        tabs.setTabPosition(QTabWidget.TabPosition.North)\n        tabs.setDocumentMode(True)\n        tabs.setMovable(True)\n\n        for n, color in enumerate([\"red\", \"green\", \"blue\", \"yellow\"]):\n            tabs.addTab(Color(color), color)\n\n        self.setCentralWidget(tabs)\n</pre> class MainWindow(QMainWindow):     def __init__(self):         super().__init__()          self.setWindowTitle(\"My App\")         self.setMinimumSize(700,500)          tabs = QTabWidget()         tabs.setTabPosition(QTabWidget.TabPosition.North)         tabs.setDocumentMode(True)         tabs.setMovable(True)          for n, color in enumerate([\"red\", \"green\", \"blue\", \"yellow\"]):             tabs.addTab(Color(color), color)          self.setCentralWidget(tabs) In\u00a0[\u00a0]: Copied! <pre>app = QApplication(sys.argv)\n</pre> app = QApplication(sys.argv) In\u00a0[\u00a0]: Copied! <pre>window = MainWindow()\nwindow.show()\n</pre> window = MainWindow() window.show() In\u00a0[\u00a0]: Copied! <pre>app.exec()\n</pre> app.exec()"},{"location":"PyQT/script/responsive_ui/","title":"Responsive ui","text":"In\u00a0[\u00a0]: Copied! <pre>import sys\nfrom PyQt5.QtWidgets import QApplication, QWidget, QVBoxLayout, QHBoxLayout, QPushButton, QLabel, QLineEdit\nfrom PyQt5.QtGui import QFont\nfrom PyQt5.QtCore import Qt\n</pre> import sys from PyQt5.QtWidgets import QApplication, QWidget, QVBoxLayout, QHBoxLayout, QPushButton, QLabel, QLineEdit from PyQt5.QtGui import QFont from PyQt5.QtCore import Qt In\u00a0[\u00a0]: Copied! <pre>class ResponsiveUI(QWidget):\n    def __init__(self):\n        super().__init__()\n\n        self.initUI()\n\n    def initUI(self):\n        # Set the window title and size\n        self.setWindowTitle('Responsive UI Example')\n        self.setGeometry(100, 100, 800, 600)\n\n        # Create a vertical layout\n        vbox = QVBoxLayout()\n\n        # Add a label\n        self.label = QLabel('Enter your name:', self)\n        vbox.addWidget(self.label)\n\n        # Add a line edit\n        self.line_edit = QLineEdit(self)\n        vbox.addWidget(self.line_edit)\n\n        # Add buttons in a horizontal layout\n        hbox = QHBoxLayout()\n        self.ok_button = QPushButton('OK', self)\n        self.cancel_button = QPushButton('Cancel', self)\n\n        hbox.addWidget(self.ok_button)\n        hbox.addWidget(self.cancel_button)\n\n        # Add the horizontal layout to the vertical layout\n        vbox.addLayout(hbox)\n\n        # Set the main layout\n        self.setLayout(vbox)\n\n        # Connect signals and slots\n        self.ok_button.clicked.connect(self.on_ok)\n        self.cancel_button.clicked.connect(self.on_cancel)\n\n        # Set initial font size\n        self.update_font_size()\n\n    def on_ok(self):\n        name = self.line_edit.text()\n        self.label.setText(f'Hello, {name}!')\n\n    def on_cancel(self):\n        self.line_edit.clear()\n        self.label.setText('Enter your name:')\n\n    def resizeEvent(self, event):\n        self.update_font_size()\n        super().resizeEvent(event)\n\n    def update_font_size(self):\n        # Calculate font size based on the window size\n        base_size = min(self.width(), self.height()) // 30\n        font = QFont()\n        font.setPointSize(base_size)\n\n        # Set font size for the label, line edit, and buttons\n        self.apply_font_size(font, [self.label, self.line_edit, self.ok_button, self.cancel_button])\n\n        # Adjust line edit height\n        self.line_edit.setFixedHeight(base_size * 3)\n\n    def apply_font_size(self, font, widgets):\n        for widget in widgets:\n            widget.setFont(font)\n</pre> class ResponsiveUI(QWidget):     def __init__(self):         super().__init__()          self.initUI()      def initUI(self):         # Set the window title and size         self.setWindowTitle('Responsive UI Example')         self.setGeometry(100, 100, 800, 600)          # Create a vertical layout         vbox = QVBoxLayout()          # Add a label         self.label = QLabel('Enter your name:', self)         vbox.addWidget(self.label)          # Add a line edit         self.line_edit = QLineEdit(self)         vbox.addWidget(self.line_edit)          # Add buttons in a horizontal layout         hbox = QHBoxLayout()         self.ok_button = QPushButton('OK', self)         self.cancel_button = QPushButton('Cancel', self)          hbox.addWidget(self.ok_button)         hbox.addWidget(self.cancel_button)          # Add the horizontal layout to the vertical layout         vbox.addLayout(hbox)          # Set the main layout         self.setLayout(vbox)          # Connect signals and slots         self.ok_button.clicked.connect(self.on_ok)         self.cancel_button.clicked.connect(self.on_cancel)          # Set initial font size         self.update_font_size()      def on_ok(self):         name = self.line_edit.text()         self.label.setText(f'Hello, {name}!')      def on_cancel(self):         self.line_edit.clear()         self.label.setText('Enter your name:')      def resizeEvent(self, event):         self.update_font_size()         super().resizeEvent(event)      def update_font_size(self):         # Calculate font size based on the window size         base_size = min(self.width(), self.height()) // 30         font = QFont()         font.setPointSize(base_size)          # Set font size for the label, line edit, and buttons         self.apply_font_size(font, [self.label, self.line_edit, self.ok_button, self.cancel_button])          # Adjust line edit height         self.line_edit.setFixedHeight(base_size * 3)      def apply_font_size(self, font, widgets):         for widget in widgets:             widget.setFont(font) In\u00a0[\u00a0]: Copied! <pre>if __name__ == '__main__':\n    app = QApplication(sys.argv)\n    window = ResponsiveUI()\n    window.show()\n    sys.exit(app.exec_())\n</pre> if __name__ == '__main__':     app = QApplication(sys.argv)     window = ResponsiveUI()     window.show()     sys.exit(app.exec_())"},{"location":"PyQT/script/tooltip/","title":"Tooltip","text":"In\u00a0[\u00a0]: Copied! <pre>import sys\nfrom PyQt6.QtWidgets import QApplication, QWidget, QPushButton, QVBoxLayout, QToolTip\nfrom PyQt6.QtGui import QFont\n</pre> import sys from PyQt6.QtWidgets import QApplication, QWidget, QPushButton, QVBoxLayout, QToolTip from PyQt6.QtGui import QFont In\u00a0[\u00a0]: Copied! <pre>class CustomTooltipDemo(QWidget):\n    def __init__(self):\n        super().__init__()\n\n        self.setWindowTitle(\"Custom Tooltip Demo\")\n        self.setGeometry(100, 100, 300, 200)\n        \n        # Set global font for tooltips\n        QToolTip.setFont(QFont('SansSerif', 10))\n        \n        layout = QVBoxLayout()\n        \n        self.button = QPushButton(\"Hover over me\")\n        self.button.setToolTip(\"&lt;b style='color:blue;'&gt;This is a blue tooltip&lt;/b&gt;\")\n        layout.addWidget(self.button)\n        \n        self.setLayout(layout)\n</pre> class CustomTooltipDemo(QWidget):     def __init__(self):         super().__init__()          self.setWindowTitle(\"Custom Tooltip Demo\")         self.setGeometry(100, 100, 300, 200)                  # Set global font for tooltips         QToolTip.setFont(QFont('SansSerif', 10))                  layout = QVBoxLayout()                  self.button = QPushButton(\"Hover over me\")         self.button.setToolTip(\"This is a blue tooltip\")         layout.addWidget(self.button)                  self.setLayout(layout) In\u00a0[\u00a0]: Copied! <pre>app = QApplication(sys.argv)\nwindow = CustomTooltipDemo()\nwindow.show()\napp.exec()\n</pre> app = QApplication(sys.argv) window = CustomTooltipDemo() window.show() app.exec()"},{"location":"PyQT/script/tooltips_pass/","title":"Tooltips pass","text":"In\u00a0[\u00a0]: Copied! <pre>import sys\nfrom PyQt6.QtWidgets import QApplication, QWidget, QLabel, QLineEdit, QVBoxLayout, QPushButton, QToolTip\nfrom PyQt6.QtGui import QFont\n</pre> import sys from PyQt6.QtWidgets import QApplication, QWidget, QLabel, QLineEdit, QVBoxLayout, QPushButton, QToolTip from PyQt6.QtGui import QFont In\u00a0[\u00a0]: Copied! <pre>class PasswordForm(QWidget):\n    def __init__(self):\n        super().__init__()\n\n        self.initUI()\n\n    def initUI(self):\n        self.setWindowTitle('Password Form')\n        self.setGeometry(100, 100, 500, 300)\n\n        layout = QVBoxLayout()\n\n        self.email_label = QLabel('Email Address')\n        layout.addWidget(self.email_label)\n        self.email_input = QLineEdit()\n        layout.addWidget(self.email_input)\n\n        self.password_label = QLabel('Password')\n        layout.addWidget(self.password_label)\n        self.password_input = QLineEdit()\n        self.password_input.setEchoMode(QLineEdit.EchoMode.Password)\n        layout.addWidget(self.password_input)\n        self.password_input.setToolTip(\n            'Passwords should be at least 10 characters long and include 1 uppercase \\nand 1 lowercase alpha character, '\n            '1 number and 1 special character. Passwords are case sensitive.')\n\n        self.confirm_password_label = QLabel('Confirm Password')\n        layout.addWidget(self.confirm_password_label)\n        self.confirm_password_input = QLineEdit()\n        self.confirm_password_input.setEchoMode(QLineEdit.EchoMode.Password)\n        layout.addWidget(self.confirm_password_input)\n\n        self.create_account_button = QPushButton('CREATE ACCOUNT')\n        layout.addWidget(self.create_account_button)\n\n        self.setLayout(layout)\n</pre> class PasswordForm(QWidget):     def __init__(self):         super().__init__()          self.initUI()      def initUI(self):         self.setWindowTitle('Password Form')         self.setGeometry(100, 100, 500, 300)          layout = QVBoxLayout()          self.email_label = QLabel('Email Address')         layout.addWidget(self.email_label)         self.email_input = QLineEdit()         layout.addWidget(self.email_input)          self.password_label = QLabel('Password')         layout.addWidget(self.password_label)         self.password_input = QLineEdit()         self.password_input.setEchoMode(QLineEdit.EchoMode.Password)         layout.addWidget(self.password_input)         self.password_input.setToolTip(             'Passwords should be at least 10 characters long and include 1 uppercase \\nand 1 lowercase alpha character, '             '1 number and 1 special character. Passwords are case sensitive.')          self.confirm_password_label = QLabel('Confirm Password')         layout.addWidget(self.confirm_password_label)         self.confirm_password_input = QLineEdit()         self.confirm_password_input.setEchoMode(QLineEdit.EchoMode.Password)         layout.addWidget(self.confirm_password_input)          self.create_account_button = QPushButton('CREATE ACCOUNT')         layout.addWidget(self.create_account_button)          self.setLayout(layout) In\u00a0[\u00a0]: Copied! <pre>if __name__ == '__main__':\n    app = QApplication(sys.argv)\n    app.setFont(QFont('SansSerif', 10))\n    form = PasswordForm()\n    form.show()\n    sys.exit(app.exec())\n</pre> if __name__ == '__main__':     app = QApplication(sys.argv)     app.setFont(QFont('SansSerif', 10))     form = PasswordForm()     form.show()     sys.exit(app.exec())"},{"location":"PyQT/script/vbLayout/","title":"vbLayout","text":"In\u00a0[\u00a0]: Copied! <pre>import sys\nfrom PyQt6.QtWidgets import QApplication,QMainWindow,QLabel,QPushButton,QVBoxLayout,QHBoxLayout,QWidget\nfrom PyQt6.QtGui import QIcon\nfrom PyQt6.QtCore import Qt\n</pre> import sys from PyQt6.QtWidgets import QApplication,QMainWindow,QLabel,QPushButton,QVBoxLayout,QHBoxLayout,QWidget from PyQt6.QtGui import QIcon from PyQt6.QtCore import Qt In\u00a0[\u00a0]: Copied! <pre>application = QApplication(sys.argv)\n</pre> application = QApplication(sys.argv) In\u00a0[\u00a0]: Copied! <pre>window = QMainWindow()\nwindow.setMinimumSize(500,500)\ncenterWidget = QWidget()\n</pre> window = QMainWindow() window.setMinimumSize(500,500) centerWidget = QWidget() In\u00a0[\u00a0]: Copied! <pre>parent_layout = QVBoxLayout()\n</pre> parent_layout = QVBoxLayout() In\u00a0[\u00a0]: Copied! <pre>label = QLabel(\"This is a example!\")\nparent_layout.addWidget(label)\n</pre> label = QLabel(\"This is a example!\") parent_layout.addWidget(label) In\u00a0[\u00a0]: Copied! <pre>button_layout = QHBoxLayout()\nbtn1 = QPushButton(\"Button 1\")\nbtn2 = QPushButton(\"Button 2\")\nbutton_layout.addWidget(btn1)\nbutton_layout.addSpacing(80)\nbutton_layout.addWidget(btn2)\nparent_layout.addLayout(button_layout)\n</pre> button_layout = QHBoxLayout() btn1 = QPushButton(\"Button 1\") btn2 = QPushButton(\"Button 2\") button_layout.addWidget(btn1) button_layout.addSpacing(80) button_layout.addWidget(btn2) parent_layout.addLayout(button_layout) In\u00a0[\u00a0]: Copied! <pre>\n</pre> In\u00a0[\u00a0]: Copied! <pre>centerWidget.setLayout(parent_layout)\n</pre> centerWidget.setLayout(parent_layout) In\u00a0[\u00a0]: Copied! <pre>window.setCentralWidget(centerWidget)\nwindow.show()\n</pre> window.setCentralWidget(centerWidget) window.show() In\u00a0[\u00a0]: Copied! <pre>sys.exit(application.exec())\n</pre> sys.exit(application.exec()) In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"PyQT/script/worker/","title":"Worker","text":"In\u00a0[\u00a0]: Copied! <pre># workers.py\nfrom PyQt5.QtCore import QRunnable, QThreadPool, pyqtSignal, QObject\n</pre> # workers.py from PyQt5.QtCore import QRunnable, QThreadPool, pyqtSignal, QObject In\u00a0[\u00a0]: Copied! <pre>class WorkerSignals(QObject):\n    progress = pyqtSignal(int)\n    message = pyqtSignal(str)\n    finished = pyqtSignal(str)\n    result = pyqtSignal()\n    error = pyqtSignal(str)\n</pre> class WorkerSignals(QObject):     progress = pyqtSignal(int)     message = pyqtSignal(str)     finished = pyqtSignal(str)     result = pyqtSignal()     error = pyqtSignal(str) In\u00a0[\u00a0]: Copied! <pre>class Worker(QRunnable):\n    def __init__(self, func, *args, **kwargs):\n        super(Worker, self).__init__()\n        self.func = func \n        self.args = args\n        self.kwargs = kwargs\n        self.signals = WorkerSignals()\n    \n    def run(self):\n        try:\n            self.signals.message.emit(\"Task started\")\n            self.func(self.signals, *self.args, **self.kwargs)\n        except Exception as e:\n            self.signals.error.emit(str(e))\n        finally:\n            self.signals.finished.emit(\"Task finished\")\n</pre> class Worker(QRunnable):     def __init__(self, func, *args, **kwargs):         super(Worker, self).__init__()         self.func = func          self.args = args         self.kwargs = kwargs         self.signals = WorkerSignals()          def run(self):         try:             self.signals.message.emit(\"Task started\")             self.func(self.signals, *self.args, **self.kwargs)         except Exception as e:             self.signals.error.emit(str(e))         finally:             self.signals.finished.emit(\"Task finished\") In\u00a0[\u00a0]: Copied! <pre>def task_decorator(func):\n    def wrapper(*args, **kwargs):\n        worker = Worker(func, *args, **kwargs)\n        QThreadPool.globalInstance().start(worker)\n        return worker\n    return wrapper\n</pre> def task_decorator(func):     def wrapper(*args, **kwargs):         worker = Worker(func, *args, **kwargs)         QThreadPool.globalInstance().start(worker)         return worker     return wrapper"},{"location":"PyTest/01-Python-Unit-Test/","title":"01-Unit-Test","text":"In\u00a0[1]: Copied! <pre>import unittest\n</pre> import unittest In\u00a0[2]: Copied! <pre>def add(x,y):\n    \"\"\"Add Function\"\"\"\n    return x + y\n\ndef subtract(x,y):\n    \"\"\"Subtract Function\"\"\"\n    return x - y\n\ndef multiply(x,y):\n    \"\"\"Multiply Function\"\"\"\n    return x * y\n\ndef divide(x,y):\n    \"\"\"Divide Function\"\"\"\n    if y == 0:\n        raise ValueError('Can not divide by zero!')\n    return x / y\n</pre> def add(x,y):     \"\"\"Add Function\"\"\"     return x + y  def subtract(x,y):     \"\"\"Subtract Function\"\"\"     return x - y  def multiply(x,y):     \"\"\"Multiply Function\"\"\"     return x * y  def divide(x,y):     \"\"\"Divide Function\"\"\"     if y == 0:         raise ValueError('Can not divide by zero!')     return x / y <ol> <li>Create a Python File <code>test_calc.py</code></li> <li>Make a class inherent by <code>unittest</code></li> <li>Write a <code>test_[your function]</code> named function for testing purpose<ul> <li>Example</li> </ul> <pre><code>import unittest\nimport calc\n\nclass TestCalc(unittest.TestCase):\n\n    def test_add(self):\n        self.assertEqual(calc.add(10, 5),15)\n        self.assertEqual(calc.add(-1, 1), 0)\n\n    def test_subtract(self):\n        self.assertEqual(calc.subtract(3, 1), 2)\n        self.assertEqual(calc.subtract(5, 5), 0)\n\n    def test_multiply(self):\n        self.assertEqual(calc.multiply(10, 5), 50)\n        self.assertEqual(calc.multiply(-1, -1), 1)\n\n    def test_divide(self):\n        self.assertEqual(calc.divide(10, 5), 2)\n        self.assertEqual(calc.subtract(-1, 1), -1)\n\n        ## Test Raise Error is right or not\n        self.assertRaises(ValueError,calc.divide,10,0)\n\n        ## Same to above but different format\n        with self.assertRaises(ValueError):\n            calc.divide(1,0)\n\nif __name__ == \"__main__\":\n    unittest.main()         \n</code></pre> </li> <li>Run <code>python -m unittest [your test module]</code></li> </ol> In\u00a0[3]: Copied! <pre>!python -m unittest test_calc.py\n</pre> !python -m unittest test_calc.py <pre>.F..\n======================================================================\nFAIL: test_divide (test_calc.TestCalc)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"c:\\Users\\yxy180050\\Box\\2024\\github\\notes\\docs\\Computer-Science\\Software-Design\\test_calc.py\", line 20, in test_divide\n    self.assertEqual(calc.subtract(-1, 1), -1)\nAssertionError: -2 != -1\n\n----------------------------------------------------------------------\nRan 4 tests in 0.002s\n\nFAILED (failures=1)\n</pre> In\u00a0[4]: Copied! <pre>class Employee:\n    \"\"\"A sample Employee class\"\"\"\n    raise_amt = 1.05\n    \n    def __init__(self, first, last, pay) -&gt; None:\n        self.first = first\n        self.last = last\n        self.pay = pay\n        \n    @property\n    def email(self):\n        return f\"{self.first}.{self.last}@email.com\"\n    \n    @property\n    def fullname(self):\n        return f\"{self.first} {self.last}\"\n    \n    def apply_raise(self):\n        self.pay = int(self.pay * self.raise_amt)\n</pre> class Employee:     \"\"\"A sample Employee class\"\"\"     raise_amt = 1.05          def __init__(self, first, last, pay) -&gt; None:         self.first = first         self.last = last         self.pay = pay              @property     def email(self):         return f\"{self.first}.{self.last}@email.com\"          @property     def fullname(self):         return f\"{self.first} {self.last}\"          def apply_raise(self):         self.pay = int(self.pay * self.raise_amt) <ol> <li><code>tearDown</code> Function<ul> <li>The <code>tearDown</code> function is called after each test method in your test case class has been run.</li> <li>It's used to clean up any resources that were set up in the setUp method to ensure that your tests leave no side effects.</li> <li>Example:</li> </ul> <pre><code>    import unittest\n\n    class TestMyClass(unittest.TestCase):\n\n        def setUp(self):\n            # Set up resources or state needed for tests\n            self.file = open('test_file.txt', 'w')\n\n        def tearDown(self):\n            # Clean up resources created in setUp\n            self.file.close()\n            # Optionally, delete any temporary files or reset state\n\n        def test_file_write(self):\n            self.file.write('Test data')\n            self.assertEqual(self.file.tell(), len('Test data'))\n</code></pre> </li> </ol> <ol> <li>Class-Level <code>setUp</code> and <code>tearDown</code></li> </ol> <ul> <li>Additionally, you can define <code>setUpClass</code> and <code>tearDownClass</code> methods in your test case class to set up and tear down resources once for all test methods in the class.</li> <li>These methods are called before the first test method is executed and after the last test method is executed, respectively.</li> <li>Example:<pre><code>    import unittest\n\n    class TestMyClass(unittest.TestCase):\n\n        @classmethod\n        def setUpClass(cls):\n            # Set up resources needed for all test methods in the class\n            cls.db = connect_to_database()\n\n        @classmethod\n        def tearDownClass(cls):\n            # Clean up resources after all test methods in the class have run\n            cls.db.close()\n\n        def test_method1(self):\n            # Test method 1\n            pass\n\n        def test_method2(self):\n            # Test method 2\n            pass\n\n</code></pre> </li> </ul> In\u00a0[5]: Copied! <pre>class TestEmployee(unittest.TestCase):\n    \n    @classmethod\n    def setUpClass(cls) -&gt; None:\n        # Run before all test\n        print(\"setupClass\")\n        # return super().setUpClass()\n    \n    @classmethod\n    def tearDownClass(cls) -&gt; None:\n        # Run after all test\n        print(\"teardownClass\")\n        # return super().tearDownClass()\n    \n    def setUp(self) -&gt; None:\n        print(\"setUp\")\n        ## setUp code will run before every test\n        self.emp_1 = Employee(\"Corey\", \"Schafer\", 50000)\n        self.emp_2 = Employee(\"Sue\", \"Smith\", 60000)\n        # return super().setUp()\n    \n    def tearDown(self) -&gt; None:\n        ## tearDown code will run after every test\n        print('tearDown\\n')\n        # return super().tearDown()\n    \n    def test_email(self):\n        print(\"test_email\")\n        self.assertEqual(self.emp_1.email, \"Corey.Schafer@email.com\")\n        self.assertEqual(self.emp_2.email, \"Sue.Smith@email.com\")\n        \n        self.emp_1.first = \"John\"\n        self.emp_2.first = \"Jane\"\n        \n        self.assertEqual(self.emp_1.email, \"John.Schafer@email.com\")\n        self.assertEqual(self.emp_2.email, \"Jane.Smith@email.com\")    \n    \n    def test_fullname(self):\n        print(\"test_fullname\")\n        self.assertEqual(self.emp_1.fullname, \"Corey Schafer\")\n        self.assertEqual(self.emp_2.fullname, \"Sue Smith\")  \n        \n        self.emp_1.first = \"John\"\n        self.emp_2.first = \"Jane\"\n        \n        self.assertEqual(self.emp_1.fullname, \"John Schafer\")\n        self.assertEqual(self.emp_2.fullname, \"Jane Smith\")  \n        \n    def test_apply_raise(self):\n        print(\"test_apply_raise\")\n        self.emp_1.apply_raise()\n        self.emp_2.apply_raise()\n        \n        self.assertEqual(self.emp_1.pay, 52500)\n        self.assertEqual(self.emp_2.pay, 63000)\n</pre> class TestEmployee(unittest.TestCase):          @classmethod     def setUpClass(cls) -&gt; None:         # Run before all test         print(\"setupClass\")         # return super().setUpClass()          @classmethod     def tearDownClass(cls) -&gt; None:         # Run after all test         print(\"teardownClass\")         # return super().tearDownClass()          def setUp(self) -&gt; None:         print(\"setUp\")         ## setUp code will run before every test         self.emp_1 = Employee(\"Corey\", \"Schafer\", 50000)         self.emp_2 = Employee(\"Sue\", \"Smith\", 60000)         # return super().setUp()          def tearDown(self) -&gt; None:         ## tearDown code will run after every test         print('tearDown\\n')         # return super().tearDown()          def test_email(self):         print(\"test_email\")         self.assertEqual(self.emp_1.email, \"Corey.Schafer@email.com\")         self.assertEqual(self.emp_2.email, \"Sue.Smith@email.com\")                  self.emp_1.first = \"John\"         self.emp_2.first = \"Jane\"                  self.assertEqual(self.emp_1.email, \"John.Schafer@email.com\")         self.assertEqual(self.emp_2.email, \"Jane.Smith@email.com\")              def test_fullname(self):         print(\"test_fullname\")         self.assertEqual(self.emp_1.fullname, \"Corey Schafer\")         self.assertEqual(self.emp_2.fullname, \"Sue Smith\")                    self.emp_1.first = \"John\"         self.emp_2.first = \"Jane\"                  self.assertEqual(self.emp_1.fullname, \"John Schafer\")         self.assertEqual(self.emp_2.fullname, \"Jane Smith\")                def test_apply_raise(self):         print(\"test_apply_raise\")         self.emp_1.apply_raise()         self.emp_2.apply_raise()                  self.assertEqual(self.emp_1.pay, 52500)         self.assertEqual(self.emp_2.pay, 63000) In\u00a0[6]: Copied! <pre>!python -m unittest test_employee.py\n</pre> !python -m unittest test_employee.py <pre>setupClass</pre> <pre>...\n----------------------------------------------------------------------\nRan 3 tests in 0.000s\n\nOK\n</pre> <pre>\nsetUp\ntest_apply_raise\ntearDown\n\nsetUp\ntest_email\ntearDown\n\nsetUp\ntest_fullname\ntearDown\n\nteardownClass\n</pre> In\u00a0[7]: Copied! <pre>import requests\n\nclass Employee:\n    \"\"\"A sample Employee class\"\"\"\n    raise_amt = 1.05\n    \n    def __init__(self, first, last, pay) -&gt; None:\n        self.first = first\n        self.last = last\n        self.pay = pay\n        \n    @property\n    def email(self):\n        return f\"{self.first}.{self.last}@email.com\"\n    \n    @property\n    def fullname(self):\n        return f\"{self.first} {self.last}\"\n    \n    def apply_raise(self):\n        self.pay = int(self.pay * self.raise_amt)\n        \n    ## get info from url   \n    def monthly_schedule(self, month):\n        response = requests.get(f\"http://company.com/{self.last}/{month}\")\n        if response.ok:\n            return response.text\n        else:\n            return \"Bad Response!\"\n</pre> import requests  class Employee:     \"\"\"A sample Employee class\"\"\"     raise_amt = 1.05          def __init__(self, first, last, pay) -&gt; None:         self.first = first         self.last = last         self.pay = pay              @property     def email(self):         return f\"{self.first}.{self.last}@email.com\"          @property     def fullname(self):         return f\"{self.first} {self.last}\"          def apply_raise(self):         self.pay = int(self.pay * self.raise_amt)              ## get info from url        def monthly_schedule(self, month):         response = requests.get(f\"http://company.com/{self.last}/{month}\")         if response.ok:             return response.text         else:             return \"Bad Response!\" In\u00a0[8]: Copied! <pre>from unittest.mock import patch\n\nclass TestEmployee(unittest.TestCase):\n\n    def setUp(self):\n        # Create an instance of the Employee class for testing\n        self.emp_1 = Employee(\"John\", \"Doe\")\n\n    def test_monthly_schedule(self):\n        # Patching requests.get to mock the HTTP GET request\n        with patch(\"employee02.requests.get\") as mocked_get:\n            # Configure the mock object's behavior\n            mocked_get.return_value.ok = True\n            mocked_get.return_value.text = \"Success\"\n            \n            # Call the method being tested\n            schedule = self.emp_1.monthly_schedule(\"May\")\n            # Assert that requests.get was called with the correct URL\n            mocked_get.assert_called_with(\"http://company.com/Doe/May\")\n            # Assert the expected result\n            self.assertEqual(schedule, \"Success\")\n            \n            ## simulate connect failed\n            mocked_get.return_value.ok = False\n            \n            schedule = self.emp_2.monthly_schedule(\"June\")\n            mocked_get.assert_called_with(\"http://company.com/Smith/June\")\n            self.assertEqual(schedule,\"Bad Response!\")\n</pre> from unittest.mock import patch  class TestEmployee(unittest.TestCase):      def setUp(self):         # Create an instance of the Employee class for testing         self.emp_1 = Employee(\"John\", \"Doe\")      def test_monthly_schedule(self):         # Patching requests.get to mock the HTTP GET request         with patch(\"employee02.requests.get\") as mocked_get:             # Configure the mock object's behavior             mocked_get.return_value.ok = True             mocked_get.return_value.text = \"Success\"                          # Call the method being tested             schedule = self.emp_1.monthly_schedule(\"May\")             # Assert that requests.get was called with the correct URL             mocked_get.assert_called_with(\"http://company.com/Doe/May\")             # Assert the expected result             self.assertEqual(schedule, \"Success\")                          ## simulate connect failed             mocked_get.return_value.ok = False                          schedule = self.emp_2.monthly_schedule(\"June\")             mocked_get.assert_called_with(\"http://company.com/Smith/June\")             self.assertEqual(schedule,\"Bad Response!\") In\u00a0[9]: Copied! <pre>!python -m unittest test_employee2.py\n</pre> !python -m unittest test_employee2.py <pre>setupClass\nsetUp\ntest_apply_raise\ntearDown\n\nsetUp\ntest_email\ntearDown\n\nsetUp\ntest_fullname\ntearDown\n\nsetUp\ntearDown\n\nteardownClass\n</pre> <pre>....\n----------------------------------------------------------------------\nRan 4 tests in 0.002s\n\nOK\n</pre>"},{"location":"PyTest/01-Python-Unit-Test/#python-unit-testing","title":"Python Unit Testing\u00b6","text":"<ul> <li>Reference</li> </ul>"},{"location":"PyTest/01-Python-Unit-Test/#what-is-unit-testing","title":"What is Unit Testing?\u00b6","text":"<p>Unit testing is a software testing technique where individual units or components of a software are tested in isolation to ensure that they function correctly.</p> <ul> <li>A unit typically corresponds to a single function, method, or class.</li> </ul>"},{"location":"PyTest/01-Python-Unit-Test/#set-some-demo-function-waiting-to-test","title":"Set some demo function waiting to test\u00b6","text":""},{"location":"PyTest/01-Python-Unit-Test/#writing-unit-tests","title":"Writing Unit Tests\u00b6","text":"<ul> <li><code>unittest</code> assert method</li> </ul>"},{"location":"PyTest/01-Python-Unit-Test/#another-example","title":"Another Example\u00b6","text":""},{"location":"PyTest/01-Python-Unit-Test/#setup-and-teardown-function-and-class","title":"SetUp and TearDown (function and class)\u00b6","text":"<ol> <li><code>setUp</code> Function<ul> <li>The <code>setUp</code> function is called before each test method in your test case class.</li> <li>It's typically used to set up any resources or state needed for the tests to run.</li> <li>This could include <code>creating objects</code>, <code>opening files</code>, <code>initializing databases</code>, or any other necessary preparations.</li> <li>Example:</li> </ul> <pre><code>    import unittest\n\n    class TestMyClass(unittest.TestCase):\n\n        def setUp(self):\n            # Set up resources or state needed for tests\n            self.my_list = [1, 2, 3]\n\n        def test_my_method(self):\n            # Access resources initialized in setUp\n            self.assertEqual(len(self.my_list), 3)\n            self.assertEqual(self.my_list[0], 1)\n\n        def test_another_method(self):\n            # Access resources initialized in setUp\n            self.assertIn(2, self.my_list)\n\n</code></pre> </li> </ol>"},{"location":"PyTest/01-Python-Unit-Test/#test-class-for-employee","title":"Test class for Employee\u00b6","text":""},{"location":"PyTest/01-Python-Unit-Test/#mock-dealing-with-online-materials","title":"Mock (Dealing with online materials)\u00b6","text":"<ul> <li>Sometime we and dealing with some online data, our method might work well but their webpage might shutdown, we do not our code test failed in this situation since there's nothing we can do about it, we need to use <code>mock</code></li> <li>It allows you to replace parts of your code with mock objects, enabling you to isolate the code you're testing from its dependencies.</li> <li>In the following example, we will use <code>patch</code> from <code>unittest.mock</code> to mock the <code>requests.get</code> function.<ul> <li>This allows us to simulate a successful HTTP GET request without actually making a network call.</li> </ul> </li> </ul>"},{"location":"PyTest/02-Pytest-get-started/","title":"02 PyTest Get started","text":"In\u00a0[2]: Copied! <pre># !pip install -U pytest\n!pytest --version\n</pre> # !pip install -U pytest !pytest --version <pre>pytest 8.1.1\n</pre> In\u00a0[3]: Copied! <pre># content of test_sample.py\ndef func(x):\n    return x + 1\n\n\ndef test_answer():\n    assert func(3) == 5\n</pre> # content of test_sample.py def func(x):     return x + 1   def test_answer():     assert func(3) == 5 <ol> <li><code>pytest .\\test_sample.py</code></li> </ol> In\u00a0[4]: Copied! <pre># content of test_sysexit.py\nimport pytest\n\n\ndef f():\n    raise SystemExit(1)\n\n\ndef test_mytest():\n    with pytest.raises(SystemExit):\n        f()\n</pre> # content of test_sysexit.py import pytest   def f():     raise SystemExit(1)   def test_mytest():     with pytest.raises(SystemExit):         f() In\u00a0[5]: Copied! <pre># content of test_class.py\nclass TestClass:\n    def test_one(self):\n        x = \"this\"\n        assert \"h\" in x\n\n    def test_two(self):\n        x = \"hello\"\n        assert hasattr(x, \"check\")\n</pre> # content of test_class.py class TestClass:     def test_one(self):         x = \"this\"         assert \"h\" in x      def test_two(self):         x = \"hello\"         assert hasattr(x, \"check\") <p><code>pytest</code> discovers all tests following its Conventions for Python test discovery, so it finds both <code>test_</code> prefixed functions.</p> <ul> <li><p>There is no need to subclass anything, but make sure to prefix your class with <code>Test</code> otherwise the class will be skipped. We can simply run the module by passing its filename:</p> <ul> <li><code>pytest -q test_class.py</code></li> </ul> <p></p> </li> </ul> <p>The first test passed and the second failed. You can easily see the intermediate values in the assertion to help you understand the reason for the failure.</p> <p>Something to be aware of when grouping tests inside classes is that each test has a unique instance of the class.</p> <ul> <li>Having each test share the same class instance would be very detrimental to test isolation and would promote poor test practices.<ul> <li>Do not use bind instance variable!</li> </ul> </li> <li>This is outlined below:</li> </ul> In\u00a0[6]: Copied! <pre># content of test_class_demo.py\nclass TestClassDemoInstance:\n    value = 0\n\n    def test_one(self):\n        self.value = 1\n        assert self.value == 1\n\n    def test_two(self):\n        assert self.value == 1\n</pre> # content of test_class_demo.py class TestClassDemoInstance:     value = 0      def test_one(self):         self.value = 1         assert self.value == 1      def test_two(self):         assert self.value == 1 <p><code>pytest -k TestClassDemoInstance -q</code></p> <ul> <li>In the context of <code>pytest</code>, the <code>-k</code> option is used to filter test functions and classes based on their names using a substring matching.<ul> <li>use <code>pytest -k TestClassDemoInstance</code>, it means you are filtering for test functions or classes whose names contain <code>TestClassDemoInstance</code>.</li> </ul> </li> <li>Note that attributes added at class level are <code>class attributes</code>, so they will be shared between tests.</li> </ul> <p></p> In\u00a0[\u00a0]: Copied! <pre>import math\n\nclass Shape:\n    def area(self):\n        pass\n    def perimeter(self):\n        pass\n    \nclass Circle(Shape):\n    def __init__(self, radius) -&gt; None:\n        self.radius = radius\n    \n    def area(self):\n        return math.pi * (self.radius**2)\n    \n    def perimeter(self):\n        return 2 * math.pi * self.radius\n</pre> import math  class Shape:     def area(self):         pass     def perimeter(self):         pass      class Circle(Shape):     def __init__(self, radius) -&gt; None:         self.radius = radius          def area(self):         return math.pi * (self.radius**2)          def perimeter(self):         return 2 * math.pi * self.radius <ul> <li><code>test_circle.py</code></li> </ul> <pre><code>import pytest\nimport math\nimport shapes\n\nclass TestCircle:\n    def setup_method(self,method):\n        print(f\"Setting up {method}\")\n        self.circle = shapes.Circle(10)\n\n    def teardown_method(self,method):\n        print(f\"Tear down method\")\n        del self.circle\n\n    def test_area(self):\n        assert self.circle.area() == math.pi * self.circle.radius ** 2\n\n    def test_perimeter(self):\n        assert self.circle.perimeter() == 2 * math.pi * self.circle.radius\n</code></pre> <ul> <li><code>pytest test_circle.py</code></li> </ul> <p></p> In\u00a0[\u00a0]: Copied! <pre># content of test_tmp_path.py\ndef test_needsfiles(tmp_path):\n    print(tmp_path)\n    assert 0\n</pre> # content of test_tmp_path.py def test_needsfiles(tmp_path):     print(tmp_path)     assert 0 <p><code>pytest -q test_tmp_path.py</code></p> <p></p>"},{"location":"PyTest/02-Pytest-get-started/#install-pytest","title":"Install pytest\u00b6","text":"<p>pytest requires: Python 3.7+ or PyPy3.</p> <ul> <li>Run the following command in your command line:</li> <li>Check that you installed the correct version:</li> </ul>"},{"location":"PyTest/02-Pytest-get-started/#create-your-first-test","title":"Create your first test\u00b6","text":"<ol> <li>Create a new file called test_sample.py, containing a function, and a test:</li> </ol>"},{"location":"PyTest/02-Pytest-get-started/#run-multiple-tests","title":"Run multiple tests\u00b6","text":"<ul> <li><code>pytest</code> will run all files of the form <code>test_*.py</code> or <code>*_test.py</code> in the current directory and its subdirectories.<ul> <li>More generally, it follows standard test discovery rules.</li> </ul> </li> </ul>"},{"location":"PyTest/02-Pytest-get-started/#assert-that-a-certain-exception-is-raised","title":"Assert that a certain exception is raised\u00b6","text":"<ul> <li><p>Use the <code>raises</code> helper to assert that some code raises an exception:</p> </li> <li><p>Execute the test function with <code>quiet</code> reporting mode:</p> <ul> <li>The <code>-q/--quiet</code> flag keeps the output brief in this and following examples.</li> <li><code>pytest -q test_sysexit.py</code></li> </ul> <p></p> </li> </ul>"},{"location":"PyTest/02-Pytest-get-started/#group-multiple-tests-in-a-class","title":"Group multiple tests in a class\u00b6","text":"<p>Once you develop multiple tests, you may want to group them into a class. <code>pytest</code> makes it easy to create a class containing more than one test:</p> <p>Grouping tests in classes can be beneficial for the following reasons:</p> <ul> <li><p>Test organization</p> </li> <li><p>Sharing fixtures for tests only in that particular class</p> </li> <li><p>Applying marks at the class level and having them implicitly apply to all tests</p> </li> </ul>"},{"location":"PyTest/02-Pytest-get-started/#setup-and-teardown","title":"<code>setup()</code> and <code>teardown()</code>\u00b6","text":"<ul> <li>use <code>pytest - s</code> to show the print info</li> <li>Create <code>shapes.py</code> for test</li> </ul>"},{"location":"PyTest/02-Pytest-get-started/#request-a-unique-temporary-directory-for-functional-tests","title":"Request a unique temporary directory for functional tests\u00b6","text":"<ul> <li><code>pytest</code> provides Builtin fixtures/function arguments to request arbitrary resources, like a unique temporary directory:</li> <li>List the name <code>tmp_path</code> in the test function signature and <code>pytest</code> will lookup and call a <code>fixture factory</code> to create the resource before performing the test function call.<ul> <li>Before the test runs, <code>pytest</code> creates a <code>unique-per-test-invocation </code>temporary directory:</li> </ul> </li> <li>The use of a unique temporary directory for functional tests, facilitated by <code>pytest</code>'s <code>tmp_path</code> fixture, helps ensure that each test operates in an isolated environment.</li> </ul>"},{"location":"PyTest/03-Pytest-write-and-report-assertions/","title":"03 PyTest Write and Report","text":"In\u00a0[\u00a0]: Copied! <pre># content of test_assert1.py\ndef f():\n    return 3\n\n\ndef test_function():\n    assert f() == 4\n</pre> # content of test_assert1.py def f():     return 3   def test_function():     assert f() == 4 <ul> <li>to assert that your function returns a certain value. If this assertion fails you will see the return value of the function call:</li> <li><code>pytest test_assert1.py</code></li> </ul> <ul> <li><code>pytest</code> has support for showing the values of the most common <code>subexpressions</code> including <code>calls</code>, <code>attributes</code>, <code>comparisons</code>, and <code>binary</code> and <code>unary</code> operators.</li> <li>This allows you to use the idiomatic python constructs without boilerplate code while not losing introspection information.</li> <li>However, if you specify a message with the assertion like this: (Never do it!)<ul> <li><code>assert a % 2 == 0, \"value was odd, should be even\"</code></li> <li>then no assertion introspection takes places at all and the message will be simply shown in the traceback.</li> </ul> </li> </ul> In\u00a0[1]: Copied! <pre>import pytest\n\ndef test_zero_division():\n    with pytest.raises(ZeroDivisionError):\n        1 / 0\n</pre> import pytest  def test_zero_division():     with pytest.raises(ZeroDivisionError):         1 / 0 <p>and if you need to have access to the actual exception info you may use:</p> <ul> <li><code>excinfo</code> is an <code>ExceptionInfo</code> instance, which is a wrapper around the actual exception raised.</li> <li>The main attributes of interest are <code>.type</code>, <code>.value</code> and <code>.traceback</code>.</li> </ul> In\u00a0[2]: Copied! <pre>def test_recursion_depth():\n    with pytest.raises(RuntimeError) as excinfo:\n\n        def f():\n            f()\n\n        f()\n    assert \"maximum recursion\" in str(excinfo.value)\n</pre> def test_recursion_depth():     with pytest.raises(RuntimeError) as excinfo:          def f():             f()          f()     assert \"maximum recursion\" in str(excinfo.value)"},{"location":"PyTest/03-Pytest-write-and-report-assertions/#asserting-with-the-assert-statement","title":"Asserting with the assert statement\u00b6","text":"<ul> <li><code>pytest</code> allows you to use the standard Python assert for verifying expectations and values in Python tests.</li> <li>For example, you can write the following:</li> </ul>"},{"location":"PyTest/03-Pytest-write-and-report-assertions/#assertions-about-expected-exceptions","title":"Assertions about expected exceptions\u00b6","text":"<p>In order to write assertions about raised exceptions, you can use <code>pytest.raises()</code> as a context manager like this:</p>"},{"location":"PyTest/04-Pytest-use-fixtures/","title":"04 PyTest Fixture","text":"<p>Assume we add another class <code>Rectangle</code> into the <code>shapes.py</code></p> In\u00a0[3]: Copied! <pre># code in shapes.py\nimport math\n\nclass Shape:\n    def area(self):\n        pass\n    def perimeter(self):\n        pass\n    \nclass Circle(Shape):\n    def __init__(self, radius) -&gt; None:\n        self.radius = radius\n    \n    def area(self):\n        return math.pi * (self.radius**2)\n    \n    def perimeter(self):\n        return 2 * math.pi * self.radius\n    \nclass Rectangle(Shape):\n    def __init__(self,length,width) -&gt; None:\n        self.length = length\n        self.width = width\n        \n    def area(self):\n        return self.length * self.width\n    \n    def perimeter(self):\n        return 2 * (self.length + self.width)\n    \n    def __eq__(self, other: object) -&gt; bool:\n        if not isinstance(other,Rectangle):\n            return False\n        \n        return self.width == other.width and self.length == self.length\n</pre> # code in shapes.py import math  class Shape:     def area(self):         pass     def perimeter(self):         pass      class Circle(Shape):     def __init__(self, radius) -&gt; None:         self.radius = radius          def area(self):         return math.pi * (self.radius**2)          def perimeter(self):         return 2 * math.pi * self.radius      class Rectangle(Shape):     def __init__(self,length,width) -&gt; None:         self.length = length         self.width = width              def area(self):         return self.length * self.width          def perimeter(self):         return 2 * (self.length + self.width)          def __eq__(self, other: object) -&gt; bool:         if not isinstance(other,Rectangle):             return False                  return self.width == other.width and self.length == self.length <p>We can write a class-based test file, for example:</p> <pre><code>import pytest\nimport shapes\nimport math\n\nclass TestRectangle:\n    def setup_rec(self):\n        self.rec = shapes.Rectangle(10,20)\n\n    def test_area(self):\n        assert self.rec.area == self.rec.length * self.rec.width\n\n    def test_perimeter(self):\n        assert self.rec.perimeter == 2 * (self.rec.length + self.rec.width)\n</code></pre> <p>In here, we use <code>setup</code> function to create a instance, but it only work in class-based test, what if we want to write function-based test?</p> <p>We use <code>@pytest.fixture</code></p> <pre><code>@pytest.fixture\ndef my_rec():\n    return shapes.Rectangle(10,20)\n\n@pytest.fixture\ndef weird_rectangle():\n    return shapes.Rectangle(5,6)\n\ndef test_area(my_rec):\n    assert my_rec.area() == my_rec.length * my_rec.width\n\ndef test_perimeter(my_rec):\n    assert my_rec.perimeter() == 2 * (my_rec.length + my_rec.width)\n\ndef test_not_equal(my_rec,weird_rectangle):\n    assert my_rec!= weird_rectangle\n\n</code></pre> <p></p> In\u00a0[4]: Copied! <pre>import pytest\n\n@pytest.fixture\ndef sample_data():\n    # Setup: Code to prepare test data\n    data = {'Python': '3.8', 'pytest': '6.2'}\n    return data\n\ndef test_version(sample_data):\n    # This test will use the sample data provided by the fixture\n    assert sample_data['Python'] == '3.8'\n</pre> import pytest  @pytest.fixture def sample_data():     # Setup: Code to prepare test data     data = {'Python': '3.8', 'pytest': '6.2'}     return data  def test_version(sample_data):     # This test will use the sample data provided by the fixture     assert sample_data['Python'] == '3.8'"},{"location":"PyTest/04-Pytest-use-fixtures/#requesting-fixtures","title":"<code>Requesting</code> fixtures\u00b6","text":"<p>At a basic level, test functions request fixtures they require by declaring them as arguments.</p> <p>When <code>pytest</code> goes to run a test, it looks at the parameters in that test function\u2019s signature, and then searches for <code>fixtures</code> that have the same names as those parameters. Once pytest finds them, it runs those fixtures, captures what they returned (if anything), and passes those objects into the test function as arguments.</p>"},{"location":"PyTest/04-Pytest-use-fixtures/#pytestfixture","title":"<code>@pytest.fixture</code>\u00b6","text":""},{"location":"PyTest/04-Pytest-use-fixtures/#conftestpy","title":"<code>conftest.py</code>\u00b6","text":"<ul> <li>If we write multiple test files, and do not want to create these test instances over and over again, we can put them into a file named <code>conftest.py</code><ul> <li><code>pytest</code> will automatically detect it and load script inside to every test file</li> </ul> </li> <li>The code of <code>conftest.py</code> from above example</li> </ul> <pre><code>import pytest\nimport shapes\n\n@pytest.fixture\ndef my_rec():\n    return shapes.Rectangle(10,20)\n\n@pytest.fixture\ndef weird_rectangle():\n    return shapes.Rectangle(5,6)\n</code></pre>"},{"location":"PyTest/04-Pytest-use-fixtures/#application","title":"Application\u00b6","text":"<p>Fixtures are needed when you have some setup operations that need to be done several times before tests. Instead of writing the same code over and over for each test, you can use <code>fixtures</code> to provide a fixed baseline so that tests execute in a predictable environment.</p> <p>This is particularly useful in the following scenarios:</p> <ol> <li>Data Preparation: When tests require a specific set of data to work with, fixtures can be used to create and tear down this data before and after the tests run.</li> <li>Environment Configuration: If your tests need the application or environment to be in a certain state, fixtures can ensure this state is achieved before tests start.</li> <li>Resource Allocation and Cleanup: For tests that involve external resources like <code>database connections</code>, <code>network sockets</code>, or <code>temporary files</code>, <code>fixtures</code> can handle the allocation and release of these resources safely and efficiently.</li> <li>Dependency Injection: Fixtures can also be used to inject dependencies into your test functions, making it easier to manage test dependencies.</li> </ol>"},{"location":"PyTest/04-Pytest-use-fixtures/#example","title":"Example\u00b6","text":"<p>In this example, <code>sample_data</code> is a <code>fixture</code> function that returns a dictionary.</p> <ul> <li>This <code>fixture</code> is then <code>injected</code> into the <code>test_version</code> function as an argument.</li> <li><code>Pytest</code> ensures that the <code>sample_data</code> <code>fixture</code> is called before the test function, and the returned value is passed to the test.</li> </ul>"},{"location":"PyTest/05-Pytest-Parameterize-Mark/","title":"05 PyTest Mark and Parameterize","text":""},{"location":"PyTest/05-Pytest-Parameterize-Mark/#mark","title":"Mark\u00b6","text":"<ul> <li>Marking in <code>pytest</code> allows you to add metadata to your test functions, such as categorizing tests or marking them with certain properties like 'slow' or 'fast'.</li> </ul> <p>Marks are needed when:</p> <ol> <li>Selective Testing: You want to run a subset of tests based on certain criteria, such as all 'slow' tests or all 'integration' tests. (like tag)</li> <li>Conditionally Skipping Tests: You need to skip tests under certain conditions, such as <code>missing dependencies</code> or an <code>unsupported platform</code>.</li> <li>Expected Failures: You want to mark tests that are known to fail, possibly due to a known bug that hasn't been fixed yet.</li> </ol>"},{"location":"PyTest/05-Pytest-Parameterize-Mark/#add-tag-to-test-function","title":"Add tag to test function\u00b6","text":"<ul> <li>add <code>slow</code> tag to the <code>test_very_slow()</code> function</li> </ul> <pre><code>@pytest.mark.slow\ndef test_very_slow():\n    time.sleep(5)\n    assert calc.add(10,5) == 15\n</code></pre>"},{"location":"PyTest/05-Pytest-Parameterize-Mark/#filter-by-tag-and-run-test","title":"Filter by tag and run test\u00b6","text":"<ul> <li><code>pytest -m slow</code><ul> <li>only run test that tag as <code>slow</code></li> </ul> </li> </ul>"},{"location":"PyTest/05-Pytest-Parameterize-Mark/#skip-test","title":"Skip test\u00b6","text":"<ol> <li>Add <code>skip</code> tag to function</li> </ol> <pre><code>@pytest.mark.skip(reason=\"This feature is currently broken\")\ndef test_add():\n    assert calc.add(10,5) == 14\n</code></pre> <ol> <li><code>pytest</code> will automatically ignore this function</li> </ol>"},{"location":"PyTest/05-Pytest-Parameterize-Mark/#mark-those-fails-we-already-know","title":"Mark those fails we already know\u00b6","text":"<ol> <li>Add <code>xfail</code> tag to those functions</li> </ol> <pre><code>@pytest.mark.xfail(reason=\"We know this gonna fail\")\ndef test_divide_zero():\n    assert calc.divide(10,5)\n</code></pre> <ol> <li>Result will use <code>X</code> to show these fails</li> </ol>"},{"location":"PyTest/05-Pytest-Parameterize-Mark/#parameterization","title":"Parameterization\u00b6","text":"<p>Parameterization in <code>pytest</code> is a powerful feature used for running a test function multiple times with different sets of arguments.</p> <ul> <li>It's also a <code>mark</code> in <code>pytest</code></li> </ul> <p>Parameterization is needed when:</p> <ol> <li>Testing Various Input Sets: You have a function that should work correctly with various inputs, and you want to test all these cases without writing separate test functions for each input set.</li> <li>Cross-Browser or Cross-Platform Testing: You want to run the same tests across multiple environments, such as different browsers or operating systems.</li> <li>Boundary Value Testing: When you want to test edge cases or boundary values for a function, parameterization allows you to easily define these boundary values as parameters.</li> </ol>"},{"location":"PyTest/05-Pytest-Parameterize-Mark/#example","title":"Example\u00b6","text":"<ul> <li>We want to test the <code>area()</code> function of <code>Square</code> class</li> </ul> <pre><code>class Rectangle(Shape):\n    def __init__(self,length,width) -&gt; None:\n        self.length = length\n        self.width = width\n\n    def area(self):\n        return self.length * self.width\n\n    def perimeter(self):\n        return 2 * (self.length + self.width)\n\n    def __eq__(self, other: object) -&gt; bool:\n        if not isinstance(other,Rectangle):\n            return False\n        return self.width == other.width and self.length == self.length\n\nclass Square(Rectangle):\n    def __init__(self, side_length) -&gt; None:\n        super().__init__(side_length, side_length)\n\n</code></pre> <ol> <li>use <code>pytest.mark.parameterize(\"params\",[args])</code> to tag the test function</li> </ol> <pre><code>@pytest.mark.parametrize(\"side_length, expected_area\",[(5,25),(4,16),(9,81)])\ndef test_multiple_square_areas(side_length, expected_area):\n    assert shapes.Square(side_length).area() == expected_area\n</code></pre> <ol> <li><p>Show result</p> <p></p> </li> </ol>"},{"location":"PyTest/06-Pytest-Mocking/","title":"06 PyTest Mocking","text":"In\u00a0[\u00a0]: Copied! <pre>database = {\n    1: \"Alice\",\n    2: \"Bob\",    \n    3: \"Charlie\"\n}\n\ndef get_user_from_db(user_id):\n    return database.get(user_id)\n</pre> database = {     1: \"Alice\",     2: \"Bob\",         3: \"Charlie\" }  def get_user_from_db(user_id):     return database.get(user_id) <ol> <li>Mock <code>get_user_from_db</code></li> </ol> <pre><code>import service\nimport pytest\nimport unittest.mock as mock\n\n\n@mock.patch(\"service.get_user_from_db\")\ndef test_get_user_from_db(mock_get_user_from_db):\n    mock_get_user_from_db.return_value = \"Mocked Alice\"\n    user_name = service.get_user_from_db(1)\n\n    assert user_name == \"Mocked Alice\"\n\n</code></pre> <ol> <li><p><code>@mock.patch(\"service.get_user_from_db\")</code>: This is a decorator from the mock module used to replace the <code>get_user_from_db</code> function in the service module with a mock object during this test.</p> <ol> <li>The original function is restored after the test completes. The mock object is passed as an argument to the test function, named <code>mock_get_user_from_db</code> here.</li> </ol> </li> <li><p>Inside the function, <code>mock_get_user_from_db.return_value = \"Mocked Alice\"</code> sets the return value of the mock object.</p> <ol> <li>When the <code>get_user_from_db</code> function is called within this test, it will return \"<code>Mocked Alice\"</code> instead of executing its real logic.</li> <li><code>user_name = service.get_user_from_db(1)</code>: Calls the mocked <code>get_user_from_db</code> function with an argument (1), which would typically represent a user ID. Due to mocking, the function returns <code>\"Mocked Alice\"</code>.</li> </ol> </li> <li><p>assert <code>user_name == \"Mocked_Alice\"</code>: This assertion checks that the user_name variable equals <code>\"Mocked_Alice\"</code>. However, there's a typo here; the expected string should be <code>\"Mocked Alice\"</code> (with a space, not an underscore), matching the return_value set on the mock object.</p> </li> </ol> <ol> <li><p>Write the <code>get_user</code> function to be test</p> <pre><code>def get_users():\n    response = requests.get(\"https://jsonplaceholder.typicode.com/users\")\n    if response.status_code == 200:\n        return response.json()\n\n    raise requests.HTTPError\n</code></pre> </li> <li><p>Mock <code>requests.get</code> since we do not want to get data from online in this test</p> <pre><code>@mock.patch(\"requests.get\")\ndef test_get_user(mock_get):\n    mock_response = mock.Mock()\n    mock_response.status_code = 200\n    mock_response.json.return_value = {\"id\":1,\"name\":\"Eric Yang\"}\n    mock_get.return_value = mock_response\n\n    data = service.get_users()\n    assert data == {\"id\":1,\"name\":\"Eric Yang\"}\n\n@mock.patch(\"requests.get\")\ndef test_get_user_httperror(mock_get):\n    mock_response = mock.Mock()\n    mock_response.status_code = 404\n    mock_get.return_value = mock_response\n\n    with pytest.raises(requests.HTTPError):\n        service.get_users()\n</code></pre> </li> </ol>"},{"location":"PyTest/06-Pytest-Mocking/#mocking","title":"Mocking\u00b6","text":"<p>In <code>pytest</code>, <code>mocking</code> is a technique used to isolate test environments by replacing complex, unpredictable, or external system dependencies with objects that mimic the behavior of these dependencies in a controlled way.</p> <p>When We Need <code>Mocking</code> <code>Mocking</code> is particularly useful in the following scenarios:</p> <ol> <li>External Dependencies: When your code interacts with external systems like <code>web APIs</code>, <code>databases</code>, or <code>external libraries</code>, mocking these can help you test your code without the overhead or unpredictability of these systems.</li> <li>Complex Internal Dependencies: For complex modules or classes that your code depends on, mocking can help you simplify these dependencies to test specific functionality without the complexity.</li> <li>Unpredictable Outcomes: When dealing with dependencies that can produce unpredictable results (e.g., current date, random numbers), mocking can be used to produce predictable and testable outputs.</li> <li>Side Effects: If a function or method has side effects like modifying a file or database, mocking can be used to simulate these side effects without making actual changes.</li> </ol>"},{"location":"PyTest/06-Pytest-Mocking/#example-with-database","title":"Example with database\u00b6","text":"<ol> <li>In <code>service.py</code>, construct a function to get user from db</li> </ol>"},{"location":"PyTest/06-Pytest-Mocking/#example-with-api","title":"Example with API\u00b6","text":""},{"location":"PyTest/Test/calc/","title":"Calc","text":"In\u00a0[\u00a0]: Copied! <pre>def add(x,y):\n    \"\"\"Add Function\"\"\"\n    return x + y\n</pre> def add(x,y):     \"\"\"Add Function\"\"\"     return x + y In\u00a0[\u00a0]: Copied! <pre>def subtract(x,y):\n    \"\"\"Subtract Function\"\"\"\n    return x - y\n</pre> def subtract(x,y):     \"\"\"Subtract Function\"\"\"     return x - y In\u00a0[\u00a0]: Copied! <pre>def multiply(x,y):\n    \"\"\"Multiply Function\"\"\"\n    return x * y\n</pre> def multiply(x,y):     \"\"\"Multiply Function\"\"\"     return x * y In\u00a0[\u00a0]: Copied! <pre>def divide(x,y):\n    \"\"\"Divide Function\"\"\"\n    if y == 0:\n        raise ValueError('Can not divide by zero!')\n    return x / y\n</pre> def divide(x,y):     \"\"\"Divide Function\"\"\"     if y == 0:         raise ValueError('Can not divide by zero!')     return x / y"},{"location":"PyTest/Test/conftest/","title":"Conftest","text":"In\u00a0[\u00a0]: Copied! <pre>import pytest\nimport shapes\n</pre> import pytest import shapes In\u00a0[\u00a0]: Copied! <pre>@pytest.fixture\ndef my_rec():\n    return shapes.Rectangle(10,20)\n</pre> @pytest.fixture def my_rec():     return shapes.Rectangle(10,20) In\u00a0[\u00a0]: Copied! <pre>@pytest.fixture\ndef weird_rectangle():\n    return shapes.Rectangle(5,6)\n</pre> @pytest.fixture def weird_rectangle():     return shapes.Rectangle(5,6)"},{"location":"PyTest/Test/employee/","title":"Employee","text":"In\u00a0[\u00a0]: Copied! <pre>class Employee:\n    \"\"\"A sample Employee class\"\"\"\n    raise_amt = 1.05\n    \n    def __init__(self, first, last, pay) -&gt; None:\n        self.first = first\n        self.last = last\n        self.pay = pay\n        \n    @property\n    def email(self):\n        return f\"{self.first}.{self.last}@email.com\"\n    \n    @property\n    def fullname(self):\n        return f\"{self.first} {self.last}\"\n    \n    def apply_raise(self):\n        self.pay = int(self.pay * self.raise_amt)\n</pre> class Employee:     \"\"\"A sample Employee class\"\"\"     raise_amt = 1.05          def __init__(self, first, last, pay) -&gt; None:         self.first = first         self.last = last         self.pay = pay              @property     def email(self):         return f\"{self.first}.{self.last}@email.com\"          @property     def fullname(self):         return f\"{self.first} {self.last}\"          def apply_raise(self):         self.pay = int(self.pay * self.raise_amt)"},{"location":"PyTest/Test/employee02/","title":"Employee02","text":"In\u00a0[\u00a0]: Copied! <pre>import requests\n</pre> import requests In\u00a0[\u00a0]: Copied! <pre>class Employee:\n    \"\"\"A sample Employee class\"\"\"\n    raise_amt = 1.05\n    \n    def __init__(self, first, last, pay) -&gt; None:\n        self.first = first\n        self.last = last\n        self.pay = pay\n        \n    @property\n    def email(self):\n        return f\"{self.first}.{self.last}@email.com\"\n    \n    @property\n    def fullname(self):\n        return f\"{self.first} {self.last}\"\n    \n    def apply_raise(self):\n        self.pay = int(self.pay * self.raise_amt)\n        \n    ## get info from url   \n    def monthly_schedule(self, month):\n        response = requests.get(f\"http://company.com/{self.last}/{month}\")\n        if response.ok:\n            return response.text\n        else:\n            return \"Bad Response!\"\n</pre> class Employee:     \"\"\"A sample Employee class\"\"\"     raise_amt = 1.05          def __init__(self, first, last, pay) -&gt; None:         self.first = first         self.last = last         self.pay = pay              @property     def email(self):         return f\"{self.first}.{self.last}@email.com\"          @property     def fullname(self):         return f\"{self.first} {self.last}\"          def apply_raise(self):         self.pay = int(self.pay * self.raise_amt)              ## get info from url        def monthly_schedule(self, month):         response = requests.get(f\"http://company.com/{self.last}/{month}\")         if response.ok:             return response.text         else:             return \"Bad Response!\""},{"location":"PyTest/Test/service/","title":"Service","text":"In\u00a0[\u00a0]: Copied! <pre>import requests\n</pre> import requests In\u00a0[\u00a0]: Copied! <pre>database = {\n    1: \"Alice\",\n    2: \"Bob\",    \n    3: \"Charlie\"\n}\n</pre> database = {     1: \"Alice\",     2: \"Bob\",         3: \"Charlie\" } In\u00a0[\u00a0]: Copied! <pre>def get_user_from_db(user_id):\n    return database.get(user_id)\n</pre> def get_user_from_db(user_id):     return database.get(user_id) In\u00a0[\u00a0]: Copied! <pre>def get_users():\n    response = requests.get(\"https://jsonplaceholder.typicode.com/users\")\n    if response.status_code == 200:\n        return response.json()\n    \n    raise requests.HTTPError\n</pre> def get_users():     response = requests.get(\"https://jsonplaceholder.typicode.com/users\")     if response.status_code == 200:         return response.json()          raise requests.HTTPError In\u00a0[\u00a0]: Copied! <pre>\n</pre> In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"PyTest/Test/shapes/","title":"Shapes","text":"In\u00a0[\u00a0]: Copied! <pre># code in shapes.py\nimport math\n</pre> # code in shapes.py import math In\u00a0[\u00a0]: Copied! <pre>class Shape:\n    def area(self):\n        pass\n    def perimeter(self):\n        pass\n</pre> class Shape:     def area(self):         pass     def perimeter(self):         pass In\u00a0[\u00a0]: Copied! <pre>class Circle(Shape):\n    def __init__(self, radius) -&gt; None:\n        self.radius = radius\n    \n    def area(self):\n        return math.pi * (self.radius**2)\n    \n    def perimeter(self):\n        return 2 * math.pi * self.radius\n</pre> class Circle(Shape):     def __init__(self, radius) -&gt; None:         self.radius = radius          def area(self):         return math.pi * (self.radius**2)          def perimeter(self):         return 2 * math.pi * self.radius In\u00a0[\u00a0]: Copied! <pre>class Rectangle(Shape):\n    def __init__(self,length,width) -&gt; None:\n        self.length = length\n        self.width = width\n        \n    def area(self):\n        return self.length * self.width\n    \n    def perimeter(self):\n        return 2 * (self.length + self.width)\n    \n    def __eq__(self, other: object) -&gt; bool:\n        if not isinstance(other,Rectangle):\n            return False\n        return self.width == other.width and self.length == self.length\n</pre> class Rectangle(Shape):     def __init__(self,length,width) -&gt; None:         self.length = length         self.width = width              def area(self):         return self.length * self.width          def perimeter(self):         return 2 * (self.length + self.width)          def __eq__(self, other: object) -&gt; bool:         if not isinstance(other,Rectangle):             return False         return self.width == other.width and self.length == self.length In\u00a0[\u00a0]: Copied! <pre>class Square(Rectangle):\n    def __init__(self, side_length) -&gt; None:\n        super().__init__(side_length, side_length)\n</pre> class Square(Rectangle):     def __init__(self, side_length) -&gt; None:         super().__init__(side_length, side_length)"},{"location":"PyTest/Test/test_assert1/","title":"Test assert1","text":"In\u00a0[\u00a0]: Copied! <pre># content of test_assert1.py\ndef f():\n    return 3\n</pre> # content of test_assert1.py def f():     return 3 In\u00a0[\u00a0]: Copied! <pre>def test_function():\n    assert f() == 4\n</pre> def test_function():     assert f() == 4"},{"location":"PyTest/Test/test_calc/","title":"Test calc","text":"In\u00a0[\u00a0]: Copied! <pre>import unittest\nimport calc\n</pre> import unittest import calc In\u00a0[\u00a0]: Copied! <pre>class TestCalc(unittest.TestCase):\n    \n    def test_add(self):\n        self.assertEqual(calc.add(10, 5),15)\n        self.assertEqual(calc.add(-1, 1), 0)\n        \n    def test_subtract(self):\n        self.assertEqual(calc.subtract(3, 1), 2)\n        self.assertEqual(calc.subtract(5, 5), 0)\n        \n    def test_multiply(self):\n        self.assertEqual(calc.multiply(10, 5), 50)\n        self.assertEqual(calc.multiply(-1, -1), 1)\n        \n    def test_divide(self):\n        self.assertEqual(calc.divide(10, 5), 2)\n        self.assertEqual(calc.subtract(-1, 1), -1)\n        \n        ## Test Raise Error is right or not\n        self.assertRaises(ValueError,calc.divide,10,0)\n        \n        ## Same to above but different format\n        with self.assertRaises(ValueError):\n            calc.divide(1,0)\n</pre> class TestCalc(unittest.TestCase):          def test_add(self):         self.assertEqual(calc.add(10, 5),15)         self.assertEqual(calc.add(-1, 1), 0)              def test_subtract(self):         self.assertEqual(calc.subtract(3, 1), 2)         self.assertEqual(calc.subtract(5, 5), 0)              def test_multiply(self):         self.assertEqual(calc.multiply(10, 5), 50)         self.assertEqual(calc.multiply(-1, -1), 1)              def test_divide(self):         self.assertEqual(calc.divide(10, 5), 2)         self.assertEqual(calc.subtract(-1, 1), -1)                  ## Test Raise Error is right or not         self.assertRaises(ValueError,calc.divide,10,0)                  ## Same to above but different format         with self.assertRaises(ValueError):             calc.divide(1,0) In\u00a0[\u00a0]: Copied! <pre>if __name__ == \"__main__\":\n    unittest.main()\n</pre> if __name__ == \"__main__\":     unittest.main()"},{"location":"PyTest/Test/test_calc_pytest/","title":"Test calc pytest","text":"In\u00a0[\u00a0]: Copied! <pre>import pytest\nimport time\nimport calc\n</pre> import pytest import time import calc In\u00a0[\u00a0]: Copied! <pre>def test_add():\n    assert calc.add(10,5) == 15\n</pre> def test_add():     assert calc.add(10,5) == 15 In\u00a0[\u00a0]: Copied! <pre>def test_div():\n    assert calc.divide(10,5) == 2\n    with pytest.raises(ValueError):\n        assert calc.divide(10,0)\n</pre> def test_div():     assert calc.divide(10,5) == 2     with pytest.raises(ValueError):         assert calc.divide(10,0) In\u00a0[\u00a0]: Copied! <pre>@pytest.mark.slow        \ndef test_very_slow():\n    time.sleep(5)\n    assert calc.add(10,5) == 15\n</pre> @pytest.mark.slow         def test_very_slow():     time.sleep(5)     assert calc.add(10,5) == 15 In\u00a0[\u00a0]: Copied! <pre>@pytest.mark.skip(reason=\"This feature is currently broken\")\ndef test_add():\n    assert calc.add(10,5) == 14\n</pre> @pytest.mark.skip(reason=\"This feature is currently broken\") def test_add():     assert calc.add(10,5) == 14 In\u00a0[\u00a0]: Copied! <pre>@pytest.mark.xfail(reason=\"We know this gonna fail\")\ndef test_divide_zero():\n    assert calc.divide(10,5)\n</pre> @pytest.mark.xfail(reason=\"We know this gonna fail\") def test_divide_zero():     assert calc.divide(10,5)"},{"location":"PyTest/Test/test_circle/","title":"Test circle","text":"In\u00a0[\u00a0]: Copied! <pre>import pytest\nimport math\nimport shapes\n</pre> import pytest import math import shapes In\u00a0[\u00a0]: Copied! <pre>class TestCircle:\n    def setup_method(self,method):\n        print(f\"Setting up {method}\")\n        self.circle = shapes.Circle(10)\n        \n    def teardown_method(self,method):\n        print(f\"Tear down method\")\n        del self.circle\n        \n    def test_area(self):\n        assert self.circle.area() == math.pi * self.circle.radius ** 2\n        \n    def test_perimeter(self):\n        assert self.circle.perimeter() == 2 * math.pi * self.circle.radius\n</pre> class TestCircle:     def setup_method(self,method):         print(f\"Setting up {method}\")         self.circle = shapes.Circle(10)              def teardown_method(self,method):         print(f\"Tear down method\")         del self.circle              def test_area(self):         assert self.circle.area() == math.pi * self.circle.radius ** 2              def test_perimeter(self):         assert self.circle.perimeter() == 2 * math.pi * self.circle.radius"},{"location":"PyTest/Test/test_class/","title":"Test class","text":"In\u00a0[\u00a0]: Copied! <pre># content of test_class.py\nclass TestClass:\n    def test_one(self):\n        x = \"this\"\n        assert \"h\" in x\n\n    def test_two(self):\n        x = \"hello\"\n        assert hasattr(x, \"check\")\n</pre> # content of test_class.py class TestClass:     def test_one(self):         x = \"this\"         assert \"h\" in x      def test_two(self):         x = \"hello\"         assert hasattr(x, \"check\")"},{"location":"PyTest/Test/test_class_demo/","title":"Test class demo","text":"In\u00a0[\u00a0]: Copied! <pre># content of test_class_demo.py\nclass TestClassDemoInstance:\n    value = 0\n\n    def test_one(self):\n        self.value = 1\n        assert self.value == 1\n\n    def test_two(self):\n        assert self.value == 1\n</pre> # content of test_class_demo.py class TestClassDemoInstance:     value = 0      def test_one(self):         self.value = 1         assert self.value == 1      def test_two(self):         assert self.value == 1"},{"location":"PyTest/Test/test_employee/","title":"Test employee","text":"In\u00a0[\u00a0]: Copied! <pre>import unittest\nfrom employee import Employee\n</pre> import unittest from employee import Employee In\u00a0[\u00a0]: Copied! <pre>class TestEmployee(unittest.TestCase):\n    \n    @classmethod\n    def setUpClass(cls) -&gt; None:\n        # Run before all test\n        print(\"setupClass\")\n        # return super().setUpClass()\n    \n    @classmethod\n    def tearDownClass(cls) -&gt; None:\n        # Run after all test\n        print(\"teardownClass\")\n        # return super().tearDownClass()\n    \n    def setUp(self) -&gt; None:\n        print(\"setUp\")\n        ## setUp code will run before every test\n        self.emp_1 = Employee(\"Corey\", \"Schafer\", 50000)\n        self.emp_2 = Employee(\"Sue\", \"Smith\", 60000)\n        # return super().setUp()\n    \n    def tearDown(self) -&gt; None:\n        ## tearDown code will run after every test\n        print('tearDown\\n')\n        # return super().tearDown()\n    \n    def test_email(self):\n        print(\"test_email\")\n        self.assertEqual(self.emp_1.email, \"Corey.Schafer@email.com\")\n        self.assertEqual(self.emp_2.email, \"Sue.Smith@email.com\")\n        \n        self.emp_1.first = \"John\"\n        self.emp_2.first = \"Jane\"\n        \n        self.assertEqual(self.emp_1.email, \"John.Schafer@email.com\")\n        self.assertEqual(self.emp_2.email, \"Jane.Smith@email.com\")    \n    \n    def test_fullname(self):\n        print(\"test_fullname\")\n        self.assertEqual(self.emp_1.fullname, \"Corey Schafer\")\n        self.assertEqual(self.emp_2.fullname, \"Sue Smith\")  \n        \n        self.emp_1.first = \"John\"\n        self.emp_2.first = \"Jane\"\n        \n        self.assertEqual(self.emp_1.fullname, \"John Schafer\")\n        self.assertEqual(self.emp_2.fullname, \"Jane Smith\")  \n        \n    def test_apply_raise(self):\n        print(\"test_apply_raise\")\n        self.emp_1.apply_raise()\n        self.emp_2.apply_raise()\n        \n        self.assertEqual(self.emp_1.pay, 52500)\n        self.assertEqual(self.emp_2.pay, 63000)\n</pre> class TestEmployee(unittest.TestCase):          @classmethod     def setUpClass(cls) -&gt; None:         # Run before all test         print(\"setupClass\")         # return super().setUpClass()          @classmethod     def tearDownClass(cls) -&gt; None:         # Run after all test         print(\"teardownClass\")         # return super().tearDownClass()          def setUp(self) -&gt; None:         print(\"setUp\")         ## setUp code will run before every test         self.emp_1 = Employee(\"Corey\", \"Schafer\", 50000)         self.emp_2 = Employee(\"Sue\", \"Smith\", 60000)         # return super().setUp()          def tearDown(self) -&gt; None:         ## tearDown code will run after every test         print('tearDown\\n')         # return super().tearDown()          def test_email(self):         print(\"test_email\")         self.assertEqual(self.emp_1.email, \"Corey.Schafer@email.com\")         self.assertEqual(self.emp_2.email, \"Sue.Smith@email.com\")                  self.emp_1.first = \"John\"         self.emp_2.first = \"Jane\"                  self.assertEqual(self.emp_1.email, \"John.Schafer@email.com\")         self.assertEqual(self.emp_2.email, \"Jane.Smith@email.com\")              def test_fullname(self):         print(\"test_fullname\")         self.assertEqual(self.emp_1.fullname, \"Corey Schafer\")         self.assertEqual(self.emp_2.fullname, \"Sue Smith\")                    self.emp_1.first = \"John\"         self.emp_2.first = \"Jane\"                  self.assertEqual(self.emp_1.fullname, \"John Schafer\")         self.assertEqual(self.emp_2.fullname, \"Jane Smith\")                def test_apply_raise(self):         print(\"test_apply_raise\")         self.emp_1.apply_raise()         self.emp_2.apply_raise()                  self.assertEqual(self.emp_1.pay, 52500)         self.assertEqual(self.emp_2.pay, 63000) In\u00a0[\u00a0]: Copied! <pre>if __name__ == \"__main__\":\n    unittest.main()\n</pre> if __name__ == \"__main__\":     unittest.main() In\u00a0[\u00a0]: Copied! <pre>\n</pre> In\u00a0[\u00a0]: Copied! <pre>\n</pre> In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"PyTest/Test/test_employee2/","title":"Test employee2","text":"In\u00a0[\u00a0]: Copied! <pre>import unittest\nfrom unittest.mock import patch\nfrom employee02 import Employee\n</pre> import unittest from unittest.mock import patch from employee02 import Employee In\u00a0[\u00a0]: Copied! <pre>class TestEmployee(unittest.TestCase):\n    \n    @classmethod\n    def setUpClass(cls) -&gt; None:\n        # Run before all test\n        print(\"setupClass\")\n        # return super().setUpClass()\n    \n    @classmethod\n    def tearDownClass(cls) -&gt; None:\n        # Run after all test\n        print(\"teardownClass\")\n        # return super().tearDownClass()\n    \n    def setUp(self) -&gt; None:\n        print(\"setUp\")\n        ## setUp code will run before every test\n        self.emp_1 = Employee(\"Corey\", \"Schafer\", 50000)\n        self.emp_2 = Employee(\"Sue\", \"Smith\", 60000)\n        # return super().setUp()\n    \n    def tearDown(self) -&gt; None:\n        ## tearDown code will run after every test\n        print('tearDown\\n')\n        # return super().tearDown()\n    \n    def test_email(self):\n        print(\"test_email\")\n        self.assertEqual(self.emp_1.email, \"Corey.Schafer@email.com\")\n        self.assertEqual(self.emp_2.email, \"Sue.Smith@email.com\")\n        \n        self.emp_1.first = \"John\"\n        self.emp_2.first = \"Jane\"\n        \n        self.assertEqual(self.emp_1.email, \"John.Schafer@email.com\")\n        self.assertEqual(self.emp_2.email, \"Jane.Smith@email.com\")    \n    \n    def test_fullname(self):\n        print(\"test_fullname\")\n        self.assertEqual(self.emp_1.fullname, \"Corey Schafer\")\n        self.assertEqual(self.emp_2.fullname, \"Sue Smith\")  \n        \n        self.emp_1.first = \"John\"\n        self.emp_2.first = \"Jane\"\n        \n        self.assertEqual(self.emp_1.fullname, \"John Schafer\")\n        self.assertEqual(self.emp_2.fullname, \"Jane Smith\")  \n        \n    def test_apply_raise(self):\n        print(\"test_apply_raise\")\n        self.emp_1.apply_raise()\n        self.emp_2.apply_raise()\n        \n        self.assertEqual(self.emp_1.pay, 52500)\n        self.assertEqual(self.emp_2.pay, 63000)\n    \n    def test_monthly_schedule(self):\n        with patch(\"employee02.requests.get\") as mocked_get:\n            ## simulate connect success\n            mocked_get.return_value.ok = True\n            mocked_get.return_value.text = \"Success\"\n            \n            schedule = self.emp_1.monthly_schedule(\"May\")\n            mocked_get.assert_called_with(\"http://company.com/Schafer/May\")\n            self.assertEqual(schedule,\"Success\")\n            \n            ## simulate connect failed\n            mocked_get.return_value.ok = False\n            \n            schedule = self.emp_2.monthly_schedule(\"June\")\n            mocked_get.assert_called_with(\"http://company.com/Smith/June\")\n            self.assertEqual(schedule,\"Bad Response!\")\n</pre> class TestEmployee(unittest.TestCase):          @classmethod     def setUpClass(cls) -&gt; None:         # Run before all test         print(\"setupClass\")         # return super().setUpClass()          @classmethod     def tearDownClass(cls) -&gt; None:         # Run after all test         print(\"teardownClass\")         # return super().tearDownClass()          def setUp(self) -&gt; None:         print(\"setUp\")         ## setUp code will run before every test         self.emp_1 = Employee(\"Corey\", \"Schafer\", 50000)         self.emp_2 = Employee(\"Sue\", \"Smith\", 60000)         # return super().setUp()          def tearDown(self) -&gt; None:         ## tearDown code will run after every test         print('tearDown\\n')         # return super().tearDown()          def test_email(self):         print(\"test_email\")         self.assertEqual(self.emp_1.email, \"Corey.Schafer@email.com\")         self.assertEqual(self.emp_2.email, \"Sue.Smith@email.com\")                  self.emp_1.first = \"John\"         self.emp_2.first = \"Jane\"                  self.assertEqual(self.emp_1.email, \"John.Schafer@email.com\")         self.assertEqual(self.emp_2.email, \"Jane.Smith@email.com\")              def test_fullname(self):         print(\"test_fullname\")         self.assertEqual(self.emp_1.fullname, \"Corey Schafer\")         self.assertEqual(self.emp_2.fullname, \"Sue Smith\")                    self.emp_1.first = \"John\"         self.emp_2.first = \"Jane\"                  self.assertEqual(self.emp_1.fullname, \"John Schafer\")         self.assertEqual(self.emp_2.fullname, \"Jane Smith\")                def test_apply_raise(self):         print(\"test_apply_raise\")         self.emp_1.apply_raise()         self.emp_2.apply_raise()                  self.assertEqual(self.emp_1.pay, 52500)         self.assertEqual(self.emp_2.pay, 63000)          def test_monthly_schedule(self):         with patch(\"employee02.requests.get\") as mocked_get:             ## simulate connect success             mocked_get.return_value.ok = True             mocked_get.return_value.text = \"Success\"                          schedule = self.emp_1.monthly_schedule(\"May\")             mocked_get.assert_called_with(\"http://company.com/Schafer/May\")             self.assertEqual(schedule,\"Success\")                          ## simulate connect failed             mocked_get.return_value.ok = False                          schedule = self.emp_2.monthly_schedule(\"June\")             mocked_get.assert_called_with(\"http://company.com/Smith/June\")             self.assertEqual(schedule,\"Bad Response!\") In\u00a0[\u00a0]: Copied! <pre>if __name__ == \"__main__\":\n    unittest.main()\n</pre> if __name__ == \"__main__\":     unittest.main() In\u00a0[\u00a0]: Copied! <pre>\n</pre> In\u00a0[\u00a0]: Copied! <pre>\n</pre> In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"PyTest/Test/test_rectangle/","title":"Test rectangle","text":"In\u00a0[\u00a0]: Copied! <pre>import pytest\nimport shapes\nimport math\n</pre> import pytest import shapes import math <p>class TestRectangle: def setup_rec(self): self.rec = shapes.Rectangle(10,20)</p> <pre><code>def test_area(self):\n    assert self.rec.area == self.rec.length * self.rec.width</code></pre> <pre><code>def test_perimeter(self):\n    assert self.rec.perimeter == 2 * (self.rec.length + self.rec.width)</code></pre> In\u00a0[\u00a0]: Copied! <pre>def test_area(my_rec):\n    assert my_rec.area() == my_rec.length * my_rec.width\n</pre> def test_area(my_rec):     assert my_rec.area() == my_rec.length * my_rec.width In\u00a0[\u00a0]: Copied! <pre>def test_perimeter(my_rec):\n    assert my_rec.perimeter() == 2 * (my_rec.length + my_rec.width)\n</pre> def test_perimeter(my_rec):     assert my_rec.perimeter() == 2 * (my_rec.length + my_rec.width) In\u00a0[\u00a0]: Copied! <pre>def test_not_equal(my_rec,weird_rectangle):\n    assert my_rec!= weird_rectangle\n</pre> def test_not_equal(my_rec,weird_rectangle):     assert my_rec!= weird_rectangle"},{"location":"PyTest/Test/test_sample/","title":"Test sample","text":"In\u00a0[\u00a0]: Copied! <pre># content of test_sample.py\ndef func(x):\n    return x + 1\n</pre> # content of test_sample.py def func(x):     return x + 1 In\u00a0[\u00a0]: Copied! <pre>def test_answer():\n    assert func(3) == 5\n</pre> def test_answer():     assert func(3) == 5"},{"location":"PyTest/Test/test_service/","title":"Test service","text":"In\u00a0[\u00a0]: Copied! <pre>import service\nimport pytest,requests\nimport unittest.mock as mock\n</pre> import service import pytest,requests import unittest.mock as mock In\u00a0[\u00a0]: Copied! <pre>@mock.patch(\"service.get_user_from_db\")\ndef test_get_user_from_db(mock_get_user_from_db):\n    mock_get_user_from_db.return_value = \"Mocked Alice\"\n    user_name = service.get_user_from_db(1)\n    \n    assert user_name == \"Mocked Alice\"\n</pre> @mock.patch(\"service.get_user_from_db\") def test_get_user_from_db(mock_get_user_from_db):     mock_get_user_from_db.return_value = \"Mocked Alice\"     user_name = service.get_user_from_db(1)          assert user_name == \"Mocked Alice\" In\u00a0[\u00a0]: Copied! <pre>@mock.patch(\"requests.get\")\ndef test_get_user(mock_get):\n    mock_response = mock.Mock()\n    mock_response.status_code = 200\n    mock_response.json.return_value = {\"id\":1,\"name\":\"Eric Yang\"}\n    mock_get.return_value = mock_response\n    \n    data = service.get_users()\n    assert data == {\"id\":1,\"name\":\"Eric Yang\"}\n</pre> @mock.patch(\"requests.get\") def test_get_user(mock_get):     mock_response = mock.Mock()     mock_response.status_code = 200     mock_response.json.return_value = {\"id\":1,\"name\":\"Eric Yang\"}     mock_get.return_value = mock_response          data = service.get_users()     assert data == {\"id\":1,\"name\":\"Eric Yang\"} In\u00a0[\u00a0]: Copied! <pre>@mock.patch(\"requests.get\")\ndef test_get_user_httperror(mock_get):\n    mock_response = mock.Mock()\n    mock_response.status_code = 404\n    mock_get.return_value = mock_response\n    \n    with pytest.raises(requests.HTTPError):\n        service.get_users()\n</pre> @mock.patch(\"requests.get\") def test_get_user_httperror(mock_get):     mock_response = mock.Mock()     mock_response.status_code = 404     mock_get.return_value = mock_response          with pytest.raises(requests.HTTPError):         service.get_users() In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"PyTest/Test/test_square/","title":"Test square","text":"In\u00a0[\u00a0]: Copied! <pre>import shapes\nimport pytest\n</pre> import shapes import pytest In\u00a0[\u00a0]: Copied! <pre>@pytest.mark.parametrize(\"side_length, expected_area\",[(5,25),(4,16),(9,81)])\ndef test_multiple_square_areas(side_length, expected_area):\n    assert shapes.Square(side_length).area() == expected_area\n</pre> @pytest.mark.parametrize(\"side_length, expected_area\",[(5,25),(4,16),(9,81)]) def test_multiple_square_areas(side_length, expected_area):     assert shapes.Square(side_length).area() == expected_area   In\u00a0[\u00a0]: Copied! <pre>@pytest.mark.parametrize(\"side_length,expected_perimeter\",[(3,12),(4,16),(5,20)])\ndef test_multiple_square_perimeter(side_length,expected_perimeter):\n    assert shapes.Square(side_length).perimeter() == expected_perimeter\n</pre> @pytest.mark.parametrize(\"side_length,expected_perimeter\",[(3,12),(4,16),(5,20)]) def test_multiple_square_perimeter(side_length,expected_perimeter):     assert shapes.Square(side_length).perimeter() == expected_perimeter In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"PyTest/Test/test_sysexit/","title":"Test sysexit","text":"In\u00a0[\u00a0]: Copied! <pre># content of test_sysexit.py\nimport pytest\n</pre> # content of test_sysexit.py import pytest In\u00a0[\u00a0]: Copied! <pre>def f():\n    raise SystemExit(1)\n</pre> def f():     raise SystemExit(1) In\u00a0[\u00a0]: Copied! <pre>def test_mytest():\n    with pytest.raises(SystemExit):\n        f()\n</pre> def test_mytest():     with pytest.raises(SystemExit):         f()"},{"location":"PyTest/Test/test_tmp_path/","title":"Test tmp path","text":"In\u00a0[\u00a0]: Copied! <pre># content of test_tmp_path.py\ndef test_needsfiles(tmp_path):\n    print(tmp_path)\n    assert 0\n</pre> # content of test_tmp_path.py def test_needsfiles(tmp_path):     print(tmp_path)     assert 0"},{"location":"React/01-get-started/","title":"React","text":""},{"location":"React/01-get-started/#react-and-typescript","title":"React and TypeScript\u00b6","text":""},{"location":"React/01-get-started/#what-is-react","title":"What is React\u00b6","text":"<p><code>React</code> is a popular <code>JavaScript</code> library for building user interfaces, particularly single-page applications. It allows developers to create reusable UI components and manage the state of their applications efficiently.</p> <p></p>"},{"location":"React/01-get-started/#what-is-typescript","title":"What is TypeScript?\u00b6","text":"<p><code>TypeScript</code> is a superset of <code>JavaScript</code> that adds <code>static</code> types. This allows developers to catch errors at compile time rather than at runtime, making the development process smoother and more reliable.</p>"},{"location":"React/01-get-started/#setting-up-your-development-environment","title":"Setting Up Your Development Environment\u00b6","text":""},{"location":"React/01-get-started/#install-nodejs","title":"Install <code>Node.js</code>\u00b6","text":"<p><code>Node.js</code> is a <code>JavaScript</code> runtime that allows you to run <code>JavaScript</code> code outside of a browser. It also comes with <code>npm</code> (Node Package Manager), which you'll use to install libraries and tools.</p> <ul> <li><p>Download <code>Node.js</code>: Go to the Node.js official website and download the LTS version suitable for your operating system.</p> </li> <li><p>Install <code>Node.js</code>: Follow the installation instructions provided for your operating system. After installation, you can verify the installation by running the following commands in your terminal:</p> <pre>node -v\nnpm -v\n</pre> </li> </ul>"},{"location":"React/01-get-started/#create-a-new-react-project-with-typescript-using-vite","title":"Create a New React Project with TypeScript Using <code>Vite</code>\u00b6","text":"<p><code>Vite</code> is a modern frontend build tool that provides a faster and leaner development experience. We'll use <code>Vite</code> to create our <code>React</code> project with <code>TypeScript</code>.</p> <ul> <li><p>Open your terminal: Make sure you are in the directory where you want to create your new project.</p> </li> <li><p>Run the create command: Use <code>npm</code> to create a new project with <code>Vite</code>.</p> <pre>npm create vite@4.1.0\n</pre> </li> <li><p>This command will prompt you to provide the project name and select the framework and variant.</p> <ul> <li>Project name: Enter the desired name for your project (e.g., my-react-app).</li> </ul> <ul> <li>Select a framework: Choose <code>React</code>.</li> <li>Select a variant: Choose <code>TypeScript</code></li> </ul> </li> <li><p>Navigate to your project directory: <code>cd my-react-app</code></p> </li> <li><p>Install dependencies: <code>npm install</code></p> </li> <li><p>Run the development server: <code>npm run dev</code></p> <ul> <li>This will start the development server, and you should see output similar to this:</li> </ul> <pre>VITE v4.1.0  ready in 300 ms\n\n\u279c  Local:   http://localhost:5173/\n\u279c  Network: use --host to expose\n</pre> </li> </ul>"},{"location":"React/01-get-started/#understanding-the-project-structure","title":"Understanding the Project Structure\u00b6","text":"<p>Once your project is created, you will notice several files and folders. Here are the key components:</p> <ul> <li><code>src/</code>: This directory contains your source code.<ul> <li><code>App.tsx</code>: The main application component.</li> <li><code>main.tsx</code>: The entry point of your React application.</li> </ul> </li> <li><code>index.html</code>: The HTML template for your app.</li> <li><code>tsconfig.json</code>: Configuration file for TypeScript.</li> <li><code>vite.config.ts</code>: Configuration file for Vite.</li> </ul>"},{"location":"React/01-get-started/#creating-your-first-component","title":"Creating Your First Component\u00b6","text":"<p>Let's create a simple React component to get familiar with the basic concepts.</p>"},{"location":"React/01-get-started/#create-a-new-file-in-the-src-directory-named-hellotsx","title":"Create a new file in the <code>src</code> directory named <code>Hello.tsx</code>\u00b6","text":"<pre>// src/Hello.tsx\nimport React from \"react\";\n\ninterface HelloProps {\n  name: string;\n}\n\nconst Hello: React.FC&lt;HelloProps&gt; = ({ name }) =&gt; {\n  return &lt;h1&gt;Hello, {name}!&lt;/h1&gt;;\n};\n\nexport default Hello;\n</pre> <ul> <li>In <code>TypeScript</code>, an <code>interface</code> is a way to define the structure of an object. It specifies the types of properties that an object can have.<ul> <li>In our example, we define an <code>interface</code> <code>HelloProps</code>, This <code>interface</code> specifies that any object of type <code>HelloProps</code> must have a <code>name</code> property of type <code>string</code>.</li> </ul> </li> <li><code>React components</code> can be written as either <code>class</code> components or <code>functional</code> components. Functional components are simpler and often preferred for their conciseness and ease of use.<ul> <li>In our example, We declare a <code>constant</code> named <code>Hello</code>. it means that <code>Hello</code> will always refer to the same component function.<ul> <li>This is a common practice in modern JavaScript to ensure that variables and constants are not accidentally reassigned, leading to more predictable and maintainable code.</li> </ul> </li> </ul> </li> <li><code>React.FC&lt;HelloProps&gt;</code>: We specify that <code>Hello</code> is a functional component (<code>React.FC</code>) that takes props of type <code>HelloProps</code>.<ul> <li>This ensures that TypeScript will enforce the <code>HelloProps</code> type for the props passed to <code>Hello</code>.</li> </ul> </li> </ul>"},{"location":"React/01-get-started/#modify-apptsx-to-include-your-new-component","title":"Modify <code>App.tsx</code> to include your new component:\u00b6","text":"<pre>// src/App.tsx\nimport React from \"react\";\nimport Hello from \"./Hello\";\n\nconst App: React.FC = () =&gt; {\n  return (\n    &lt;div&gt;\n      &lt;Hello name=\"World\" /&gt;\n    &lt;/div&gt;\n  );\n};\n\nexport default App;\n</pre>"},{"location":"React/01-get-started/#creating-a-listgroup-component","title":"Creating a <code>ListGroup</code> Component\u00b6","text":""},{"location":"React/01-get-started/#setting-up-bootstrap","title":"Setting Up <code>Bootstrap</code>\u00b6","text":"<ul> <li><p>Install Bootstrap and its peer dependencies: <code>npm install bootstrap@5.2.3</code></p> </li> <li><p>Import Bootstrap CSS</p> <ul> <li>Open <code>src/main.tsx</code> and add the following line to import the <code>Bootstrap</code> CSS:</li> </ul> <pre>import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.createRoot(document.getElementById(\"root\") as HTMLElement).render(\n  &lt;React.StrictMode&gt;\n    &lt;App /&gt;\n  &lt;/React.StrictMode&gt;\n);\n</pre> </li> </ul>"},{"location":"React/01-get-started/#creating-the-listgroup-component","title":"Creating the ListGroup Component\u00b6","text":"<ul> <li><p>Create a new file <code>src/components/ListGroup.tsx</code> and define the ListGroup component:</p> <ul> <li>Bootstrap list group documents</li> <li><code>class</code> is a reserved keyword in javascript / typescript. We need to substitute it as <code>className</code>. (Hint: <code>ctrl + D</code> do multiple-cursor modification)</li> </ul> </li> <li><p>Add the following into the <code>ListGroup.tsx</code></p> </li> <li><p>Conditional Rendering</p> <ul> <li>The <code>getMessage</code> function checks if there are any items in the list. If the list is empty (<code>items.length === 0</code>), it returns a paragraph element with the message <code>\"No item found\"</code>.</li> <li>Ternary Operator <code>(&amp;&amp;)</code>: If the length of items is 0, the<code> &lt;p&gt;No item found.&lt;/p&gt;</code> message is rendered.</li> </ul> <pre>import React from \"react\";\n\nfunction ListGroup() {\n  let items = [\"New York\", \"San Francisco\", \"Tokyo\", \"London\", \"Paris\"];\n  items = [];\n  const getMessage = () =&gt; {\n    return items.length === 0 &amp;&amp; &lt;p&gt;No item found.&lt;/p&gt;;\n  };\n  return (\n    &lt;React.Fragment&gt;\n      &lt;h1&gt;List&lt;/h1&gt;\n      {getMessage()}\n      &lt;ul className=\"list-group\"&gt;\n        &lt;li&gt;test&lt;/li&gt;\n        {items.map((item) =&gt; (\n          &lt;li key={item} className=\"list-group-item\"&gt;\n            {item}\n          &lt;/li&gt;\n        ))}\n      &lt;/ul&gt;\n    &lt;/React.Fragment&gt;\n  );\n}\n\nexport default ListGroup;\n</pre> </li> </ul>"},{"location":"React/01-get-started/#handle-click-events","title":"Handle click events\u00b6","text":"<ol> <li>Using State with <code>Hooks</code></li> </ol> <ul> <li><code>React Hooks</code> allow you to use state and other React features without writing a class.</li> <li>The <code>useState hook</code> is particularly useful for managing <code>state</code> in <code>functional components</code>.</li> <li>We use the <code>useState hook</code> to manage the selected index of our list items. By calling <code>setSelectedIndex</code>, we update the <code>selectedIndex</code>, which triggers a <code>re-render</code> of the component with the new state.</li> </ul> <ol> <li><p>Handling Click Events</p> <ul> <li>Handling <code>click</code> events in React involves attaching an <code>onClick</code> event handler to a <code>DOM</code> element.</li> <li>When a list item is clicked, the arrow function sets the <code>selectedIndex</code> to the <code>index</code> of the clicked item.</li> </ul> </li> <li><p>Dynamic Class Names</p> <ul> <li>We use a conditional expression to apply different class names based on whether a list item is selected.</li> <li>If the current item's <code>index</code> matches <code>selectedIndex</code>, we apply the <code>active</code> class to highlight the item.</li> </ul> </li> </ol> <pre>import React, { MouseEvent, useState } from \"react\";\n\nfunction ListGroup() {\n  let items = [\"New York\", \"San Francisco\", \"Tokyo\", \"London\", \"Paris\"];\n  // Hook\n  const [selectedIndex, setSelectedIndex] = useState(0);\n\n  const getMessage = () =&gt; {\n    return items.length === 0 &amp;&amp; &lt;p&gt;No item found.&lt;/p&gt;;\n  };\n\n  return (\n    &lt;React.Fragment&gt;\n      &lt;h1&gt;List&lt;/h1&gt;\n      {getMessage()}\n      &lt;ul className=\"list-group\"&gt;\n        {items.map((item, index) =&gt; (\n          &lt;li\n            key={index}\n            className={\n              selectedIndex === index\n                ? \"list-group-item active\"\n                : \"list-group-item\"\n            }\n            // onClick={() =&gt; console.log(item + \"been clicked\\n\" + index)}\n            onClick={() =&gt; {\n              setSelectedIndex(index);\n            }}\n          &gt;\n            {item}\n          &lt;/li&gt;\n        ))}\n      &lt;/ul&gt;\n    &lt;/React.Fragment&gt;\n  );\n}\n\nexport default ListGroup;\n</pre>"},{"location":"React/01-get-started/#passing-data-via-props","title":"Passing data via props\u00b6","text":"<p>In this section, we will extend our <code>ListGroup</code> component to accept data through <code>props</code>. This approach allows us to make our component more reusable and flexible by allowing it to receive different sets of data and headings.</p> <ol> <li><p>Props Interface</p> <ul> <li>In <code>TypeScript</code>, we define an <code>interface</code> to specify the types of <code>props</code> that a component will receive.</li> <li>This ensures that our <code>component</code> is used correctly, with the correct types of data being passed in.</li> </ul> <pre>interface ListGroupProps {\n  items: string[];\n  heading: string;\n}\n</pre> </li> <li><p>Destructuring Props</p> <ul> <li>When we define the <code>component</code>, we can <code>destructure</code> the <code>props</code> directly in the function parameter list. This makes the code cleaner and easier to read.</li> <li>Instead of accessing <code>props.items</code> and <code>props.heading</code> within the component, we destructure these properties directly in the function signature.</li> </ul> <pre>function ListGroup({ items, heading }: ListGroupProps) {\n  // Component logic here\n}\n</pre> </li> <li><p>Using the Component</p> <ul> <li>To see the <code>ListGroup component</code> in action, we can create a <code>parent component</code> that passes different sets of data to it.</li> </ul> <pre>// src/App.tsx\nimport React from \"react\";\nimport Hello from \"./Hello\";\nimport ListGroup from \"./components/ListGroup\";\n\nconst App: React.FC = () =&gt; {\n  let city_items = [\"New York\", \"San Francisco\", \"Tokyo\", \"London\", \"Paris\"];\n  let cat_items = [\n    \"Maine Coon\",\n    \"Ragdoll\",\n    \"Persian\",\n    \"Abyssinian\",\n    \"Siamese\",\n  ];\n  return (\n    &lt;div&gt;\n      &lt;Hello name=\"World\" /&gt;\n      &lt;ListGroup items={city_items} heading=\"Cities\"&gt;&lt;/ListGroup&gt;\n      &lt;ListGroup items={cat_items} heading=\"Cats\"&gt;&lt;/ListGroup&gt;\n    &lt;/div&gt;\n  );\n};\n\nexport default App;\n</pre> </li> </ol>"},{"location":"React/01-get-started/#passing-functions-via-props","title":"Passing functions via Props\u00b6","text":"<p>In this section, we'll focus on how to pass <code>functions</code> as <code>props</code> to a component.</p> <p>This allows a <code>parent component</code> to control how certain actions are handled when they occur in a <code>child component</code>.</p> <ol> <li><p>Function as Prop</p> <ul> <li>In <code>React</code>, <code>functions</code> can be passed as <code>props</code> to <code>child components</code>. This allows the <code>parent component</code> to define the behavior for certain actions in the child component.</li> <li><code>onSelectItem</code>: A <code>function prop</code> that takes two arguments, <code>heading</code> and <code>item</code>. This function will be called when a list item is clicked.</li> </ul> <pre>interface ListGroupProps {\n  items: string[];\n  heading: string;\n  onSelectItem: (heading: string, item: string) =&gt; void;\n}\n</pre> </li> <li><p>Callback Functions</p> <ul> <li>A <code>callback function</code> is a <code>function</code> passed into <code>another function</code> as an argument. This technique is useful for handling events that occur in child components within the parent component.</li> <li><code>handleSelectItem</code>: This <code>function</code> is defined in the <code>parent component (App)</code>. It logs the heading and item to the <code>console</code> whenever it is called.</li> </ul> <pre>const handleSelectItem = (heading: string, item: string) =&gt; {\n  console.log(`Heading: ${heading}, Item: ${item}`);\n};\n</pre> </li> <li><p>Using the Component</p> <ul> <li>To see the <code>ListGroup</code> component in action, we can create a <code>parent component (App)</code> that passes the <code>handleSelectItem</code> function to it.</li> </ul> <pre>import React from \"react\";\nimport ListGroup from \"./components/ListGroup\";\n\nconst App: React.FC = () =&gt; {\n  const city_items = [\n    \"New York\",\n    \"San Francisco\",\n    \"Tokyo\",\n    \"London\",\n    \"Paris\",\n  ];\n  const cat_items = [\n    \"Maine Coon\",\n    \"Ragdoll\",\n    \"Persian\",\n    \"Abyssinian\",\n    \"Siamese\",\n  ];\n\n  const handleSelectItem = (heading: string, item: string) =&gt; {\n    console.log(`Heading: ${heading}, Item: ${item}`);\n  };\n\n  return (\n    &lt;div&gt;\n      &lt;ListGroup\n        items={city_items}\n        heading=\"Cities\"\n        onSelectItem={handleSelectItem}\n      /&gt;\n      &lt;ListGroup\n        items={cat_items}\n        heading=\"Cats\"\n        onSelectItem={handleSelectItem}\n      /&gt;\n    &lt;/div&gt;\n  );\n};\n\nexport default App;\n</pre> </li> </ol>"},{"location":"React/01-get-started/#state-vs-props","title":"State vs Props\u00b6","text":""},{"location":"React/01-get-started/#creating-a-component-accept-children","title":"Creating a component accept children\u00b6","text":"<p>In this section, we'll focus on how to create a <code>React component</code> that can accept and render <code>children elements</code>.</p> <ol> <li><p><code>Children Prop</code></p> <ul> <li>In <code>React</code>, the <code>children prop</code> is a special prop that is automatically passed to every component. It contains the content nested inside the component\u2019s opening and closing tags when it is used.</li> <li><code>children</code>: This <code>prop</code> is of type <code>ReactNode</code>, which can represent any renderable React content, including <code>elements</code>, <code>strings</code>, <code>numbers</code>, <code>fragments</code>, and <code>arrays</code>.</li> </ul> <pre>interface AlertProps {\n  children: ReactNode;\n}\n</pre> </li> <li><p>Using the Component</p> <pre>&lt;Alert&gt;\n  Hello &lt;span&gt;World&lt;/span&gt;\n&lt;/Alert&gt;\n</pre> </li> </ol>"},{"location":"Tree-and-Graph/Certificate/","title":"Certificate","text":""},{"location":"Tree-and-Graph/Week1-Binary-Tree-And-RedBlack-Tree/","title":"W1-Binary Tree And RedBlack Tree","text":"<ol> <li>The height of node h is $log_{2}\u2061n\u2264h\u2264n$</li> </ol> <ul> <li>Quiz </li> </ul> <ul> <li>Quiz </li> </ul> <p>The height h of root in the red-black tree is between $ log_{2}n\u2264h\u22642(log_{2}\u2061n) $ </p> <pre><code>\t\ti. If the parent of the node is black, then everything is fine, black height remains same\n\t\tii. If the parent node is red, then we have red-red violation. \n\t\t\t1) If the insert node have a red \"uncle\" (w), we re-paint the tree, change z (grandparent) to red, and y,w to black\n\t\t\t\t1) If z's parent is red, recursively call this approach</code></pre> <p></p> <pre><code>\t\t\t2) When \"uncle(w)\"  is black, we do \"tree rotation\"\n\t\t\t\t1) If insert node x &lt; parent node y</code></pre> <p></p> <pre><code>\t\t\t\t2) If insert node x &gt; parent node y\n\t\t\t\t\t1) We do left rotation between x and y\n\t\t\t\t\t2) Then do right rotation as above</code></pre> <ol> <li>Left Rotation </li> </ol> <ul> <li>Quiz </li> </ul> <p></p>"},{"location":"Tree-and-Graph/Week1-Binary-Tree-And-RedBlack-Tree/#binary-tree","title":"Binary Tree\u00b6","text":""},{"location":"Tree-and-Graph/Week1-Binary-Tree-And-RedBlack-Tree/#the-property-of-binary-search-trees","title":"The Property of Binary Search Trees\u00b6","text":"<ol> <li>Every node, except leaf, (internal node) have two children</li> <li>The key of left child (as well as nodes of left sub-tree)  \u2264 The key of parent \u2264 The key of right child (as well as nodes of right sub-tree)</li> </ol> <ul> <li>Quiz </li> </ul>"},{"location":"Tree-and-Graph/Week1-Binary-Tree-And-RedBlack-Tree/#tree-traversal","title":"Tree Traversal\u00b6","text":"<pre><code>1. In-order traversal\n\ta. left\u2192self\u2192right\n\tb. 12,18,20,29,30,31,32,33,34\n\tc. Sorted order\n2. Pre-order traversal\n\ta. self\u2192left\u2192right\n\tb. 35,29,18,12,20,32,31,30,34,33\n3. Post-order traversal\n\ta. left\u2192right\u2192self\n\tb. 12,20,18,30,31,33,34,32\n    </code></pre> <ul> <li>Demonstration </li> </ul>"},{"location":"Tree-and-Graph/Week1-Binary-Tree-And-RedBlack-Tree/#red-black-tree","title":"Red Black Tree\u00b6","text":""},{"location":"Tree-and-Graph/Week1-Binary-Tree-And-RedBlack-Tree/#why-we-need-it","title":"Why we need it?\u00b6","text":"<pre><code>1. When we insert node into binary search tree in a bad order, it will produce a very unbalanced tree    \n\ta. Solution: Self balancing tree   \n\t\t1. Red-Black Tree\n\t\t2. 2-3 Tree\n\t\t3. Splay Tree\n\t\t4. AVL Tree\n\t\t5. Skip Lists \n\t\t6. B-Tree\n\t\t7. Treaps!</code></pre>"},{"location":"Tree-and-Graph/Week1-Binary-Tree-And-RedBlack-Tree/#red-black-tree","title":"Red-Black Tree\u00b6","text":"<pre><code>1. Still have BST property\n2. Every node have color information\n\ta. Red\n\t\t1. Every red node must have black children\n\t\t\n\tb. Black\n\t\t1. Root and leaves are black\n\t\t2. The number of black nodes on any path from any node to a leaf must be the same. (Black Height)</code></pre> <ul> <li>Demo </li> </ul>"},{"location":"Tree-and-Graph/Week1-Binary-Tree-And-RedBlack-Tree/#maintain-the-property-of-red-black-trees-insertion-and-deletion","title":"Maintain the property of red-black trees (insertion and deletion)\u00b6","text":"<pre><code>1. Find(key)\n\ta. Exact same as  binary search tree (O(log_2\u2061n))\n2. Insert(key) (O(log_2\u2061n))\n\ta. The insert node is always been colored red (replace a leaf)</code></pre>"},{"location":"Tree-and-Graph/Week1-Binary-Tree-And-RedBlack-Tree/#tree-rotation","title":"Tree rotation\u00b6","text":"<ol> <li>Right Rotation </li> </ol>"},{"location":"Tree-and-Graph/Week1-Binary-Tree-And-RedBlack-Tree/#skip-list","title":"Skip List\u00b6","text":""},{"location":"Tree-and-Graph/Week1-Binary-Tree-And-RedBlack-Tree/#definition","title":"Definition\u00b6","text":""},{"location":"Tree-and-Graph/Week1-Binary-Tree-And-RedBlack-Tree/#property","title":"Property\u00b6","text":"<pre><code>\ta. Alternative structure of balance binary tree\n\t\ti. Insert\n\t\tii. Search\n\t\t\t1) Use O(1) to find the minimum and maximum\n\t\tiii. Delete\n\t\tiv. Iterate through all items in sorted order\n\tb. Randomized data structure (use probability)\n\t\ti. Provide Probabilistic guarantees\n\t\tii. Elegant approach to data structure design\n        </code></pre>"},{"location":"Tree-and-Graph/Week1-Binary-Tree-And-RedBlack-Tree/#basic-idea","title":"Basic Idea\u00b6","text":"<pre><code>\ta. If we want to go to a station that local train do not arrive, we should\n\t\ti. Take express to nearest station\n\t\tii. Take a local train remainder of the way\n\tb. Skip list just born from this idea\n\tc. It contains muti-lists, each list(Layer) is sorted. Each node have pointer to both next node and node below</code></pre>"},{"location":"Tree-and-Graph/Week1-Binary-Tree-And-RedBlack-Tree/#example","title":"Example\u00b6","text":""},{"location":"Tree-and-Graph/Week1-Binary-Tree-And-RedBlack-Tree/#if-we-want-to-find-22-we-start-from-the-left-top-our-path-is-121212121822","title":"If we want to find 22, we start from the left top, our path is \u2212\u221e\u219212\u219212\u219212\u219212\u219218\u219222\u00b6","text":""},{"location":"Tree-and-Graph/Week1-Test/","title":"W1-Problem","text":"In\u00a0[1]: Copied! <pre>class Node: \n    # Implement a node of the binary search tree.\n    # Constructor for a node with key and a given parent\n    # parent can be None for a root node.\n    def __init__(self, key, parent = None): \n        self.key = key\n        self.parent = parent \n        self.left = None # We will set left and right child to None\n        self.right = None\n        # Make sure that the parent's left/right pointer\n        # will point to the newly created node.\n        if parent != None:\n            if key &lt; parent.key:\n                assert(parent.left == None), 'parent already has a left child -- unable to create node'\n                parent.left = self\n            else: \n                assert key &gt; parent.key, 'key is same as parent.key. We do not allow duplicate keys in a BST since it breaks some of the algorithms.'\n                assert(parent.right == None ), 'parent already has a right child -- unable to create node'\n                parent.right = self\n        \n    # Utility function that keeps traversing left until it finds \n    # the leftmost descendant\n    def get_leftmost_descendant(self):\n        if self.left != None:\n            return self.left.get_leftmost_descendant()\n        else:\n            return self\n    \n    # TODO: Complete the search algorithm below\n    # You can call search recursively on left or right child\n    # as appropriate.\n    # If search succeeds: return a tuple True and the node in the tree\n    # with the key we are searching for.\n    # Also note that if the search fails to find the key \n    # you should return a tuple False and the node which would\n    # be the parent if we were to insert the key subsequently.\n    def search(self, key):\n        if self.key == key: \n            return (True, self)\n        # your code here\n        else:\n            if(key &gt; self.key and self.right):\n                return self.right.search(key)\n            if(key &lt; self.key and self.left):\n                return self.left.search(key)\n            return (False,self)\n        \n    \n    #TODO: Complete the insert algorithm below\n    # To insert first search for it and find out\n    # the parent whose child the currently inserted key will be.\n    # Create a new node with that key and insert.\n    # return None if key already exists in the tree.\n    # return the new node corresponding to the inserted key otherwise.\n    def insert(self, key):\n        # your code here\n        flag,result = self.search(key)\n        if(flag):\n            print(\"Already exist!\")\n            return None\n        else:\n            return Node(key,result)        \n        \n    # TODO: Complete algorithm to compute height of the tree\n    # height of a node whose children are both None is defined\n    # to be 1.\n    # height of any other node is 1 + maximum of the height \n    # of its children.\n    # Return a number that is th eheight.\n    def height(self):\n        # your code here\n        if((self.left == None) and (self.right == None)):\n            return 1\n        else:\n            left_height = 0\n            right_height = 0\n            if(self.left):\n                left_height = self.left.height()\n            if(self.right):\n                right_height = self.right.height()\n            return 1 + max(left_height,right_height)\n        \n    \n    #TODO: Write an algorithm to delete a key in the tree.\n    # First, find the node in the tree with the key.\n    # Recommend drawing pictures to visualize these cases below before\n    # programming.\n    # Case 1: both children of the node are None\n    #   -- in this case, deletion is easy: simply find out if the node with key is its\n    #      parent's left/right child and set the corr. child to None in the parent node.\n    # Case 2: one of the child is None and the other is not.\n    #   -- replace the node with its only child. In other words,\n    #      modify the parent of the child to be the to be deleted node's parent.\n    #      also change the parent's left/right child appropriately.\n    # Case 3: both children of the parent are not None.\n    #    -- first find its successor (go one step right and all the way to the left).\n    #    -- function get_leftmost_descendant may be helpful here.\n    #    -- replace the key of the node by its successor.\n    #    -- delete the successor node.\n    # return: no return value specified\n    \n    def delete(self, key):\n        (found, node_to_delete) = self.search(key)\n        assert(found == True), f\"key to be deleted:{key}- does not exist in the tree\"\n        # your code here\n        if ((node_to_delete.left == None) and (node_to_delete.right == None)):  # case 1\n            if(node_to_delete.parent.left == node_to_delete):\n                node_to_delete.parent.left = None\n            elif(node_to_delete.parent.right == node_to_delete):\n                node_to_delete.parent.right = None\n        elif(node_to_delete.left == None): # case 2\n            if(node_to_delete.parent.left == node_to_delete):\n                node_to_delete.parent.left = node_to_delete.right\n            elif(node_to_delete.parent.right == node_to_delete):\n                node_to_delete.parent.right = node_to_delete.right\n        elif(node_to_delete.right == None): # case 2\n            if(node_to_delete.parent.left == node_to_delete):\n                node_to_delete.parent.left = node_to_delete.left\n            elif(node_to_delete.parent.right == node_to_delete):\n                node_to_delete.parent.right = node_to_delete.left\n        else:  # case 3\n            node_successor = node_to_delete.right.get_leftmost_descendant()\n            node_to_delete.key = node_successor.key\n            if(node_successor.parent.left == node_successor):\n                node_successor.parent.left = None\n            elif(node_successor.parent.right == node_successor):\n                node_successor.parent.right = None\n        return\n</pre> class Node:      # Implement a node of the binary search tree.     # Constructor for a node with key and a given parent     # parent can be None for a root node.     def __init__(self, key, parent = None):          self.key = key         self.parent = parent          self.left = None # We will set left and right child to None         self.right = None         # Make sure that the parent's left/right pointer         # will point to the newly created node.         if parent != None:             if key &lt; parent.key:                 assert(parent.left == None), 'parent already has a left child -- unable to create node'                 parent.left = self             else:                  assert key &gt; parent.key, 'key is same as parent.key. We do not allow duplicate keys in a BST since it breaks some of the algorithms.'                 assert(parent.right == None ), 'parent already has a right child -- unable to create node'                 parent.right = self              # Utility function that keeps traversing left until it finds      # the leftmost descendant     def get_leftmost_descendant(self):         if self.left != None:             return self.left.get_leftmost_descendant()         else:             return self          # TODO: Complete the search algorithm below     # You can call search recursively on left or right child     # as appropriate.     # If search succeeds: return a tuple True and the node in the tree     # with the key we are searching for.     # Also note that if the search fails to find the key      # you should return a tuple False and the node which would     # be the parent if we were to insert the key subsequently.     def search(self, key):         if self.key == key:              return (True, self)         # your code here         else:             if(key &gt; self.key and self.right):                 return self.right.search(key)             if(key &lt; self.key and self.left):                 return self.left.search(key)             return (False,self)                   #TODO: Complete the insert algorithm below     # To insert first search for it and find out     # the parent whose child the currently inserted key will be.     # Create a new node with that key and insert.     # return None if key already exists in the tree.     # return the new node corresponding to the inserted key otherwise.     def insert(self, key):         # your code here         flag,result = self.search(key)         if(flag):             print(\"Already exist!\")             return None         else:             return Node(key,result)                      # TODO: Complete algorithm to compute height of the tree     # height of a node whose children are both None is defined     # to be 1.     # height of any other node is 1 + maximum of the height      # of its children.     # Return a number that is th eheight.     def height(self):         # your code here         if((self.left == None) and (self.right == None)):             return 1         else:             left_height = 0             right_height = 0             if(self.left):                 left_height = self.left.height()             if(self.right):                 right_height = self.right.height()             return 1 + max(left_height,right_height)                   #TODO: Write an algorithm to delete a key in the tree.     # First, find the node in the tree with the key.     # Recommend drawing pictures to visualize these cases below before     # programming.     # Case 1: both children of the node are None     #   -- in this case, deletion is easy: simply find out if the node with key is its     #      parent's left/right child and set the corr. child to None in the parent node.     # Case 2: one of the child is None and the other is not.     #   -- replace the node with its only child. In other words,     #      modify the parent of the child to be the to be deleted node's parent.     #      also change the parent's left/right child appropriately.     # Case 3: both children of the parent are not None.     #    -- first find its successor (go one step right and all the way to the left).     #    -- function get_leftmost_descendant may be helpful here.     #    -- replace the key of the node by its successor.     #    -- delete the successor node.     # return: no return value specified          def delete(self, key):         (found, node_to_delete) = self.search(key)         assert(found == True), f\"key to be deleted:{key}- does not exist in the tree\"         # your code here         if ((node_to_delete.left == None) and (node_to_delete.right == None)):  # case 1             if(node_to_delete.parent.left == node_to_delete):                 node_to_delete.parent.left = None             elif(node_to_delete.parent.right == node_to_delete):                 node_to_delete.parent.right = None         elif(node_to_delete.left == None): # case 2             if(node_to_delete.parent.left == node_to_delete):                 node_to_delete.parent.left = node_to_delete.right             elif(node_to_delete.parent.right == node_to_delete):                 node_to_delete.parent.right = node_to_delete.right         elif(node_to_delete.right == None): # case 2             if(node_to_delete.parent.left == node_to_delete):                 node_to_delete.parent.left = node_to_delete.left             elif(node_to_delete.parent.right == node_to_delete):                 node_to_delete.parent.right = node_to_delete.left         else:  # case 3             node_successor = node_to_delete.right.get_leftmost_descendant()             node_to_delete.key = node_successor.key             if(node_successor.parent.left == node_successor):                 node_successor.parent.left = None             elif(node_successor.parent.right == node_successor):                 node_successor.parent.right = None         return                       In\u00a0[2]: Copied! <pre>t1 = Node(25, None)\nt2 = Node(12, t1)\nt3 = Node(18, t2)\nt4 = Node(40, t1)\n\nprint('-- Testing basic node construction (originally provided code) -- ')\nassert(t1.left == t2), 'test 1 failed'\nassert(t2.parent == t1),  'test 2 failed'\nassert(t2.right == t3), 'test 3 failed'\nassert (t3.parent == t2), 'test 4 failed'\nassert(t1.right == t4), 'test 5 failed'\nassert(t4.left == None), 'test 6 failed'\nassert(t4.right == None), 'test 7 failed'\n# The tree should be : \n#             25\n#             /\\\n#         12     40\n#         /\\\n#     None  18\n#\n\nprint('-- Testing search -- ')\n(b, found_node) = t1.search(18)\nassert b and found_node.key == 18, 'test 8 failed'\n(b, found_node) = t1.search(25)\nassert b and found_node.key == 25, 'test 9 failed -- you should find the node with key 25 which is the root'\n(b, found_node) = t1.search(26)\nassert(not b), 'test 10 failed'\nassert(found_node.key == 40), 'test 11 failed -- you should be returning the leaf node which would be the parent to the node you failed to find if it were to be inserted in the tree.'\n\nprint('-- Testing insert -- ')\nins_node = t1.insert(26)\nassert ins_node.key == 26, ' test 12 failed '\nassert ins_node.parent == t4,  ' test 13 failed '\nassert t4.left == ins_node,  ' test 14 failed '\n\nins_node2 = t1.insert(33)\nassert ins_node2.key == 33, 'test 15 failed'\nassert ins_node2.parent == ins_node, 'test 16 failed'\nassert ins_node.right == ins_node2, 'test 17 failed'\n\nprint('-- Testing height -- ')\n\nassert t1.height() == 4, 'test 18 failed'\nassert t4.height() == 3, 'test 19 failed'\nassert t2.height() == 2, 'test 20 failed'\n\nprint('Success: 15 points.')\n</pre> t1 = Node(25, None) t2 = Node(12, t1) t3 = Node(18, t2) t4 = Node(40, t1)  print('-- Testing basic node construction (originally provided code) -- ') assert(t1.left == t2), 'test 1 failed' assert(t2.parent == t1),  'test 2 failed' assert(t2.right == t3), 'test 3 failed' assert (t3.parent == t2), 'test 4 failed' assert(t1.right == t4), 'test 5 failed' assert(t4.left == None), 'test 6 failed' assert(t4.right == None), 'test 7 failed' # The tree should be :  #             25 #             /\\ #         12     40 #         /\\ #     None  18 #  print('-- Testing search -- ') (b, found_node) = t1.search(18) assert b and found_node.key == 18, 'test 8 failed' (b, found_node) = t1.search(25) assert b and found_node.key == 25, 'test 9 failed -- you should find the node with key 25 which is the root' (b, found_node) = t1.search(26) assert(not b), 'test 10 failed' assert(found_node.key == 40), 'test 11 failed -- you should be returning the leaf node which would be the parent to the node you failed to find if it were to be inserted in the tree.'  print('-- Testing insert -- ') ins_node = t1.insert(26) assert ins_node.key == 26, ' test 12 failed ' assert ins_node.parent == t4,  ' test 13 failed ' assert t4.left == ins_node,  ' test 14 failed '  ins_node2 = t1.insert(33) assert ins_node2.key == 33, 'test 15 failed' assert ins_node2.parent == ins_node, 'test 16 failed' assert ins_node.right == ins_node2, 'test 17 failed'  print('-- Testing height -- ')  assert t1.height() == 4, 'test 18 failed' assert t4.height() == 3, 'test 19 failed' assert t2.height() == 2, 'test 20 failed'  print('Success: 15 points.') <pre>-- Testing basic node construction (originally provided code) -- \n-- Testing search -- \n-- Testing insert -- \n-- Testing height -- \nSuccess: 15 points.\n</pre> In\u00a0[3]: Copied! <pre># Testing deletion\nt1 = Node(16, None)\n# insert the nodes in the list\nlst = [18,25,10, 14, 8, 22, 17, 12]\nfor elt in lst:\n    t1.insert(elt)\n\n# The tree should look like this\n#               16\n#            /     \\\n#          10      18\n#        /  \\     /  \\\n#       8   14   17  25\n#          /         /  \n#         12        22\n\n\n# Let us test the three deletion cases.\n# case 1 let's delete node 8\n# node 8 does not have left or right children.\nt1.delete(8) # should have both children nil.\n(b8,n8) = t1.search(8)\nassert not b8, 'Test A: deletion fails to delete node.'\n(b,n) = t1.search(10)\nassert( b) , 'Test B failed: search does not work'\nassert n.left == None, 'Test C failed: Node 8 was not properly deleted.'\n\n# Let us test deleting the node 14 whose right child is none.\n# n is still pointing to the node 10 after deleting 8.\n# let us ensure that it's right child is 14\nassert n.right != None, 'Test D failed: node 10 should have right child 14'\nassert n.right.key == 14, 'Test E failed: node 10 should have right child 14'\n\n# Let's delete node 14\nt1.delete(14)\n(b14, n14) = t1.search(14)\nassert not b14, 'Test F: Deletion of node 14 failed -- it still exists in the tree.'\n(b,n) = t1.search(10)\nassert n.right != None , 'Test G failed: deletion of node 14 not handled correctly'\nassert n.right.key == 12, f'Test H failed: deletion of node 14 not handled correctly: {n.right.key}'\n\n# Let's delete node 18 in the tree. \n# It should be replaced by 22.\n\nt1.delete(18)\n(b18, n18) = t1.search(18)\nassert not b18, 'Test I: Deletion of node 18 failed'\nassert t1.right.key == 22 , ' Test J: Replacement of node with successor failed.'\nassert t1.right.right.left == None, ' Test K: replacement of node with successor failed -- you did not delete the successor leaf properly?'\n\nprint('-- All tests passed: 15 points!--')\n</pre> # Testing deletion t1 = Node(16, None) # insert the nodes in the list lst = [18,25,10, 14, 8, 22, 17, 12] for elt in lst:     t1.insert(elt)  # The tree should look like this #               16 #            /     \\ #          10      18 #        /  \\     /  \\ #       8   14   17  25 #          /         /   #         12        22   # Let us test the three deletion cases. # case 1 let's delete node 8 # node 8 does not have left or right children. t1.delete(8) # should have both children nil. (b8,n8) = t1.search(8) assert not b8, 'Test A: deletion fails to delete node.' (b,n) = t1.search(10) assert( b) , 'Test B failed: search does not work' assert n.left == None, 'Test C failed: Node 8 was not properly deleted.'  # Let us test deleting the node 14 whose right child is none. # n is still pointing to the node 10 after deleting 8. # let us ensure that it's right child is 14 assert n.right != None, 'Test D failed: node 10 should have right child 14' assert n.right.key == 14, 'Test E failed: node 10 should have right child 14'  # Let's delete node 14 t1.delete(14) (b14, n14) = t1.search(14) assert not b14, 'Test F: Deletion of node 14 failed -- it still exists in the tree.' (b,n) = t1.search(10) assert n.right != None , 'Test G failed: deletion of node 14 not handled correctly' assert n.right.key == 12, f'Test H failed: deletion of node 14 not handled correctly: {n.right.key}'  # Let's delete node 18 in the tree.  # It should be replaced by 22.  t1.delete(18) (b18, n18) = t1.search(18) assert not b18, 'Test I: Deletion of node 18 failed' assert t1.right.key == 22 , ' Test J: Replacement of node with successor failed.' assert t1.right.right.left == None, ' Test K: replacement of node with successor failed -- you did not delete the successor leaf properly?'  print('-- All tests passed: 15 points!--') <pre>-- All tests passed: 15 points!--\n</pre> <p>YOUR ANSWER HERE</p> <ul> <li>Sorted order<ul> <li>ascending order</li> <li>descending order</li> </ul> </li> </ul> <p>YOUR ANSWER HERE</p> In\u00a0[4]: Copied! <pre>import random\n\n# 1. make list of  numbers from 0 to n-1\n# 2. randomly shuffle the list\n# 3. insert the random list elements in order into a tree.\n# 4. return the height of the resulting ree.\ndef run_single_experiment(n):\n    # your code here\n    if(n &lt;= 1):\n        return 1\n    data_lst = list(range(0,n))\n    random.shuffle(data_lst)\n    my_tree = Node(data_lst[0], None)\n    for data in data_lst[1:]:\n        my_tree.insert(data)\n    return my_tree.height()      \n    \n    \n    \ndef run_multiple_trials(n, numTrials):\n    lst_of_depths = [run_single_experiment(n) for j in range(numTrials)]\n    return (sum(lst_of_depths)/len(lst_of_depths), lst_of_depths)\n</pre> import random  # 1. make list of  numbers from 0 to n-1 # 2. randomly shuffle the list # 3. insert the random list elements in order into a tree. # 4. return the height of the resulting ree. def run_single_experiment(n):     # your code here     if(n &lt;= 1):         return 1     data_lst = list(range(0,n))     random.shuffle(data_lst)     my_tree = Node(data_lst[0], None)     for data in data_lst[1:]:         my_tree.insert(data)     return my_tree.height()                      def run_multiple_trials(n, numTrials):     lst_of_depths = [run_single_experiment(n) for j in range(numTrials)]     return (sum(lst_of_depths)/len(lst_of_depths), lst_of_depths)      In\u00a0[5]: Copied! <pre>%matplotlib inline\nfrom matplotlib import pyplot as plt\nimport math \n\n(avg64, lst_of_results_64) = run_multiple_trials(64,1000)\nplt.hist(lst_of_results_64)\nplt.xlim(0,64)\nplt.xlabel('Depth of Tree')\nplt.ylabel('Frequency')\nplt.title('Histogram of depths for n = 64')\nprint(f'Average depth for 64 = {avg64}')\nassert avg64 &lt;= 12 and avg64 &gt;= 8\n\nplt.figure()\n(avg128, lst_of_results_128) = run_multiple_trials(128,1000)\nprint(f'Average depth for 128 = {avg128}')\nassert avg128 &lt;= 16 and avg128 &gt;= 12\n\n\nplt.hist(lst_of_results_128)\nplt.xlim(0,128)\nplt.xlabel('Depth of Tree')\nplt.ylabel('Frequency')\nplt.title('Histogram of depths for n = 128')\n\nnmin=16\nnmax=64\n\nlst_of_average_depths = [ run_multiple_trials(j,1000)[0] for j in range(nmin,nmax)]\nplt.figure()\nl1 = plt.plot(range(nmin,nmax), lst_of_average_depths,label='Avg. Depth')\nplt.xlabel('n')\nplt.ylabel('depth')\nl2 = plt.plot(range(nmin,nmax), [1.6* math.log(j)/math.log(2) for j in range(nmin,nmax)],'--r',label='1.6log2(n)')\nl3 = plt.plot(range(nmin,nmax), [2.2* math.log(j)/math.log(2) for j in range(nmin,nmax)],'--b',label='2.2log2(n)')\n#plt.legend(handles=[l1, l2, l3])\nplt.title('Average depth as a function of n and comparison with 1.6 log2(n), 2.2 log2(n)')\nprint('Passed all tests -- 15 points')\n</pre> %matplotlib inline from matplotlib import pyplot as plt import math   (avg64, lst_of_results_64) = run_multiple_trials(64,1000) plt.hist(lst_of_results_64) plt.xlim(0,64) plt.xlabel('Depth of Tree') plt.ylabel('Frequency') plt.title('Histogram of depths for n = 64') print(f'Average depth for 64 = {avg64}') assert avg64 &lt;= 12 and avg64 &gt;= 8  plt.figure() (avg128, lst_of_results_128) = run_multiple_trials(128,1000) print(f'Average depth for 128 = {avg128}') assert avg128 &lt;= 16 and avg128 &gt;= 12   plt.hist(lst_of_results_128) plt.xlim(0,128) plt.xlabel('Depth of Tree') plt.ylabel('Frequency') plt.title('Histogram of depths for n = 128')  nmin=16 nmax=64  lst_of_average_depths = [ run_multiple_trials(j,1000)[0] for j in range(nmin,nmax)] plt.figure() l1 = plt.plot(range(nmin,nmax), lst_of_average_depths,label='Avg. Depth') plt.xlabel('n') plt.ylabel('depth') l2 = plt.plot(range(nmin,nmax), [1.6* math.log(j)/math.log(2) for j in range(nmin,nmax)],'--r',label='1.6log2(n)') l3 = plt.plot(range(nmin,nmax), [2.2* math.log(j)/math.log(2) for j in range(nmin,nmax)],'--b',label='2.2log2(n)') #plt.legend(handles=[l1, l2, l3]) plt.title('Average depth as a function of n and comparison with 1.6 log2(n), 2.2 log2(n)') print('Passed all tests -- 15 points')  <pre>Average depth for 64 = 11.641\nAverage depth for 128 = 14.276\nPassed all tests -- 15 points\n</pre> <p>The histograms and plots should show an amazing fact that although the worst case depth can be as large as $n$, the depth of a random binary search tree is concentrated between $1.8\\log_2(n)$ and $2.2 \\log_2(n)$.</p> <p>This is interesting since if we can ensure that the keys are inserted at random, a BST can be quite well balanced with very high probability. There are many clever ideas on how this can be achieved in practice even if the user does not insert keys randomly. One way is called treaps, which we sometimes present in this class but decided to leave out for the coursera data-structures class. You can watch the treaps lecture here: https://youtu.be/d0rlrRZc-0s</p>"},{"location":"Tree-and-Graph/Week1-Test/#part-1-implement-binary-search-tree","title":"Part 1: Implement Binary Search Tree\u00b6","text":"<p>We will begin by implementing binary search tree data structure in python. Please read the descriptions of functions carefully and complete them according to description. You should be familiar with objects in python. There are many tutorials online that you can use for this : https://www.tutorialspoint.com/python/python_classes_objects.htm</p>"},{"location":"Tree-and-Graph/Week1-Test/#part-2-height-of-random-binary-search-trees","title":"Part 2: Height of Random Binary Search Trees\u00b6","text":"<p>The height of a binary search tree depends on the order in which we insert the keys of the tree. In this problem, we investigate a curious link between the recursion depth of quicksort algorithm on an array of n elements and the depth of binary search trees.</p> <p>Suppose we wish to insert keys the set of keys from $\\{0, \\ldots, n-1\\}$ into a binary search tree. Answer the questions below.</p>"},{"location":"Tree-and-Graph/Week1-Test/#2a","title":"2(A)\u00b6","text":"<p>Provide examples of insertion sequences such that the resulting tree will have the worst possible  height of $n$. Note that the answer below will not be graded but you are encouraged to solve it and compare with the solutions.</p>"},{"location":"Tree-and-Graph/Week1-Test/#2b","title":"2(B)\u00b6","text":"<p>Let <code>s1,...,sj</code> be a sequence of $j \\geq 1$ keys inserted, wherein each <code>si</code> is a number between <code>0</code> and <code>n-1</code> and each number in the sequence is unique.</p> <p>Prove that if the sequence yields a tree of height <code>j</code> (worst possible case) then <code>s1</code> must be the minimum or maximum element in the sequence.</p> <p>Hint: Proof by contradiction will work. First note that <code>s1</code> will be the root of the tree obtained. Show that if <code>s1</code> is not the minimum or maximum then the resulting tree will have height &lt; <code>n-1</code>). Note that the answer below will not be graded but you are encouraged to solve it and compare with the solutions.</p>"},{"location":"Tree-and-Graph/Week1-Test/#2c","title":"2(C)\u00b6","text":"<p>Using the implementation of the binary search tree in part 1, complete the function <code>calculateAverageDepth(n, numTrials)</code> that performs the following experiment <code>numTrials</code> number of times.</p> <p>Each experiment run is as follows:</p> <ul> <li>Take a list of numbers from 0 to n-1.</li> <li>Randomly shuffle the list: use random.shuffle function or (advanced) write your own shuffle.</li> <li>Insert the randomly shuffled list into a tree.</li> <li>Find and return the depth of the tree.</li> </ul> <p>Finally, we run the experiment above <code>numTrials</code> times and take the average of all the trials.</p> <p>We then plot the average depth of a random binary search tree as a function of n.</p>"},{"location":"Tree-and-Graph/Week1-Test/#solutions-to-manually-graded-problems","title":"Solutions to Manually Graded Problems\u00b6","text":""},{"location":"Tree-and-Graph/Week1-Test/#2a","title":"2(A)\u00b6","text":"<p>Examples of worst case sequences include inserting in ascending order [0,1,...,n-1] or descending order [0,1,...,n-1].</p>"},{"location":"Tree-and-Graph/Week1-Test/#2b","title":"2(B)\u00b6","text":"<p>Assuming for the sake of contradition that s1 is not the least or maximum element. However, s1 will be the root of the tree. Then there must exist a non-zero number of elements that are in the left subtree of s1 and a non-zero number of elements in the right subtree. Therefore, the maximum size of any path from root to leaf must be strictly less than j. However, the height of the tree is j. Therefore, we obtain a contradiction.</p>"},{"location":"Tree-and-Graph/Week2-Graph/","title":"W2-Graph and Traversal","text":""},{"location":"Tree-and-Graph/Week2-Graph/#graph","title":"Graph\u00b6","text":""},{"location":"Tree-and-Graph/Week2-Graph/#definition","title":"Definition\u00b6","text":""},{"location":"Tree-and-Graph/Week2-Graph/#example","title":"Example\u00b6","text":""},{"location":"Tree-and-Graph/Week2-Graph/#directed-graph","title":"Directed Graph\u00b6","text":"<ul> <li>Asymmetric Relationship</li> </ul>"},{"location":"Tree-and-Graph/Week2-Graph/#undirected-graph","title":"Undirected graph\u00b6","text":"<ul> <li>Symmetric Relationship</li> </ul>"},{"location":"Tree-and-Graph/Week2-Graph/#typical-representation-of-graph","title":"Typical Representation of graph\u00b6","text":""},{"location":"Tree-and-Graph/Week2-Graph/#typical-problem-in-graph","title":"Typical Problem in graph\u00b6","text":""},{"location":"Tree-and-Graph/Week2-Graph/#how-to-represent-it-in-computer","title":"How to represent it in Computer\u00b6","text":""},{"location":"Tree-and-Graph/Week2-Graph/#adjacency-matrix","title":"Adjacency matrix\u00b6","text":"<ul> <li>Quiz </li> </ul>"},{"location":"Tree-and-Graph/Week2-Graph/#adjacency-list-representation","title":"Adjacency List representation\u00b6","text":"<ul> <li>Quiz </li> </ul>"},{"location":"Tree-and-Graph/Week2-Graph/#graph-traversals","title":"Graph Traversals\u00b6","text":""},{"location":"Tree-and-Graph/Week2-Graph/#breadth-first-search","title":"Breadth First Search\u00b6","text":""},{"location":"Tree-and-Graph/Week2-Graph/#definition","title":"Definition\u00b6","text":""},{"location":"Tree-and-Graph/Week2-Graph/#example","title":"Example\u00b6","text":""},{"location":"Tree-and-Graph/Week2-Graph/#variable-of-each-node","title":"Variable of each node\u00b6","text":""},{"location":"Tree-and-Graph/Week2-Graph/#pseudocode","title":"Pseudocode\u00b6","text":""},{"location":"Tree-and-Graph/Week2-Graph/#depth-frist-search","title":"Depth Frist Search\u00b6","text":""},{"location":"Tree-and-Graph/Week2-Graph/#definition","title":"Definition\u00b6","text":""},{"location":"Tree-and-Graph/Week2-Graph/#bfs-and-dfs-tree","title":"BFS and DFS Tree\u00b6","text":""},{"location":"Tree-and-Graph/Week2-Graph/#example","title":"Example\u00b6","text":""},{"location":"Tree-and-Graph/Week2-Graph/#variables-of-each-node","title":"Variables of each node\u00b6","text":""},{"location":"Tree-and-Graph/Week2-Graph/#pseudo-code","title":"Pseudo Code\u00b6","text":""},{"location":"Tree-and-Graph/Week2-Strongly-Connected-Components/","title":"W2-Strongly Connected Component","text":""},{"location":"Tree-and-Graph/Week2-Strongly-Connected-Components/#definition","title":"Definition\u00b6","text":""},{"location":"Tree-and-Graph/Week2-Strongly-Connected-Components/#quiz","title":"Quiz\u00b6","text":"<ul> <li>1 </li> <li>2 </li> </ul>"},{"location":"Tree-and-Graph/Week2-Strongly-Connected-Components/#minimum-strongly-connected-componentmscc","title":"Minimum Strongly Connected Component(MSCC)\u00b6","text":""},{"location":"Tree-and-Graph/Week2-Strongly-Connected-Components/#how-to-find-mscc","title":"How to find MSCC\u00b6","text":"<p>Assume we have try to find the MSCC of the following graph </p>"},{"location":"Tree-and-Graph/Week2-Test/","title":"W2-Problem","text":"<p>YOUR ANSWER HERE</p> <ul> <li>a. $0 \\to 1 \\to 2 \\to 3 \\to 4$</li> <li>b.<ul> <li>Node 0: start: 1; finish: 10</li> <li>Node 1: start: 2; finish: 3</li> <li>Node 2: start: 4; finish: 9</li> <li>Node 3: start: 5; finish: 8</li> <li>Node 4: start: 6; finish: 7</li> </ul> </li> <li>c.<ul> <li>0: None</li> <li>1: 0</li> <li>2: 0</li> <li>3: 2</li> <li>4: 3</li> </ul> </li> <li>d. back edge: $(4,0),(4,2)$</li> </ul> In\u00a0[1]: Copied! <pre># This is a useful data structure for implementing \n# a counter that counts the time.\nclass DFSTimeCounter:\n    def __init__(self):\n        self.count = 0\n    \n    def reset(self):\n        self.count = 0\n    \n    def increment(self):\n        self.count = self.count + 1\n        \n    def get(self):\n        return self.count \n    \nclass UndirectedGraph:\n    \n    # n is the number of vertices\n    # we will label the vertices from 0 to self.n -1 \n    # Initialize to an empty adjacency list\n    # We will store the outgoing edges using a set data structure\n    def __init__(self, n):\n        self.n = n\n        self.adj_list = [ set() for i in range(self.n) ]\n        \n    def add_edge(self, i, j):\n        assert 0 &lt;= i &lt; self.n\n        assert 0 &lt;= j &lt; self.n\n        assert i != j\n        # Make sure to add edge from i to j\n        self.adj_list[i].add(j)\n        # Also add edge from j to i\n        self.adj_list[j].add(i)\n        \n    # get a set of all vertices that \n    # are neighbors of the\n    # vertex i\n    def get_neighboring_vertices(self, i):\n        assert 0 &lt;= i &lt; self.n\n        return self.adj_list[i]\n    \n    # Function: dfs_visit\n    # Program a DFS visit of a graph.\n    # We maintain a list of discovery times and finish times.\n    # Initially all discovery times and finish times are set to None.\n    # When a vertex is first visited, we will set discovery time\n    # When DFS visit has processed all the neighbors then \n    # set the finish time.\n    # DFS visit should update the list of discovery and finish times in-place\n    # Arguments\n    #  i --&gt; id of the vertex being visited.\n    #  dfs_timer --&gt; An instance of DFSTimeCounter structure provided for you.\n    #  discovery --&gt; discovery time of each vertex -- a list of size self.n\n    #                None if the vertex is yet to be visited.\n    #  finish --&gt; finish time of each vertex -- a list of size self.n\n    #                None if the vertex is yet to be finished.\n    #  dfs_tree_parent --&gt; the parent for for each node \n    #                       if we visited node j from node i, then j's parent is i.\n    #                      Do not forget to set tree_parent when you call dfs_visit \n    #                                                         on node j from node i.\n    #  dfs_back_edges --&gt; a list of back edges.\n    #                     a back edge is an edge from i to j wherein\n    #                     DFS has already discovered j when i is discovered \n    #                                     but not finished j\n    \n    def dfs_visit(self, i, dfs_timer, discovery_times, finish_times, \n                        dfs_tree_parent, dfs_back_edges):\n        assert 0 &lt;= i &lt; self.n\n        assert discovery_times[i] == None\n        assert finish_times[i] == None\n        discovery_times[i] = dfs_timer.get()\n        dfs_timer.increment()\n        # your code here\n        neighbor_lst = self.get_neighboring_vertices(i)\n        for neighbor_node in neighbor_lst:\n            if(discovery_times[neighbor_node] == None):\n                dfs_tree_parent[neighbor_node] = i\n                self.dfs_visit(neighbor_node,dfs_timer,discovery_times,finish_times,dfs_tree_parent,dfs_back_edges)\n            elif (finish_times[neighbor_node] == None):\n                dfs_back_edges.append((i,neighbor_node))\n                \n        finish_times[i] = dfs_timer.get()\n        dfs_timer.increment()\n                \n    \n    # Function: dfs_traverse_graph\n    # Traverse the entire graph.\n    def dfs_traverse_graph(self):\n        dfs_timer = DFSTimeCounter()\n        discovery_times = [None]*self.n\n        finish_times = [None]*self.n\n        dfs_tree_parents = [None]*self.n\n        dfs_back_edges = []\n        for i in range(self.n):\n            if discovery_times[i] == None:\n                self.dfs_visit(i,dfs_timer, discovery_times, finish_times, \n                               dfs_tree_parents, dfs_back_edges)\n        # Clean up the back edges so that if (i,j) is a back edge then j cannot\n        # be i's parent.\n        non_trivial_back_edges = [(i,j) for (i,j) in dfs_back_edges if dfs_tree_parents[i] != j]\n        return (dfs_tree_parents, non_trivial_back_edges, discovery_times, finish_times)\n</pre> # This is a useful data structure for implementing  # a counter that counts the time. class DFSTimeCounter:     def __init__(self):         self.count = 0          def reset(self):         self.count = 0          def increment(self):         self.count = self.count + 1              def get(self):         return self.count       class UndirectedGraph:          # n is the number of vertices     # we will label the vertices from 0 to self.n -1      # Initialize to an empty adjacency list     # We will store the outgoing edges using a set data structure     def __init__(self, n):         self.n = n         self.adj_list = [ set() for i in range(self.n) ]              def add_edge(self, i, j):         assert 0 &lt;= i &lt; self.n         assert 0 &lt;= j &lt; self.n         assert i != j         # Make sure to add edge from i to j         self.adj_list[i].add(j)         # Also add edge from j to i         self.adj_list[j].add(i)              # get a set of all vertices that      # are neighbors of the     # vertex i     def get_neighboring_vertices(self, i):         assert 0 &lt;= i &lt; self.n         return self.adj_list[i]          # Function: dfs_visit     # Program a DFS visit of a graph.     # We maintain a list of discovery times and finish times.     # Initially all discovery times and finish times are set to None.     # When a vertex is first visited, we will set discovery time     # When DFS visit has processed all the neighbors then      # set the finish time.     # DFS visit should update the list of discovery and finish times in-place     # Arguments     #  i --&gt; id of the vertex being visited.     #  dfs_timer --&gt; An instance of DFSTimeCounter structure provided for you.     #  discovery --&gt; discovery time of each vertex -- a list of size self.n     #                None if the vertex is yet to be visited.     #  finish --&gt; finish time of each vertex -- a list of size self.n     #                None if the vertex is yet to be finished.     #  dfs_tree_parent --&gt; the parent for for each node      #                       if we visited node j from node i, then j's parent is i.     #                      Do not forget to set tree_parent when you call dfs_visit      #                                                         on node j from node i.     #  dfs_back_edges --&gt; a list of back edges.     #                     a back edge is an edge from i to j wherein     #                     DFS has already discovered j when i is discovered      #                                     but not finished j          def dfs_visit(self, i, dfs_timer, discovery_times, finish_times,                          dfs_tree_parent, dfs_back_edges):         assert 0 &lt;= i &lt; self.n         assert discovery_times[i] == None         assert finish_times[i] == None         discovery_times[i] = dfs_timer.get()         dfs_timer.increment()         # your code here         neighbor_lst = self.get_neighboring_vertices(i)         for neighbor_node in neighbor_lst:             if(discovery_times[neighbor_node] == None):                 dfs_tree_parent[neighbor_node] = i                 self.dfs_visit(neighbor_node,dfs_timer,discovery_times,finish_times,dfs_tree_parent,dfs_back_edges)             elif (finish_times[neighbor_node] == None):                 dfs_back_edges.append((i,neighbor_node))                          finish_times[i] = dfs_timer.get()         dfs_timer.increment()                           # Function: dfs_traverse_graph     # Traverse the entire graph.     def dfs_traverse_graph(self):         dfs_timer = DFSTimeCounter()         discovery_times = [None]*self.n         finish_times = [None]*self.n         dfs_tree_parents = [None]*self.n         dfs_back_edges = []         for i in range(self.n):             if discovery_times[i] == None:                 self.dfs_visit(i,dfs_timer, discovery_times, finish_times,                                 dfs_tree_parents, dfs_back_edges)         # Clean up the back edges so that if (i,j) is a back edge then j cannot         # be i's parent.         non_trivial_back_edges = [(i,j) for (i,j) in dfs_back_edges if dfs_tree_parents[i] != j]         return (dfs_tree_parents, non_trivial_back_edges, discovery_times, finish_times)       In\u00a0[2]: Copied! <pre># create the graph from problem 1A.\ng = UndirectedGraph(5)\ng.add_edge(0,1)\ng.add_edge(0,2)\ng.add_edge(0,4)\ng.add_edge(2,3)\ng.add_edge(2,4)\ng.add_edge(3,4)\n\n\n# Test DFS visit\ndiscovery_times = [None]*5\nfinish_times = [None]*5\ndfs_tree_parents = [None]*5\ndfs_back_edges = []\ng.dfs_visit(0, DFSTimeCounter(), discovery_times, finish_times, dfs_tree_parents, dfs_back_edges )\n\nprint('DFS visit discovery and finish times given by your code.')\nprint('Node\\t Discovery\\t Finish')\nfor i in range(5):\n    print(f'{i} \\t {discovery_times[i]}\\t\\t {finish_times[i]}')\n\nassert(discovery_times[0] == 0), f'Fail: Node 0 expected discovery time must be 0'\nassert(discovery_times[1] == 1), f'Fail: Node 1 expected discovery is 1'\nassert(finish_times[1] == 2), f'Fail: Node 1 finish time expected value is 2 (are you incrementing counter before you return from dfs_visit function and before recording finish times)'\nassert(discovery_times[2] == 3), f'Fail: Node 2 expected discovery is 3'\nassert(finish_times[2] == 8), f'Fail: Node 2 finish time expected value is 8'\nassert(discovery_times[3] == 4),f'Fail: Node 3 discovery time expected value is 4'\nassert(finish_times[3] == 7), f'Fail: Node 3 finish time expected value is 7'\nassert(discovery_times[4] == 5),f'Fail: Node 4 discovery time expected value is 5'\nassert(finish_times[4] == 6), f'Fail: Node 4 finish time expected value is 6'\n\nprint('Success -- discovery and finish times seem correct.')\nprint()\n    \nprint('Node\\t DFS-Tree-Parent')\nfor i in range(5):\n    print(f'{i} \\t {dfs_tree_parents[i]}')\n\nassert(dfs_tree_parents[0] == None), 'Fail: node 0 cannot have a parent (must be root)'\nassert(dfs_tree_parents[1] == 0), 'Fail: node 1 parent must be 0'\nassert(dfs_tree_parents[2] == 0), 'Fail: node 2 parent must be 0'\nassert(dfs_tree_parents[3] == 2), 'Fail: node 3 parent must be 2'\nassert(dfs_tree_parents[4] == 3), 'Fail: node 4 parent must be 3'\n\nprint('Success-- DFS parents are set correctly.')\n\n\nprint()\n# Filter out all trivial back eddges (i,j)  where j is simply the parent of i.\n# such back edges occur because we are treating an undirected edge as two directed edges\n# in either direction.\nnon_trivial_back_edges = [(i,j) for (i,j) in dfs_back_edges if dfs_tree_parents[i] != j]\nprint('Back edges are')\nfor (i,j) in non_trivial_back_edges:\n    print(f'{(i,j)}')\n    \n    \nassert len(non_trivial_back_edges) == 2, f'Fail: There must be 2 non trivial back edges -- your code reports {len(non_trivial_back_edges)}. Note that (4,0) and (4,2) are the only non trivial backedges'\nassert (4,2) in non_trivial_back_edges, '(4,2) must be a backedge that is non trivial'\nassert (4,0) in non_trivial_back_edges, '(4,3) must be a non-trivial backedges'\n\nprint('Success -- 15 points!')\n</pre> # create the graph from problem 1A. g = UndirectedGraph(5) g.add_edge(0,1) g.add_edge(0,2) g.add_edge(0,4) g.add_edge(2,3) g.add_edge(2,4) g.add_edge(3,4)   # Test DFS visit discovery_times = [None]*5 finish_times = [None]*5 dfs_tree_parents = [None]*5 dfs_back_edges = [] g.dfs_visit(0, DFSTimeCounter(), discovery_times, finish_times, dfs_tree_parents, dfs_back_edges )  print('DFS visit discovery and finish times given by your code.') print('Node\\t Discovery\\t Finish') for i in range(5):     print(f'{i} \\t {discovery_times[i]}\\t\\t {finish_times[i]}')  assert(discovery_times[0] == 0), f'Fail: Node 0 expected discovery time must be 0' assert(discovery_times[1] == 1), f'Fail: Node 1 expected discovery is 1' assert(finish_times[1] == 2), f'Fail: Node 1 finish time expected value is 2 (are you incrementing counter before you return from dfs_visit function and before recording finish times)' assert(discovery_times[2] == 3), f'Fail: Node 2 expected discovery is 3' assert(finish_times[2] == 8), f'Fail: Node 2 finish time expected value is 8' assert(discovery_times[3] == 4),f'Fail: Node 3 discovery time expected value is 4' assert(finish_times[3] == 7), f'Fail: Node 3 finish time expected value is 7' assert(discovery_times[4] == 5),f'Fail: Node 4 discovery time expected value is 5' assert(finish_times[4] == 6), f'Fail: Node 4 finish time expected value is 6'  print('Success -- discovery and finish times seem correct.') print()      print('Node\\t DFS-Tree-Parent') for i in range(5):     print(f'{i} \\t {dfs_tree_parents[i]}')  assert(dfs_tree_parents[0] == None), 'Fail: node 0 cannot have a parent (must be root)' assert(dfs_tree_parents[1] == 0), 'Fail: node 1 parent must be 0' assert(dfs_tree_parents[2] == 0), 'Fail: node 2 parent must be 0' assert(dfs_tree_parents[3] == 2), 'Fail: node 3 parent must be 2' assert(dfs_tree_parents[4] == 3), 'Fail: node 4 parent must be 3'  print('Success-- DFS parents are set correctly.')   print() # Filter out all trivial back eddges (i,j)  where j is simply the parent of i. # such back edges occur because we are treating an undirected edge as two directed edges # in either direction. non_trivial_back_edges = [(i,j) for (i,j) in dfs_back_edges if dfs_tree_parents[i] != j] print('Back edges are') for (i,j) in non_trivial_back_edges:     print(f'{(i,j)}')           assert len(non_trivial_back_edges) == 2, f'Fail: There must be 2 non trivial back edges -- your code reports {len(non_trivial_back_edges)}. Note that (4,0) and (4,2) are the only non trivial backedges' assert (4,2) in non_trivial_back_edges, '(4,2) must be a backedge that is non trivial' assert (4,0) in non_trivial_back_edges, '(4,3) must be a non-trivial backedges'  print('Success -- 15 points!') <pre>DFS visit discovery and finish times given by your code.\nNode\t Discovery\t Finish\n0 \t 0\t\t 9\n1 \t 1\t\t 2\n2 \t 3\t\t 8\n3 \t 4\t\t 7\n4 \t 5\t\t 6\nSuccess -- discovery and finish times seem correct.\n\nNode\t DFS-Tree-Parent\n0 \t None\n1 \t 0\n2 \t 0\n3 \t 2\n4 \t 3\nSuccess-- DFS parents are set correctly.\n\nBack edges are\n(4, 0)\n(4, 2)\nSuccess -- 15 points!\n</pre> In\u00a0[3]: Copied! <pre>def num_connected_components(g): # g is an UndirectedGraph class\n    # your code here\n    return g.dfs_traverse_graph()[0].count(None)\n</pre> def num_connected_components(g): # g is an UndirectedGraph class     # your code here     return g.dfs_traverse_graph()[0].count(None) In\u00a0[4]: Copied! <pre># create the graph from problem 1A.\ng = UndirectedGraph(5)\ng.add_edge(0,1)\ng.add_edge(0,2)\ng.add_edge(0,4)\ng.add_edge(2,3)\ng.add_edge(2,4)\ng.add_edge(3,4)\n\nassert num_connected_components(g) == 1, f' Test A failed: g must have 1 connected component. Your code returns {num_connected_components(g)}'\n\n\ng2 = UndirectedGraph(7)\ng2.add_edge(0,1)\ng2.add_edge(0,2)\ng2.add_edge(0,4)\ng2.add_edge(2,3)\ng2.add_edge(2,4)\ng2.add_edge(3,4)\ng2.add_edge(5,6)\n\nassert num_connected_components(g2) == 2, f' Test B failed: g2 must have 2 connected components. Your code returns {num_connected_components(g2)}'\n\n\ng3 = UndirectedGraph(8)\ng3.add_edge(0,1)\ng3.add_edge(0,2)\ng3.add_edge(0,4)\ng3.add_edge(2,3)\ng3.add_edge(2,4)\ng3.add_edge(3,4)\ng3.add_edge(5,6)\n\nassert num_connected_components(g3) == 3, f' Test C failed: g3 must have 3 connected components. Your code returns {num_connected_components(g3)}'\n\ng3.add_edge(7,5)\nassert num_connected_components(g3) == 2, f' Test D failed: g3 must now have 2 connected components. Your code returns {num_connected_components(g3)}'\n</pre> # create the graph from problem 1A. g = UndirectedGraph(5) g.add_edge(0,1) g.add_edge(0,2) g.add_edge(0,4) g.add_edge(2,3) g.add_edge(2,4) g.add_edge(3,4)  assert num_connected_components(g) == 1, f' Test A failed: g must have 1 connected component. Your code returns {num_connected_components(g)}'   g2 = UndirectedGraph(7) g2.add_edge(0,1) g2.add_edge(0,2) g2.add_edge(0,4) g2.add_edge(2,3) g2.add_edge(2,4) g2.add_edge(3,4) g2.add_edge(5,6)  assert num_connected_components(g2) == 2, f' Test B failed: g2 must have 2 connected components. Your code returns {num_connected_components(g2)}'   g3 = UndirectedGraph(8) g3.add_edge(0,1) g3.add_edge(0,2) g3.add_edge(0,4) g3.add_edge(2,3) g3.add_edge(2,4) g3.add_edge(3,4) g3.add_edge(5,6)  assert num_connected_components(g3) == 3, f' Test C failed: g3 must have 3 connected components. Your code returns {num_connected_components(g3)}'  g3.add_edge(7,5) assert num_connected_components(g3) == 2, f' Test D failed: g3 must now have 2 connected components. Your code returns {num_connected_components(g3)}'   In\u00a0[5]: Copied! <pre>def find_all_nodes_in_cycle(g): # g is an UndirectedGraph class\n    set_of_nodes = set()\n    # your code here\n    parent_lst,back_edge = g.dfs_traverse_graph()[:2]\n    start_node_lst,target_node_lst = zip(*back_edge)\n    for idx,start_node in enumerate(start_node_lst):\n        if(start_node not in set_of_nodes):\n            set_of_nodes.add(start_node)\n        if(target_node_lst[idx] in set_of_nodes):\n            continue\n        else:\n            while(parent_lst[start_node]!= target_node_lst[idx]):\n                set_of_nodes.add(parent_lst[start_node])\n                start_node = parent_lst[start_node]\n            set_of_nodes.add(parent_lst[start_node])\n    return set_of_nodes\n</pre> def find_all_nodes_in_cycle(g): # g is an UndirectedGraph class     set_of_nodes = set()     # your code here     parent_lst,back_edge = g.dfs_traverse_graph()[:2]     start_node_lst,target_node_lst = zip(*back_edge)     for idx,start_node in enumerate(start_node_lst):         if(start_node not in set_of_nodes):             set_of_nodes.add(start_node)         if(target_node_lst[idx] in set_of_nodes):             continue         else:             while(parent_lst[start_node]!= target_node_lst[idx]):                 set_of_nodes.add(parent_lst[start_node])                 start_node = parent_lst[start_node]             set_of_nodes.add(parent_lst[start_node])     return set_of_nodes In\u00a0[6]: Copied! <pre>#this is the example that we had for the problem.\ng3 = UndirectedGraph(8)\ng3.add_edge(0,1)\ng3.add_edge(0,2)\ng3.add_edge(0,4)\ng3.add_edge(2,3)\ng3.add_edge(2,4)\ng3.add_edge(3,4)\ng3.add_edge(5,6)\ng3.add_edge(5,7)\n\ns = find_all_nodes_in_cycle(g3)\nprint(f'Your code returns set of nodes: {s}')\nassert s == {0,2,3,4}, 'Fail: Set of nodes must be {0,2,3,4}.'\n\n# let's also add the edge 6,7\ng3.add_edge(6,7)\ns1 = find_all_nodes_in_cycle(g3)\nprint(f'Your code returns set of nodes: {s1}')\nassert s1 == {0,2,3,4,5,6,7}, 'Fail: Set of nodes must be {0,2,3,4,5,6,7}.'\n\nprint('All tests passedd: 10 points!')\n</pre> #this is the example that we had for the problem. g3 = UndirectedGraph(8) g3.add_edge(0,1) g3.add_edge(0,2) g3.add_edge(0,4) g3.add_edge(2,3) g3.add_edge(2,4) g3.add_edge(3,4) g3.add_edge(5,6) g3.add_edge(5,7)  s = find_all_nodes_in_cycle(g3) print(f'Your code returns set of nodes: {s}') assert s == {0,2,3,4}, 'Fail: Set of nodes must be {0,2,3,4}.'  # let's also add the edge 6,7 g3.add_edge(6,7) s1 = find_all_nodes_in_cycle(g3) print(f'Your code returns set of nodes: {s1}') assert s1 == {0,2,3,4,5,6,7}, 'Fail: Set of nodes must be {0,2,3,4,5,6,7}.'  print('All tests passedd: 10 points!') <pre>Your code returns set of nodes: {0, 2, 3, 4}\nYour code returns set of nodes: {0, 2, 3, 4, 5, 6, 7}\nAll tests passedd: 10 points!\n</pre>"},{"location":"Tree-and-Graph/Week2-Test/#problem-1-program-dfs-for-undirected-graph-data-structure","title":"Problem 1: Program DFS for Undirected Graph Data Structure\u00b6","text":"<p>We will now program an undirected graph using the adjacency list representation in Python along with some utility functions including a depth first search algorithm over undirected graphs.</p> <p>Recall that a graph is undirected if for every edge $(u,v)$ in the graph from $u$ to $v$ there is also the edge in the reverse direction  $(v,u)$ from $v$ to $u$.</p>"},{"location":"Tree-and-Graph/Week2-Test/#1a","title":"1A\u00b6","text":"<p>Run through DFS for the example graph below.</p> <p></p> <p>Assume that the DFS visit starts from the node 0. Assume adjacent nodes are visited in ascending order of node IDs.</p> <p>(a) Write down the order in which the nodes are visited.</p> <p>(b) Complete the table of discovery and finish times for each node.</p> <p>(c) For each node write down its parent node in the DFS tree. Recall that if DFS discovers node j from node i, then the parent of j in the DFS tree is i. Draw the DFS tree.</p> <p>(d) What are the back edges discovered by DFS? Disregard all trivial back edges $(i,j)$ where $j$ is a parent of node i in the DFS tree.</p> <p>Please note that this problem will not be graded. You are encouraged to compare your answers with our solutions.</p>"},{"location":"Tree-and-Graph/Week2-Test/#1-b","title":"1 B\u00b6","text":"<p>Complete the code for the <code>dfs_visit</code> function below.</p> <p>To do so, please read the rest of the code provided and the surrounding comments very  carefully.</p> <p>Please ensure that the following rules are followed:</p> <ul> <li>When visiting a node i, consider the set of adjacent nodes in increasing order.<ul> <li>This is automatically done for you when you get <code>self.adj_list[i]</code> which is implemented as a python set.</li> </ul> </li> <li>Use the <code>DFSTimeCounter</code> class provided to keep track of DFS time.</li> <li>The timer should be incremented just before we return from <code>dfs_visit</code> and record the finish time for a node.</li> <li>Recall that a back edge in a DFS is encountered whenever we visit a node i and   encounter adjacent node j such that j has been discovered but not finished.<ul> <li>If this happens, add (i,j) to the set of back edges.</li> </ul> </li> </ul> <p>The <code>dfs_visit</code> code does not return anything but updates the arguments <code>discovery_times</code>, <code>finish_times</code>, <code>dfs_tree_parent</code> and <code>dfs_back_edges</code> in place.</p>"},{"location":"Tree-and-Graph/Week2-Test/#1-c","title":"1 C\u00b6","text":"<p>Find the number of (maximal) strongly connected components in an undirected graph from the results of a DFS. Implement the function <code>num_connected_components</code> that takes in a graph <code>g</code> and returns a number that indicates the number of MSCCs in the directed graph.</p>"},{"location":"Tree-and-Graph/Week2-Test/#example","title":"Example\u00b6","text":"<p>Consider the graph below</p> <p></p> <p>It has 3 maximal strongly connected components that have vertices $\\{0,1,2,3,4\\}$, $\\{5,6\\}$ and $\\{7\\}$, respectively. Given such a graph, your function must return the number 3.</p> <p>Hint Examine  the <code>dfs_traverse_graph</code> function carefully. How do you distinguish different connected components in a graph from the DFS tree?</p>"},{"location":"Tree-and-Graph/Week2-Test/#1c","title":"1C\u00b6","text":"<p>We now wish to find the set of all nodes in the graph that belong to some cycle.</p>"},{"location":"Tree-and-Graph/Week2-Test/#example","title":"Example\u00b6","text":"<p>Consider the example below: </p> <p>Nodes $\\{0, 2, 3, 4\\}$ lie on some cycle: example node 4 lies on many cycles one such cycle being $2-3-4$. whereas the other nodes do not.</p> <p>Note We do not treat undirected edges as cycles although in our data structure, when an undirected edge $(i,j)$ is represented as two \"directed\" edges $(i,j)$ and $(j,i)$, it gives the impression that they are in a cycle of length 2.</p> <p>Complete the function <code>find_all_nodes_in_cycle</code> that given a graph returns a python set of nodes in a cycle.</p> <p>Hint Perform a DFS traversal and for each non trivial back edge discovered, use the DFS tree to figure out the nodes that must be on the cycle corresponding to that back edge.</p>"},{"location":"Tree-and-Graph/Week2-Test/#solution-to-problem-1-a","title":"Solution to Problem 1 (A)\u00b6","text":"<p>DFS works as follows</p> <ul> <li>Start at node 0 (time 0)</li> <li>Discover node 1 (time 1)</li> <li>Finish node 1 (time 2)</li> <li>Discover node 2 (time 3)</li> <li>Discover node 3 (time 4)</li> <li>Discover node 4 (time 5)</li> <li>Finish node 4 (time 6)</li> <li>Finish node 3 (time 7)</li> <li>Finish node 2 (time 8)</li> <li>Finish node 0 (time 9)</li> </ul> <p>The table of discovery and finish times are</p> <ul> <li>Node 0 - discovery : 0 finish: 9</li> <li>Node 1 - discovery : 1 finish : 2</li> <li>Node 2 - discovery: 3 finish: 8</li> <li>Node 3 - discovery: 4 finish 7</li> <li>Node 4 - discovery: 5 finish 6</li> </ul> <p>The parents are</p> <ul> <li>Node 0 -- None (root node)</li> <li>Node 1 -- 0</li> <li>Node 2 -- 0</li> <li>Node 3 -- 2</li> <li>Node 4 -- 3</li> </ul> <p>The back edges discovered are : (4,2) and (4,0)</p>"},{"location":"Tree-and-Graph/Week2-Test/#thats-all-folks","title":"That's all folks\u00b6","text":""},{"location":"Tree-and-Graph/Week2-Topological-Sorting/","title":"W2-Topological Sorting","text":""},{"location":"Tree-and-Graph/Week2-Topological-Sorting/#topological-sorting","title":"Topological-Sorting\u00b6","text":""},{"location":"Tree-and-Graph/Week2-Topological-Sorting/#definition","title":"Definition\u00b6","text":""},{"location":"Tree-and-Graph/Week2-Topological-Sorting/#how-to-find-it","title":"How to find it\u00b6","text":""},{"location":"Tree-and-Graph/Week3-Problem/","title":"W3-Problem","text":"In\u00a0[15]: Copied! <pre>class DisjointForests:\n    def __init__(self, n):\n        assert n &gt;= 1, ' Empty disjoint forest is disallowed'\n        self.n = n\n        self.parents = [None]*n\n        self.rank = [None]*n\n        \n    # Function: dictionary_of_sets\n    # Convert the disjoint forest structure into a dictionary d\n    # wherein d has an entry for each representative i\n    # d[i] maps to each elements which belongs to the tree corresponding to i\n    # in the disjoint forest.\n    def dictionary_of_sets(self):\n        d = {}\n        for i in range(self.n):\n            if self.is_representative(i):\n                d[i] = set([i])\n        for j in range(self.n):\n            if self.parents[j] != None:\n                root = self.find(j)\n                assert root in d\n                d[root].add(j)\n        return d\n    \n    def make_set(self, j):\n        assert 0 &lt;= j &lt; self.n\n        assert self.parents[j] == None, 'You are calling make_set on an element multiple times -- not allowed.'\n        self.parents[j] = j\n        self.rank[j] = 1\n        \n    def is_representative(self, j):\n        return self.parents[j] == j \n    \n    def get_rank(self, j):\n        return self.rank[j]\n    \n    # Function: find\n    # Implement the find algorithm for a node j in the set.\n    # Repeatedly traverse the parent pointer until we reach a root.\n    # Implement the \"rank compression\" strategy by making all \n    # nodes along path from j to the root point directly to the root.\n    def find(self, j):\n        assert 0 &lt;= j &lt; self.n\n        assert self.parents[j] != None, 'You are calling find on an element that is not part of the family yet. Please call make_set first.'\n        # your code here\n        if(self.is_representative(j)):\n            return j\n        else:\n            return self.find(self.parents[j])\n        \n    \n    # Function : union\n    # Compute union of j1 and j2\n    # First do a find to get to the representatives of j1 and j2.\n    # If they are not the same, then \n    #  implement union using the rank strategy I.e, lower rank root becomes\n    #  child of the higher ranked root.\n    #  break ties by making the first argument j1's root the parent.\n    def union(self, j1, j2):\n        assert 0 &lt;= j1 &lt; self.n\n        assert 0 &lt;= j2 &lt; self.n\n        assert self.parents[j1] != None\n        assert self.parents[j2] != None\n        # your code here\n        j1_parent = self.find(j1)\n        j2_parent = self.find(j2)\n        if(self.rank[j1_parent] &gt;= self.rank[j2_parent]):\n            self.parents[j2_parent] = j1_parent\n            self.rank[j1_parent] = max(self.rank[j2_parent] + 1, self.rank[j1_parent])\n        else:\n            self.parents[j1_parent] = j2_parent\n            self.rank[j2_parent] = max(self.rank[j1_parent] + 1, self.rank[j2_parent])\n</pre> class DisjointForests:     def __init__(self, n):         assert n &gt;= 1, ' Empty disjoint forest is disallowed'         self.n = n         self.parents = [None]*n         self.rank = [None]*n              # Function: dictionary_of_sets     # Convert the disjoint forest structure into a dictionary d     # wherein d has an entry for each representative i     # d[i] maps to each elements which belongs to the tree corresponding to i     # in the disjoint forest.     def dictionary_of_sets(self):         d = {}         for i in range(self.n):             if self.is_representative(i):                 d[i] = set([i])         for j in range(self.n):             if self.parents[j] != None:                 root = self.find(j)                 assert root in d                 d[root].add(j)         return d          def make_set(self, j):         assert 0 &lt;= j &lt; self.n         assert self.parents[j] == None, 'You are calling make_set on an element multiple times -- not allowed.'         self.parents[j] = j         self.rank[j] = 1              def is_representative(self, j):         return self.parents[j] == j           def get_rank(self, j):         return self.rank[j]          # Function: find     # Implement the find algorithm for a node j in the set.     # Repeatedly traverse the parent pointer until we reach a root.     # Implement the \"rank compression\" strategy by making all      # nodes along path from j to the root point directly to the root.     def find(self, j):         assert 0 &lt;= j &lt; self.n         assert self.parents[j] != None, 'You are calling find on an element that is not part of the family yet. Please call make_set first.'         # your code here         if(self.is_representative(j)):             return j         else:             return self.find(self.parents[j])                   # Function : union     # Compute union of j1 and j2     # First do a find to get to the representatives of j1 and j2.     # If they are not the same, then      #  implement union using the rank strategy I.e, lower rank root becomes     #  child of the higher ranked root.     #  break ties by making the first argument j1's root the parent.     def union(self, j1, j2):         assert 0 &lt;= j1 &lt; self.n         assert 0 &lt;= j2 &lt; self.n         assert self.parents[j1] != None         assert self.parents[j2] != None         # your code here         j1_parent = self.find(j1)         j2_parent = self.find(j2)         if(self.rank[j1_parent] &gt;= self.rank[j2_parent]):             self.parents[j2_parent] = j1_parent             self.rank[j1_parent] = max(self.rank[j2_parent] + 1, self.rank[j1_parent])         else:             self.parents[j1_parent] = j2_parent             self.rank[j2_parent] = max(self.rank[j1_parent] + 1, self.rank[j2_parent])                   In\u00a0[16]: Copied! <pre>d = DisjointForests(10)\nfor i in range(10):\n    d.make_set(i)\n\nfor i in range(10):\n    assert d.find(i) == i, f'Failed: Find on {i} must return {i} back'\n    \nd.union(0,1)\nd.union(2,3)\nassert(d.find(0) == d.find(1)), '0 and 1 have been union-ed together'\nassert(d.find(2) == d.find(3)), '2 and 3 have been union-ed together'\nassert(d.find(0) != d.find(3)), '0 and 3 should be in  different trees'\nassert((d.get_rank(0) == 2 and d.get_rank(1) == 1) or \n       (d.get_rank(1) == 2 and d.get_rank(0) == 1)), 'one of the nodes 0 or 1 must have rank 2'\n\nassert((d.get_rank(2) == 2 and d.get_rank(3) == 1) or \n       (d.get_rank(3) == 2 and d.get_rank(2) == 1)), 'one of the nodes 2 or 3 must have rank 2'\n\n\nd.union(3,4)\nassert(d.find(2) == d.find(4)), '2 and 4 must be in the same set in the family.'\n\nd.union(5,7)\nd.union(6,8)\nd.union(3,7)\nd.union(0,6)\n\nassert(d.find(6) == d.find(1)), '1 and 6 must be in the same set in the family'\nassert(d.find(7) == d.find(4)), '7 and 4 must be in the same set in the family'\nprint('All tests passed: 10 points.')\n</pre> d = DisjointForests(10) for i in range(10):     d.make_set(i)  for i in range(10):     assert d.find(i) == i, f'Failed: Find on {i} must return {i} back'      d.union(0,1) d.union(2,3) assert(d.find(0) == d.find(1)), '0 and 1 have been union-ed together' assert(d.find(2) == d.find(3)), '2 and 3 have been union-ed together' assert(d.find(0) != d.find(3)), '0 and 3 should be in  different trees' assert((d.get_rank(0) == 2 and d.get_rank(1) == 1) or         (d.get_rank(1) == 2 and d.get_rank(0) == 1)), 'one of the nodes 0 or 1 must have rank 2'  assert((d.get_rank(2) == 2 and d.get_rank(3) == 1) or         (d.get_rank(3) == 2 and d.get_rank(2) == 1)), 'one of the nodes 2 or 3 must have rank 2'   d.union(3,4) assert(d.find(2) == d.find(4)), '2 and 4 must be in the same set in the family.'  d.union(5,7) d.union(6,8) d.union(3,7) d.union(0,6)  assert(d.find(6) == d.find(1)), '1 and 6 must be in the same set in the family' assert(d.find(7) == d.find(4)), '7 and 4 must be in the same set in the family' print('All tests passed: 10 points.') <pre>All tests passed: 10 points.\n</pre> In\u00a0[17]: Copied! <pre>class UndirectedGraph:\n    \n    # n is the number of vertices\n    # we will label the vertices from 0 to self.n -1 \n    # We simply store the edges in a list.\n    def __init__(self, n):\n        assert n &gt;= 1, 'You are creating an empty graph -- disallowed'\n        self.n = n\n        self.edges = []\n        self.vertex_data = [None]*self.n\n       \n        \n    def set_vertex_data(self, j, dat):\n        assert 0 &lt;= j &lt; self.n\n        self.vertex_data[j] = dat\n        \n    def get_vertex_data(self, j):\n        assert 0 &lt;= j &lt; self.n\n        return self.vertex_data[j] \n        \n    def add_edge(self, i, j, wij):\n        assert 0 &lt;= i &lt; self.n\n        assert 0 &lt;= j &lt; self.n\n        assert i != j\n        # Make sure to add edge from i to j with weight wij\n        self.edges.append((i, j, wij))\n        \n    def sort_edges(self):\n        # sort edges in ascending order of weights.\n        self.edges = sorted(self.edges, key=lambda edg_data: edg_data[2])\n</pre>      class UndirectedGraph:          # n is the number of vertices     # we will label the vertices from 0 to self.n -1      # We simply store the edges in a list.     def __init__(self, n):         assert n &gt;= 1, 'You are creating an empty graph -- disallowed'         self.n = n         self.edges = []         self.vertex_data = [None]*self.n                      def set_vertex_data(self, j, dat):         assert 0 &lt;= j &lt; self.n         self.vertex_data[j] = dat              def get_vertex_data(self, j):         assert 0 &lt;= j &lt; self.n         return self.vertex_data[j]               def add_edge(self, i, j, wij):         assert 0 &lt;= i &lt; self.n         assert 0 &lt;= j &lt; self.n         assert i != j         # Make sure to add edge from i to j with weight wij         self.edges.append((i, j, wij))              def sort_edges(self):         # sort edges in ascending order of weights.         self.edges = sorted(self.edges, key=lambda edg_data: edg_data[2])          <p>YOUR ANSWER HERE</p> <ol> <li>Find the smallest weight edge from the graph<ul> <li>If either one of the vertexs is not visited, and weight smaller than threshold $W$<ul> <li>Union them</li> </ul> </li> <li>remove the edge</li> </ul> </li> </ol> <p>Complete the missing parts of the function in the code below to compute strongly connected components.</p> In\u00a0[43]: Copied! <pre>def compute_scc(g, W):\n    # create a disjoint forest with as many elements as number of vertices\n    # Next compute the strongly connected components using the disjoint forest data structure\n    d = DisjointForests(g.n)\n    # your code here\n    for i in range(g.n):\n        d.make_set(i)\n    g.sort_edges()\n    seen = set()\n    for edge in g.edges:\n        print(edge)\n        if ((edge[0] not in seen) or (edge[1] not in seen)) and (edge[2] &lt;= W):\n            seen.add(edge[0])\n            seen.add(edge[1])\n            d.union(edge[0],edge[1]) \n            \n    # extract a set of sets from d\n    return d.dictionary_of_sets()\n</pre> def compute_scc(g, W):     # create a disjoint forest with as many elements as number of vertices     # Next compute the strongly connected components using the disjoint forest data structure     d = DisjointForests(g.n)     # your code here     for i in range(g.n):         d.make_set(i)     g.sort_edges()     seen = set()     for edge in g.edges:         print(edge)         if ((edge[0] not in seen) or (edge[1] not in seen)) and (edge[2] &lt;= W):             seen.add(edge[0])             seen.add(edge[1])             d.union(edge[0],edge[1])                   # extract a set of sets from d     return d.dictionary_of_sets()     In\u00a0[44]: Copied! <pre>g3 = UndirectedGraph(8)\ng3.add_edge(0,1,0.5)\ng3.add_edge(0,2,1.0)\ng3.add_edge(0,4,0.5)\ng3.add_edge(2,3,1.5)\ng3.add_edge(2,4,2.0)\ng3.add_edge(3,4,1.5)\ng3.add_edge(5,6,2.0)\ng3.add_edge(5,7,2.0)\nres = compute_scc(g3, 2.0)\nprint('SCCs with threshold 2.0 computed by your code are:')\nassert len(res) == 2, f'Expected 2 SCCs but got {len(res)}'\nfor (k, s) in res.items():\n    print(s)\n    \n# Let us check that your code returns what we expect.\nfor (k, s) in res.items():\n    if (k in [0,1,2,3,4]):\n        assert (s == set([0,1,2,3,4])), '{0,1,2,3,4} should be an SCC'\n    if (k in [5,6,7]):\n        assert (s == set([5,6,7])), '{5,6,7} should be an SCC'\n\n        \n# Let us check that the thresholding works\nprint('SCCs with threshold 1.5')\nres2 = compute_scc(g3, 1.5) # This cutsoff edges 2,4 and 5, 6, 7\nfor (k, s) in res2.items():\n    print(s)\nassert len(res2) == 4, f'Expected 4 SCCs but got {len(res2)}'\n\nfor (k, s) in res2.items():\n    if k in [0,1,2,3,4]:\n        assert (s == set([0,1,2,3,4])), '{0,1,2,3,4} should be an SCC'\n    if k in [5]:\n        assert s == set([5]), '{5} should be an SCC with just a single node.'\n    if k in [6]:\n        assert s == set([6]), '{6} should be an SCC with just a single node.'\n    if k in [7]:\n        assert s == set([7]), '{7} should be an SCC with just a single node.'\n        \nprint('All tests passed: 10 points')\n</pre> g3 = UndirectedGraph(8) g3.add_edge(0,1,0.5) g3.add_edge(0,2,1.0) g3.add_edge(0,4,0.5) g3.add_edge(2,3,1.5) g3.add_edge(2,4,2.0) g3.add_edge(3,4,1.5) g3.add_edge(5,6,2.0) g3.add_edge(5,7,2.0) res = compute_scc(g3, 2.0) print('SCCs with threshold 2.0 computed by your code are:') assert len(res) == 2, f'Expected 2 SCCs but got {len(res)}' for (k, s) in res.items():     print(s)      # Let us check that your code returns what we expect. for (k, s) in res.items():     if (k in [0,1,2,3,4]):         assert (s == set([0,1,2,3,4])), '{0,1,2,3,4} should be an SCC'     if (k in [5,6,7]):         assert (s == set([5,6,7])), '{5,6,7} should be an SCC'           # Let us check that the thresholding works print('SCCs with threshold 1.5') res2 = compute_scc(g3, 1.5) # This cutsoff edges 2,4 and 5, 6, 7 for (k, s) in res2.items():     print(s) assert len(res2) == 4, f'Expected 4 SCCs but got {len(res2)}'  for (k, s) in res2.items():     if k in [0,1,2,3,4]:         assert (s == set([0,1,2,3,4])), '{0,1,2,3,4} should be an SCC'     if k in [5]:         assert s == set([5]), '{5} should be an SCC with just a single node.'     if k in [6]:         assert s == set([6]), '{6} should be an SCC with just a single node.'     if k in [7]:         assert s == set([7]), '{7} should be an SCC with just a single node.'          print('All tests passed: 10 points')  <pre>(0, 1, 0.5)\n(0, 4, 0.5)\n(0, 2, 1.0)\n(2, 3, 1.5)\n(3, 4, 1.5)\n(2, 4, 2.0)\n(5, 6, 2.0)\n(5, 7, 2.0)\nSCCs with threshold 2.0 computed by your code are:\n{0, 1, 2, 3, 4}\n{5, 6, 7}\nSCCs with threshold 1.5\n(0, 1, 0.5)\n(0, 4, 0.5)\n(0, 2, 1.0)\n(2, 3, 1.5)\n(3, 4, 1.5)\n(2, 4, 2.0)\n(5, 6, 2.0)\n(5, 7, 2.0)\n{0, 1, 2, 3, 4}\n{5}\n{6}\n{7}\nAll tests passed: 10 points\n</pre> In\u00a0[50]: Copied! <pre>def compute_mst(g):\n    # return a tuple of two items\n    #   1. list of edges (i,j) that are part of the MST\n    #   2. sum of MST edge weights.\n    d = DisjointForests(g.n)\n    mst_edges = []\n    g.sort_edges()\n    # your code here\n    for i in range(g.n):\n        d.make_set(i)\n    mst_weight = 0\n    d.dictionary_of_sets()\n    for edge in g.edges:\n        print(edge)\n        if (d.find(edge[0]) != d.find(edge[1])) and (len(d.dictionary_of_sets())&gt;1):\n            mst_edges.append(edge)\n            mst_weight += edge[2]\n            d.union(edge[0],edge[1]) \n    return (mst_edges,mst_weight)\n</pre> def compute_mst(g):     # return a tuple of two items     #   1. list of edges (i,j) that are part of the MST     #   2. sum of MST edge weights.     d = DisjointForests(g.n)     mst_edges = []     g.sort_edges()     # your code here     for i in range(g.n):         d.make_set(i)     mst_weight = 0     d.dictionary_of_sets()     for edge in g.edges:         print(edge)         if (d.find(edge[0]) != d.find(edge[1])) and (len(d.dictionary_of_sets())&gt;1):             mst_edges.append(edge)             mst_weight += edge[2]             d.union(edge[0],edge[1])      return (mst_edges,mst_weight)           In\u00a0[52]: Copied! <pre>g3 = UndirectedGraph(8)\ng3.add_edge(0,1,0.5)\ng3.add_edge(0,2,1.0)\ng3.add_edge(0,4,0.5)\ng3.add_edge(2,3,1.5)\ng3.add_edge(2,4,2.0)\ng3.add_edge(3,4,1.5)\ng3.add_edge(5,6,2.0)\ng3.add_edge(5,7,2.0)\ng3.add_edge(3,5,2.0)\n\n(mst_edges, mst_weight) = compute_mst(g3)\nprint('Your code computed MST: ')\nfor (i,j,wij) in mst_edges:\n    print(f'\\t {(i,j)} weight {wij}')\nprint(f'Total edge weight: {mst_weight}')\n\nassert mst_weight == 9.5, 'Optimal MST weight is expected to be 9.5'\n\nassert (0,1,0.5) in mst_edges\nassert (0,2,1.0) in mst_edges\nassert (0,4,0.5) in mst_edges\nassert (5,6,2.0) in mst_edges\nassert (5,7,2.0) in mst_edges\nassert (3,5,2.0) in mst_edges\nassert (2,3, 1.5) in mst_edges or (3,4, 1.5) in mst_edges\n\nprint('All tests passed: 10 points!')\n</pre> g3 = UndirectedGraph(8) g3.add_edge(0,1,0.5) g3.add_edge(0,2,1.0) g3.add_edge(0,4,0.5) g3.add_edge(2,3,1.5) g3.add_edge(2,4,2.0) g3.add_edge(3,4,1.5) g3.add_edge(5,6,2.0) g3.add_edge(5,7,2.0) g3.add_edge(3,5,2.0)  (mst_edges, mst_weight) = compute_mst(g3) print('Your code computed MST: ') for (i,j,wij) in mst_edges:     print(f'\\t {(i,j)} weight {wij}') print(f'Total edge weight: {mst_weight}')  assert mst_weight == 9.5, 'Optimal MST weight is expected to be 9.5'  assert (0,1,0.5) in mst_edges assert (0,2,1.0) in mst_edges assert (0,4,0.5) in mst_edges assert (5,6,2.0) in mst_edges assert (5,7,2.0) in mst_edges assert (3,5,2.0) in mst_edges assert (2,3, 1.5) in mst_edges or (3,4, 1.5) in mst_edges  print('All tests passed: 10 points!')  <pre>(0, 1, 0.5)\n(0, 4, 0.5)\n(0, 2, 1.0)\n(2, 3, 1.5)\n(3, 4, 1.5)\n(2, 4, 2.0)\n(5, 6, 2.0)\n(5, 7, 2.0)\n(3, 5, 2.0)\nYour code computed MST: \n\t (0, 1) weight 0.5\n\t (0, 4) weight 0.5\n\t (0, 2) weight 1.0\n\t (2, 3) weight 1.5\n\t (5, 6) weight 2.0\n\t (5, 7) weight 2.0\n\t (3, 5) weight 2.0\nTotal edge weight: 9.5\nAll tests passed: 10 points!\n</pre> <p>YOUR ANSWER HERE</p> <ol> <li>If $W &gt;= $ the largest weight edge in the MST, we can always have a MST to connect all vertexs</li> <li>If $W &lt;= $ the largest weight edge in the MST, If we stil have a SCC, it's total weights must less than MST, which break the assmption of MST, therefore, it will result in a disconnected graph</li> </ol> In\u00a0[53]: Copied! <pre>%matplotlib inline\nfrom matplotlib import pyplot as plt\nimport cv2\n# You can read png, jpg and other file types \nimg = cv2.imread('test-pic.png') # read an image from a file using opencv (cv2) library\n# you can annotate images \nplt.imshow(img) # show the image on the screen \n# You can find out the size of the image\nprint('Image size (height, width, num layers) is', img.shape)\n\npx = img[145, 67] # img[y,x] is the color of the pixel of x,y\nprint(f'Pixel at (145,67) is {px}')\nprint(' pixels are RGB values.')\n</pre> %matplotlib inline from matplotlib import pyplot as plt import cv2 # You can read png, jpg and other file types  img = cv2.imread('test-pic.png') # read an image from a file using opencv (cv2) library # you can annotate images  plt.imshow(img) # show the image on the screen  # You can find out the size of the image print('Image size (height, width, num layers) is', img.shape)  px = img[145, 67] # img[y,x] is the color of the pixel of x,y print(f'Pixel at (145,67) is {px}') print(' pixels are RGB values.')   <pre>Image size (height, width, num layers) is (219, 320, 3)\nPixel at (145,67) is [250  41   2]\n pixels are RGB values.\n</pre> In\u00a0[54]: Copied! <pre># load an image and make it into a graph.\nimport math\nimport cv2\ndef pixel_difference(px1, px2):\n    def fix_pixels (px):\n        return [int(px[0]), int(px[1]), int(px[2]) ]\n    px1_float = fix_pixels(px1)\n    px2_float = fix_pixels(px2)\n    return max( abs(px1_float[0] - px2_float[0]), abs(px1_float[1] - px2_float[1]), abs(px1_float[2] - px2_float[2])) \n\ndef get_index_from_pixel(i, j, height, width):\n    assert 0 &lt;= i &lt; width\n    assert 0 &lt;= j &lt; height\n    return j * width + i\n\ndef get_coordinates_from_index(s, height, width):\n    assert 0 &lt;= s &lt; height * width\n    j = s//width\n    i = s % width\n    return (i,j)\n\ndef connect_neighboring_pixels(i, j, i1, j1, img, g):\n    (height, width, _) = img.shape\n    s = get_index_from_pixel(i, j, height, width)\n    px = img[j,i]\n    s1 = get_index_from_pixel(i1, j1, height, width)\n    px1 = img[j1,i1]\n    w = pixel_difference(px1, px)\n    g.add_edge(s, s1, w)\n    \n\ndef load_image_and_make_graph(imfilename):\n    img = cv2.imread(imfilename)\n    (height, width, num_layers) = img.shape\n    g = UndirectedGraph(height * width)\n    for j in range(height):\n        for i in range(width):\n            s = get_index_from_pixel(i, j, height, width)\n            g.set_vertex_data(s, (i,j))\n            if i &gt; 0:\n                connect_neighboring_pixels(i, j, i-1, j, img, g)\n            if i &lt; width -1:\n                connect_neighboring_pixels(i, j, i+1, j, img, g)\n            if j &gt; 0:\n                connect_neighboring_pixels(i, j, i, j-1, img, g)\n            if j &lt; height -1:\n                connect_neighboring_pixels(i, j, i, j+1, img, g)\n    return g\n</pre> # load an image and make it into a graph. import math import cv2 def pixel_difference(px1, px2):     def fix_pixels (px):         return [int(px[0]), int(px[1]), int(px[2]) ]     px1_float = fix_pixels(px1)     px2_float = fix_pixels(px2)     return max( abs(px1_float[0] - px2_float[0]), abs(px1_float[1] - px2_float[1]), abs(px1_float[2] - px2_float[2]))   def get_index_from_pixel(i, j, height, width):     assert 0 &lt;= i &lt; width     assert 0 &lt;= j &lt; height     return j * width + i  def get_coordinates_from_index(s, height, width):     assert 0 &lt;= s &lt; height * width     j = s//width     i = s % width     return (i,j)  def connect_neighboring_pixels(i, j, i1, j1, img, g):     (height, width, _) = img.shape     s = get_index_from_pixel(i, j, height, width)     px = img[j,i]     s1 = get_index_from_pixel(i1, j1, height, width)     px1 = img[j1,i1]     w = pixel_difference(px1, px)     g.add_edge(s, s1, w)       def load_image_and_make_graph(imfilename):     img = cv2.imread(imfilename)     (height, width, num_layers) = img.shape     g = UndirectedGraph(height * width)     for j in range(height):         for i in range(width):             s = get_index_from_pixel(i, j, height, width)             g.set_vertex_data(s, (i,j))             if i &gt; 0:                 connect_neighboring_pixels(i, j, i-1, j, img, g)             if i &lt; width -1:                 connect_neighboring_pixels(i, j, i+1, j, img, g)             if j &gt; 0:                 connect_neighboring_pixels(i, j, i, j-1, img, g)             if j &lt; height -1:                 connect_neighboring_pixels(i, j, i, j+1, img, g)     return g                                                 In\u00a0[55]: Copied! <pre>print('Loading image and building graph.')\ng = load_image_and_make_graph('test-pic.png')\nprint('Running MST algorithm')\n(mst_edges, mst_weight) = compute_mst(g)\nprint(f'Found MST witn {len(mst_edges)} edges and total weight = {mst_weight}')\nmax_mst_edge_weight= max(mst_edges, key=lambda e: e[2])\nprint(f'Largest MST edge weight = {max_mst_edge_weight[2]}')\n</pre> print('Loading image and building graph.') g = load_image_and_make_graph('test-pic.png') print('Running MST algorithm') (mst_edges, mst_weight) = compute_mst(g) print(f'Found MST witn {len(mst_edges)} edges and total weight = {mst_weight}') max_mst_edge_weight= max(mst_edges, key=lambda e: e[2]) print(f'Largest MST edge weight = {max_mst_edge_weight[2]}') <pre>Loading image and building graph.\nRunning MST algorithm\n(0, 1, 0)\n(0, 320, 0)\n(1, 0, 0)\n(1, 2, 0)\n(1, 321, 0)\n(2, 1, 0)\n(2, 3, 0)\n(2, 322, 0)\n(3, 2, 0)\n(3, 4, 0)\n(3, 323, 0)\n(4, 3, 0)\n(4, 5, 0)\n(4, 324, 0)\n(5, 4, 0)\n(5, 6, 0)\n(5, 325, 0)\n(6, 5, 0)\n(6, 7, 0)\n(6, 326, 0)\n(7, 6, 0)\n(7, 8, 0)\n(7, 327, 0)\n(8, 7, 0)\n(8, 9, 0)\n(8, 328, 0)\n(9, 8, 0)\n(9, 10, 0)\n(9, 329, 0)\n(10, 9, 0)\n(10, 11, 0)\n(10, 330, 0)\n(11, 10, 0)\n(11, 12, 0)\n(11, 331, 0)\n(12, 11, 0)\n(12, 13, 0)\n(12, 332, 0)\n(13, 12, 0)\n(13, 14, 0)\n(13, 333, 0)\n(14, 13, 0)\n(14, 15, 0)\n(14, 334, 0)\n(15, 14, 0)\n(15, 16, 0)\n(15, 335, 0)\n(16, 15, 0)\n(16, 17, 0)\n(16, 336, 0)\n(17, 16, 0)\n(17, 18, 0)\n(17, 337, 0)\n(18, 17, 0)\n(18, 19, 0)\n(18, 338, 0)\n(19, 18, 0)\n(19, 20, 0)\n(19, 339, 0)\n(20, 19, 0)\n(20, 21, 0)\n(20, 340, 0)\n(21, 20, 0)\n(21, 22, 0)\n(21, 341, 0)\n(22, 21, 0)\n(22, 23, 0)\n(22, 342, 0)\n(23, 22, 0)\n(23, 24, 0)\n(23, 343, 0)\n(24, 23, 0)\n(24, 25, 0)\n(24, 344, 0)\n(25, 24, 0)\n(25, 26, 0)\n(25, 345, 0)\n(26, 25, 0)\n(26, 27, 0)\n(26, 346, 0)\n(27, 26, 0)\n(27, 28, 0)\n(27, 347, 0)\n(28, 27, 0)\n(28, 29, 0)\n(28, 348, 0)\n(29, 28, 0)\n(29, 30, 0)\n(29, 349, 0)\n(30, 29, 0)\n(30, 31, 0)\n(30, 350, 0)\n(31, 30, 0)\n(31, 32, 0)\n(31, 351, 0)\n(32, 31, 0)\n(32, 33, 0)\n(32, 352, 0)\n(33, 32, 0)\n(33, 34, 0)\n(33, 353, 0)\n(34, 33, 0)\n(34, 35, 0)\n(34, 354, 0)\n(35, 34, 0)\n(35, 36, 0)\n(35, 355, 0)\n(36, 35, 0)\n(36, 37, 0)\n(36, 356, 0)\n(37, 36, 0)\n(37, 38, 0)\n(37, 357, 0)\n(38, 37, 0)\n(38, 39, 0)\n(38, 358, 0)\n(39, 38, 0)\n(39, 40, 0)\n(39, 359, 0)\n(40, 39, 0)\n(40, 41, 0)\n(40, 360, 0)\n(41, 40, 0)\n(41, 42, 0)\n(41, 361, 0)\n(42, 41, 0)\n(42, 43, 0)\n(42, 362, 0)\n(43, 42, 0)\n(43, 44, 0)\n(43, 363, 0)\n(44, 43, 0)\n(44, 45, 0)\n(44, 364, 0)\n(45, 44, 0)\n(45, 46, 0)\n(45, 365, 0)\n(46, 45, 0)\n(46, 47, 0)\n(46, 366, 0)\n(47, 46, 0)\n(47, 48, 0)\n(47, 367, 0)\n(48, 47, 0)\n(48, 49, 0)\n(48, 368, 0)\n(49, 48, 0)\n(49, 50, 0)\n(49, 369, 0)\n(50, 49, 0)\n(50, 51, 0)\n(50, 370, 0)\n(51, 50, 0)\n(51, 52, 0)\n(51, 371, 0)\n(52, 51, 0)\n(52, 53, 0)\n(52, 372, 0)\n(53, 52, 0)\n(53, 54, 0)\n(53, 373, 0)\n(54, 53, 0)\n(54, 55, 0)\n(54, 374, 0)\n(55, 54, 0)\n(55, 56, 0)\n(55, 375, 0)\n(56, 55, 0)\n(56, 57, 0)\n(56, 376, 0)\n(57, 56, 0)\n(57, 58, 0)\n(57, 377, 0)\n(58, 57, 0)\n(58, 59, 0)\n(58, 378, 0)\n(59, 58, 0)\n(59, 60, 0)\n(59, 379, 0)\n(60, 59, 0)\n(60, 61, 0)\n(60, 380, 0)\n(61, 60, 0)\n(61, 62, 0)\n(61, 381, 0)\n(62, 61, 0)\n(62, 63, 0)\n(62, 382, 0)\n(63, 62, 0)\n(63, 64, 0)\n(63, 383, 0)\n(64, 63, 0)\n(64, 65, 0)\n(64, 384, 0)\n(65, 64, 0)\n(65, 66, 0)\n(65, 385, 0)\n(66, 65, 0)\n(66, 67, 0)\n(66, 386, 0)\n(67, 66, 0)\n(67, 68, 0)\n(67, 387, 0)\n(68, 67, 0)\n(68, 69, 0)\n(68, 388, 0)\n(69, 68, 0)\n(69, 70, 0)\n(69, 389, 0)\n(70, 69, 0)\n(70, 71, 0)\n(70, 390, 0)\n(71, 70, 0)\n(71, 72, 0)\n(71, 391, 0)\n(72, 71, 0)\n(72, 73, 0)\n(72, 392, 0)\n(73, 72, 0)\n(73, 74, 0)\n(73, 393, 0)\n(74, 73, 0)\n(74, 75, 0)\n(74, 394, 0)\n(75, 74, 0)\n(75, 76, 0)\n(75, 395, 0)\n(76, 75, 0)\n(76, 77, 0)\n(76, 396, 0)\n(77, 76, 0)\n(77, 78, 0)\n(77, 397, 0)\n(78, 77, 0)\n(78, 79, 0)\n(78, 398, 0)\n(79, 78, 0)\n(79, 80, 0)\n(79, 399, 0)\n(80, 79, 0)\n(80, 81, 0)\n(80, 400, 0)\n(81, 80, 0)\n(81, 82, 0)\n(81, 401, 0)\n(82, 81, 0)\n(82, 83, 0)\n(82, 402, 0)\n(83, 82, 0)\n(83, 84, 0)\n(83, 403, 0)\n(84, 83, 0)\n(84, 85, 0)\n(84, 404, 0)\n(85, 84, 0)\n(85, 86, 0)\n(85, 405, 0)\n(86, 85, 0)\n(86, 87, 0)\n(86, 406, 0)\n(87, 86, 0)\n(87, 88, 0)\n(87, 407, 0)\n(88, 87, 0)\n(88, 89, 0)\n(88, 408, 0)\n(89, 88, 0)\n(89, 90, 0)\n(89, 409, 0)\n(90, 89, 0)\n(90, 91, 0)\n(90, 410, 0)\n(91, 90, 0)\n(91, 92, 0)\n(91, 411, 0)\n(92, 91, 0)\n(92, 93, 0)\n(92, 412, 0)\n(93, 92, 0)\n(93, 94, 0)\n(93, 413, 0)\n(94, 93, 0)\n(94, 95, 0)\n(94, 414, 0)\n(95, 94, 0)\n(95, 96, 0)\n(95, 415, 0)\n(96, 95, 0)\n(96, 97, 0)\n(96, 416, 0)\n(97, 96, 0)\n(97, 98, 0)\n(97, 417, 0)\n(98, 97, 0)\n(98, 99, 0)\n(98, 418, 0)\n(99, 98, 0)\n(99, 100, 0)\n(99, 419, 0)\n(100, 99, 0)\n(100, 101, 0)\n(100, 420, 0)\n(101, 100, 0)\n(101, 102, 0)\n(101, 421, 0)\n(102, 101, 0)\n(102, 103, 0)\n(102, 422, 0)\n(103, 102, 0)\n(103, 104, 0)\n(103, 423, 0)\n(104, 103, 0)\n(104, 105, 0)\n(104, 424, 0)\n(105, 104, 0)\n(105, 106, 0)\n(105, 425, 0)\n(106, 105, 0)\n(106, 107, 0)\n(106, 426, 0)\n(107, 106, 0)\n(107, 108, 0)\n(107, 427, 0)\n(108, 107, 0)\n(108, 109, 0)\n(108, 428, 0)\n(109, 108, 0)\n(109, 110, 0)\n(109, 429, 0)\n(110, 109, 0)\n(110, 111, 0)\n(110, 430, 0)\n(111, 110, 0)\n(111, 112, 0)\n(111, 431, 0)\n(112, 111, 0)\n(112, 113, 0)\n(112, 432, 0)\n(113, 112, 0)\n(113, 114, 0)\n(113, 433, 0)\n(114, 113, 0)\n(114, 115, 0)\n(114, 434, 0)\n(115, 114, 0)\n(115, 116, 0)\n(115, 435, 0)\n(116, 115, 0)\n(116, 117, 0)\n(116, 436, 0)\n(117, 116, 0)\n(117, 118, 0)\n(117, 437, 0)\n(118, 117, 0)\n(118, 119, 0)\n(118, 438, 0)\n(119, 118, 0)\n(119, 120, 0)\n(119, 439, 0)\n(120, 119, 0)\n(120, 121, 0)\n(120, 440, 0)\n(121, 120, 0)\n(121, 122, 0)\n(121, 441, 0)\n(122, 121, 0)\n(122, 123, 0)\n(122, 442, 0)\n(123, 122, 0)\n(123, 124, 0)\n(123, 443, 0)\n(124, 123, 0)\n(124, 125, 0)\n(124, 444, 0)\n(125, 124, 0)\n(125, 126, 0)\n(125, 445, 0)\n(126, 125, 0)\n(126, 127, 0)\n(126, 446, 0)\n(127, 126, 0)\n(127, 128, 0)\n(127, 447, 0)\n(128, 127, 0)\n(128, 129, 0)\n(128, 448, 0)\n(129, 128, 0)\n(129, 130, 0)\n(129, 449, 0)\n(130, 129, 0)\n(130, 131, 0)\n(130, 450, 0)\n(131, 130, 0)\n(131, 132, 0)\n(131, 451, 0)\n(132, 131, 0)\n(132, 133, 0)\n(132, 452, 0)\n(133, 132, 0)\n(133, 134, 0)\n(133, 453, 0)\n(134, 133, 0)\n(134, 135, 0)\n(134, 454, 0)\n(135, 134, 0)\n(135, 136, 0)\n(135, 455, 0)\n(136, 135, 0)\n(136, 137, 0)\n(136, 456, 0)\n(137, 136, 0)\n(137, 138, 0)\n(137, 457, 0)\n(138, 137, 0)\n(138, 139, 0)\n(138, 458, 0)\n(139, 138, 0)\n(139, 140, 0)\n(139, 459, 0)\n(140, 139, 0)\n(140, 141, 0)\n(140, 460, 0)\n(141, 140, 0)\n(141, 142, 0)\n(141, 461, 0)\n(142, 141, 0)\n(142, 143, 0)\n(142, 462, 0)\n(143, 142, 0)\n(143, 144, 0)\n(143, 463, 0)\n(144, 143, 0)\n(144, 145, 0)\n(144, 464, 0)\n(145, 144, 0)\n(145, 146, 0)\n(145, 465, 0)\n(146, 145, 0)\n(146, 147, 0)\n(146, 466, 0)\n(147, 146, 0)\n(147, 148, 0)\n(147, 467, 0)\n(148, 147, 0)\n(148, 149, 0)\n(148, 468, 0)\n(149, 148, 0)\n(149, 150, 0)\n(149, 469, 0)\n(150, 149, 0)\n(150, 151, 0)\n(150, 470, 0)\n(151, 150, 0)\n(151, 152, 0)\n(151, 471, 0)\n(152, 151, 0)\n(152, 153, 0)\n(152, 472, 0)\n(153, 152, 0)\n(153, 154, 0)\n(153, 473, 0)\n(154, 153, 0)\n(154, 155, 0)\n(154, 474, 0)\n(155, 154, 0)\n(155, 156, 0)\n(155, 475, 0)\n(156, 155, 0)\n(156, 157, 0)\n(156, 476, 0)\n(157, 156, 0)\n(157, 158, 0)\n(157, 477, 0)\n(158, 157, 0)\n(158, 159, 0)\n(158, 478, 0)\n(159, 158, 0)\n(159, 160, 0)\n(159, 479, 0)\n(160, 159, 0)\n(160, 161, 0)\n(160, 480, 0)\n(161, 160, 0)\n(161, 162, 0)\n(161, 481, 0)\n(162, 161, 0)\n(162, 163, 0)\n(162, 482, 0)\n(163, 162, 0)\n(163, 164, 0)\n(163, 483, 0)\n(164, 163, 0)\n(164, 165, 0)\n(164, 484, 0)\n(165, 164, 0)\n(165, 166, 0)\n(165, 485, 0)\n(166, 165, 0)\n(166, 167, 0)\n(166, 486, 0)\n(167, 166, 0)\n(167, 168, 0)\n(167, 487, 0)\n(168, 167, 0)\n(168, 169, 0)\n(168, 488, 0)\n(169, 168, 0)\n(169, 170, 0)\n(169, 489, 0)\n(170, 169, 0)\n(170, 171, 0)\n(170, 490, 0)\n(171, 170, 0)\n(171, 172, 0)\n(171, 491, 0)\n(172, 171, 0)\n(172, 173, 0)\n(172, 492, 0)\n(173, 172, 0)\n(173, 174, 0)\n(173, 493, 0)\n(174, 173, 0)\n(174, 175, 0)\n(174, 494, 0)\n(175, 174, 0)\n(175, 176, 0)\n(175, 495, 0)\n(176, 175, 0)\n(176, 177, 0)\n(176, 496, 0)\n(177, 176, 0)\n(177, 178, 0)\n(177, 497, 0)\n(178, 177, 0)\n(178, 179, 0)\n(178, 498, 0)\n(179, 178, 0)\n(179, 180, 0)\n(179, 499, 0)\n(180, 179, 0)\n(180, 181, 0)\n(180, 500, 0)\n(181, 180, 0)\n(181, 182, 0)\n(181, 501, 0)\n(182, 181, 0)\n(182, 183, 0)\n(182, 502, 0)\n(183, 182, 0)\n(183, 184, 0)\n(183, 503, 0)\n(184, 183, 0)\n(184, 185, 0)\n(184, 504, 0)\n(185, 184, 0)\n(185, 186, 0)\n(185, 505, 0)\n(186, 185, 0)\n(186, 187, 0)\n(186, 506, 0)\n(187, 186, 0)\n(187, 188, 0)\n(187, 507, 0)\n(188, 187, 0)\n(188, 189, 0)\n(188, 508, 0)\n(189, 188, 0)\n(189, 190, 0)\n(189, 509, 0)\n(190, 189, 0)\n(190, 191, 0)\n(190, 510, 0)\n(191, 190, 0)\n(191, 192, 0)\n(191, 511, 0)\n(192, 191, 0)\n(192, 193, 0)\n(192, 512, 0)\n(193, 192, 0)\n(193, 194, 0)\n(193, 513, 0)\n(194, 193, 0)\n(194, 195, 0)\n(194, 514, 0)\n(195, 194, 0)\n(195, 196, 0)\n(195, 515, 0)\n(196, 195, 0)\n(196, 197, 0)\n(196, 516, 0)\n(197, 196, 0)\n(197, 198, 0)\n(197, 517, 0)\n(198, 197, 0)\n(198, 199, 0)\n(198, 518, 0)\n(199, 198, 0)\n(199, 200, 0)\n(199, 519, 0)\n(200, 199, 0)\n(200, 201, 0)\n(200, 520, 0)\n(201, 200, 0)\n(201, 202, 0)\n(201, 521, 0)\n(202, 201, 0)\n(202, 203, 0)\n(202, 522, 0)\n(203, 202, 0)\n(203, 204, 0)\n(203, 523, 0)\n(204, 203, 0)\n(204, 205, 0)\n(204, 524, 0)\n(205, 204, 0)\n(205, 206, 0)\n(205, 525, 0)\n(206, 205, 0)\n(206, 207, 0)\n(206, 526, 0)\n(207, 206, 0)\n(207, 208, 0)\n(207, 527, 0)\n(208, 207, 0)\n(208, 209, 0)\n(208, 528, 0)\n(209, 208, 0)\n(209, 210, 0)\n(209, 529, 0)\n(210, 209, 0)\n(210, 211, 0)\n(210, 530, 0)\n(211, 210, 0)\n(211, 212, 0)\n(211, 531, 0)\n(212, 211, 0)\n(212, 213, 0)\n(212, 532, 0)\n(213, 212, 0)\n(213, 214, 0)\n(213, 533, 0)\n(214, 213, 0)\n(214, 215, 0)\n(214, 534, 0)\n(215, 214, 0)\n(215, 216, 0)\n(215, 535, 0)\n(216, 215, 0)\n(216, 217, 0)\n(216, 536, 0)\n(217, 216, 0)\n(217, 218, 0)\n(217, 537, 0)\n(218, 217, 0)\n(218, 219, 0)\n(218, 538, 0)\n(219, 218, 0)\n(219, 220, 0)\n(219, 539, 0)\n(220, 219, 0)\n(220, 221, 0)\n(220, 540, 0)\n(221, 220, 0)\n(221, 222, 0)\n(221, 541, 0)\n(222, 221, 0)\n(222, 223, 0)\n(222, 542, 0)\n(223, 222, 0)\n(223, 224, 0)\n(223, 543, 0)\n(224, 223, 0)\n(224, 225, 0)\n(224, 544, 0)\n(225, 224, 0)\n(225, 226, 0)\n(225, 545, 0)\n(226, 225, 0)\n(226, 227, 0)\n(226, 546, 0)\n(227, 226, 0)\n(227, 228, 0)\n(227, 547, 0)\n(228, 227, 0)\n(228, 229, 0)\n(228, 548, 0)\n(229, 228, 0)\n(229, 230, 0)\n(229, 549, 0)\n(230, 229, 0)\n(230, 231, 0)\n(230, 550, 0)\n(231, 230, 0)\n(231, 232, 0)\n(231, 551, 0)\n(232, 231, 0)\n(232, 233, 0)\n(232, 552, 0)\n(233, 232, 0)\n(233, 234, 0)\n(233, 553, 0)\n(234, 233, 0)\n(234, 235, 0)\n(234, 554, 0)\n(235, 234, 0)\n(235, 236, 0)\n(235, 555, 0)\n(236, 235, 0)\n(236, 237, 0)\n(236, 556, 0)\n(237, 236, 0)\n(237, 238, 0)\n(237, 557, 0)\n(238, 237, 0)\n(238, 239, 0)\n(238, 558, 0)\n(239, 238, 0)\n(239, 240, 0)\n(239, 559, 0)\n(240, 239, 0)\n(240, 241, 0)\n(240, 560, 0)\n(241, 240, 0)\n(241, 242, 0)\n(241, 561, 0)\n(242, 241, 0)\n(242, 243, 0)\n(242, 562, 0)\n(243, 242, 0)\n(243, 244, 0)\n(243, 563, 0)\n(244, 243, 0)\n(244, 245, 0)\n(244, 564, 0)\n(245, 244, 0)\n(245, 246, 0)\n(245, 565, 0)\n(246, 245, 0)\n(246, 247, 0)\n(246, 566, 0)\n(247, 246, 0)\n(247, 248, 0)\n(247, 567, 0)\n(248, 247, 0)\n(248, 249, 0)\n(248, 568, 0)\n(249, 248, 0)\n(249, 250, 0)\n(249, 569, 0)\n(250, 249, 0)\n(250, 251, 0)\n(250, 570, 0)\n(251, 250, 0)\n(251, 252, 0)\n(251, 571, 0)\n(252, 251, 0)\n(252, 253, 0)\n(252, 572, 0)\n(253, 252, 0)\n(253, 254, 0)\n(253, 573, 0)\n(254, 253, 0)\n(254, 255, 0)\n(254, 574, 0)\n(255, 254, 0)\n(255, 256, 0)\n(255, 575, 0)\n(256, 255, 0)\n(256, 257, 0)\n(256, 576, 0)\n(257, 256, 0)\n(257, 258, 0)\n(257, 577, 0)\n(258, 257, 0)\n(258, 259, 0)\n(258, 578, 0)\n(259, 258, 0)\n(259, 260, 0)\n(259, 579, 0)\n(260, 259, 0)\n(260, 261, 0)\n(260, 580, 0)\n(261, 260, 0)\n(261, 262, 0)\n(261, 581, 0)\n(262, 261, 0)\n(262, 263, 0)\n(262, 582, 0)\n(263, 262, 0)\n(263, 264, 0)\n(263, 583, 0)\n(264, 263, 0)\n(264, 265, 0)\n(264, 584, 0)\n(265, 264, 0)\n(265, 266, 0)\n(265, 585, 0)\n(266, 265, 0)\n(266, 267, 0)\n(266, 586, 0)\n(267, 266, 0)\n(267, 268, 0)\n(267, 587, 0)\n(268, 267, 0)\n(268, 269, 0)\n(268, 588, 0)\n(269, 268, 0)\n(269, 270, 0)\n(269, 589, 0)\n(270, 269, 0)\n(270, 271, 0)\n(270, 590, 0)\n(271, 270, 0)\n(271, 272, 0)\n(271, 591, 0)\n(272, 271, 0)\n(272, 273, 0)\n(272, 592, 0)\n(273, 272, 0)\n(273, 274, 0)\n(273, 593, 0)\n(274, 273, 0)\n(274, 275, 0)\n(274, 594, 0)\n(275, 274, 0)\n(275, 276, 0)\n(275, 595, 0)\n(276, 275, 0)\n(276, 277, 0)\n(276, 596, 0)\n(277, 276, 0)\n(277, 278, 0)\n(277, 597, 0)\n(278, 277, 0)\n(278, 279, 0)\n(278, 598, 0)\n(279, 278, 0)\n(279, 280, 0)\n(279, 599, 0)\n(280, 279, 0)\n(280, 281, 0)\n(280, 600, 0)\n(281, 280, 0)\n(281, 282, 0)\n(281, 601, 0)\n(282, 281, 0)\n(282, 283, 0)\n(282, 602, 0)\n(283, 282, 0)\n(283, 284, 0)\n(283, 603, 0)\n(284, 283, 0)\n(284, 285, 0)\n(284, 604, 0)\n(285, 284, 0)\n(285, 286, 0)\n(285, 605, 0)\n(286, 285, 0)\n(286, 287, 0)\n(286, 606, 0)\n(287, 286, 0)\n(287, 288, 0)\n(287, 607, 0)\n(288, 287, 0)\n(288, 289, 0)\n(288, 608, 0)\n(289, 288, 0)\n(289, 290, 0)\n(289, 609, 0)\n(290, 289, 0)\n(290, 291, 0)\n(290, 610, 0)\n(291, 290, 0)\n(291, 292, 0)\n(291, 611, 0)\n(292, 291, 0)\n(292, 293, 0)\n(292, 612, 0)\n(293, 292, 0)\n(293, 294, 0)\n(293, 613, 0)\n(294, 293, 0)\n(294, 295, 0)\n(294, 614, 0)\n(295, 294, 0)\n(295, 296, 0)\n(295, 615, 0)\n(296, 295, 0)\n(296, 297, 0)\n(296, 616, 0)\n(297, 296, 0)\n(297, 298, 0)\n(297, 617, 0)\n(298, 297, 0)\n(298, 299, 0)\n(298, 618, 0)\n(299, 298, 0)\n(299, 300, 0)\n(299, 619, 0)\n(300, 299, 0)\n(300, 301, 0)\n(300, 620, 0)\n(301, 300, 0)\n(301, 302, 0)\n(301, 621, 0)\n(302, 301, 0)\n(302, 303, 0)\n(302, 622, 0)\n(303, 302, 0)\n(303, 304, 0)\n(303, 623, 0)\n(304, 303, 0)\n(304, 305, 0)\n(304, 624, 0)\n(305, 304, 0)\n(305, 306, 0)\n(305, 625, 0)\n(306, 305, 0)\n(306, 307, 0)\n(306, 626, 0)\n(307, 306, 0)\n(307, 308, 0)\n(307, 627, 0)\n(308, 307, 0)\n(308, 309, 0)\n(308, 628, 0)\n(309, 308, 0)\n(309, 310, 0)\n(309, 629, 0)\n(310, 309, 0)\n(310, 311, 0)\n(310, 630, 0)\n(311, 310, 0)\n(311, 312, 0)\n(311, 631, 0)\n(312, 311, 0)\n(312, 313, 0)\n(312, 632, 0)\n(313, 312, 0)\n(313, 314, 0)\n(313, 633, 0)\n(314, 313, 0)\n(314, 315, 0)\n(314, 634, 0)\n(315, 314, 0)\n(315, 316, 0)\n(315, 635, 0)\n(316, 315, 0)\n(316, 317, 0)\n(316, 636, 0)\n(317, 316, 0)\n(317, 318, 0)\n(317, 637, 0)\n(318, 317, 0)\n(318, 319, 0)\n(318, 638, 0)\n(319, 318, 0)\n(319, 639, 0)\n(320, 321, 0)\n(320, 0, 0)\n(320, 640, 0)\n(321, 320, 0)\n(321, 322, 0)\n(321, 1, 0)\n(321, 641, 0)\n(322, 321, 0)\n(322, 323, 0)\n(322, 2, 0)\n(322, 642, 0)\n(323, 322, 0)\n(323, 324, 0)\n(323, 3, 0)\n(323, 643, 0)\n(324, 323, 0)\n(324, 325, 0)\n(324, 4, 0)\n(324, 644, 0)\n(325, 324, 0)\n(325, 326, 0)\n(325, 5, 0)\n(325, 645, 0)\n(326, 325, 0)\n(326, 327, 0)\n(326, 6, 0)\n(326, 646, 0)\n(327, 326, 0)\n(327, 328, 0)\n(327, 7, 0)\n(327, 647, 0)\n(328, 327, 0)\n(328, 329, 0)\n(328, 8, 0)\n(328, 648, 0)\n(329, 328, 0)\n(329, 330, 0)\n(329, 9, 0)\n(329, 649, 0)\n(330, 329, 0)\n(330, 331, 0)\n(330, 10, 0)\n(330, 650, 0)\n(331, 330, 0)\n(331, 332, 0)\n(331, 11, 0)\n(331, 651, 0)\n(332, 331, 0)\n(332, 333, 0)\n(332, 12, 0)\n(332, 652, 0)\n(333, 332, 0)\n(333, 334, 0)\n(333, 13, 0)\n(333, 653, 0)\n(334, 333, 0)\n(334, 335, 0)\n(334, 14, 0)\n(334, 654, 0)\n(335, 334, 0)\n(335, 336, 0)\n(335, 15, 0)\n(335, 655, 0)\n(336, 335, 0)\n(336, 337, 0)\n(336, 16, 0)\n(336, 656, 0)\n(337, 336, 0)\n(337, 338, 0)\n(337, 17, 0)\n(337, 657, 0)\n(338, 337, 0)\n(338, 339, 0)\n(338, 18, 0)\n(338, 658, 0)\n(339, 338, 0)\n(339, 340, 0)\n(339, 19, 0)\n(339, 659, 0)\n(340, 339, 0)\n(340, 341, 0)\n(340, 20, 0)\n(340, 660, 0)\n(341, 340, 0)\n(341, 342, 0)\n(341, 21, 0)\n(341, 661, 0)\n(342, 341, 0)\n(342, 343, 0)\n(342, 22, 0)\n(342, 662, 0)\n(343, 342, 0)\n(343, 344, 0)\n(343, 23, 0)\n(343, 663, 0)\n(344, 343, 0)\n(344, 345, 0)\n(344, 24, 0)\n(344, 664, 0)\n(345, 344, 0)\n(345, 346, 0)\n(345, 25, 0)\n(345, 665, 0)\n(346, 345, 0)\n(346, 347, 0)\n(346, 26, 0)\n(346, 666, 0)\n(347, 346, 0)\n(347, 348, 0)\n(347, 27, 0)\n(347, 667, 0)\n(348, 347, 0)\n(348, 349, 0)\n(348, 28, 0)\n(348, 668, 0)\n(349, 348, 0)\n(349, 350, 0)\n(349, 29, 0)\n(349, 669, 0)\n(350, 349, 0)\n(350, 351, 0)\n(350, 30, 0)\n(350, 670, 0)\n(351, 350, 0)\n(351, 352, 0)\n(351, 31, 0)\n(351, 671, 0)\n(352, 351, 0)\n(352, 353, 0)\n(352, 32, 0)\n(352, 672, 0)\n(353, 352, 0)\n(353, 354, 0)\n(353, 33, 0)\n(353, 673, 0)\n(354, 353, 0)\n(354, 355, 0)\n(354, 34, 0)\n(354, 674, 0)\n(355, 354, 0)\n(355, 356, 0)\n(355, 35, 0)\n(355, 675, 0)\n(356, 355, 0)\n(356, 357, 0)\n(356, 36, 0)\n(356, 676, 0)\n(357, 356, 0)\n(357, 358, 0)\n(357, 37, 0)\n(357, 677, 0)\n(358, 357, 0)\n(358, 359, 0)\n(358, 38, 0)\n(358, 678, 0)\n(359, 358, 0)\n(359, 360, 0)\n(359, 39, 0)\n(359, 679, 0)\n(360, 359, 0)\n(360, 361, 0)\n(360, 40, 0)\n(360, 680, 0)\n(361, 360, 0)\n(361, 362, 0)\n(361, 41, 0)\n(361, 681, 0)\n(362, 361, 0)\n(362, 363, 0)\n(362, 42, 0)\n(362, 682, 0)\n(363, 362, 0)\n(363, 364, 0)\n(363, 43, 0)\n(363, 683, 0)\n(364, 363, 0)\n(364, 365, 0)\n(364, 44, 0)\n(364, 684, 0)\n(365, 364, 0)\n(365, 366, 0)\n(365, 45, 0)\n(365, 685, 0)\n(366, 365, 0)\n(366, 367, 0)\n(366, 46, 0)\n(366, 686, 0)\n(367, 366, 0)\n(367, 368, 0)\n(367, 47, 0)\n(367, 687, 0)\n(368, 367, 0)\n(368, 369, 0)\n(368, 48, 0)\n(368, 688, 0)\n(369, 368, 0)\n(369, 370, 0)\n(369, 49, 0)\n(369, 689, 0)\n(370, 369, 0)\n(370, 371, 0)\n(370, 50, 0)\n(370, 690, 0)\n(371, 370, 0)\n(371, 372, 0)\n(371, 51, 0)\n(371, 691, 0)\n(372, 371, 0)\n(372, 373, 0)\n(372, 52, 0)\n(372, 692, 0)\n(373, 372, 0)\n(373, 374, 0)\n(373, 53, 0)\n(373, 693, 0)\n(374, 373, 0)\n(374, 375, 0)\n(374, 54, 0)\n(374, 694, 0)\n(375, 374, 0)\n(375, 376, 0)\n(375, 55, 0)\n(375, 695, 0)\n(376, 375, 0)\n(376, 377, 0)\n(376, 56, 0)\n(376, 696, 0)\n(377, 376, 0)\n(377, 378, 0)\n(377, 57, 0)\n(377, 697, 0)\n(378, 377, 0)\n(378, 379, 0)\n(378, 58, 0)\n(378, 698, 0)\n(379, 378, 0)\n(379, 380, 0)\n(379, 59, 0)\n(379, 699, 0)\n(380, 379, 0)\n(380, 381, 0)\n(380, 60, 0)\n(380, 700, 0)\n(381, 380, 0)\n(381, 382, 0)\n(381, 61, 0)\n(381, 701, 0)\n(382, 381, 0)\n(382, 383, 0)\n(382, 62, 0)\n(382, 702, 0)\n(383, 382, 0)\n(383, 384, 0)\n(383, 63, 0)\n(383, 703, 0)\n(384, 383, 0)\n(384, 385, 0)\n(384, 64, 0)\n(384, 704, 0)\n(385, 384, 0)\n(385, 386, 0)\n(385, 65, 0)\n(385, 705, 0)\n(386, 385, 0)\n(386, 387, 0)\n(386, 66, 0)\n(386, 706, 0)\n(387, 386, 0)\n(387, 388, 0)\n(387, 67, 0)\n(387, 707, 0)\n(388, 387, 0)\n(388, 389, 0)\n(388, 68, 0)\n(388, 708, 0)\n(389, 388, 0)\n(389, 390, 0)\n(389, 69, 0)\n(389, 709, 0)\n(390, 389, 0)\n(390, 391, 0)\n(390, 70, 0)\n(390, 710, 0)\n(391, 390, 0)\n(391, 392, 0)\n(391, 71, 0)\n(391, 711, 0)\n(392, 391, 0)\n(392, 393, 0)\n(392, 72, 0)\n(392, 712, 0)\n(393, 392, 0)\n(393, 394, 0)\n(393, 73, 0)\n(393, 713, 0)\n(394, 393, 0)\n(394, 395, 0)\n(394, 74, 0)\n(394, 714, 0)\n(395, 394, 0)\n(395, 396, 0)\n(395, 75, 0)\n(395, 715, 0)\n(396, 395, 0)\n(396, 397, 0)\n(396, 76, 0)\n(396, 716, 0)\n(397, 396, 0)\n(397, 398, 0)\n(397, 77, 0)\n(397, 717, 0)\n(398, 397, 0)\n(398, 399, 0)\n(398, 78, 0)\n(398, 718, 0)\n(399, 398, 0)\n(399, 400, 0)\n(399, 79, 0)\n(399, 719, 0)\n(400, 399, 0)\n(400, 401, 0)\n(400, 80, 0)\n(400, 720, 0)\n(401, 400, 0)\n(401, 402, 0)\n(401, 81, 0)\n(401, 721, 0)\n(402, 401, 0)\n(402, 403, 0)\n(402, 82, 0)\n(402, 722, 0)\n(403, 402, 0)\n(403, 404, 0)\n(403, 83, 0)\n(403, 723, 0)\n(404, 403, 0)\n(404, 405, 0)\n(404, 84, 0)\n(404, 724, 0)\n(405, 404, 0)\n(405, 406, 0)\n(405, 85, 0)\n(405, 725, 0)\n(406, 405, 0)\n(406, 407, 0)\n(406, 86, 0)\n(406, 726, 0)\n(407, 406, 0)\n(407, 408, 0)\n(407, 87, 0)\n(407, 727, 0)\n(408, 407, 0)\n(408, 409, 0)\n(408, 88, 0)\n(408, 728, 0)\n(409, 408, 0)\n(409, 410, 0)\n(409, 89, 0)\n(409, 729, 0)\n(410, 409, 0)\n(410, 411, 0)\n(410, 90, 0)\n(410, 730, 0)\n(411, 410, 0)\n(411, 412, 0)\n(411, 91, 0)\n(411, 731, 0)\n(412, 411, 0)\n(412, 413, 0)\n(412, 92, 0)\n(412, 732, 0)\n(413, 412, 0)\n(413, 414, 0)\n(413, 93, 0)\n(413, 733, 0)\n(414, 413, 0)\n(414, 415, 0)\n(414, 94, 0)\n(414, 734, 0)\n(415, 414, 0)\n(415, 416, 0)\n(415, 95, 0)\n(415, 735, 0)\n(416, 415, 0)\n(416, 417, 0)\n(416, 96, 0)\n(416, 736, 0)\n(417, 416, 0)\n(417, 418, 0)\n(417, 97, 0)\n(417, 737, 0)\n(418, 417, 0)\n(418, 419, 0)\n(418, 98, 0)\n(418, 738, 0)\n(419, 418, 0)\n(419, 420, 0)\n(419, 99, 0)\n(419, 739, 0)\n(420, 419, 0)\n(420, 421, 0)\n(420, 100, 0)\n(420, 740, 0)\n(421, 420, 0)\n(421, 422, 0)\n(421, 101, 0)\n(421, 741, 0)\n(422, 421, 0)\n(422, 423, 0)\n(422, 102, 0)\n(422, 742, 0)\n(423, 422, 0)\n(423, 424, 0)\n(423, 103, 0)\n(423, 743, 0)\n(424, 423, 0)\n(424, 425, 0)\n(424, 104, 0)\n(424, 744, 0)\n(425, 424, 0)\n(425, 426, 0)\n(425, 105, 0)\n(425, 745, 0)\n(426, 425, 0)\n(426, 427, 0)\n(426, 106, 0)\n(426, 746, 0)\n(427, 426, 0)\n(427, 428, 0)\n(427, 107, 0)\n(427, 747, 0)\n(428, 427, 0)\n(428, 429, 0)\n(428, 108, 0)\n(428, 748, 0)\n(429, 428, 0)\n(429, 430, 0)\n(429, 109, 0)\n(429, 749, 0)\n(430, 429, 0)\n(430, 431, 0)\n(430, 110, 0)\n(430, 750, 0)\n(431, 430, 0)\n(431, 432, 0)\n(431, 111, 0)\n(431, 751, 0)\n(432, 431, 0)\n(432, 433, 0)\n(432, 112, 0)\n(432, 752, 0)\n(433, 432, 0)\n(433, 434, 0)\n(433, 113, 0)\n(433, 753, 0)\n(434, 433, 0)\n(434, 435, 0)\n(434, 114, 0)\n(434, 754, 0)\n(435, 434, 0)\n(435, 436, 0)\n(435, 115, 0)\n(435, 755, 0)\n(436, 435, 0)\n(436, 437, 0)\n(436, 116, 0)\n(436, 756, 0)\n(437, 436, 0)\n(437, 438, 0)\n(437, 117, 0)\n(437, 757, 0)\n(438, 437, 0)\n(438, 439, 0)\n(438, 118, 0)\n(438, 758, 0)\n(439, 438, 0)\n(439, 440, 0)\n(439, 119, 0)\n(439, 759, 0)\n(440, 439, 0)\n(440, 441, 0)\n(440, 120, 0)\n(440, 760, 0)\n(441, 440, 0)\n(441, 442, 0)\n(441, 121, 0)\n(441, 761, 0)\n(442, 441, 0)\n(442, 443, 0)\n(442, 122, 0)\n(442, 762, 0)\n(443, 442, 0)\n(443, 444, 0)\n(443, 123, 0)\n(443, 763, 0)\n(444, 443, 0)\n(444, 445, 0)\n(444, 124, 0)\n(444, 764, 0)\n(445, 444, 0)\n(445, 446, 0)\n(445, 125, 0)\n(445, 765, 0)\n(446, 445, 0)\n(446, 447, 0)\n(446, 126, 0)\n(446, 766, 0)\n(447, 446, 0)\n(447, 448, 0)\n(447, 127, 0)\n(447, 767, 0)\n(448, 447, 0)\n(448, 449, 0)\n(448, 128, 0)\n(448, 768, 0)\n(449, 448, 0)\n(449, 450, 0)\n(449, 129, 0)\n(449, 769, 0)\n(450, 449, 0)\n(450, 451, 0)\n(450, 130, 0)\n(450, 770, 0)\n(451, 450, 0)\n(451, 452, 0)\n(451, 131, 0)\n(451, 771, 0)\n(452, 451, 0)\n(452, 453, 0)\n(452, 132, 0)\n(452, 772, 0)\n(453, 452, 0)\n(453, 454, 0)\n(453, 133, 0)\n(453, 773, 0)\n(454, 453, 0)\n(454, 455, 0)\n(454, 134, 0)\n(454, 774, 0)\n(455, 454, 0)\n(455, 456, 0)\n(455, 135, 0)\n(455, 775, 0)\n(456, 455, 0)\n(456, 457, 0)\n(456, 136, 0)\n(456, 776, 0)\n(457, 456, 0)\n(457, 458, 0)\n(457, 137, 0)\n(457, 777, 0)\n(458, 457, 0)\n(458, 459, 0)\n(458, 138, 0)\n(458, 778, 0)\n(459, 458, 0)\n(459, 460, 0)\n(459, 139, 0)\n(459, 779, 0)\n(460, 459, 0)\n(460, 461, 0)\n(460, 140, 0)\n(460, 780, 0)\n(461, 460, 0)\n(461, 462, 0)\n(461, 141, 0)\n(461, 781, 0)\n(462, 461, 0)\n(462, 463, 0)\n(462, 142, 0)\n(462, 782, 0)\n(463, 462, 0)\n(463, 464, 0)\n(463, 143, 0)\n(463, 783, 0)\n(464, 463, 0)\n(464, 465, 0)\n(464, 144, 0)\n(464, 784, 0)\n(465, 464, 0)\n(465, 466, 0)\n(465, 145, 0)\n(465, 785, 0)\n(466, 465, 0)\n(466, 467, 0)\n(466, 146, 0)\n(466, 786, 0)\n(467, 466, 0)\n(467, 468, 0)\n(467, 147, 0)\n(467, 787, 0)\n(468, 467, 0)\n(468, 469, 0)\n(468, 148, 0)\n(468, 788, 0)\n(469, 468, 0)\n(469, 470, 0)\n(469, 149, 0)\n(469, 789, 0)\n(470, 469, 0)\n(470, 471, 0)\n(470, 150, 0)\n(470, 790, 0)\n(471, 470, 0)\n(471, 472, 0)\n(471, 151, 0)\n(471, 791, 0)\n(472, 471, 0)\n(472, 473, 0)\n(472, 152, 0)\n(472, 792, 0)\n(473, 472, 0)\n(473, 474, 0)\n(473, 153, 0)\n(473, 793, 0)\n(474, 473, 0)\n(474, 475, 0)\n(474, 154, 0)\n(474, 794, 0)\n(475, 474, 0)\n(475, 476, 0)\n(475, 155, 0)\n(475, 795, 0)\n(476, 475, 0)\n(476, 477, 0)\n(476, 156, 0)\n(476, 796, 0)\n(477, 476, 0)\n(477, 478, 0)\n(477, 157, 0)\n(477, 797, 0)\n(478, 477, 0)\n(478, 479, 0)\n(478, 158, 0)\n(478, 798, 0)\n(479, 478, 0)\n(479, 480, 0)\n(479, 159, 0)\n(479, 799, 0)\n(480, 479, 0)\n(480, 481, 0)\n(480, 160, 0)\n(480, 800, 0)\n(481, 480, 0)\n(481, 482, 0)\n(481, 161, 0)\n(481, 801, 0)\n(482, 481, 0)\n(482, 483, 0)\n(482, 162, 0)\n(482, 802, 0)\n(483, 482, 0)\n(483, 484, 0)\n(483, 163, 0)\n(483, 803, 0)\n(484, 483, 0)\n(484, 485, 0)\n(484, 164, 0)\n(484, 804, 0)\n(485, 484, 0)\n(485, 486, 0)\n(485, 165, 0)\n(485, 805, 0)\n(486, 485, 0)\n(486, 487, 0)\n(486, 166, 0)\n(486, 806, 0)\n(487, 486, 0)\n(487, 488, 0)\n(487, 167, 0)\n(487, 807, 0)\n(488, 487, 0)\n(488, 489, 0)\n(488, 168, 0)\n(488, 808, 0)\n(489, 488, 0)\n(489, 490, 0)\n(489, 169, 0)\n(489, 809, 0)\n(490, 489, 0)\n(490, 491, 0)\n(490, 170, 0)\n(490, 810, 0)\n(491, 490, 0)\n(491, 492, 0)\n(491, 171, 0)\n(491, 811, 0)\n(492, 491, 0)\n(492, 493, 0)\n(492, 172, 0)\n(492, 812, 0)\n(493, 492, 0)\n(493, 494, 0)\n(493, 173, 0)\n(493, 813, 0)\n(494, 493, 0)\n(494, 495, 0)\n(494, 174, 0)\n(494, 814, 0)\n(495, 494, 0)\n(495, 496, 0)\n(495, 175, 0)\n(495, 815, 0)\n(496, 495, 0)\n(496, 497, 0)\n(496, 176, 0)\n(496, 816, 0)\n(497, 496, 0)\n(497, 498, 0)\n(497, 177, 0)\n(497, 817, 0)\n(498, 497, 0)\n(498, 499, 0)\n(498, 178, 0)\n(498, 818, 0)\n(499, 498, 0)\n(499, 500, 0)\n(499, 179, 0)\n(499, 819, 0)\n(500, 499, 0)\n(500, 501, 0)\n(500, 180, 0)\n(500, 820, 0)\n(501, 500, 0)\n(501, 502, 0)\n(501, 181, 0)\n(501, 821, 0)\n(502, 501, 0)\n(502, 503, 0)\n(502, 182, 0)\n(502, 822, 0)\n(503, 502, 0)\n(503, 504, 0)\n(503, 183, 0)\n(503, 823, 0)\n(504, 503, 0)\n(504, 505, 0)\n(504, 184, 0)\n(504, 824, 0)\n(505, 504, 0)\n(505, 506, 0)\n(505, 185, 0)\n(505, 825, 0)\n(506, 505, 0)\n(506, 507, 0)\n(506, 186, 0)\n(506, 826, 0)\n(507, 506, 0)\n(507, 508, 0)\n(507, 187, 0)\n(507, 827, 0)\n(508, 507, 0)\n(508, 509, 0)\n(508, 188, 0)\n(508, 828, 0)\n(509, 508, 0)\n(509, 510, 0)\n(509, 189, 0)\n(509, 829, 0)\n(510, 509, 0)\n(510, 511, 0)\n(510, 190, 0)\n(510, 830, 0)\n(511, 510, 0)\n(511, 512, 0)\n(511, 191, 0)\n(511, 831, 0)\n(512, 511, 0)\n(512, 513, 0)\n(512, 192, 0)\n(512, 832, 0)\n(513, 512, 0)\n(513, 514, 0)\n(513, 193, 0)\n(513, 833, 0)\n(514, 513, 0)\n(514, 515, 0)\n(514, 194, 0)\n(514, 834, 0)\n(515, 514, 0)\n(515, 516, 0)\n(515, 195, 0)\n(515, 835, 0)\n(516, 515, 0)\n(516, 517, 0)\n(516, 196, 0)\n(516, 836, 0)\n(517, 516, 0)\n(517, 518, 0)\n(517, 197, 0)\n(517, 837, 0)\n(518, 517, 0)\n(518, 519, 0)\n(518, 198, 0)\n(518, 838, 0)\n(519, 518, 0)\n(519, 520, 0)\n(519, 199, 0)\n(519, 839, 0)\n(520, 519, 0)\n(520, 521, 0)\n(520, 200, 0)\n(520, 840, 0)\n(521, 520, 0)\n(521, 522, 0)\n(521, 201, 0)\n(521, 841, 0)\n(522, 521, 0)\n(522, 523, 0)\n(522, 202, 0)\n(522, 842, 0)\n(523, 522, 0)\n(523, 524, 0)\n(523, 203, 0)\n(523, 843, 0)\n(524, 523, 0)\n(524, 525, 0)\n(524, 204, 0)\n(524, 844, 0)\n(525, 524, 0)\n(525, 526, 0)\n(525, 205, 0)\n(525, 845, 0)\n(526, 525, 0)\n(526, 527, 0)\n(526, 206, 0)\n(526, 846, 0)\n(527, 526, 0)\n(527, 528, 0)\n(527, 207, 0)\n(527, 847, 0)\n(528, 527, 0)\n(528, 529, 0)\n(528, 208, 0)\n(528, 848, 0)\n(529, 528, 0)\n(529, 530, 0)\n(529, 209, 0)\n(529, 849, 0)\n(530, 529, 0)\n(530, 531, 0)\n(530, 210, 0)\n(530, 850, 0)\n(531, 530, 0)\n(531, 532, 0)\n(531, 211, 0)\n(531, 851, 0)\n(532, 531, 0)\n(532, 533, 0)\n(532, 212, 0)\n(532, 852, 0)\n(533, 532, 0)\n(533, 534, 0)\n(533, 213, 0)\n(533, 853, 0)\n(534, 533, 0)\n(534, 535, 0)\n(534, 214, 0)\n(534, 854, 0)\n(535, 534, 0)\n(535, 536, 0)\n(535, 215, 0)\n(535, 855, 0)\n(536, 535, 0)\n(536, 537, 0)\n(536, 216, 0)\n(536, 856, 0)\n(537, 536, 0)\n(537, 538, 0)\n(537, 217, 0)\n(537, 857, 0)\n(538, 537, 0)\n(538, 539, 0)\n(538, 218, 0)\n(538, 858, 0)\n(539, 538, 0)\n(539, 540, 0)\n(539, 219, 0)\n(539, 859, 0)\n(540, 539, 0)\n(540, 541, 0)\n(540, 220, 0)\n(540, 860, 0)\n(541, 540, 0)\n(541, 542, 0)\n(541, 221, 0)\n(541, 861, 0)\n(542, 541, 0)\n(542, 543, 0)\n(542, 222, 0)\n(542, 862, 0)\n(543, 542, 0)\n(543, 544, 0)\n(543, 223, 0)\n(543, 863, 0)\n(544, 543, 0)\n(544, 545, 0)\n(544, 224, 0)\n(544, 864, 0)\n(545, 544, 0)\n(545, 546, 0)\n(545, 225, 0)\n(545, 865, 0)\n(546, 545, 0)\n(546, 547, 0)\n(546, 226, 0)\n(546, 866, 0)\n(547, 546, 0)\n(547, 548, 0)\n(547, 227, 0)\n(547, 867, 0)\n(548, 547, 0)\n(548, 549, 0)\n(548, 228, 0)\n(548, 868, 0)\n(549, 548, 0)\n(549, 550, 0)\n(549, 229, 0)\n(549, 869, 0)\n(550, 549, 0)\n(550, 551, 0)\n(550, 230, 0)\n(550, 870, 0)\n(551, 550, 0)\n(551, 552, 0)\n(551, 231, 0)\n(551, 871, 0)\n(552, 551, 0)\n(552, 553, 0)\n(552, 232, 0)\n(552, 872, 0)\n(553, 552, 0)\n(553, 554, 0)\n(553, 233, 0)\n(553, 873, 0)\n(554, 553, 0)\n(554, 555, 0)\n(554, 234, 0)\n(554, 874, 0)\n(555, 554, 0)\n(555, 556, 0)\n(555, 235, 0)\n(555, 875, 0)\n(556, 555, 0)\n(556, 557, 0)\n(556, 236, 0)\n(556, 876, 0)\n(557, 556, 0)\n(557, 558, 0)\n(557, 237, 0)\n(557, 877, 0)\n(558, 557, 0)\n(558, 559, 0)\n(558, 238, 0)\n(558, 878, 0)\n(559, 558, 0)\n(559, 560, 0)\n(559, 239, 0)\n(559, 879, 0)\n(560, 559, 0)\n(560, 561, 0)\n(560, 240, 0)\n(560, 880, 0)\n(561, 560, 0)\n(561, 562, 0)\n(561, 241, 0)\n(561, 881, 0)\n(562, 561, 0)\n(562, 563, 0)\n(562, 242, 0)\n(562, 882, 0)\n(563, 562, 0)\n(563, 564, 0)\n(563, 243, 0)\n(563, 883, 0)\n(564, 563, 0)\n(564, 565, 0)\n(564, 244, 0)\n(564, 884, 0)\n(565, 564, 0)\n(565, 566, 0)\n(565, 245, 0)\n(565, 885, 0)\n(566, 565, 0)\n(566, 567, 0)\n(566, 246, 0)\n(566, 886, 0)\n(567, 566, 0)\n(567, 568, 0)\n(567, 247, 0)\n(567, 887, 0)\n(568, 567, 0)\n(568, 569, 0)\n(568, 248, 0)\n(568, 888, 0)\n(569, 568, 0)\n(569, 570, 0)\n(569, 249, 0)\n(569, 889, 0)\n(570, 569, 0)\n(570, 571, 0)\n(570, 250, 0)\n(570, 890, 0)\n(571, 570, 0)\n(571, 572, 0)\n(571, 251, 0)\n(571, 891, 0)\n(572, 571, 0)\n(572, 573, 0)\n(572, 252, 0)\n(572, 892, 0)\n(573, 572, 0)\n(573, 574, 0)\n(573, 253, 0)\n(573, 893, 0)\n(574, 573, 0)\n(574, 575, 0)\n(574, 254, 0)\n(574, 894, 0)\n(575, 574, 0)\n(575, 576, 0)\n(575, 255, 0)\n(575, 895, 0)\n(576, 575, 0)\n(576, 577, 0)\n(576, 256, 0)\n(576, 896, 0)\n(577, 576, 0)\n(577, 578, 0)\n(577, 257, 0)\n(577, 897, 0)\n(578, 577, 0)\n(578, 579, 0)\n(578, 258, 0)\n(578, 898, 0)\n(579, 578, 0)\n(579, 580, 0)\n(579, 259, 0)\n(579, 899, 0)\n(580, 579, 0)\n(580, 581, 0)\n(580, 260, 0)\n(580, 900, 0)\n(581, 580, 0)\n(581, 582, 0)\n(581, 261, 0)\n(581, 901, 0)\n(582, 581, 0)\n(582, 583, 0)\n(582, 262, 0)\n(582, 902, 0)\n(583, 582, 0)\n(583, 584, 0)\n(583, 263, 0)\n(583, 903, 0)\n(584, 583, 0)\n(584, 585, 0)\n(584, 264, 0)\n(584, 904, 0)\n(585, 584, 0)\n(585, 586, 0)\n(585, 265, 0)\n(585, 905, 0)\n(586, 585, 0)\n(586, 587, 0)\n(586, 266, 0)\n(586, 906, 0)\n(587, 586, 0)\n(587, 588, 0)\n(587, 267, 0)\n(587, 907, 0)\n(588, 587, 0)\n(588, 589, 0)\n(588, 268, 0)\n(588, 908, 0)\n(589, 588, 0)\n(589, 590, 0)\n(589, 269, 0)\n(589, 909, 0)\n(590, 589, 0)\n(590, 591, 0)\n(590, 270, 0)\n(590, 910, 0)\n(591, 590, 0)\n(591, 592, 0)\n(591, 271, 0)\n(591, 911, 0)\n(592, 591, 0)\n(592, 593, 0)\n(592, 272, 0)\n(592, 912, 0)\n(593, 592, 0)\n(593, 594, 0)\n(593, 273, 0)\n(593, 913, 0)\n(594, 593, 0)\n(594, 595, 0)\n(594, 274, 0)\n(594, 914, 0)\n(595, 594, 0)\n(595, 596, 0)\n(595, 275, 0)\n(595, 915, 0)\n(596, 595, 0)\n(596, 597, 0)\n(596, 276, 0)\n(596, 916, 0)\n(597, 596, 0)\n(597, 598, 0)\n(597, 277, 0)\n(597, 917, 0)\n(598, 597, 0)\n(598, 599, 0)\n(598, 278, 0)\n(598, 918, 0)\n(599, 598, 0)\n(599, 600, 0)\n(599, 279, 0)\n(599, 919, 0)\n(600, 599, 0)\n(600, 601, 0)\n(600, 280, 0)\n(600, 920, 0)\n(601, 600, 0)\n(601, 602, 0)\n(601, 281, 0)\n(601, 921, 0)\n(602, 601, 0)\n(602, 603, 0)\n(602, 282, 0)\n(602, 922, 0)\n(603, 602, 0)\n(603, 604, 0)\n(603, 283, 0)\n(603, 923, 0)\n(604, 603, 0)\n(604, 605, 0)\n(604, 284, 0)\n(604, 924, 0)\n(605, 604, 0)\n(605, 606, 0)\n(605, 285, 0)\n(605, 925, 0)\n(606, 605, 0)\n(606, 607, 0)\n(606, 286, 0)\n(606, 926, 0)\n(607, 606, 0)\n(607, 608, 0)\n(607, 287, 0)\n(607, 927, 0)\n(608, 607, 0)\n(608, 609, 0)\n(608, 288, 0)\n(608, 928, 0)\n(609, 608, 0)\n(609, 610, 0)\n(609, 289, 0)\n(609, 929, 0)\n(610, 609, 0)\n(610, 611, 0)\n(610, 290, 0)\n(610, 930, 0)\n(611, 610, 0)\n(611, 612, 0)\n(611, 291, 0)\n(611, 931, 0)\n(612, 611, 0)\n(612, 613, 0)\n(612, 292, 0)\n(612, 932, 0)\n(613, 612, 0)\n(613, 614, 0)\n(613, 293, 0)\n(613, 933, 0)\n(614, 613, 0)\n(614, 615, 0)\n(614, 294, 0)\n(614, 934, 0)\n(615, 614, 0)\n(615, 616, 0)\n(615, 295, 0)\n(615, 935, 0)\n(616, 615, 0)\n(616, 617, 0)\n(616, 296, 0)\n(616, 936, 0)\n(617, 616, 0)\n(617, 618, 0)\n(617, 297, 0)\n(617, 937, 0)\n(618, 617, 0)\n(618, 619, 0)\n(618, 298, 0)\n(618, 938, 0)\n(619, 618, 0)\n(619, 620, 0)\n(619, 299, 0)\n(619, 939, 0)\n(620, 619, 0)\n(620, 621, 0)\n(620, 300, 0)\n(620, 940, 0)\n(621, 620, 0)\n(621, 622, 0)\n(621, 301, 0)\n(621, 941, 0)\n(622, 621, 0)\n(622, 623, 0)\n(622, 302, 0)\n(622, 942, 0)\n(623, 622, 0)\n(623, 624, 0)\n(623, 303, 0)\n(623, 943, 0)\n(624, 623, 0)\n(624, 625, 0)\n(624, 304, 0)\n(624, 944, 0)\n(625, 624, 0)\n(625, 626, 0)\n(625, 305, 0)\n(625, 945, 0)\n(626, 625, 0)\n(626, 627, 0)\n(626, 306, 0)\n(626, 946, 0)\n(627, 626, 0)\n(627, 628, 0)\n(627, 307, 0)\n(627, 947, 0)\n(628, 627, 0)\n(628, 629, 0)\n(628, 308, 0)\n(628, 948, 0)\n(629, 628, 0)\n(629, 630, 0)\n(629, 309, 0)\n(629, 949, 0)\n(630, 629, 0)\n(630, 631, 0)\n(630, 310, 0)\n(630, 950, 0)\n(631, 630, 0)\n(631, 632, 0)\n(631, 311, 0)\n(631, 951, 0)\n(632, 631, 0)\n(632, 633, 0)\n(632, 312, 0)\n(632, 952, 0)\n(633, 632, 0)\n(633, 634, 0)\n(633, 313, 0)\n(633, 953, 0)\n(634, 633, 0)\n(634, 635, 0)\n(634, 314, 0)\n(634, 954, 0)\n(635, 634, 0)\n(635, 636, 0)\n(635, 315, 0)\n(635, 955, 0)\n(636, 635, 0)\n(636, 637, 0)\n(636, 316, 0)\n(636, 956, 0)\n(637, 636, 0)\n(637, 638, 0)\n(637, 317, 0)\n(637, 957, 0)\n(638, 637, 0)\n(638, 639, 0)\n(638, 318, 0)\n(638, 958, 0)\n(639, 638, 0)\n(639, 319, 0)\n(639, 959, 0)\n(640, 641, 0)\n(640, 320, 0)\n(640, 960, 0)\n(641, 640, 0)\n(641, 642, 0)\n(641, 321, 0)\n(641, 961, 0)\n(642, 641, 0)\n(642, 643, 0)\n(642, 322, 0)\n(642, 962, 0)\n(643, 642, 0)\n(643, 644, 0)\n(643, 323, 0)\n(643, 963, 0)\n(644, 643, 0)\n(644, 645, 0)\n(644, 324, 0)\n(644, 964, 0)\n(645, 644, 0)\n(645, 646, 0)\n(645, 325, 0)\n(645, 965, 0)\n(646, 645, 0)\n(646, 647, 0)\n(646, 326, 0)\n(646, 966, 0)\n(647, 646, 0)\n(647, 648, 0)\n(647, 327, 0)\n(647, 967, 0)\n(648, 647, 0)\n(648, 649, 0)\n(648, 328, 0)\n(648, 968, 0)\n(649, 648, 0)\n(649, 650, 0)\n(649, 329, 0)\n(649, 969, 0)\n(650, 649, 0)\n(650, 651, 0)\n(650, 330, 0)\n(650, 970, 0)\n(651, 650, 0)\n(651, 652, 0)\n(651, 331, 0)\n(651, 971, 0)\n(652, 651, 0)\n(652, 653, 0)\n(652, 332, 0)\n(652, 972, 0)\n(653, 652, 0)\n(653, 654, 0)\n(653, 333, 0)\n(653, 973, 0)\n(654, 653, 0)\n(654, 655, 0)\n(654, 334, 0)\n(654, 974, 0)\n(655, 654, 0)\n(655, 656, 0)\n(655, 335, 0)\n(655, 975, 0)\n(656, 655, 0)\n(656, 657, 0)\n(656, 336, 0)\n(656, 976, 0)\n(657, 656, 0)\n(657, 658, 0)\n(657, 337, 0)\n(657, 977, 0)\n(658, 657, 0)\n(658, 659, 0)\n(658, 338, 0)\n(658, 978, 0)\n(659, 658, 0)\n(659, 660, 0)\n(659, 339, 0)\n(659, 979, 0)\n(660, 659, 0)\n(660, 661, 0)\n(660, 340, 0)\n(660, 980, 0)\n(661, 660, 0)\n(661, 662, 0)\n(661, 341, 0)\n(661, 981, 0)\n(662, 661, 0)\n(662, 663, 0)\n(662, 342, 0)\n(662, 982, 0)\n(663, 662, 0)\n(663, 664, 0)\n(663, 343, 0)\n(663, 983, 0)\n(664, 663, 0)\n(664, 665, 0)\n(664, 344, 0)\n(664, 984, 0)\n(665, 664, 0)\n(665, 666, 0)\n(665, 345, 0)\n(665, 985, 0)\n(666, 665, 0)\n(666, 667, 0)\n(666, 346, 0)\n(666, 986, 0)\n(667, 666, 0)\n(667, 668, 0)\n(667, 347, 0)\n(667, 987, 0)\n(668, 667, 0)\n(668, 669, 0)\n(668, 348, 0)\n(668, 988, 0)\n(669, 668, 0)\n(669, 670, 0)\n(669, 349, 0)\n(669, 989, 0)\n(670, 669, 0)\n(670, 671, 0)\n(670, 350, 0)\n(670, 990, 0)\n(671, 670, 0)\n(671, 672, 0)\n(671, 351, 0)\n(671, 991, 0)\n(672, 671, 0)\n(672, 673, 0)\n(672, 352, 0)\n(672, 992, 0)\n(673, 672, 0)\n(673, 674, 0)\n(673, 353, 0)\n(673, 993, 0)\n(674, 673, 0)\n(674, 675, 0)\n(674, 354, 0)\n(674, 994, 0)\n(675, 674, 0)\n(675, 676, 0)\n(675, 355, 0)\n(675, 995, 0)\n(676, 675, 0)\n(676, 677, 0)\n(676, 356, 0)\n(676, 996, 0)\n(677, 676, 0)\n(677, 678, 0)\n(677, 357, 0)\n(677, 997, 0)\n(678, 677, 0)\n(678, 679, 0)\n(678, 358, 0)\n(678, 998, 0)\n(679, 678, 0)\n(679, 680, 0)\n(679, 359, 0)\n(679, 999, 0)\n(680, 679, 0)\n(680, 681, 0)\n(680, 360, 0)\n(680, 1000, 0)\n(681, 680, 0)\n(681, 682, 0)\n(681, 361, 0)\n(681, 1001, 0)\n(682, 681, 0)\n(682, 683, 0)\n(682, 362, 0)\n(682, 1002, 0)\n(683, 682, 0)\n(683, 684, 0)\n(683, 363, 0)\n(683, 1003, 0)\n(684, 683, 0)\n(684, 685, 0)\n(684, 364, 0)\n(684, 1004, 0)\n(685, 684, 0)\n(685, 686, 0)\n(685, 365, 0)\n(685, 1005, 0)\n(686, 685, 0)\n(686, 687, 0)\n(686, 366, 0)\n(686, 1006, 0)\n(687, 686, 0)\n(687, 688, 0)\n(687, 367, 0)\n(687, 1007, 0)\n(688, 687, 0)\n(688, 689, 0)\n(688, 368, 0)\n(688, 1008, 0)\n(689, 688, 0)\n(689, 690, 0)\n(689, 369, 0)\n(689, 1009, 0)\n(690, 689, 0)\n(690, 691, 0)\n(690, 370, 0)\n(690, 1010, 0)\n(691, 690, 0)\n(691, 692, 0)\n(691, 371, 0)\n(691, 1011, 0)\n(692, 691, 0)\n(692, 693, 0)\n(692, 372, 0)\n(692, 1012, 0)\n(693, 692, 0)\n(693, 694, 0)\n(693, 373, 0)\n(693, 1013, 0)\n(694, 693, 0)\n(694, 695, 0)\n(694, 374, 0)\n(694, 1014, 0)\n(695, 694, 0)\n(695, 696, 0)\n(695, 375, 0)\n(695, 1015, 0)\n(696, 695, 0)\n(696, 697, 0)\n(696, 376, 0)\n(696, 1016, 0)\n(697, 696, 0)\n(697, 698, 0)\n(697, 377, 0)\n(697, 1017, 0)\n(698, 697, 0)\n(698, 699, 0)\n(698, 378, 0)\n(698, 1018, 0)\n(699, 698, 0)\n(699, 700, 0)\n(699, 379, 0)\n(699, 1019, 0)\n(700, 699, 0)\n(700, 701, 0)\n(700, 380, 0)\n(700, 1020, 0)\n(701, 700, 0)\n(701, 702, 0)\n(701, 381, 0)\n(701, 1021, 0)\n(702, 701, 0)\n(702, 703, 0)\n(702, 382, 0)\n(702, 1022, 0)\n(703, 702, 0)\n(703, 704, 0)\n(703, 383, 0)\n(703, 1023, 0)\n(704, 703, 0)\n(704, 705, 0)\n(704, 384, 0)\n(704, 1024, 0)\n(705, 704, 0)\n(705, 706, 0)\n(705, 385, 0)\n(705, 1025, 0)\n(706, 705, 0)\n(706, 707, 0)\n(706, 386, 0)\n(706, 1026, 0)\n(707, 706, 0)\n(707, 708, 0)\n(707, 387, 0)\n(707, 1027, 0)\n(708, 707, 0)\n(708, 709, 0)\n(708, 388, 0)\n(708, 1028, 0)\n(709, 708, 0)\n(709, 710, 0)\n(709, 389, 0)\n(709, 1029, 0)\n(710, 709, 0)\n(710, 711, 0)\n(710, 390, 0)\n(710, 1030, 0)\n(711, 710, 0)\n(711, 712, 0)\n(711, 391, 0)\n(711, 1031, 0)\n(712, 711, 0)\n(712, 713, 0)\n(712, 392, 0)\n(712, 1032, 0)\n(713, 712, 0)\n(713, 714, 0)\n(713, 393, 0)\n(713, 1033, 0)\n(714, 713, 0)\n(714, 715, 0)\n(714, 394, 0)\n(714, 1034, 0)\n(715, 714, 0)\n(715, 716, 0)\n(715, 395, 0)\n(715, 1035, 0)\n(716, 715, 0)\n(716, 717, 0)\n(716, 396, 0)\n(716, 1036, 0)\n(717, 716, 0)\n(717, 718, 0)\n(717, 397, 0)\n(717, 1037, 0)\n(718, 717, 0)\n(718, 719, 0)\n(718, 398, 0)\n(718, 1038, 0)\n(719, 718, 0)\n(719, 720, 0)\n(719, 399, 0)\n(719, 1039, 0)\n(720, 719, 0)\n(720, 721, 0)\n(720, 400, 0)\n(720, 1040, 0)\n(721, 720, 0)\n(721, 722, 0)\n(721, 401, 0)\n(721, 1041, 0)\n(722, 721, 0)\n(722, 723, 0)\n(722, 402, 0)\n(722, 1042, 0)\n(723, 722, 0)\n(723, 724, 0)\n(723, 403, 0)\n(723, 1043, 0)\n(724, 723, 0)\n(724, 725, 0)\n(724, 404, 0)\n(724, 1044, 0)\n(725, 724, 0)\n(725, 726, 0)\n(725, 405, 0)\n(725, 1045, 0)\n(726, 725, 0)\n(726, 727, 0)\n(726, 406, 0)\n(726, 1046, 0)\n(727, 726, 0)\n(727, 728, 0)\n(727, 407, 0)\n(727, 1047, 0)\n(728, 727, 0)\n(728, 729, 0)\n(728, 408, 0)\n(728, 1048, 0)\n(729, 728, 0)\n(729, 730, 0)\n(729, 409, 0)\n(729, 1049, 0)\n(730, 729, 0)\n(730, 731, 0)\n(730, 410, 0)\n(730, 1050, 0)\n(731, 730, 0)\n(731, 732, 0)\n(731, 411, 0)\n(731, 1051, 0)\n(732, 731, 0)\n(732, 733, 0)\n(732, 412, 0)\n(732, 1052, 0)\n(733, 732, 0)\n(733, 734, 0)\n(733, 413, 0)\n(733, 1053, 0)\n(734, 733, 0)\n(734, 735, 0)\n(734, 414, 0)\n(734, 1054, 0)\n(735, 734, 0)\n(735, 736, 0)\n(735, 415, 0)\n(735, 1055, 0)\n(736, 735, 0)\n(736, 737, 0)\n(736, 416, 0)\n(736, 1056, 0)\n(737, 736, 0)\n(737, 738, 0)\n(737, 417, 0)\n(737, 1057, 0)\n(738, 737, 0)\n(738, 739, 0)\n(738, 418, 0)\n(738, 1058, 0)\n(739, 738, 0)\n(739, 740, 0)\n(739, 419, 0)\n(739, 1059, 0)\n(740, 739, 0)\n(740, 741, 0)\n(740, 420, 0)\n(740, 1060, 0)\n(741, 740, 0)\n(741, 742, 0)\n(741, 421, 0)\n(741, 1061, 0)\n(742, 741, 0)\n(742, 743, 0)\n(742, 422, 0)\n(742, 1062, 0)\n(743, 742, 0)\n(743, 744, 0)\n(743, 423, 0)\n(743, 1063, 0)\n(744, 743, 0)\n(744, 745, 0)\n(744, 424, 0)\n(744, 1064, 0)\n(745, 744, 0)\n(745, 746, 0)\n(745, 425, 0)\n(745, 1065, 0)\n(746, 745, 0)\n(746, 747, 0)\n(746, 426, 0)\n(746, 1066, 0)\n(747, 746, 0)\n(747, 748, 0)\n(747, 427, 0)\n(747, 1067, 0)\n(748, 747, 0)\n(748, 749, 0)\n(748, 428, 0)\n(748, 1068, 0)\n(749, 748, 0)\n(749, 750, 0)\n(749, 429, 0)\n(749, 1069, 0)\n(750, 749, 0)\n(750, 751, 0)\n(750, 430, 0)\n(750, 1070, 0)\n(751, 750, 0)\n(751, 752, 0)\n(751, 431, 0)\n(751, 1071, 0)\n(752, 751, 0)\n(752, 753, 0)\n(752, 432, 0)\n(752, 1072, 0)\n(753, 752, 0)\n(753, 754, 0)\n(753, 433, 0)\n(753, 1073, 0)\n(754, 753, 0)\n(754, 755, 0)\n(754, 434, 0)\n(754, 1074, 0)\n(755, 754, 0)\n(755, 756, 0)\n(755, 435, 0)\n(755, 1075, 0)\n(756, 755, 0)\n(756, 757, 0)\n(756, 436, 0)\n(756, 1076, 0)\n(757, 756, 0)\n(757, 758, 0)\n(757, 437, 0)\n(757, 1077, 0)\n(758, 757, 0)\n(758, 759, 0)\n(758, 438, 0)\n(758, 1078, 0)\n(759, 758, 0)\n(759, 760, 0)\n(759, 439, 0)\n(759, 1079, 0)\n(760, 759, 0)\n(760, 761, 0)\n(760, 440, 0)\n(760, 1080, 0)\n(761, 760, 0)\n(761, 762, 0)\n(761, 441, 0)\n(761, 1081, 0)\n(762, 761, 0)\n(762, 763, 0)\n(762, 442, 0)\n(762, 1082, 0)\n(763, 762, 0)\n(763, 764, 0)\n(763, 443, 0)\n(763, 1083, 0)\n(764, 763, 0)\n(764, 765, 0)\n(764, 444, 0)\n(764, 1084, 0)\n(765, 764, 0)\n(765, 766, 0)\n(765, 445, 0)\n(765, 1085, 0)\n(766, 765, 0)\n(766, 767, 0)\n(766, 446, 0)\n(766, 1086, 0)\n(767, 766, 0)\n(767, 768, 0)\n(767, 447, 0)\n(767, 1087, 0)\n(768, 767, 0)\n(768, 769, 0)\n(768, 448, 0)\n(768, 1088, 0)\n(769, 768, 0)\n(769, 770, 0)\n(769, 449, 0)\n(769, 1089, 0)\n(770, 769, 0)\n(770, 771, 0)\n(770, 450, 0)\n(770, 1090, 0)\n(771, 770, 0)\n(771, 772, 0)\n(771, 451, 0)\n(771, 1091, 0)\n(772, 771, 0)\n(772, 773, 0)\n(772, 452, 0)\n(772, 1092, 0)\n(773, 772, 0)\n(773, 774, 0)\n(773, 453, 0)\n(773, 1093, 0)\n(774, 773, 0)\n(774, 775, 0)\n(774, 454, 0)\n(774, 1094, 0)\n(775, 774, 0)\n(775, 776, 0)\n(775, 455, 0)\n(775, 1095, 0)\n(776, 775, 0)\n(776, 777, 0)\n(776, 456, 0)\n(776, 1096, 0)\n(777, 776, 0)\n(777, 778, 0)\n(777, 457, 0)\n(777, 1097, 0)\n(778, 777, 0)\n(778, 779, 0)\n(778, 458, 0)\n(778, 1098, 0)\n(779, 778, 0)\n(779, 780, 0)\n(779, 459, 0)\n(779, 1099, 0)\n(780, 779, 0)\n(780, 781, 0)\n(780, 460, 0)\n(780, 1100, 0)\n(781, 780, 0)\n(781, 782, 0)\n(781, 461, 0)\n(781, 1101, 0)\n(782, 781, 0)\n(782, 783, 0)\n(782, 462, 0)\n(782, 1102, 0)\n(783, 782, 0)\n(783, 784, 0)\n(783, 463, 0)\n(783, 1103, 0)\n(784, 783, 0)\n(784, 785, 0)\n(784, 464, 0)\n(784, 1104, 0)\n(785, 784, 0)\n(785, 786, 0)\n(785, 465, 0)\n(785, 1105, 0)\n(786, 785, 0)\n(786, 787, 0)\n(786, 466, 0)\n(786, 1106, 0)\n(787, 786, 0)\n(787, 788, 0)\n(787, 467, 0)\n(787, 1107, 0)\n(788, 787, 0)\n(788, 789, 0)\n(788, 468, 0)\n(788, 1108, 0)\n(789, 788, 0)\n(789, 790, 0)\n(789, 469, 0)\n(789, 1109, 0)\n(790, 789, 0)\n(790, 791, 0)\n(790, 470, 0)\n(790, 1110, 0)\n(791, 790, 0)\n(791, 792, 0)\n(791, 471, 0)\n(791, 1111, 0)\n(792, 791, 0)\n(792, 793, 0)\n(792, 472, 0)\n(792, 1112, 0)\n(793, 792, 0)\n(793, 794, 0)\n(793, 473, 0)\n(793, 1113, 0)\n(794, 793, 0)\n(794, 795, 0)\n(794, 474, 0)\n(794, 1114, 0)\n(795, 794, 0)\n(795, 796, 0)\n(795, 475, 0)\n(795, 1115, 0)\n(796, 795, 0)\n(796, 797, 0)\n(796, 476, 0)\n(796, 1116, 0)\n(797, 796, 0)\n(797, 798, 0)\n(797, 477, 0)\n(797, 1117, 0)\n(798, 797, 0)\n(798, 799, 0)\n(798, 478, 0)\n(798, 1118, 0)\n(799, 798, 0)\n(799, 800, 0)\n(799, 479, 0)\n(799, 1119, 0)\n(800, 799, 0)\n(800, 801, 0)\n(800, 480, 0)\n(800, 1120, 0)\n(801, 800, 0)\n(801, 802, 0)\n(801, 481, 0)\n(801, 1121, 0)\n(802, 801, 0)\n(802, 803, 0)\n(802, 482, 0)\n(802, 1122, 0)\n(803, 802, 0)\n(803, 804, 0)\n(803, 483, 0)\n(803, 1123, 0)\n(804, 803, 0)\n(804, 805, 0)\n(804, 484, 0)\n(804, 1124, 0)\n(805, 804, 0)\n(805, 806, 0)\n(805, 485, 0)\n(805, 1125, 0)\n(806, 805, 0)\n(806, 807, 0)\n(806, 486, 0)\n(806, 1126, 0)\n(807, 806, 0)\n(807, 808, 0)\n(807, 487, 0)\n(807, 1127, 0)\n(808, 807, 0)\n(808, 809, 0)\n(808, 488, 0)\n(808, 1128, 0)\n(809, 808, 0)\n(809, 810, 0)\n(809, 489, 0)\n(809, 1129, 0)\n(810, 809, 0)\n(810, 811, 0)\n(810, 490, 0)\n(810, 1130, 0)\n(811, 810, 0)\n(811, 812, 0)\n(811, 491, 0)\n(811, 1131, 0)\n(812, 811, 0)\n(812, 813, 0)\n(812, 492, 0)\n(812, 1132, 0)\n(813, 812, 0)\n(813, 814, 0)\n(813, 493, 0)\n(813, 1133, 0)\n(814, 813, 0)\n(814, 815, 0)\n(814, 494, 0)\n(814, 1134, 0)\n(815, 814, 0)\n(815, 816, 0)\n(815, 495, 0)\n(815, 1135, 0)\n(816, 815, 0)\n(816, 817, 0)\n(816, 496, 0)\n(816, 1136, 0)\n(817, 816, 0)\n(817, 818, 0)\n(817, 497, 0)\n(817, 1137, 0)\n(818, 817, 0)\n(818, 819, 0)\n(818, 498, 0)\n(818, 1138, 0)\n(819, 818, 0)\n(819, 820, 0)\n(819, 499, 0)\n(819, 1139, 0)\n(820, 819, 0)\n(820, 821, 0)\n(820, 500, 0)\n(820, 1140, 0)\n(821, 820, 0)\n(821, 822, 0)\n(821, 501, 0)\n(821, 1141, 0)\n(822, 821, 0)\n(822, 823, 0)\n(822, 502, 0)\n(822, 1142, 0)\n(823, 822, 0)\n(823, 824, 0)\n(823, 503, 0)\n(823, 1143, 0)\n(824, 823, 0)\n(824, 825, 0)\n(824, 504, 0)\n(824, 1144, 0)\n(825, 824, 0)\n(825, 826, 0)\n(825, 505, 0)\n(825, 1145, 0)\n(826, 825, 0)\n(826, 827, 0)\n(826, 506, 0)\n(826, 1146, 0)\n(827, 826, 0)\n(827, 828, 0)\n(827, 507, 0)\n(827, 1147, 0)\n(828, 827, 0)\n(828, 829, 0)\n(828, 508, 0)\n(828, 1148, 0)\n(829, 828, 0)\n(829, 830, 0)\n(829, 509, 0)\n(829, 1149, 0)\n(830, 829, 0)\n(830, 831, 0)\n(830, 510, 0)\n(830, 1150, 0)\n(831, 830, 0)\n(831, 832, 0)\n(831, 511, 0)\n(831, 1151, 0)\n(832, 831, 0)\n(832, 833, 0)\n(832, 512, 0)\n(832, 1152, 0)\n(833, 832, 0)\n(833, 834, 0)\n(833, 513, 0)\n(833, 1153, 0)\n(834, 833, 0)\n(834, 835, 0)\n(834, 514, 0)\n(834, 1154, 0)\n(835, 834, 0)\n(835, 836, 0)\n(835, 515, 0)\n(835, 1155, 0)\n(836, 835, 0)\n(836, 837, 0)\n(836, 516, 0)\n(836, 1156, 0)\n(837, 836, 0)\n(837, 838, 0)\n(837, 517, 0)\n(837, 1157, 0)\n(838, 837, 0)\n(838, 839, 0)\n(838, 518, 0)\n(838, 1158, 0)\n(839, 838, 0)\n(839, 840, 0)\n(839, 519, 0)\n(839, 1159, 0)\n(840, 839, 0)\n(840, 841, 0)\n(840, 520, 0)\n(840, 1160, 0)\n(841, 840, 0)\n(841, 842, 0)\n(841, 521, 0)\n(841, 1161, 0)\n(842, 841, 0)\n(842, 843, 0)\n(842, 522, 0)\n(842, 1162, 0)\n(843, 842, 0)\n(843, 844, 0)\n(843, 523, 0)\n(843, 1163, 0)\n(844, 843, 0)\n(844, 845, 0)\n(844, 524, 0)\n(844, 1164, 0)\n(845, 844, 0)\n(845, 846, 0)\n(845, 525, 0)\n(845, 1165, 0)\n(846, 845, 0)\n(846, 847, 0)\n(846, 526, 0)\n(846, 1166, 0)\n(847, 846, 0)\n(847, 848, 0)\n(847, 527, 0)\n(847, 1167, 0)\n(848, 847, 0)\n(848, 849, 0)\n(848, 528, 0)\n(848, 1168, 0)\n(849, 848, 0)\n(849, 850, 0)\n(849, 529, 0)\n(849, 1169, 0)\n(850, 849, 0)\n(850, 851, 0)\n(850, 530, 0)\n(850, 1170, 0)\n(851, 850, 0)\n(851, 852, 0)\n(851, 531, 0)\n(851, 1171, 0)\n(852, 851, 0)\n(852, 853, 0)\n(852, 532, 0)\n(852, 1172, 0)\n(853, 852, 0)\n(853, 854, 0)\n(853, 533, 0)\n(853, 1173, 0)\n(854, 853, 0)\n(854, 855, 0)\n(854, 534, 0)\n(854, 1174, 0)\n(855, 854, 0)\n(855, 856, 0)\n(855, 535, 0)\n(855, 1175, 0)\n(856, 855, 0)\n(856, 857, 0)\n(856, 536, 0)\n(856, 1176, 0)\n(857, 856, 0)\n(857, 858, 0)\n(857, 537, 0)\n(857, 1177, 0)\n(858, 857, 0)\n(858, 859, 0)\n(858, 538, 0)\n(858, 1178, 0)\n(859, 858, 0)\n(859, 860, 0)\n(859, 539, 0)\n(859, 1179, 0)\n(860, 859, 0)\n(860, 861, 0)\n(860, 540, 0)\n(860, 1180, 0)\n(861, 860, 0)\n(861, 862, 0)\n(861, 541, 0)\n(861, 1181, 0)\n(862, 861, 0)\n(862, 863, 0)\n(862, 542, 0)\n(862, 1182, 0)\n(863, 862, 0)\n(863, 864, 0)\n(863, 543, 0)\n(863, 1183, 0)\n(864, 863, 0)\n(864, 865, 0)\n(864, 544, 0)\n(864, 1184, 0)\n(865, 864, 0)\n(865, 866, 0)\n(865, 545, 0)\n(865, 1185, 0)\n(866, 865, 0)\n(866, 867, 0)\n(866, 546, 0)\n(866, 1186, 0)\n(867, 866, 0)\n(867, 868, 0)\n(867, 547, 0)\n(867, 1187, 0)\n(868, 867, 0)\n(868, 869, 0)\n(868, 548, 0)\n(868, 1188, 0)\n(869, 868, 0)\n(869, 870, 0)\n(869, 549, 0)\n(869, 1189, 0)\n(870, 869, 0)\n(870, 871, 0)\n(870, 550, 0)\n(870, 1190, 0)\n(871, 870, 0)\n(871, 872, 0)\n(871, 551, 0)\n(871, 1191, 0)\n(872, 871, 0)\n(872, 873, 0)\n(872, 552, 0)\n(872, 1192, 0)\n(873, 872, 0)\n(873, 874, 0)\n(873, 553, 0)\n(873, 1193, 0)\n(874, 873, 0)\n(874, 875, 0)\n(874, 554, 0)\n(874, 1194, 0)\n(875, 874, 0)\n(875, 876, 0)\n(875, 555, 0)\n(875, 1195, 0)\n(876, 875, 0)\n(876, 877, 0)\n(876, 556, 0)\n(876, 1196, 0)\n(877, 876, 0)\n(877, 878, 0)\n(877, 557, 0)\n(877, 1197, 0)\n(878, 877, 0)\n(878, 879, 0)\n(878, 558, 0)\n(878, 1198, 0)\n(879, 878, 0)\n(879, 880, 0)\n(879, 559, 0)\n(879, 1199, 0)\n(880, 879, 0)\n(880, 881, 0)\n(880, 560, 0)\n(880, 1200, 0)\n(881, 880, 0)\n(881, 882, 0)\n(881, 561, 0)\n(881, 1201, 0)\n(882, 881, 0)\n(882, 883, 0)\n(882, 562, 0)\n(882, 1202, 0)\n(883, 882, 0)\n(883, 884, 0)\n(883, 563, 0)\n(883, 1203, 0)\n(884, 883, 0)\n(884, 885, 0)\n(884, 564, 0)\n(884, 1204, 0)\n(885, 884, 0)\n(885, 886, 0)\n(885, 565, 0)\n(885, 1205, 0)\n(886, 885, 0)\n(886, 887, 0)\n(886, 566, 0)\n(886, 1206, 0)\n(887, 886, 0)\n(887, 888, 0)\n(887, 567, 0)\n(887, 1207, 0)\n(888, 887, 0)\n(888, 889, 0)\n(888, 568, 0)\n(888, 1208, 0)\n(889, 888, 0)\n(889, 890, 0)\n(889, 569, 0)\n(889, 1209, 0)\n(890, 889, 0)\n(890, 891, 0)\n(890, 570, 0)\n(890, 1210, 0)\n(891, 890, 0)\n(891, 892, 0)\n(891, 571, 0)\n(891, 1211, 0)\n(892, 891, 0)\n(892, 893, 0)\n(892, 572, 0)\n(892, 1212, 0)\n(893, 892, 0)\n(893, 894, 0)\n(893, 573, 0)\n(893, 1213, 0)\n(894, 893, 0)\n(894, 895, 0)\n(894, 574, 0)\n(894, 1214, 0)\n(895, 894, 0)\n(895, 896, 0)\n(895, 575, 0)\n(895, 1215, 0)\n(896, 895, 0)\n(896, 897, 0)\n(896, 576, 0)\n(896, 1216, 0)\n(897, 896, 0)\n(897, 898, 0)\n(897, 577, 0)\n(897, 1217, 0)\n(898, 897, 0)\n(898, 899, 0)\n(898, 578, 0)\n(898, 1218, 0)\n(899, 898, 0)\n(899, 900, 0)\n(899, 579, 0)\n(899, 1219, 0)\n(900, 899, 0)\n(900, 901, 0)\n(900, 580, 0)\n(900, 1220, 0)\n(901, 900, 0)\n(901, 902, 0)\n(901, 581, 0)\n(901, 1221, 0)\n(902, 901, 0)\n(902, 903, 0)\n(902, 582, 0)\n(902, 1222, 0)\n(903, 902, 0)\n(903, 904, 0)\n(903, 583, 0)\n(903, 1223, 0)\n(904, 903, 0)\n(904, 905, 0)\n(904, 584, 0)\n(904, 1224, 0)\n(905, 904, 0)\n(905, 906, 0)\n(905, 585, 0)\n(905, 1225, 0)\n(906, 905, 0)\n(906, 907, 0)\n(906, 586, 0)\n(906, 1226, 0)\n(907, 906, 0)\n(907, 908, 0)\n(907, 587, 0)\n(907, 1227, 0)\n(908, 907, 0)\n(908, 909, 0)\n(908, 588, 0)\n(908, 1228, 0)\n(909, 908, 0)\n(909, 910, 0)\n(909, 589, 0)\n(909, 1229, 0)\n(910, 909, 0)\n(910, 911, 0)\n(910, 590, 0)\n(910, 1230, 0)\n(911, 910, 0)\n(911, 912, 0)\n(911, 591, 0)\n(911, 1231, 0)\n(912, 911, 0)\n(912, 913, 0)\n(912, 592, 0)\n(912, 1232, 0)\n(913, 912, 0)\n(913, 914, 0)\n(913, 593, 0)\n(913, 1233, 0)\n(914, 913, 0)\n(914, 915, 0)\n(914, 594, 0)\n(914, 1234, 0)\n(915, 914, 0)\n(915, 916, 0)\n(915, 595, 0)\n(915, 1235, 0)\n(916, 915, 0)\n(916, 917, 0)\n(916, 596, 0)\n(916, 1236, 0)\n(917, 916, 0)\n(917, 918, 0)\n(917, 597, 0)\n(917, 1237, 0)\n(918, 917, 0)\n(918, 919, 0)\n(918, 598, 0)\n(918, 1238, 0)\n(919, 918, 0)\n(919, 920, 0)\n(919, 599, 0)\n(919, 1239, 0)\n(920, 919, 0)\n(920, 921, 0)\n(920, 600, 0)\n(920, 1240, 0)\n(921, 920, 0)\n(921, 922, 0)\n(921, 601, 0)\n(921, 1241, 0)\n(922, 921, 0)\n(922, 923, 0)\n(922, 602, 0)\n(922, 1242, 0)\n(923, 922, 0)\n(923, 924, 0)\n(923, 603, 0)\n(923, 1243, 0)\n(924, 923, 0)\n(924, 925, 0)\n(924, 604, 0)\n(924, 1244, 0)\n(925, 924, 0)\n(925, 926, 0)\n(925, 605, 0)\n(925, 1245, 0)\n(926, 925, 0)\n(926, 927, 0)\n(926, 606, 0)\n(926, 1246, 0)\n(927, 926, 0)\n(927, 928, 0)\n(927, 607, 0)\n(927, 1247, 0)\n(928, 927, 0)\n(928, 929, 0)\n(928, 608, 0)\n(928, 1248, 0)\n(929, 928, 0)\n(929, 930, 0)\n(929, 609, 0)\n(929, 1249, 0)\n(930, 929, 0)\n(930, 931, 0)\n(930, 610, 0)\n(930, 1250, 0)\n(931, 930, 0)\n(931, 932, 0)\n(931, 611, 0)\n(931, 1251, 0)\n(932, 931, 0)\n(932, 933, 0)\n(932, 612, 0)\n(932, 1252, 0)\n(933, 932, 0)\n(933, 934, 0)\n(933, 613, 0)\n(933, 1253, 0)\n(934, 933, 0)\n(934, 935, 0)\n(934, 614, 0)\n(934, 1254, 0)\n(935, 934, 0)\n(935, 936, 0)\n(935, 615, 0)\n(935, 1255, 0)\n(936, 935, 0)\n(936, 937, 0)\n(936, 616, 0)\n(936, 1256, 0)\n(937, 936, 0)\n(937, 938, 0)\n(937, 617, 0)\n(937, 1257, 0)\n(938, 937, 0)\n(938, 939, 0)\n(938, 618, 0)\n(938, 1258, 0)\n(939, 938, 0)\n(939, 940, 0)\n(939, 619, 0)\n(939, 1259, 0)\n(940, 939, 0)\n(940, 941, 0)\n(940, 620, 0)\n(940, 1260, 0)\n(941, 940, 0)\n(941, 942, 0)\n(941, 621, 0)\n(941, 1261, 0)\n(942, 941, 0)\n(942, 943, 0)\n(942, 622, 0)\n(942, 1262, 0)\n(943, 942, 0)\n(943, 944, 0)\n(943, 623, 0)\n(943, 1263, 0)\n(944, 943, 0)\n(944, 945, 0)\n(944, 624, 0)\n(944, 1264, 0)\n(945, 944, 0)\n(945, 946, 0)\n(945, 625, 0)\n(945, 1265, 0)\n(946, 945, 0)\n(946, 947, 0)\n(946, 626, 0)\n(946, 1266, 0)\n(947, 946, 0)\n(947, 948, 0)\n(947, 627, 0)\n(947, 1267, 0)\n(948, 947, 0)\n(948, 949, 0)\n(948, 628, 0)\n(948, 1268, 0)\n(949, 948, 0)\n(949, 950, 0)\n(949, 629, 0)\n(949, 1269, 0)\n(950, 949, 0)\n(950, 951, 0)\n(950, 630, 0)\n(950, 1270, 0)\n(951, 950, 0)\n(951, 952, 0)\n(951, 631, 0)\n(951, 1271, 0)\n(952, 951, 0)\n(952, 953, 0)\n(952, 632, 0)\n(952, 1272, 0)\n(953, 952, 0)\n(953, 954, 0)\n(953, 633, 0)\n(953, 1273, 0)\n(954, 953, 0)\n(954, 955, 0)\n(954, 634, 0)\n(954, 1274, 0)\n(955, 954, 0)\n(955, 956, 0)\n(955, 635, 0)\n(955, 1275, 0)\n(956, 955, 0)\n(956, 957, 0)\n(956, 636, 0)\n(956, 1276, 0)\n(957, 956, 0)\n(957, 958, 0)\n(957, 637, 0)\n(957, 1277, 0)\n(958, 957, 0)\n(958, 959, 0)\n(958, 638, 0)\n(958, 1278, 0)\n(959, 958, 0)\n(959, 639, 0)\n(959, 1279, 0)\n(960, 961, 0)\n(960, 640, 0)\n(960, 1280, 0)\n(961, 960, 0)\n(961, 962, 0)\n(961, 641, 0)\n(961, 1281, 0)\n(962, 961, 0)\n(962, 963, 0)\n(962, 642, 0)\n(962, 1282, 0)\n(963, 962, 0)\n(963, 964, 0)\n(963, 643, 0)\n(963, 1283, 0)\n(964, 963, 0)\n(964, 965, 0)\n(964, 644, 0)\n(964, 1284, 0)\n(965, 964, 0)\n(965, 966, 0)\n(965, 645, 0)\n(965, 1285, 0)\n(966, 965, 0)\n(966, 967, 0)\n(966, 646, 0)\n(966, 1286, 0)\n(967, 966, 0)\n(967, 968, 0)\n(967, 647, 0)\n(967, 1287, 0)\n(968, 967, 0)\n(968, 969, 0)\n(968, 648, 0)\n(968, 1288, 0)\n(969, 968, 0)\n(969, 970, 0)\n(969, 649, 0)\n(969, 1289, 0)\n(970, 969, 0)\n(970, 971, 0)\n(970, 650, 0)\n(970, 1290, 0)\n(971, 970, 0)\n(971, 972, 0)\n(971, 651, 0)\n(971, 1291, 0)\n(972, 971, 0)\n(972, 973, 0)\n(972, 652, 0)\n(972, 1292, 0)\n(973, 972, 0)\n(973, 974, 0)\n(973, 653, 0)\n(973, 1293, 0)\n(974, 973, 0)\n(974, 975, 0)\n(974, 654, 0)\n(974, 1294, 0)\n(975, 974, 0)\n(975, 976, 0)\n(975, 655, 0)\n(975, 1295, 0)\n(976, 975, 0)\n(976, 977, 0)\n(976, 656, 0)\n(977, 976, 0)\n(977, 978, 0)\n(977, 657, 0)\n(978, 977, 0)\n(978, 979, 0)\n(978, 658, 0)\n(978, 1298, 0)\n(979, 978, 0)\n(979, 980, 0)\n(979, 659, 0)\n(979, 1299, 0)\n(980, 979, 0)\n(980, 981, 0)\n(980, 660, 0)\n(980, 1300, 0)\n(981, 980, 0)\n(981, 982, 0)\n(981, 661, 0)\n(981, 1301, 0)\n(982, 981, 0)\n(982, 983, 0)\n(982, 662, 0)\n(982, 1302, 0)\n(983, 982, 0)\n(983, 984, 0)\n(983, 663, 0)\n(983, 1303, 0)\n(984, 983, 0)\n(984, 985, 0)\n(984, 664, 0)\n(984, 1304, 0)\n(985, 984, 0)\n(985, 986, 0)\n(985, 665, 0)\n(985, 1305, 0)\n(986, 985, 0)\n(986, 987, 0)\n(986, 666, 0)\n(986, 1306, 0)\n(987, 986, 0)\n(987, 988, 0)\n(987, 667, 0)\n(987, 1307, 0)\n(988, 987, 0)\n(988, 989, 0)\n(988, 668, 0)\n(988, 1308, 0)\n(989, 988, 0)\n(989, 990, 0)\n(989, 669, 0)\n(989, 1309, 0)\n(990, 989, 0)\n(990, 991, 0)\n(990, 670, 0)\n(990, 1310, 0)\n(991, 990, 0)\n(991, 992, 0)\n(991, 671, 0)\n(991, 1311, 0)\n(992, 991, 0)\n(992, 993, 0)\n(992, 672, 0)\n(992, 1312, 0)\n(993, 992, 0)\n(993, 994, 0)\n(993, 673, 0)\n(993, 1313, 0)\n(994, 993, 0)\n(994, 995, 0)\n(994, 674, 0)\n(994, 1314, 0)\n(995, 994, 0)\n(995, 996, 0)\n(995, 675, 0)\n(995, 1315, 0)\n(996, 995, 0)\n(996, 997, 0)\n(996, 676, 0)\n(996, 1316, 0)\n(997, 996, 0)\n(997, 998, 0)\n(997, 677, 0)\n(997, 1317, 0)\n(998, 997, 0)\n(998, 999, 0)\n(998, 678, 0)\n(998, 1318, 0)\n(999, 998, 0)\n(999, 1000, 0)\n(999, 679, 0)\n(999, 1319, 0)\n(1000, 999, 0)\n(1000, 1001, 0)\n(1000, 680, 0)\n(1000, 1320, 0)\n(1001, 1000, 0)\n(1001, 1002, 0)\n(1001, 681, 0)\n(1001, 1321, 0)\n(1002, 1001, 0)\n(1002, 1003, 0)\n(1002, 682, 0)\n(1002, 1322, 0)\n(1003, 1002, 0)\n(1003, 1004, 0)\n(1003, 683, 0)\n(1003, 1323, 0)\n(1004, 1003, 0)\n(1004, 1005, 0)\n(1004, 684, 0)\n(1004, 1324, 0)\n(1005, 1004, 0)\n(1005, 1006, 0)\n(1005, 685, 0)\n(1005, 1325, 0)\n(1006, 1005, 0)\n(1006, 1007, 0)\n(1006, 686, 0)\n(1006, 1326, 0)\n(1007, 1006, 0)\n(1007, 1008, 0)\n(1007, 687, 0)\n(1007, 1327, 0)\n(1008, 1007, 0)\n(1008, 1009, 0)\n(1008, 688, 0)\n(1008, 1328, 0)\n(1009, 1008, 0)\n(1009, 1010, 0)\n(1009, 689, 0)\n(1009, 1329, 0)\n(1010, 1009, 0)\n(1010, 1011, 0)\n(1010, 690, 0)\n(1010, 1330, 0)\n(1011, 1010, 0)\n(1011, 1012, 0)\n(1011, 691, 0)\n(1011, 1331, 0)\n(1012, 1011, 0)\n(1012, 1013, 0)\n(1012, 692, 0)\n(1012, 1332, 0)\n(1013, 1012, 0)\n(1013, 1014, 0)\n(1013, 693, 0)\n(1013, 1333, 0)\n(1014, 1013, 0)\n(1014, 1015, 0)\n(1014, 694, 0)\n(1014, 1334, 0)\n(1015, 1014, 0)\n(1015, 1016, 0)\n(1015, 695, 0)\n(1015, 1335, 0)\n(1016, 1015, 0)\n(1016, 1017, 0)\n(1016, 696, 0)\n(1016, 1336, 0)\n(1017, 1016, 0)\n(1017, 1018, 0)\n(1017, 697, 0)\n(1017, 1337, 0)\n(1018, 1017, 0)\n(1018, 1019, 0)\n(1018, 698, 0)\n(1018, 1338, 0)\n(1019, 1018, 0)\n(1019, 1020, 0)\n(1019, 699, 0)\n(1019, 1339, 0)\n(1020, 1019, 0)\n(1020, 1021, 0)\n(1020, 700, 0)\n(1020, 1340, 0)\n(1021, 1020, 0)\n(1021, 1022, 0)\n(1021, 701, 0)\n(1021, 1341, 0)\n(1022, 1021, 0)\n(1022, 1023, 0)\n(1022, 702, 0)\n(1022, 1342, 0)\n(1023, 1022, 0)\n(1023, 1024, 0)\n(1023, 703, 0)\n(1023, 1343, 0)\n(1024, 1023, 0)\n(1024, 1025, 0)\n(1024, 704, 0)\n(1024, 1344, 0)\n(1025, 1024, 0)\n(1025, 1026, 0)\n(1025, 705, 0)\n(1025, 1345, 0)\n(1026, 1025, 0)\n(1026, 1027, 0)\n(1026, 706, 0)\n(1026, 1346, 0)\n(1027, 1026, 0)\n(1027, 1028, 0)\n(1027, 707, 0)\n(1027, 1347, 0)\n(1028, 1027, 0)\n(1028, 1029, 0)\n(1028, 708, 0)\n(1028, 1348, 0)\n(1029, 1028, 0)\n(1029, 1030, 0)\n(1029, 709, 0)\n(1029, 1349, 0)\n(1030, 1029, 0)\n(1030, 1031, 0)\n(1030, 710, 0)\n(1030, 1350, 0)\n(1031, 1030, 0)\n(1031, 1032, 0)\n(1031, 711, 0)\n(1031, 1351, 0)\n(1032, 1031, 0)\n(1032, 1033, 0)\n(1032, 712, 0)\n(1032, 1352, 0)\n(1033, 1032, 0)\n(1033, 1034, 0)\n(1033, 713, 0)\n(1033, 1353, 0)\n(1034, 1033, 0)\n(1034, 1035, 0)\n(1034, 714, 0)\n(1034, 1354, 0)\n(1035, 1034, 0)\n(1035, 1036, 0)\n(1035, 715, 0)\n(1035, 1355, 0)\n(1036, 1035, 0)\n(1036, 1037, 0)\n(1036, 716, 0)\n(1036, 1356, 0)\n(1037, 1036, 0)\n(1037, 1038, 0)\n(1037, 717, 0)\n(1037, 1357, 0)\n(1038, 1037, 0)\n(1038, 1039, 0)\n(1038, 718, 0)\n(1038, 1358, 0)\n(1039, 1038, 0)\n(1039, 1040, 0)\n(1039, 719, 0)\n(1039, 1359, 0)\n(1040, 1039, 0)\n(1040, 1041, 0)\n(1040, 720, 0)\n(1040, 1360, 0)\n(1041, 1040, 0)\n(1041, 1042, 0)\n(1041, 721, 0)\n(1041, 1361, 0)\n(1042, 1041, 0)\n(1042, 1043, 0)\n(1042, 722, 0)\n(1042, 1362, 0)\n(1043, 1042, 0)\n(1043, 1044, 0)\n(1043, 723, 0)\n(1043, 1363, 0)\n(1044, 1043, 0)\n(1044, 1045, 0)\n(1044, 724, 0)\n(1044, 1364, 0)\n(1045, 1044, 0)\n(1045, 1046, 0)\n(1045, 725, 0)\n(1045, 1365, 0)\n(1046, 1045, 0)\n(1046, 1047, 0)\n(1046, 726, 0)\n(1046, 1366, 0)\n(1047, 1046, 0)\n(1047, 1048, 0)\n(1047, 727, 0)\n(1047, 1367, 0)\n(1048, 1047, 0)\n(1048, 1049, 0)\n(1048, 728, 0)\n(1048, 1368, 0)\n(1049, 1048, 0)\n(1049, 1050, 0)\n(1049, 729, 0)\n(1049, 1369, 0)\n(1050, 1049, 0)\n(1050, 1051, 0)\n(1050, 730, 0)\n(1050, 1370, 0)\n(1051, 1050, 0)\n(1051, 1052, 0)\n(1051, 731, 0)\n(1051, 1371, 0)\n(1052, 1051, 0)\n(1052, 1053, 0)\n(1052, 732, 0)\n(1052, 1372, 0)\n(1053, 1052, 0)\n(1053, 1054, 0)\n(1053, 733, 0)\n(1053, 1373, 0)\n(1054, 1053, 0)\n(1054, 1055, 0)\n(1054, 734, 0)\n(1054, 1374, 0)\n(1055, 1054, 0)\n(1055, 1056, 0)\n(1055, 735, 0)\n(1055, 1375, 0)\n(1056, 1055, 0)\n(1056, 1057, 0)\n(1056, 736, 0)\n(1056, 1376, 0)\n(1057, 1056, 0)\n(1057, 1058, 0)\n(1057, 737, 0)\n(1057, 1377, 0)\n(1058, 1057, 0)\n(1058, 1059, 0)\n(1058, 738, 0)\n(1058, 1378, 0)\n(1059, 1058, 0)\n(1059, 1060, 0)\n(1059, 739, 0)\n(1059, 1379, 0)\n(1060, 1059, 0)\n(1060, 1061, 0)\n(1060, 740, 0)\n(1060, 1380, 0)\n(1061, 1060, 0)\n(1061, 1062, 0)\n(1061, 741, 0)\n(1061, 1381, 0)\n(1062, 1061, 0)\n(1062, 1063, 0)\n(1062, 742, 0)\n(1062, 1382, 0)\n(1063, 1062, 0)\n(1063, 1064, 0)\n(1063, 743, 0)\n(1063, 1383, 0)\n(1064, 1063, 0)\n(1064, 1065, 0)\n(1064, 744, 0)\n(1064, 1384, 0)\n(1065, 1064, 0)\n(1065, 1066, 0)\n(1065, 745, 0)\n(1065, 1385, 0)\n(1066, 1065, 0)\n(1066, 1067, 0)\n(1066, 746, 0)\n(1066, 1386, 0)\n(1067, 1066, 0)\n(1067, 1068, 0)\n(1067, 747, 0)\n(1067, 1387, 0)\n(1068, 1067, 0)\n(1068, 1069, 0)\n(1068, 748, 0)\n(1068, 1388, 0)\n(1069, 1068, 0)\n(1069, 1070, 0)\n(1069, 749, 0)\n(1069, 1389, 0)\n(1070, 1069, 0)\n(1070, 1071, 0)\n(1070, 750, 0)\n(1070, 1390, 0)\n(1071, 1070, 0)\n(1071, 1072, 0)\n(1071, 751, 0)\n(1071, 1391, 0)\n(1072, 1071, 0)\n(1072, 1073, 0)\n(1072, 752, 0)\n(1072, 1392, 0)\n(1073, 1072, 0)\n(1073, 1074, 0)\n(1073, 753, 0)\n(1073, 1393, 0)\n(1074, 1073, 0)\n(1074, 1075, 0)\n(1074, 754, 0)\n(1074, 1394, 0)\n(1075, 1074, 0)\n(1075, 1076, 0)\n(1075, 755, 0)\n(1075, 1395, 0)\n(1076, 1075, 0)\n(1076, 1077, 0)\n(1076, 756, 0)\n(1076, 1396, 0)\n(1077, 1076, 0)\n(1077, 1078, 0)\n(1077, 757, 0)\n(1077, 1397, 0)\n(1078, 1077, 0)\n(1078, 1079, 0)\n(1078, 758, 0)\n(1078, 1398, 0)\n(1079, 1078, 0)\n(1079, 1080, 0)\n(1079, 759, 0)\n(1079, 1399, 0)\n(1080, 1079, 0)\n(1080, 1081, 0)\n(1080, 760, 0)\n(1080, 1400, 0)\n(1081, 1080, 0)\n(1081, 1082, 0)\n(1081, 761, 0)\n(1081, 1401, 0)\n(1082, 1081, 0)\n(1082, 1083, 0)\n(1082, 762, 0)\n(1082, 1402, 0)\n(1083, 1082, 0)\n(1083, 1084, 0)\n(1083, 763, 0)\n(1083, 1403, 0)\n(1084, 1083, 0)\n(1084, 1085, 0)\n(1084, 764, 0)\n(1084, 1404, 0)\n(1085, 1084, 0)\n(1085, 1086, 0)\n(1085, 765, 0)\n(1085, 1405, 0)\n(1086, 1085, 0)\n(1086, 1087, 0)\n(1086, 766, 0)\n(1086, 1406, 0)\n(1087, 1086, 0)\n(1087, 1088, 0)\n(1087, 767, 0)\n(1087, 1407, 0)\n(1088, 1087, 0)\n(1088, 1089, 0)\n(1088, 768, 0)\n(1088, 1408, 0)\n(1089, 1088, 0)\n(1089, 1090, 0)\n(1089, 769, 0)\n(1089, 1409, 0)\n(1090, 1089, 0)\n(1090, 1091, 0)\n(1090, 770, 0)\n(1090, 1410, 0)\n(1091, 1090, 0)\n(1091, 1092, 0)\n(1091, 771, 0)\n(1091, 1411, 0)\n(1092, 1091, 0)\n(1092, 1093, 0)\n(1092, 772, 0)\n(1092, 1412, 0)\n(1093, 1092, 0)\n(1093, 1094, 0)\n(1093, 773, 0)\n(1093, 1413, 0)\n(1094, 1093, 0)\n(1094, 1095, 0)\n(1094, 774, 0)\n(1094, 1414, 0)\n(1095, 1094, 0)\n(1095, 1096, 0)\n(1095, 775, 0)\n(1095, 1415, 0)\n(1096, 1095, 0)\n(1096, 1097, 0)\n(1096, 776, 0)\n(1096, 1416, 0)\n(1097, 1096, 0)\n(1097, 1098, 0)\n(1097, 777, 0)\n(1097, 1417, 0)\n(1098, 1097, 0)\n(1098, 1099, 0)\n(1098, 778, 0)\n(1098, 1418, 0)\n(1099, 1098, 0)\n(1099, 1100, 0)\n(1099, 779, 0)\n(1099, 1419, 0)\n(1100, 1099, 0)\n(1100, 1101, 0)\n(1100, 780, 0)\n(1100, 1420, 0)\n(1101, 1100, 0)\n(1101, 1102, 0)\n(1101, 781, 0)\n(1101, 1421, 0)\n(1102, 1101, 0)\n(1102, 1103, 0)\n(1102, 782, 0)\n(1102, 1422, 0)\n(1103, 1102, 0)\n(1103, 1104, 0)\n(1103, 783, 0)\n(1103, 1423, 0)\n(1104, 1103, 0)\n(1104, 1105, 0)\n(1104, 784, 0)\n(1104, 1424, 0)\n(1105, 1104, 0)\n(1105, 1106, 0)\n(1105, 785, 0)\n(1105, 1425, 0)\n(1106, 1105, 0)\n(1106, 1107, 0)\n(1106, 786, 0)\n(1106, 1426, 0)\n(1107, 1106, 0)\n(1107, 1108, 0)\n(1107, 787, 0)\n(1107, 1427, 0)\n(1108, 1107, 0)\n(1108, 1109, 0)\n(1108, 788, 0)\n(1108, 1428, 0)\n(1109, 1108, 0)\n(1109, 1110, 0)\n(1109, 789, 0)\n(1109, 1429, 0)\n(1110, 1109, 0)\n(1110, 1111, 0)\n(1110, 790, 0)\n(1110, 1430, 0)\n(1111, 1110, 0)\n(1111, 1112, 0)\n(1111, 791, 0)\n(1111, 1431, 0)\n(1112, 1111, 0)\n(1112, 1113, 0)\n(1112, 792, 0)\n(1112, 1432, 0)\n(1113, 1112, 0)\n(1113, 1114, 0)\n(1113, 793, 0)\n(1113, 1433, 0)\n(1114, 1113, 0)\n(1114, 1115, 0)\n(1114, 794, 0)\n(1114, 1434, 0)\n(1115, 1114, 0)\n(1115, 1116, 0)\n(1115, 795, 0)\n(1115, 1435, 0)\n(1116, 1115, 0)\n(1116, 1117, 0)\n(1116, 796, 0)\n(1116, 1436, 0)\n(1117, 1116, 0)\n(1117, 1118, 0)\n(1117, 797, 0)\n(1117, 1437, 0)\n(1118, 1117, 0)\n(1118, 1119, 0)\n(1118, 798, 0)\n(1118, 1438, 0)\n(1119, 1118, 0)\n(1119, 1120, 0)\n(1119, 799, 0)\n(1119, 1439, 0)\n(1120, 1119, 0)\n(1120, 1121, 0)\n(1120, 800, 0)\n(1120, 1440, 0)\n(1121, 1120, 0)\n(1121, 1122, 0)\n(1121, 801, 0)\n(1121, 1441, 0)\n(1122, 1121, 0)\n(1122, 1123, 0)\n(1122, 802, 0)\n(1122, 1442, 0)\n(1123, 1122, 0)\n(1123, 1124, 0)\n(1123, 803, 0)\n(1123, 1443, 0)\n(1124, 1123, 0)\n(1124, 1125, 0)\n(1124, 804, 0)\n(1124, 1444, 0)\n(1125, 1124, 0)\n(1125, 1126, 0)\n(1125, 805, 0)\n(1125, 1445, 0)\n(1126, 1125, 0)\n(1126, 1127, 0)\n(1126, 806, 0)\n(1126, 1446, 0)\n(1127, 1126, 0)\n(1127, 1128, 0)\n(1127, 807, 0)\n(1127, 1447, 0)\n(1128, 1127, 0)\n(1128, 1129, 0)\n(1128, 808, 0)\n(1128, 1448, 0)\n(1129, 1128, 0)\n(1129, 1130, 0)\n(1129, 809, 0)\n(1129, 1449, 0)\n(1130, 1129, 0)\n(1130, 1131, 0)\n(1130, 810, 0)\n(1130, 1450, 0)\n(1131, 1130, 0)\n(1131, 1132, 0)\n(1131, 811, 0)\n(1131, 1451, 0)\n(1132, 1131, 0)\n(1132, 1133, 0)\n(1132, 812, 0)\n(1132, 1452, 0)\n(1133, 1132, 0)\n(1133, 1134, 0)\n(1133, 813, 0)\n(1133, 1453, 0)\n(1134, 1133, 0)\n(1134, 1135, 0)\n(1134, 814, 0)\n(1134, 1454, 0)\n(1135, 1134, 0)\n(1135, 1136, 0)\n(1135, 815, 0)\n(1135, 1455, 0)\n(1136, 1135, 0)\n(1136, 1137, 0)\n(1136, 816, 0)\n(1136, 1456, 0)\n(1137, 1136, 0)\n(1137, 1138, 0)\n(1137, 817, 0)\n(1137, 1457, 0)\n(1138, 1137, 0)\n(1138, 1139, 0)\n(1138, 818, 0)\n(1138, 1458, 0)\n(1139, 1138, 0)\n(1139, 1140, 0)\n(1139, 819, 0)\n(1139, 1459, 0)\n(1140, 1139, 0)\n(1140, 1141, 0)\n(1140, 820, 0)\n(1140, 1460, 0)\n(1141, 1140, 0)\n(1141, 1142, 0)\n(1141, 821, 0)\n(1141, 1461, 0)\n(1142, 1141, 0)\n(1142, 1143, 0)\n(1142, 822, 0)\n(1142, 1462, 0)\n(1143, 1142, 0)\n(1143, 1144, 0)\n(1143, 823, 0)\n(1143, 1463, 0)\n(1144, 1143, 0)\n(1144, 1145, 0)\n(1144, 824, 0)\n(1144, 1464, 0)\n(1145, 1144, 0)\n(1145, 1146, 0)\n(1145, 825, 0)\n(1145, 1465, 0)\n(1146, 1145, 0)\n(1146, 1147, 0)\n(1146, 826, 0)\n(1146, 1466, 0)\n(1147, 1146, 0)\n(1147, 1148, 0)\n(1147, 827, 0)\n(1147, 1467, 0)\n(1148, 1147, 0)\n(1148, 1149, 0)\n(1148, 828, 0)\n(1148, 1468, 0)\n(1149, 1148, 0)\n(1149, 1150, 0)\n(1149, 829, 0)\n(1149, 1469, 0)\n(1150, 1149, 0)\n(1150, 1151, 0)\n(1150, 830, 0)\n(1150, 1470, 0)\n(1151, 1150, 0)\n(1151, 1152, 0)\n(1151, 831, 0)\n(1151, 1471, 0)\n(1152, 1151, 0)\n(1152, 1153, 0)\n(1152, 832, 0)\n(1152, 1472, 0)\n(1153, 1152, 0)\n(1153, 1154, 0)\n(1153, 833, 0)\n(1153, 1473, 0)\n(1154, 1153, 0)\n(1154, 1155, 0)\n(1154, 834, 0)\n(1154, 1474, 0)\n(1155, 1154, 0)\n(1155, 1156, 0)\n(1155, 835, 0)\n(1155, 1475, 0)\n(1156, 1155, 0)\n(1156, 1157, 0)\n(1156, 836, 0)\n(1156, 1476, 0)\n(1157, 1156, 0)\n(1157, 1158, 0)\n(1157, 837, 0)\n(1157, 1477, 0)\n(1158, 1157, 0)\n(1158, 1159, 0)\n(1158, 838, 0)\n(1158, 1478, 0)\n(1159, 1158, 0)\n(1159, 1160, 0)\n(1159, 839, 0)\n(1159, 1479, 0)\n(1160, 1159, 0)\n(1160, 1161, 0)\n(1160, 840, 0)\n(1160, 1480, 0)\n(1161, 1160, 0)\n(1161, 1162, 0)\n(1161, 841, 0)\n(1161, 1481, 0)\n(1162, 1161, 0)\n(1162, 1163, 0)\n(1162, 842, 0)\n(1162, 1482, 0)\n(1163, 1162, 0)\n(1163, 1164, 0)\n(1163, 843, 0)\n(1163, 1483, 0)\n(1164, 1163, 0)\n(1164, 1165, 0)\n(1164, 844, 0)\n(1164, 1484, 0)\n(1165, 1164, 0)\n(1165, 1166, 0)\n(1165, 845, 0)\n(1165, 1485, 0)\n(1166, 1165, 0)\n(1166, 1167, 0)\n(1166, 846, 0)\n(1166, 1486, 0)\n(1167, 1166, 0)\n(1167, 1168, 0)\n(1167, 847, 0)\n(1167, 1487, 0)\n(1168, 1167, 0)\n(1168, 1169, 0)\n(1168, 848, 0)\n(1168, 1488, 0)\n(1169, 1168, 0)\n(1169, 1170, 0)\n(1169, 849, 0)\n(1169, 1489, 0)\n(1170, 1169, 0)\n(1170, 1171, 0)\n(1170, 850, 0)\n(1170, 1490, 0)\n(1171, 1170, 0)\n(1171, 1172, 0)\n(1171, 851, 0)\n(1171, 1491, 0)\n(1172, 1171, 0)\n(1172, 1173, 0)\n(1172, 852, 0)\n(1172, 1492, 0)\n(1173, 1172, 0)\n(1173, 1174, 0)\n(1173, 853, 0)\n(1173, 1493, 0)\n(1174, 1173, 0)\n(1174, 1175, 0)\n(1174, 854, 0)\n(1174, 1494, 0)\n(1175, 1174, 0)\n(1175, 1176, 0)\n(1175, 855, 0)\n(1175, 1495, 0)\n(1176, 1175, 0)\n(1176, 1177, 0)\n(1176, 856, 0)\n(1176, 1496, 0)\n(1177, 1176, 0)\n(1177, 1178, 0)\n(1177, 857, 0)\n(1177, 1497, 0)\n(1178, 1177, 0)\n(1178, 1179, 0)\n(1178, 858, 0)\n(1178, 1498, 0)\n(1179, 1178, 0)\n(1179, 1180, 0)\n(1179, 859, 0)\n(1179, 1499, 0)\n(1180, 1179, 0)\n(1180, 1181, 0)\n(1180, 860, 0)\n(1180, 1500, 0)\n(1181, 1180, 0)\n(1181, 1182, 0)\n(1181, 861, 0)\n(1181, 1501, 0)\n(1182, 1181, 0)\n(1182, 1183, 0)\n(1182, 862, 0)\n(1182, 1502, 0)\n(1183, 1182, 0)\n(1183, 1184, 0)\n(1183, 863, 0)\n(1183, 1503, 0)\n(1184, 1183, 0)\n(1184, 1185, 0)\n(1184, 864, 0)\n(1184, 1504, 0)\n(1185, 1184, 0)\n(1185, 1186, 0)\n(1185, 865, 0)\n(1185, 1505, 0)\n(1186, 1185, 0)\n(1186, 1187, 0)\n(1186, 866, 0)\n(1186, 1506, 0)\n(1187, 1186, 0)\n(1187, 1188, 0)\n(1187, 867, 0)\n(1187, 1507, 0)\n(1188, 1187, 0)\n(1188, 1189, 0)\n(1188, 868, 0)\n(1188, 1508, 0)\n(1189, 1188, 0)\n(1189, 1190, 0)\n(1189, 869, 0)\n(1189, 1509, 0)\n(1190, 1189, 0)\n(1190, 1191, 0)\n(1190, 870, 0)\n(1190, 1510, 0)\n(1191, 1190, 0)\n(1191, 1192, 0)\n(1191, 871, 0)\n(1191, 1511, 0)\n(1192, 1191, 0)\n(1192, 1193, 0)\n(1192, 872, 0)\n(1192, 1512, 0)\n(1193, 1192, 0)\n(1193, 1194, 0)\n(1193, 873, 0)\n(1193, 1513, 0)\n(1194, 1193, 0)\n(1194, 1195, 0)\n(1194, 874, 0)\n(1194, 1514, 0)\n(1195, 1194, 0)\n(1195, 1196, 0)\n(1195, 875, 0)\n(1195, 1515, 0)\n(1196, 1195, 0)\n(1196, 1197, 0)\n(1196, 876, 0)\n(1196, 1516, 0)\n(1197, 1196, 0)\n(1197, 1198, 0)\n(1197, 877, 0)\n(1197, 1517, 0)\n(1198, 1197, 0)\n(1198, 1199, 0)\n(1198, 878, 0)\n(1198, 1518, 0)\n(1199, 1198, 0)\n(1199, 1200, 0)\n(1199, 879, 0)\n(1199, 1519, 0)\n(1200, 1199, 0)\n(1200, 1201, 0)\n(1200, 880, 0)\n(1200, 1520, 0)\n(1201, 1200, 0)\n(1201, 1202, 0)\n(1201, 881, 0)\n(1201, 1521, 0)\n(1202, 1201, 0)\n(1202, 1203, 0)\n(1202, 882, 0)\n(1202, 1522, 0)\n(1203, 1202, 0)\n(1203, 1204, 0)\n(1203, 883, 0)\n(1203, 1523, 0)\n(1204, 1203, 0)\n(1204, 1205, 0)\n(1204, 884, 0)\n(1204, 1524, 0)\n(1205, 1204, 0)\n(1205, 1206, 0)\n(1205, 885, 0)\n(1205, 1525, 0)\n(1206, 1205, 0)\n(1206, 1207, 0)\n(1206, 886, 0)\n(1206, 1526, 0)\n(1207, 1206, 0)\n(1207, 1208, 0)\n(1207, 887, 0)\n(1207, 1527, 0)\n(1208, 1207, 0)\n(1208, 1209, 0)\n(1208, 888, 0)\n(1208, 1528, 0)\n(1209, 1208, 0)\n(1209, 1210, 0)\n(1209, 889, 0)\n(1209, 1529, 0)\n(1210, 1209, 0)\n(1210, 1211, 0)\n(1210, 890, 0)\n(1210, 1530, 0)\n(1211, 1210, 0)\n(1211, 1212, 0)\n(1211, 891, 0)\n(1211, 1531, 0)\n(1212, 1211, 0)\n(1212, 1213, 0)\n(1212, 892, 0)\n(1212, 1532, 0)\n(1213, 1212, 0)\n(1213, 1214, 0)\n(1213, 893, 0)\n(1213, 1533, 0)\n(1214, 1213, 0)\n(1214, 1215, 0)\n(1214, 894, 0)\n(1214, 1534, 0)\n(1215, 1214, 0)\n(1215, 1216, 0)\n(1215, 895, 0)\n(1215, 1535, 0)\n(1216, 1215, 0)\n(1216, 1217, 0)\n(1216, 896, 0)\n(1216, 1536, 0)\n(1217, 1216, 0)\n(1217, 1218, 0)\n(1217, 897, 0)\n(1217, 1537, 0)\n(1218, 1217, 0)\n(1218, 1219, 0)\n(1218, 898, 0)\n(1218, 1538, 0)\n(1219, 1218, 0)\n(1219, 1220, 0)\n(1219, 899, 0)\n(1219, 1539, 0)\n(1220, 1219, 0)\n(1220, 1221, 0)\n(1220, 900, 0)\n(1220, 1540, 0)\n(1221, 1220, 0)\n(1221, 1222, 0)\n(1221, 901, 0)\n(1221, 1541, 0)\n(1222, 1221, 0)\n(1222, 1223, 0)\n(1222, 902, 0)\n(1222, 1542, 0)\n(1223, 1222, 0)\n(1223, 1224, 0)\n(1223, 903, 0)\n(1223, 1543, 0)\n(1224, 1223, 0)\n(1224, 1225, 0)\n(1224, 904, 0)\n(1224, 1544, 0)\n(1225, 1224, 0)\n(1225, 1226, 0)\n(1225, 905, 0)\n(1225, 1545, 0)\n(1226, 1225, 0)\n(1226, 1227, 0)\n(1226, 906, 0)\n(1226, 1546, 0)\n(1227, 1226, 0)\n(1227, 1228, 0)\n(1227, 907, 0)\n(1227, 1547, 0)\n(1228, 1227, 0)\n(1228, 1229, 0)\n(1228, 908, 0)\n(1228, 1548, 0)\n(1229, 1228, 0)\n(1229, 1230, 0)\n(1229, 909, 0)\n(1229, 1549, 0)\n(1230, 1229, 0)\n(1230, 1231, 0)\n(1230, 910, 0)\n(1230, 1550, 0)\n(1231, 1230, 0)\n(1231, 1232, 0)\n(1231, 911, 0)\n(1231, 1551, 0)\n(1232, 1231, 0)\n(1232, 1233, 0)\n(1232, 912, 0)\n(1232, 1552, 0)\n(1233, 1232, 0)\n(1233, 1234, 0)\n(1233, 913, 0)\n(1233, 1553, 0)\n(1234, 1233, 0)\n(1234, 1235, 0)\n(1234, 914, 0)\n(1234, 1554, 0)\n(1235, 1234, 0)\n(1235, 1236, 0)\n(1235, 915, 0)\n(1235, 1555, 0)\n(1236, 1235, 0)\n(1236, 1237, 0)\n(1236, 916, 0)\n(1236, 1556, 0)\n(1237, 1236, 0)\n(1237, 1238, 0)\n(1237, 917, 0)\n(1237, 1557, 0)\n(1238, 1237, 0)\n(1238, 1239, 0)\n(1238, 918, 0)\n(1238, 1558, 0)\n(1239, 1238, 0)\n(1239, 1240, 0)\n(1239, 919, 0)\n(1239, 1559, 0)\n(1240, 1239, 0)\n(1240, 1241, 0)\n(1240, 920, 0)\n(1240, 1560, 0)\n(1241, 1240, 0)\n(1241, 1242, 0)\n(1241, 921, 0)\n(1241, 1561, 0)\n(1242, 1241, 0)\n(1242, 1243, 0)\n(1242, 922, 0)\n(1242, 1562, 0)\n(1243, 1242, 0)\n(1243, 1244, 0)\n(1243, 923, 0)\n(1243, 1563, 0)\n(1244, 1243, 0)\n(1244, 1245, 0)\n(1244, 924, 0)\n(1244, 1564, 0)\n(1245, 1244, 0)\n(1245, 1246, 0)\n(1245, 925, 0)\n(1245, 1565, 0)\n(1246, 1245, 0)\n(1246, 1247, 0)\n(1246, 926, 0)\n(1246, 1566, 0)\n(1247, 1246, 0)\n(1247, 1248, 0)\n(1247, 927, 0)\n(1247, 1567, 0)\n(1248, 1247, 0)\n(1248, 1249, 0)\n(1248, 928, 0)\n(1248, 1568, 0)\n(1249, 1248, 0)\n(1249, 1250, 0)\n(1249, 929, 0)\n(1249, 1569, 0)\n(1250, 1249, 0)\n(1250, 1251, 0)\n(1250, 930, 0)\n(1250, 1570, 0)\n(1251, 1250, 0)\n(1251, 1252, 0)\n(1251, 931, 0)\n(1251, 1571, 0)\n(1252, 1251, 0)\n(1252, 1253, 0)\n(1252, 932, 0)\n(1252, 1572, 0)\n(1253, 1252, 0)\n(1253, 1254, 0)\n(1253, 933, 0)\n(1253, 1573, 0)\n(1254, 1253, 0)\n(1254, 1255, 0)\n(1254, 934, 0)\n(1254, 1574, 0)\n(1255, 1254, 0)\n(1255, 1256, 0)\n(1255, 935, 0)\n(1255, 1575, 0)\n(1256, 1255, 0)\n(1256, 1257, 0)\n(1256, 936, 0)\n(1256, 1576, 0)\n(1257, 1256, 0)\n(1257, 1258, 0)\n(1257, 937, 0)\n(1257, 1577, 0)\n(1258, 1257, 0)\n(1258, 1259, 0)\n(1258, 938, 0)\n(1258, 1578, 0)\n(1259, 1258, 0)\n(1259, 1260, 0)\n(1259, 939, 0)\n(1259, 1579, 0)\n(1260, 1259, 0)\n(1260, 1261, 0)\n(1260, 940, 0)\n(1260, 1580, 0)\n(1261, 1260, 0)\n(1261, 1262, 0)\n(1261, 941, 0)\n(1261, 1581, 0)\n(1262, 1261, 0)\n(1262, 1263, 0)\n(1262, 942, 0)\n(1262, 1582, 0)\n(1263, 1262, 0)\n(1263, 1264, 0)\n(1263, 943, 0)\n(1263, 1583, 0)\n(1264, 1263, 0)\n(1264, 1265, 0)\n(1264, 944, 0)\n(1264, 1584, 0)\n(1265, 1264, 0)\n(1265, 1266, 0)\n(1265, 945, 0)\n(1265, 1585, 0)\n(1266, 1265, 0)\n(1266, 1267, 0)\n(1266, 946, 0)\n(1266, 1586, 0)\n(1267, 1266, 0)\n(1267, 1268, 0)\n(1267, 947, 0)\n(1267, 1587, 0)\n(1268, 1267, 0)\n(1268, 1269, 0)\n(1268, 948, 0)\n(1268, 1588, 0)\n(1269, 1268, 0)\n(1269, 1270, 0)\n(1269, 949, 0)\n(1269, 1589, 0)\n(1270, 1269, 0)\n(1270, 1271, 0)\n(1270, 950, 0)\n(1270, 1590, 0)\n(1271, 1270, 0)\n(1271, 1272, 0)\n(1271, 951, 0)\n(1271, 1591, 0)\n(1272, 1271, 0)\n(1272, 1273, 0)\n(1272, 952, 0)\n(1272, 1592, 0)\n(1273, 1272, 0)\n(1273, 1274, 0)\n(1273, 953, 0)\n(1273, 1593, 0)\n(1274, 1273, 0)\n(1274, 1275, 0)\n(1274, 954, 0)\n(1274, 1594, 0)\n(1275, 1274, 0)\n(1275, 1276, 0)\n(1275, 955, 0)\n(1275, 1595, 0)\n(1276, 1275, 0)\n(1276, 1277, 0)\n(1276, 956, 0)\n(1276, 1596, 0)\n(1277, 1276, 0)\n(1277, 1278, 0)\n(1277, 957, 0)\n(1277, 1597, 0)\n(1278, 1277, 0)\n(1278, 1279, 0)\n(1278, 958, 0)\n(1278, 1598, 0)\n(1279, 1278, 0)\n(1279, 959, 0)\n(1279, 1599, 0)\n(1280, 1281, 0)\n(1280, 960, 0)\n(1280, 1600, 0)\n(1281, 1280, 0)\n(1281, 1282, 0)\n(1281, 961, 0)\n(1281, 1601, 0)\n(1282, 1281, 0)\n(1282, 1283, 0)\n(1282, 962, 0)\n(1282, 1602, 0)\n(1283, 1282, 0)\n(1283, 1284, 0)\n(1283, 963, 0)\n(1283, 1603, 0)\n(1284, 1283, 0)\n(1284, 1285, 0)\n(1284, 964, 0)\n(1284, 1604, 0)\n(1285, 1284, 0)\n(1285, 1286, 0)\n(1285, 965, 0)\n(1285, 1605, 0)\n(1286, 1285, 0)\n(1286, 1287, 0)\n(1286, 966, 0)\n(1286, 1606, 0)\n(1287, 1286, 0)\n(1287, 1288, 0)\n(1287, 967, 0)\n(1287, 1607, 0)\n(1288, 1287, 0)\n(1288, 1289, 0)\n(1288, 968, 0)\n(1288, 1608, 0)\n(1289, 1288, 0)\n(1289, 1290, 0)\n(1289, 969, 0)\n(1289, 1609, 0)\n(1290, 1289, 0)\n(1290, 1291, 0)\n(1290, 970, 0)\n(1290, 1610, 0)\n(1291, 1290, 0)\n(1291, 1292, 0)\n(1291, 971, 0)\n(1291, 1611, 0)\n(1292, 1291, 0)\n(1292, 1293, 0)\n(1292, 972, 0)\n(1292, 1612, 0)\n(1293, 1292, 0)\n(1293, 1294, 0)\n(1293, 973, 0)\n(1293, 1613, 0)\n(1294, 1293, 0)\n(1294, 1295, 0)\n(1294, 974, 0)\n(1294, 1614, 0)\n(1295, 1294, 0)\n(1295, 975, 0)\n(1296, 1297, 0)\n(1297, 1296, 0)\n(1298, 1299, 0)\n(1298, 978, 0)\n(1299, 1298, 0)\n(1299, 1300, 0)\n(1299, 979, 0)\n(1299, 1619, 0)\n(1300, 1299, 0)\n(1300, 1301, 0)\n(1300, 980, 0)\n(1300, 1620, 0)\n(1301, 1300, 0)\n(1301, 1302, 0)\n(1301, 981, 0)\n(1301, 1621, 0)\n(1302, 1301, 0)\n(1302, 1303, 0)\n(1302, 982, 0)\n(1302, 1622, 0)\n(1303, 1302, 0)\n(1303, 1304, 0)\n(1303, 983, 0)\n(1303, 1623, 0)\n(1304, 1303, 0)\n(1304, 1305, 0)\n(1304, 984, 0)\n(1304, 1624, 0)\n(1305, 1304, 0)\n(1305, 1306, 0)\n(1305, 985, 0)\n(1305, 1625, 0)\n(1306, 1305, 0)\n(1306, 1307, 0)\n(1306, 986, 0)\n(1306, 1626, 0)\n(1307, 1306, 0)\n(1307, 1308, 0)\n(1307, 987, 0)\n(1307, 1627, 0)\n(1308, 1307, 0)\n(1308, 1309, 0)\n(1308, 988, 0)\n(1308, 1628, 0)\n(1309, 1308, 0)\n(1309, 1310, 0)\n(1309, 989, 0)\n(1309, 1629, 0)\n(1310, 1309, 0)\n(1310, 1311, 0)\n(1310, 990, 0)\n(1310, 1630, 0)\n(1311, 1310, 0)\n(1311, 1312, 0)\n(1311, 991, 0)\n(1311, 1631, 0)\n(1312, 1311, 0)\n(1312, 1313, 0)\n(1312, 992, 0)\n(1312, 1632, 0)\n(1313, 1312, 0)\n(1313, 1314, 0)\n(1313, 993, 0)\n(1313, 1633, 0)\n(1314, 1313, 0)\n(1314, 1315, 0)\n(1314, 994, 0)\n(1314, 1634, 0)\n(1315, 1314, 0)\n(1315, 1316, 0)\n(1315, 995, 0)\n(1315, 1635, 0)\n(1316, 1315, 0)\n(1316, 1317, 0)\n(1316, 996, 0)\n(1316, 1636, 0)\n(1317, 1316, 0)\n(1317, 1318, 0)\n(1317, 997, 0)\n(1317, 1637, 0)\n(1318, 1317, 0)\n(1318, 1319, 0)\n(1318, 998, 0)\n(1318, 1638, 0)\n(1319, 1318, 0)\n(1319, 1320, 0)\n(1319, 999, 0)\n(1319, 1639, 0)\n(1320, 1319, 0)\n(1320, 1321, 0)\n(1320, 1000, 0)\n(1320, 1640, 0)\n(1321, 1320, 0)\n(1321, 1322, 0)\n(1321, 1001, 0)\n(1321, 1641, 0)\n(1322, 1321, 0)\n(1322, 1323, 0)\n(1322, 1002, 0)\n(1322, 1642, 0)\n(1323, 1322, 0)\n(1323, 1324, 0)\n(1323, 1003, 0)\n(1323, 1643, 0)\n(1324, 1323, 0)\n(1324, 1325, 0)\n(1324, 1004, 0)\n(1324, 1644, 0)\n(1325, 1324, 0)\n(1325, 1326, 0)\n(1325, 1005, 0)\n(1325, 1645, 0)\n(1326, 1325, 0)\n(1326, 1327, 0)\n(1326, 1006, 0)\n(1326, 1646, 0)\n(1327, 1326, 0)\n(1327, 1328, 0)\n(1327, 1007, 0)\n(1327, 1647, 0)\n(1328, 1327, 0)\n(1328, 1329, 0)\n(1328, 1008, 0)\n(1328, 1648, 0)\n(1329, 1328, 0)\n(1329, 1330, 0)\n(1329, 1009, 0)\n(1329, 1649, 0)\n(1330, 1329, 0)\n(1330, 1331, 0)\n(1330, 1010, 0)\n(1330, 1650, 0)\n(1331, 1330, 0)\n(1331, 1332, 0)\n(1331, 1011, 0)\n(1331, 1651, 0)\n(1332, 1331, 0)\n(1332, 1333, 0)\n(1332, 1012, 0)\n(1332, 1652, 0)\n(1333, 1332, 0)\n(1333, 1334, 0)\n(1333, 1013, 0)\n(1333, 1653, 0)\n(1334, 1333, 0)\n(1334, 1335, 0)\n(1334, 1014, 0)\n(1334, 1654, 0)\n(1335, 1334, 0)\n(1335, 1336, 0)\n(1335, 1015, 0)\n(1335, 1655, 0)\n(1336, 1335, 0)\n(1336, 1337, 0)\n(1336, 1016, 0)\n(1336, 1656, 0)\n(1337, 1336, 0)\n(1337, 1338, 0)\n(1337, 1017, 0)\n(1337, 1657, 0)\n(1338, 1337, 0)\n(1338, 1339, 0)\n(1338, 1018, 0)\n(1338, 1658, 0)\n(1339, 1338, 0)\n(1339, 1340, 0)\n(1339, 1019, 0)\n(1339, 1659, 0)\n(1340, 1339, 0)\n(1340, 1341, 0)\n(1340, 1020, 0)\n(1340, 1660, 0)\n(1341, 1340, 0)\n(1341, 1342, 0)\n(1341, 1021, 0)\n(1341, 1661, 0)\n(1342, 1341, 0)\n(1342, 1343, 0)\n(1342, 1022, 0)\n(1342, 1662, 0)\n(1343, 1342, 0)\n(1343, 1344, 0)\n(1343, 1023, 0)\n(1343, 1663, 0)\n(1344, 1343, 0)\n(1344, 1345, 0)\n(1344, 1024, 0)\n(1344, 1664, 0)\n(1345, 1344, 0)\n(1345, 1346, 0)\n(1345, 1025, 0)\n(1345, 1665, 0)\n(1346, 1345, 0)\n(1346, 1347, 0)\n(1346, 1026, 0)\n(1346, 1666, 0)\n(1347, 1346, 0)\n(1347, 1348, 0)\n(1347, 1027, 0)\n(1347, 1667, 0)\n(1348, 1347, 0)\n(1348, 1349, 0)\n(1348, 1028, 0)\n(1348, 1668, 0)\n(1349, 1348, 0)\n(1349, 1350, 0)\n(1349, 1029, 0)\n(1349, 1669, 0)\n(1350, 1349, 0)\n(1350, 1351, 0)\n(1350, 1030, 0)\n(1350, 1670, 0)\n(1351, 1350, 0)\n(1351, 1352, 0)\n(1351, 1031, 0)\n(1351, 1671, 0)\n(1352, 1351, 0)\n(1352, 1353, 0)\n(1352, 1032, 0)\n(1352, 1672, 0)\n(1353, 1352, 0)\n(1353, 1354, 0)\n(1353, 1033, 0)\n(1353, 1673, 0)\n(1354, 1353, 0)\n(1354, 1355, 0)\n(1354, 1034, 0)\n(1354, 1674, 0)\n(1355, 1354, 0)\n(1355, 1356, 0)\n(1355, 1035, 0)\n(1355, 1675, 0)\n(1356, 1355, 0)\n(1356, 1357, 0)\n(1356, 1036, 0)\n(1356, 1676, 0)\n(1357, 1356, 0)\n(1357, 1358, 0)\n(1357, 1037, 0)\n(1357, 1677, 0)\n(1358, 1357, 0)\n(1358, 1359, 0)\n(1358, 1038, 0)\n(1358, 1678, 0)\n(1359, 1358, 0)\n(1359, 1360, 0)\n(1359, 1039, 0)\n(1359, 1679, 0)\n(1360, 1359, 0)\n(1360, 1361, 0)\n(1360, 1040, 0)\n(1360, 1680, 0)\n(1361, 1360, 0)\n(1361, 1362, 0)\n(1361, 1041, 0)\n(1361, 1681, 0)\n(1362, 1361, 0)\n(1362, 1363, 0)\n(1362, 1042, 0)\n(1362, 1682, 0)\n(1363, 1362, 0)\n(1363, 1364, 0)\n(1363, 1043, 0)\n(1363, 1683, 0)\n(1364, 1363, 0)\n(1364, 1365, 0)\n(1364, 1044, 0)\n(1364, 1684, 0)\n(1365, 1364, 0)\n(1365, 1366, 0)\n(1365, 1045, 0)\n(1365, 1685, 0)\n(1366, 1365, 0)\n(1366, 1367, 0)\n(1366, 1046, 0)\n(1366, 1686, 0)\n(1367, 1366, 0)\n(1367, 1368, 0)\n(1367, 1047, 0)\n(1367, 1687, 0)\n(1368, 1367, 0)\n(1368, 1369, 0)\n(1368, 1048, 0)\n(1368, 1688, 0)\n(1369, 1368, 0)\n(1369, 1370, 0)\n(1369, 1049, 0)\n(1369, 1689, 0)\n(1370, 1369, 0)\n(1370, 1371, 0)\n(1370, 1050, 0)\n(1370, 1690, 0)\n(1371, 1370, 0)\n(1371, 1372, 0)\n(1371, 1051, 0)\n(1371, 1691, 0)\n(1372, 1371, 0)\n(1372, 1373, 0)\n(1372, 1052, 0)\n(1372, 1692, 0)\n(1373, 1372, 0)\n(1373, 1374, 0)\n(1373, 1053, 0)\n(1373, 1693, 0)\n(1374, 1373, 0)\n(1374, 1375, 0)\n(1374, 1054, 0)\n(1374, 1694, 0)\n(1375, 1374, 0)\n(1375, 1376, 0)\n(1375, 1055, 0)\n(1375, 1695, 0)\n(1376, 1375, 0)\n(1376, 1377, 0)\n(1376, 1056, 0)\n(1376, 1696, 0)\n(1377, 1376, 0)\n(1377, 1378, 0)\n(1377, 1057, 0)\n(1377, 1697, 0)\n(1378, 1377, 0)\n(1378, 1379, 0)\n(1378, 1058, 0)\n(1378, 1698, 0)\n(1379, 1378, 0)\n(1379, 1380, 0)\n(1379, 1059, 0)\n(1379, 1699, 0)\n(1380, 1379, 0)\n(1380, 1381, 0)\n(1380, 1060, 0)\n(1380, 1700, 0)\n(1381, 1380, 0)\n(1381, 1382, 0)\n(1381, 1061, 0)\n(1381, 1701, 0)\n(1382, 1381, 0)\n(1382, 1383, 0)\n(1382, 1062, 0)\n(1382, 1702, 0)\n(1383, 1382, 0)\n(1383, 1384, 0)\n(1383, 1063, 0)\n(1383, 1703, 0)\n(1384, 1383, 0)\n(1384, 1385, 0)\n(1384, 1064, 0)\n(1384, 1704, 0)\n(1385, 1384, 0)\n(1385, 1386, 0)\n(1385, 1065, 0)\n(1385, 1705, 0)\n(1386, 1385, 0)\n(1386, 1387, 0)\n(1386, 1066, 0)\n(1386, 1706, 0)\n(1387, 1386, 0)\n(1387, 1388, 0)\n(1387, 1067, 0)\n(1387, 1707, 0)\n(1388, 1387, 0)\n(1388, 1389, 0)\n(1388, 1068, 0)\n(1388, 1708, 0)\n(1389, 1388, 0)\n(1389, 1390, 0)\n(1389, 1069, 0)\n(1389, 1709, 0)\n(1390, 1389, 0)\n(1390, 1391, 0)\n(1390, 1070, 0)\n(1390, 1710, 0)\n(1391, 1390, 0)\n(1391, 1392, 0)\n(1391, 1071, 0)\n(1391, 1711, 0)\n(1392, 1391, 0)\n(1392, 1393, 0)\n(1392, 1072, 0)\n(1392, 1712, 0)\n(1393, 1392, 0)\n(1393, 1394, 0)\n(1393, 1073, 0)\n(1393, 1713, 0)\n(1394, 1393, 0)\n(1394, 1395, 0)\n(1394, 1074, 0)\n(1394, 1714, 0)\n(1395, 1394, 0)\n(1395, 1396, 0)\n(1395, 1075, 0)\n(1395, 1715, 0)\n(1396, 1395, 0)\n(1396, 1397, 0)\n(1396, 1076, 0)\n(1396, 1716, 0)\n(1397, 1396, 0)\n(1397, 1398, 0)\n(1397, 1077, 0)\n(1397, 1717, 0)\n(1398, 1397, 0)\n(1398, 1399, 0)\n(1398, 1078, 0)\n(1398, 1718, 0)\n(1399, 1398, 0)\n(1399, 1400, 0)\n(1399, 1079, 0)\n(1399, 1719, 0)\n(1400, 1399, 0)\n(1400, 1401, 0)\n(1400, 1080, 0)\n(1400, 1720, 0)\n(1401, 1400, 0)\n(1401, 1402, 0)\n(1401, 1081, 0)\n(1401, 1721, 0)\n(1402, 1401, 0)\n(1402, 1403, 0)\n(1402, 1082, 0)\n(1402, 1722, 0)\n(1403, 1402, 0)\n(1403, 1404, 0)\n(1403, 1083, 0)\n(1403, 1723, 0)\n(1404, 1403, 0)\n(1404, 1405, 0)\n(1404, 1084, 0)\n(1404, 1724, 0)\n(1405, 1404, 0)\n(1405, 1406, 0)\n(1405, 1085, 0)\n(1405, 1725, 0)\n(1406, 1405, 0)\n(1406, 1407, 0)\n(1406, 1086, 0)\n(1406, 1726, 0)\n(1407, 1406, 0)\n(1407, 1408, 0)\n(1407, 1087, 0)\n(1407, 1727, 0)\n(1408, 1407, 0)\n(1408, 1409, 0)\n(1408, 1088, 0)\n(1408, 1728, 0)\n(1409, 1408, 0)\n(1409, 1410, 0)\n(1409, 1089, 0)\n(1409, 1729, 0)\n(1410, 1409, 0)\n(1410, 1411, 0)\n(1410, 1090, 0)\n(1410, 1730, 0)\n(1411, 1410, 0)\n(1411, 1412, 0)\n(1411, 1091, 0)\n(1411, 1731, 0)\n(1412, 1411, 0)\n(1412, 1413, 0)\n(1412, 1092, 0)\n(1412, 1732, 0)\n(1413, 1412, 0)\n(1413, 1414, 0)\n(1413, 1093, 0)\n(1413, 1733, 0)\n(1414, 1413, 0)\n(1414, 1415, 0)\n(1414, 1094, 0)\n(1414, 1734, 0)\n(1415, 1414, 0)\n(1415, 1416, 0)\n(1415, 1095, 0)\n(1415, 1735, 0)\n(1416, 1415, 0)\n(1416, 1417, 0)\n(1416, 1096, 0)\n(1416, 1736, 0)\n(1417, 1416, 0)\n(1417, 1418, 0)\n(1417, 1097, 0)\n(1417, 1737, 0)\n(1418, 1417, 0)\n(1418, 1419, 0)\n(1418, 1098, 0)\n(1418, 1738, 0)\n(1419, 1418, 0)\n(1419, 1420, 0)\n(1419, 1099, 0)\n(1419, 1739, 0)\n(1420, 1419, 0)\n(1420, 1421, 0)\n(1420, 1100, 0)\n(1420, 1740, 0)\n(1421, 1420, 0)\n(1421, 1422, 0)\n(1421, 1101, 0)\n(1421, 1741, 0)\n(1422, 1421, 0)\n(1422, 1423, 0)\n(1422, 1102, 0)\n(1422, 1742, 0)\n(1423, 1422, 0)\n(1423, 1424, 0)\n(1423, 1103, 0)\n(1423, 1743, 0)\n(1424, 1423, 0)\n(1424, 1425, 0)\n(1424, 1104, 0)\n(1424, 1744, 0)\n(1425, 1424, 0)\n(1425, 1426, 0)\n(1425, 1105, 0)\n(1425, 1745, 0)\n(1426, 1425, 0)\n(1426, 1427, 0)\n(1426, 1106, 0)\n(1426, 1746, 0)\n(1427, 1426, 0)\n(1427, 1428, 0)\n(1427, 1107, 0)\n(1427, 1747, 0)\n(1428, 1427, 0)\n(1428, 1429, 0)\n(1428, 1108, 0)\n(1428, 1748, 0)\n(1429, 1428, 0)\n(1429, 1430, 0)\n(1429, 1109, 0)\n(1429, 1749, 0)\n(1430, 1429, 0)\n(1430, 1431, 0)\n(1430, 1110, 0)\n(1430, 1750, 0)\n(1431, 1430, 0)\n(1431, 1432, 0)\n(1431, 1111, 0)\n(1431, 1751, 0)\n(1432, 1431, 0)\n(1432, 1433, 0)\n(1432, 1112, 0)\n(1432, 1752, 0)\n(1433, 1432, 0)\n(1433, 1434, 0)\n(1433, 1113, 0)\n(1433, 1753, 0)\n(1434, 1433, 0)\n(1434, 1435, 0)\n(1434, 1114, 0)\n(1434, 1754, 0)\n(1435, 1434, 0)\n(1435, 1436, 0)\n(1435, 1115, 0)\n(1435, 1755, 0)\n(1436, 1435, 0)\n(1436, 1437, 0)\n(1436, 1116, 0)\n(1436, 1756, 0)\n(1437, 1436, 0)\n(1437, 1438, 0)\n(1437, 1117, 0)\n(1437, 1757, 0)\n(1438, 1437, 0)\n(1438, 1439, 0)\n(1438, 1118, 0)\n(1438, 1758, 0)\n(1439, 1438, 0)\n(1439, 1440, 0)\n(1439, 1119, 0)\n(1439, 1759, 0)\n(1440, 1439, 0)\n(1440, 1441, 0)\n(1440, 1120, 0)\n(1440, 1760, 0)\n(1441, 1440, 0)\n(1441, 1442, 0)\n(1441, 1121, 0)\n(1441, 1761, 0)\n(1442, 1441, 0)\n(1442, 1443, 0)\n(1442, 1122, 0)\n(1442, 1762, 0)\n(1443, 1442, 0)\n(1443, 1444, 0)\n(1443, 1123, 0)\n(1443, 1763, 0)\n(1444, 1443, 0)\n(1444, 1445, 0)\n(1444, 1124, 0)\n(1444, 1764, 0)\n(1445, 1444, 0)\n(1445, 1446, 0)\n(1445, 1125, 0)\n(1445, 1765, 0)\n(1446, 1445, 0)\n(1446, 1447, 0)\n(1446, 1126, 0)\n(1446, 1766, 0)\n(1447, 1446, 0)\n(1447, 1448, 0)\n(1447, 1127, 0)\n(1447, 1767, 0)\n(1448, 1447, 0)\n(1448, 1449, 0)\n(1448, 1128, 0)\n(1448, 1768, 0)\n(1449, 1448, 0)\n(1449, 1450, 0)\n(1449, 1129, 0)\n(1449, 1769, 0)\n(1450, 1449, 0)\n(1450, 1451, 0)\n(1450, 1130, 0)\n(1450, 1770, 0)\n(1451, 1450, 0)\n(1451, 1452, 0)\n(1451, 1131, 0)\n(1451, 1771, 0)\n(1452, 1451, 0)\n(1452, 1453, 0)\n(1452, 1132, 0)\n(1452, 1772, 0)\n(1453, 1452, 0)\n(1453, 1454, 0)\n(1453, 1133, 0)\n(1453, 1773, 0)\n(1454, 1453, 0)\n(1454, 1455, 0)\n(1454, 1134, 0)\n(1454, 1774, 0)\n(1455, 1454, 0)\n(1455, 1456, 0)\n(1455, 1135, 0)\n(1455, 1775, 0)\n(1456, 1455, 0)\n(1456, 1457, 0)\n(1456, 1136, 0)\n(1456, 1776, 0)\n(1457, 1456, 0)\n(1457, 1458, 0)\n(1457, 1137, 0)\n(1457, 1777, 0)\n(1458, 1457, 0)\n(1458, 1459, 0)\n(1458, 1138, 0)\n(1458, 1778, 0)\n(1459, 1458, 0)\n(1459, 1460, 0)\n(1459, 1139, 0)\n(1459, 1779, 0)\n(1460, 1459, 0)\n(1460, 1461, 0)\n(1460, 1140, 0)\n(1460, 1780, 0)\n(1461, 1460, 0)\n(1461, 1462, 0)\n(1461, 1141, 0)\n(1461, 1781, 0)\n(1462, 1461, 0)\n(1462, 1463, 0)\n(1462, 1142, 0)\n(1462, 1782, 0)\n(1463, 1462, 0)\n(1463, 1464, 0)\n(1463, 1143, 0)\n(1463, 1783, 0)\n(1464, 1463, 0)\n(1464, 1465, 0)\n(1464, 1144, 0)\n(1464, 1784, 0)\n(1465, 1464, 0)\n(1465, 1466, 0)\n(1465, 1145, 0)\n(1465, 1785, 0)\n(1466, 1465, 0)\n(1466, 1467, 0)\n(1466, 1146, 0)\n(1466, 1786, 0)\n(1467, 1466, 0)\n(1467, 1468, 0)\n(1467, 1147, 0)\n(1467, 1787, 0)\n(1468, 1467, 0)\n(1468, 1469, 0)\n(1468, 1148, 0)\n(1468, 1788, 0)\n(1469, 1468, 0)\n(1469, 1470, 0)\n(1469, 1149, 0)\n(1469, 1789, 0)\n(1470, 1469, 0)\n(1470, 1471, 0)\n(1470, 1150, 0)\n(1470, 1790, 0)\n(1471, 1470, 0)\n(1471, 1472, 0)\n(1471, 1151, 0)\n(1471, 1791, 0)\n(1472, 1471, 0)\n(1472, 1473, 0)\n(1472, 1152, 0)\n(1472, 1792, 0)\n(1473, 1472, 0)\n(1473, 1474, 0)\n(1473, 1153, 0)\n(1473, 1793, 0)\n(1474, 1473, 0)\n(1474, 1475, 0)\n(1474, 1154, 0)\n(1474, 1794, 0)\n(1475, 1474, 0)\n(1475, 1476, 0)\n(1475, 1155, 0)\n(1475, 1795, 0)\n(1476, 1475, 0)\n(1476, 1477, 0)\n(1476, 1156, 0)\n(1476, 1796, 0)\n(1477, 1476, 0)\n(1477, 1478, 0)\n(1477, 1157, 0)\n(1477, 1797, 0)\n(1478, 1477, 0)\n(1478, 1479, 0)\n(1478, 1158, 0)\n(1478, 1798, 0)\n(1479, 1478, 0)\n(1479, 1480, 0)\n(1479, 1159, 0)\n(1479, 1799, 0)\n(1480, 1479, 0)\n(1480, 1481, 0)\n(1480, 1160, 0)\n(1480, 1800, 0)\n(1481, 1480, 0)\n(1481, 1482, 0)\n(1481, 1161, 0)\n(1481, 1801, 0)\n(1482, 1481, 0)\n(1482, 1483, 0)\n(1482, 1162, 0)\n(1482, 1802, 0)\n(1483, 1482, 0)\n(1483, 1484, 0)\n(1483, 1163, 0)\n(1483, 1803, 0)\n(1484, 1483, 0)\n(1484, 1485, 0)\n(1484, 1164, 0)\n(1484, 1804, 0)\n(1485, 1484, 0)\n(1485, 1486, 0)\n(1485, 1165, 0)\n(1485, 1805, 0)\n(1486, 1485, 0)\n(1486, 1487, 0)\n(1486, 1166, 0)\n(1486, 1806, 0)\n(1487, 1486, 0)\n(1487, 1488, 0)\n(1487, 1167, 0)\n(1487, 1807, 0)\n(1488, 1487, 0)\n(1488, 1489, 0)\n(1488, 1168, 0)\n(1488, 1808, 0)\n(1489, 1488, 0)\n(1489, 1490, 0)\n(1489, 1169, 0)\n(1489, 1809, 0)\n(1490, 1489, 0)\n(1490, 1491, 0)\n(1490, 1170, 0)\n(1490, 1810, 0)\n(1491, 1490, 0)\n(1491, 1492, 0)\n(1491, 1171, 0)\n(1491, 1811, 0)\n(1492, 1491, 0)\n(1492, 1493, 0)\n(1492, 1172, 0)\n(1492, 1812, 0)\n(1493, 1492, 0)\n(1493, 1494, 0)\n(1493, 1173, 0)\n(1493, 1813, 0)\n(1494, 1493, 0)\n(1494, 1495, 0)\n(1494, 1174, 0)\n(1494, 1814, 0)\n(1495, 1494, 0)\n(1495, 1496, 0)\n(1495, 1175, 0)\n(1495, 1815, 0)\n(1496, 1495, 0)\n(1496, 1497, 0)\n(1496, 1176, 0)\n(1496, 1816, 0)\n(1497, 1496, 0)\n(1497, 1498, 0)\n(1497, 1177, 0)\n(1497, 1817, 0)\n(1498, 1497, 0)\n(1498, 1499, 0)\n(1498, 1178, 0)\n(1498, 1818, 0)\n(1499, 1498, 0)\n(1499, 1500, 0)\n(1499, 1179, 0)\n(1499, 1819, 0)\n(1500, 1499, 0)\n(1500, 1501, 0)\n(1500, 1180, 0)\n(1500, 1820, 0)\n(1501, 1500, 0)\n(1501, 1502, 0)\n(1501, 1181, 0)\n(1501, 1821, 0)\n(1502, 1501, 0)\n(1502, 1503, 0)\n(1502, 1182, 0)\n(1502, 1822, 0)\n(1503, 1502, 0)\n(1503, 1504, 0)\n(1503, 1183, 0)\n(1503, 1823, 0)\n(1504, 1503, 0)\n(1504, 1505, 0)\n(1504, 1184, 0)\n(1504, 1824, 0)\n(1505, 1504, 0)\n(1505, 1506, 0)\n(1505, 1185, 0)\n(1505, 1825, 0)\n(1506, 1505, 0)\n(1506, 1507, 0)\n(1506, 1186, 0)\n(1506, 1826, 0)\n(1507, 1506, 0)\n(1507, 1508, 0)\n(1507, 1187, 0)\n(1507, 1827, 0)\n(1508, 1507, 0)\n(1508, 1509, 0)\n(1508, 1188, 0)\n(1508, 1828, 0)\n(1509, 1508, 0)\n(1509, 1510, 0)\n(1509, 1189, 0)\n(1509, 1829, 0)\n(1510, 1509, 0)\n(1510, 1511, 0)\n(1510, 1190, 0)\n(1510, 1830, 0)\n(1511, 1510, 0)\n(1511, 1512, 0)\n(1511, 1191, 0)\n(1511, 1831, 0)\n(1512, 1511, 0)\n(1512, 1513, 0)\n(1512, 1192, 0)\n(1512, 1832, 0)\n(1513, 1512, 0)\n(1513, 1514, 0)\n(1513, 1193, 0)\n(1513, 1833, 0)\n(1514, 1513, 0)\n(1514, 1515, 0)\n(1514, 1194, 0)\n(1514, 1834, 0)\n(1515, 1514, 0)\n(1515, 1516, 0)\n(1515, 1195, 0)\n(1515, 1835, 0)\n(1516, 1515, 0)\n(1516, 1517, 0)\n(1516, 1196, 0)\n(1516, 1836, 0)\n(1517, 1516, 0)\n(1517, 1518, 0)\n(1517, 1197, 0)\n(1517, 1837, 0)\n(1518, 1517, 0)\n(1518, 1519, 0)\n(1518, 1198, 0)\n(1518, 1838, 0)\n(1519, 1518, 0)\n(1519, 1520, 0)\n(1519, 1199, 0)\n(1519, 1839, 0)\n(1520, 1519, 0)\n(1520, 1521, 0)\n(1520, 1200, 0)\n(1520, 1840, 0)\n(1521, 1520, 0)\n(1521, 1522, 0)\n(1521, 1201, 0)\n(1521, 1841, 0)\n(1522, 1521, 0)\n(1522, 1523, 0)\n(1522, 1202, 0)\n(1522, 1842, 0)\n(1523, 1522, 0)\n(1523, 1524, 0)\n(1523, 1203, 0)\n(1523, 1843, 0)\n(1524, 1523, 0)\n(1524, 1525, 0)\n(1524, 1204, 0)\n(1524, 1844, 0)\n(1525, 1524, 0)\n(1525, 1526, 0)\n(1525, 1205, 0)\n(1525, 1845, 0)\n(1526, 1525, 0)\n(1526, 1527, 0)\n(1526, 1206, 0)\n(1526, 1846, 0)\n(1527, 1526, 0)\n(1527, 1528, 0)\n(1527, 1207, 0)\n(1527, 1847, 0)\n(1528, 1527, 0)\n(1528, 1529, 0)\n(1528, 1208, 0)\n(1528, 1848, 0)\n(1529, 1528, 0)\n(1529, 1530, 0)\n(1529, 1209, 0)\n(1529, 1849, 0)\n(1530, 1529, 0)\n(1530, 1531, 0)\n(1530, 1210, 0)\n(1530, 1850, 0)\n(1531, 1530, 0)\n(1531, 1532, 0)\n(1531, 1211, 0)\n(1531, 1851, 0)\n(1532, 1531, 0)\n(1532, 1533, 0)\n(1532, 1212, 0)\n(1532, 1852, 0)\n(1533, 1532, 0)\n(1533, 1534, 0)\n(1533, 1213, 0)\n(1533, 1853, 0)\n(1534, 1533, 0)\n(1534, 1535, 0)\n(1534, 1214, 0)\n(1534, 1854, 0)\n(1535, 1534, 0)\n(1535, 1536, 0)\n(1535, 1215, 0)\n(1535, 1855, 0)\n(1536, 1535, 0)\n(1536, 1537, 0)\n(1536, 1216, 0)\n(1536, 1856, 0)\n(1537, 1536, 0)\n(1537, 1538, 0)\n(1537, 1217, 0)\n(1537, 1857, 0)\n(1538, 1537, 0)\n(1538, 1539, 0)\n(1538, 1218, 0)\n(1538, 1858, 0)\n(1539, 1538, 0)\n(1539, 1540, 0)\n(1539, 1219, 0)\n(1539, 1859, 0)\n(1540, 1539, 0)\n(1540, 1541, 0)\n(1540, 1220, 0)\n(1540, 1860, 0)\n(1541, 1540, 0)\n(1541, 1542, 0)\n(1541, 1221, 0)\n(1541, 1861, 0)\n(1542, 1541, 0)\n(1542, 1543, 0)\n(1542, 1222, 0)\n(1542, 1862, 0)\n(1543, 1542, 0)\n(1543, 1544, 0)\n(1543, 1223, 0)\n(1543, 1863, 0)\n(1544, 1543, 0)\n(1544, 1545, 0)\n(1544, 1224, 0)\n(1544, 1864, 0)\n(1545, 1544, 0)\n(1545, 1546, 0)\n(1545, 1225, 0)\n(1545, 1865, 0)\n(1546, 1545, 0)\n(1546, 1547, 0)\n(1546, 1226, 0)\n(1546, 1866, 0)\n(1547, 1546, 0)\n(1547, 1548, 0)\n(1547, 1227, 0)\n(1547, 1867, 0)\n(1548, 1547, 0)\n(1548, 1549, 0)\n(1548, 1228, 0)\n(1548, 1868, 0)\n(1549, 1548, 0)\n(1549, 1550, 0)\n(1549, 1229, 0)\n(1549, 1869, 0)\n(1550, 1549, 0)\n(1550, 1551, 0)\n(1550, 1230, 0)\n(1550, 1870, 0)\n(1551, 1550, 0)\n(1551, 1552, 0)\n(1551, 1231, 0)\n(1551, 1871, 0)\n(1552, 1551, 0)\n(1552, 1553, 0)\n(1552, 1232, 0)\n(1552, 1872, 0)\n(1553, 1552, 0)\n(1553, 1554, 0)\n(1553, 1233, 0)\n(1553, 1873, 0)\n(1554, 1553, 0)\n(1554, 1555, 0)\n(1554, 1234, 0)\n(1554, 1874, 0)\n(1555, 1554, 0)\n(1555, 1556, 0)\n(1555, 1235, 0)\n(1555, 1875, 0)\n(1556, 1555, 0)\n(1556, 1557, 0)\n(1556, 1236, 0)\n(1556, 1876, 0)\n(1557, 1556, 0)\n(1557, 1558, 0)\n(1557, 1237, 0)\n(1557, 1877, 0)\n(1558, 1557, 0)\n(1558, 1559, 0)\n(1558, 1238, 0)\n(1558, 1878, 0)\n(1559, 1558, 0)\n(1559, 1560, 0)\n(1559, 1239, 0)\n(1559, 1879, 0)\n(1560, 1559, 0)\n(1560, 1561, 0)\n(1560, 1240, 0)\n(1560, 1880, 0)\n(1561, 1560, 0)\n(1561, 1562, 0)\n(1561, 1241, 0)\n(1561, 1881, 0)\n(1562, 1561, 0)\n(1562, 1563, 0)\n(1562, 1242, 0)\n(1562, 1882, 0)\n(1563, 1562, 0)\n(1563, 1564, 0)\n(1563, 1243, 0)\n(1563, 1883, 0)\n(1564, 1563, 0)\n(1564, 1565, 0)\n(1564, 1244, 0)\n(1564, 1884, 0)\n(1565, 1564, 0)\n(1565, 1566, 0)\n(1565, 1245, 0)\n(1565, 1885, 0)\n(1566, 1565, 0)\n(1566, 1567, 0)\n(1566, 1246, 0)\n(1566, 1886, 0)\n(1567, 1566, 0)\n(1567, 1568, 0)\n(1567, 1247, 0)\n(1567, 1887, 0)\n(1568, 1567, 0)\n(1568, 1569, 0)\n(1568, 1248, 0)\n(1568, 1888, 0)\n(1569, 1568, 0)\n(1569, 1570, 0)\n(1569, 1249, 0)\n(1569, 1889, 0)\n(1570, 1569, 0)\n(1570, 1571, 0)\n(1570, 1250, 0)\n(1570, 1890, 0)\n(1571, 1570, 0)\n(1571, 1572, 0)\n(1571, 1251, 0)\n(1571, 1891, 0)\n(1572, 1571, 0)\n(1572, 1573, 0)\n(1572, 1252, 0)\n(1572, 1892, 0)\n(1573, 1572, 0)\n(1573, 1574, 0)\n(1573, 1253, 0)\n(1573, 1893, 0)\n(1574, 1573, 0)\n(1574, 1575, 0)\n(1574, 1254, 0)\n(1574, 1894, 0)\n(1575, 1574, 0)\n(1575, 1576, 0)\n(1575, 1255, 0)\n(1575, 1895, 0)\n(1576, 1575, 0)\n(1576, 1577, 0)\n(1576, 1256, 0)\n(1576, 1896, 0)\n(1577, 1576, 0)\n(1577, 1578, 0)\n(1577, 1257, 0)\n(1577, 1897, 0)\n(1578, 1577, 0)\n(1578, 1579, 0)\n(1578, 1258, 0)\n(1578, 1898, 0)\n(1579, 1578, 0)\n(1579, 1580, 0)\n(1579, 1259, 0)\n(1579, 1899, 0)\n(1580, 1579, 0)\n(1580, 1581, 0)\n(1580, 1260, 0)\n(1580, 1900, 0)\n(1581, 1580, 0)\n(1581, 1582, 0)\n(1581, 1261, 0)\n(1581, 1901, 0)\n(1582, 1581, 0)\n(1582, 1583, 0)\n(1582, 1262, 0)\n(1582, 1902, 0)\n(1583, 1582, 0)\n(1583, 1584, 0)\n(1583, 1263, 0)\n(1583, 1903, 0)\n(1584, 1583, 0)\n(1584, 1585, 0)\n(1584, 1264, 0)\n(1584, 1904, 0)\n(1585, 1584, 0)\n(1585, 1586, 0)\n(1585, 1265, 0)\n(1585, 1905, 0)\n(1586, 1585, 0)\n(1586, 1587, 0)\n(1586, 1266, 0)\n(1586, 1906, 0)\n(1587, 1586, 0)\n(1587, 1588, 0)\n(1587, 1267, 0)\n(1587, 1907, 0)\n(1588, 1587, 0)\n(1588, 1589, 0)\n(1588, 1268, 0)\n(1588, 1908, 0)\n(1589, 1588, 0)\n(1589, 1590, 0)\n(1589, 1269, 0)\n(1589, 1909, 0)\n(1590, 1589, 0)\n(1590, 1591, 0)\n(1590, 1270, 0)\n(1590, 1910, 0)\n(1591, 1590, 0)\n(1591, 1592, 0)\n(1591, 1271, 0)\n(1591, 1911, 0)\n(1592, 1591, 0)\n(1592, 1593, 0)\n(1592, 1272, 0)\n(1592, 1912, 0)\n(1593, 1592, 0)\n(1593, 1594, 0)\n(1593, 1273, 0)\n(1593, 1913, 0)\n(1594, 1593, 0)\n(1594, 1595, 0)\n(1594, 1274, 0)\n(1594, 1914, 0)\n(1595, 1594, 0)\n(1595, 1596, 0)\n(1595, 1275, 0)\n(1595, 1915, 0)\n(1596, 1595, 0)\n(1596, 1597, 0)\n(1596, 1276, 0)\n(1596, 1916, 0)\n(1597, 1596, 0)\n(1597, 1598, 0)\n(1597, 1277, 0)\n(1597, 1917, 0)\n(1598, 1597, 0)\n(1598, 1599, 0)\n(1598, 1278, 0)\n(1598, 1918, 0)\n(1599, 1598, 0)\n(1599, 1279, 0)\n(1599, 1919, 0)\n(1600, 1601, 0)\n(1600, 1280, 0)\n(1600, 1920, 0)\n(1601, 1600, 0)\n(1601, 1602, 0)\n(1601, 1281, 0)\n(1601, 1921, 0)\n(1602, 1601, 0)\n(1602, 1603, 0)\n(1602, 1282, 0)\n(1602, 1922, 0)\n(1603, 1602, 0)\n(1603, 1604, 0)\n(1603, 1283, 0)\n(1603, 1923, 0)\n(1604, 1603, 0)\n(1604, 1605, 0)\n(1604, 1284, 0)\n(1604, 1924, 0)\n(1605, 1604, 0)\n(1605, 1606, 0)\n(1605, 1285, 0)\n(1605, 1925, 0)\n(1606, 1605, 0)\n(1606, 1607, 0)\n(1606, 1286, 0)\n(1606, 1926, 0)\n(1607, 1606, 0)\n(1607, 1608, 0)\n(1607, 1287, 0)\n(1607, 1927, 0)\n(1608, 1607, 0)\n(1608, 1609, 0)\n(1608, 1288, 0)\n(1608, 1928, 0)\n(1609, 1608, 0)\n(1609, 1610, 0)\n(1609, 1289, 0)\n(1609, 1929, 0)\n(1610, 1609, 0)\n(1610, 1611, 0)\n(1610, 1290, 0)\n(1610, 1930, 0)\n(1611, 1610, 0)\n(1611, 1612, 0)\n(1611, 1291, 0)\n(1611, 1931, 0)\n(1612, 1611, 0)\n(1612, 1613, 0)\n(1612, 1292, 0)\n(1612, 1932, 0)\n(1613, 1612, 0)\n(1613, 1614, 0)\n(1613, 1293, 0)\n(1613, 1933, 0)\n(1614, 1613, 0)\n(1614, 1294, 0)\n(1616, 1617, 0)\n(1617, 1616, 0)\n(1619, 1620, 0)\n(1619, 1299, 0)\n(1619, 1939, 0)\n(1620, 1619, 0)\n(1620, 1621, 0)\n(1620, 1300, 0)\n(1620, 1940, 0)\n(1621, 1620, 0)\n(1621, 1622, 0)\n(1621, 1301, 0)\n(1621, 1941, 0)\n(1622, 1621, 0)\n(1622, 1623, 0)\n(1622, 1302, 0)\n(1622, 1942, 0)\n(1623, 1622, 0)\n(1623, 1624, 0)\n(1623, 1303, 0)\n(1623, 1943, 0)\n(1624, 1623, 0)\n(1624, 1625, 0)\n(1624, 1304, 0)\n(1625, 1624, 0)\n(1625, 1626, 0)\n(1625, 1305, 0)\n(1626, 1625, 0)\n(1626, 1627, 0)\n(1626, 1306, 0)\n(1627, 1626, 0)\n(1627, 1628, 0)\n(1627, 1307, 0)\n(1628, 1627, 0)\n(1628, 1629, 0)\n(1628, 1308, 0)\n(1629, 1628, 0)\n(1629, 1630, 0)\n(1629, 1309, 0)\n(1630, 1629, 0)\n(1630, 1631, 0)\n(1630, 1310, 0)\n(1631, 1630, 0)\n(1631, 1632, 0)\n(1631, 1311, 0)\n(1632, 1631, 0)\n(1632, 1633, 0)\n(1632, 1312, 0)\n(1633, 1632, 0)\n(1633, 1634, 0)\n(1633, 1313, 0)\n(1634, 1633, 0)\n(1634, 1635, 0)\n(1634, 1314, 0)\n(1635, 1634, 0)\n(1635, 1636, 0)\n(1635, 1315, 0)\n(1636, 1635, 0)\n(1636, 1637, 0)\n(1636, 1316, 0)\n(1637, 1636, 0)\n(1637, 1638, 0)\n(1637, 1317, 0)\n(1638, 1637, 0)\n(1638, 1639, 0)\n(1638, 1318, 0)\n(1639, 1638, 0)\n(1639, 1640, 0)\n(1639, 1319, 0)\n(1640, 1639, 0)\n(1640, 1641, 0)\n(1640, 1320, 0)\n(1641, 1640, 0)\n(1641, 1642, 0)\n(1641, 1321, 0)\n(1642, 1641, 0)\n(1642, 1643, 0)\n(1642, 1322, 0)\n(1643, 1642, 0)\n(1643, 1644, 0)\n(1643, 1323, 0)\n(1644, 1643, 0)\n(1644, 1645, 0)\n(1644, 1324, 0)\n(1645, 1644, 0)\n(1645, 1646, 0)\n(1645, 1325, 0)\n(1646, 1645, 0)\n(1646, 1647, 0)\n(1646, 1326, 0)\n(1647, 1646, 0)\n(1647, 1648, 0)\n(1647, 1327, 0)\n(1648, 1647, 0)\n(1648, 1649, 0)\n(1648, 1328, 0)\n(1649, 1648, 0)\n(1649, 1650, 0)\n(1649, 1329, 0)\n(1650, 1649, 0)\n(1650, 1651, 0)\n(1650, 1330, 0)\n(1651, 1650, 0)\n(1651, 1652, 0)\n(1651, 1331, 0)\n(1652, 1651, 0)\n(1652, 1653, 0)\n(1652, 1332, 0)\n(1653, 1652, 0)\n(1653, 1654, 0)\n(1653, 1333, 0)\n(1654, 1653, 0)\n(1654, 1655, 0)\n(1654, 1334, 0)\n(1655, 1654, 0)\n(1655, 1656, 0)\n(1655, 1335, 0)\n(1656, 1655, 0)\n(1656, 1657, 0)\n(1656, 1336, 0)\n(1657, 1656, 0)\n(1657, 1658, 0)\n(1657, 1337, 0)\n(1658, 1657, 0)\n(1658, 1659, 0)\n(1658, 1338, 0)\n(1659, 1658, 0)\n(1659, 1660, 0)\n(1659, 1339, 0)\n(1660, 1659, 0)\n(1660, 1661, 0)\n(1660, 1340, 0)\n(1661, 1660, 0)\n(1661, 1662, 0)\n(1661, 1341, 0)\n(1662, 1661, 0)\n(1662, 1663, 0)\n(1662, 1342, 0)\n(1663, 1662, 0)\n(1663, 1664, 0)\n(1663, 1343, 0)\n(1664, 1663, 0)\n(1664, 1665, 0)\n(1664, 1344, 0)\n(1665, 1664, 0)\n(1665, 1666, 0)\n(1665, 1345, 0)\n(1666, 1665, 0)\n(1666, 1667, 0)\n(1666, 1346, 0)\n(1667, 1666, 0)\n(1667, 1668, 0)\n(1667, 1347, 0)\n(1668, 1667, 0)\n(1668, 1669, 0)\n(1668, 1348, 0)\n(1669, 1668, 0)\n(1669, 1670, 0)\n(1669, 1349, 0)\n(1670, 1669, 0)\n(1670, 1671, 0)\n(1670, 1350, 0)\n(1671, 1670, 0)\n(1671, 1672, 0)\n(1671, 1351, 0)\n(1672, 1671, 0)\n(1672, 1673, 0)\n(1672, 1352, 0)\n(1673, 1672, 0)\n(1673, 1674, 0)\n(1673, 1353, 0)\n(1674, 1673, 0)\n(1674, 1675, 0)\n(1674, 1354, 0)\n(1675, 1674, 0)\n(1675, 1676, 0)\n(1675, 1355, 0)\n(1676, 1675, 0)\n(1676, 1677, 0)\n(1676, 1356, 0)\n(1677, 1676, 0)\n(1677, 1678, 0)\n(1677, 1357, 0)\n(1678, 1677, 0)\n(1678, 1679, 0)\n(1678, 1358, 0)\n(1679, 1678, 0)\n(1679, 1680, 0)\n(1679, 1359, 0)\n(1680, 1679, 0)\n(1680, 1681, 0)\n(1680, 1360, 0)\n(1681, 1680, 0)\n(1681, 1682, 0)\n(1681, 1361, 0)\n(1682, 1681, 0)\n(1682, 1683, 0)\n(1682, 1362, 0)\n(1683, 1682, 0)\n(1683, 1684, 0)\n(1683, 1363, 0)\n(1684, 1683, 0)\n(1684, 1685, 0)\n(1684, 1364, 0)\n(1685, 1684, 0)\n(1685, 1686, 0)\n(1685, 1365, 0)\n(1686, 1685, 0)\n(1686, 1687, 0)\n(1686, 1366, 0)\n(1687, 1686, 0)\n(1687, 1688, 0)\n(1687, 1367, 0)\n(1688, 1687, 0)\n(1688, 1689, 0)\n(1688, 1368, 0)\n(1689, 1688, 0)\n(1689, 1690, 0)\n(1689, 1369, 0)\n(1690, 1689, 0)\n(1690, 1691, 0)\n(1690, 1370, 0)\n(1691, 1690, 0)\n(1691, 1692, 0)\n(1691, 1371, 0)\n(1692, 1691, 0)\n(1692, 1693, 0)\n(1692, 1372, 0)\n(1693, 1692, 0)\n(1693, 1694, 0)\n(1693, 1373, 0)\n(1694, 1693, 0)\n(1694, 1695, 0)\n(1694, 1374, 0)\n(1695, 1694, 0)\n(1695, 1696, 0)\n(1695, 1375, 0)\n(1696, 1695, 0)\n(1696, 1697, 0)\n(1696, 1376, 0)\n(1697, 1696, 0)\n(1697, 1698, 0)\n(1697, 1377, 0)\n(1698, 1697, 0)\n(1698, 1699, 0)\n(1698, 1378, 0)\n(1699, 1698, 0)\n(1699, 1700, 0)\n(1699, 1379, 0)\n(1700, 1699, 0)\n(1700, 1701, 0)\n(1700, 1380, 0)\n(1701, 1700, 0)\n(1701, 1702, 0)\n(1701, 1381, 0)\n(1702, 1701, 0)\n(1702, 1703, 0)\n(1702, 1382, 0)\n(1703, 1702, 0)\n(1703, 1704, 0)\n(1703, 1383, 0)\n(1704, 1703, 0)\n(1704, 1705, 0)\n(1704, 1384, 0)\n(1705, 1704, 0)\n(1705, 1706, 0)\n(1705, 1385, 0)\n(1706, 1705, 0)\n(1706, 1707, 0)\n(1706, 1386, 0)\n(1707, 1706, 0)\n(1707, 1708, 0)\n(1707, 1387, 0)\n(1708, 1707, 0)\n(1708, 1709, 0)\n(1708, 1388, 0)\n(1709, 1708, 0)\n(1709, 1710, 0)\n(1709, 1389, 0)\n(1710, 1709, 0)\n(1710, 1711, 0)\n(1710, 1390, 0)\n(1711, 1710, 0)\n(1711, 1712, 0)\n(1711, 1391, 0)\n(1712, 1711, 0)\n(1712, 1713, 0)\n(1712, 1392, 0)\n(1713, 1712, 0)\n(1713, 1714, 0)\n(1713, 1393, 0)\n(1714, 1713, 0)\n(1714, 1715, 0)\n(1714, 1394, 0)\n(1715, 1714, 0)\n(1715, 1716, 0)\n(1715, 1395, 0)\n(1716, 1715, 0)\n(1716, 1717, 0)\n(1716, 1396, 0)\n(1717, 1716, 0)\n(1717, 1718, 0)\n(1717, 1397, 0)\n(1718, 1717, 0)\n(1718, 1719, 0)\n(1718, 1398, 0)\n(1719, 1718, 0)\n(1719, 1720, 0)\n(1719, 1399, 0)\n(1720, 1719, 0)\n(1720, 1721, 0)\n(1720, 1400, 0)\n(1721, 1720, 0)\n(1721, 1722, 0)\n(1721, 1401, 0)\n(1722, 1721, 0)\n(1722, 1723, 0)\n(1722, 1402, 0)\n(1723, 1722, 0)\n(1723, 1724, 0)\n(1723, 1403, 0)\n(1724, 1723, 0)\n(1724, 1725, 0)\n(1724, 1404, 0)\n(1725, 1724, 0)\n(1725, 1726, 0)\n(1725, 1405, 0)\n(1726, 1725, 0)\n(1726, 1727, 0)\n(1726, 1406, 0)\n(1727, 1726, 0)\n(1727, 1728, 0)\n(1727, 1407, 0)\n(1728, 1727, 0)\n(1728, 1729, 0)\n(1728, 1408, 0)\n(1729, 1728, 0)\n(1729, 1730, 0)\n(1729, 1409, 0)\n(1730, 1729, 0)\n(1730, 1731, 0)\n(1730, 1410, 0)\n(1731, 1730, 0)\n(1731, 1732, 0)\n(1731, 1411, 0)\n(1732, 1731, 0)\n(1732, 1733, 0)\n(1732, 1412, 0)\n(1733, 1732, 0)\n(1733, 1734, 0)\n(1733, 1413, 0)\n(1734, 1733, 0)\n(1734, 1735, 0)\n(1734, 1414, 0)\n(1735, 1734, 0)\n(1735, 1736, 0)\n(1735, 1415, 0)\n(1736, 1735, 0)\n(1736, 1737, 0)\n(1736, 1416, 0)\n(1737, 1736, 0)\n(1737, 1738, 0)\n(1737, 1417, 0)\n(1738, 1737, 0)\n(1738, 1739, 0)\n(1738, 1418, 0)\n(1739, 1738, 0)\n(1739, 1740, 0)\n(1739, 1419, 0)\n(1740, 1739, 0)\n(1740, 1741, 0)\n(1740, 1420, 0)\n(1741, 1740, 0)\n(1741, 1742, 0)\n(1741, 1421, 0)\n(1742, 1741, 0)\n(1742, 1743, 0)\n(1742, 1422, 0)\n(1743, 1742, 0)\n(1743, 1744, 0)\n(1743, 1423, 0)\n(1744, 1743, 0)\n(1744, 1745, 0)\n(1744, 1424, 0)\n(1745, 1744, 0)\n(1745, 1746, 0)\n(1745, 1425, 0)\n(1746, 1745, 0)\n(1746, 1747, 0)\n(1746, 1426, 0)\n(1747, 1746, 0)\n(1747, 1748, 0)\n(1747, 1427, 0)\n(1748, 1747, 0)\n(1748, 1749, 0)\n(1748, 1428, 0)\n(1749, 1748, 0)\n(1749, 1750, 0)\n(1749, 1429, 0)\n(1750, 1749, 0)\n(1750, 1751, 0)\n(1750, 1430, 0)\n(1751, 1750, 0)\n(1751, 1752, 0)\n(1751, 1431, 0)\n(1752, 1751, 0)\n(1752, 1753, 0)\n(1752, 1432, 0)\n(1753, 1752, 0)\n(1753, 1754, 0)\n(1753, 1433, 0)\n(1754, 1753, 0)\n(1754, 1755, 0)\n(1754, 1434, 0)\n(1755, 1754, 0)\n(1755, 1756, 0)\n(1755, 1435, 0)\n(1756, 1755, 0)\n(1756, 1757, 0)\n(1756, 1436, 0)\n(1757, 1756, 0)\n(1757, 1758, 0)\n(1757, 1437, 0)\n(1758, 1757, 0)\n(1758, 1759, 0)\n(1758, 1438, 0)\n(1759, 1758, 0)\n(1759, 1760, 0)\n(1759, 1439, 0)\n(1760, 1759, 0)\n(1760, 1761, 0)\n(1760, 1440, 0)\n(1761, 1760, 0)\n(1761, 1762, 0)\n(1761, 1441, 0)\n(1762, 1761, 0)\n(1762, 1763, 0)\n(1762, 1442, 0)\n(1763, 1762, 0)\n(1763, 1764, 0)\n(1763, 1443, 0)\n(1764, 1763, 0)\n(1764, 1765, 0)\n(1764, 1444, 0)\n(1765, 1764, 0)\n(1765, 1766, 0)\n(1765, 1445, 0)\n(1766, 1765, 0)\n(1766, 1767, 0)\n(1766, 1446, 0)\n(1767, 1766, 0)\n(1767, 1768, 0)\n(1767, 1447, 0)\n(1768, 1767, 0)\n(1768, 1769, 0)\n(1768, 1448, 0)\n(1769, 1768, 0)\n(1769, 1770, 0)\n(1769, 1449, 0)\n(1770, 1769, 0)\n(1770, 1771, 0)\n(1770, 1450, 0)\n(1771, 1770, 0)\n(1771, 1772, 0)\n(1771, 1451, 0)\n(1772, 1771, 0)\n(1772, 1773, 0)\n(1772, 1452, 0)\n(1773, 1772, 0)\n(1773, 1774, 0)\n(1773, 1453, 0)\n(1774, 1773, 0)\n(1774, 1775, 0)\n(1774, 1454, 0)\n(1775, 1774, 0)\n(1775, 1776, 0)\n(1775, 1455, 0)\n(1776, 1775, 0)\n(1776, 1777, 0)\n(1776, 1456, 0)\n(1777, 1776, 0)\n(1777, 1778, 0)\n(1777, 1457, 0)\n(1778, 1777, 0)\n(1778, 1779, 0)\n(1778, 1458, 0)\n(1779, 1778, 0)\n(1779, 1780, 0)\n(1779, 1459, 0)\n(1780, 1779, 0)\n(1780, 1781, 0)\n(1780, 1460, 0)\n(1781, 1780, 0)\n(1781, 1782, 0)\n(1781, 1461, 0)\n(1782, 1781, 0)\n(1782, 1783, 0)\n(1782, 1462, 0)\n(1783, 1782, 0)\n(1783, 1784, 0)\n(1783, 1463, 0)\n(1784, 1783, 0)\n(1784, 1785, 0)\n(1784, 1464, 0)\n(1785, 1784, 0)\n(1785, 1786, 0)\n(1785, 1465, 0)\n(1786, 1785, 0)\n(1786, 1787, 0)\n(1786, 1466, 0)\n(1787, 1786, 0)\n(1787, 1788, 0)\n(1787, 1467, 0)\n(1788, 1787, 0)\n(1788, 1789, 0)\n(1788, 1468, 0)\n(1789, 1788, 0)\n(1789, 1790, 0)\n(1789, 1469, 0)\n(1790, 1789, 0)\n(1790, 1791, 0)\n(1790, 1470, 0)\n(1791, 1790, 0)\n(1791, 1792, 0)\n(1791, 1471, 0)\n(1792, 1791, 0)\n(1792, 1793, 0)\n(1792, 1472, 0)\n(1793, 1792, 0)\n(1793, 1794, 0)\n(1793, 1473, 0)\n(1794, 1793, 0)\n(1794, 1795, 0)\n(1794, 1474, 0)\n(1795, 1794, 0)\n(1795, 1796, 0)\n(1795, 1475, 0)\n(1796, 1795, 0)\n(1796, 1797, 0)\n(1796, 1476, 0)\n(1797, 1796, 0)\n(1797, 1798, 0)\n(1797, 1477, 0)\n(1798, 1797, 0)\n(1798, 1799, 0)\n(1798, 1478, 0)\n(1799, 1798, 0)\n(1799, 1800, 0)\n(1799, 1479, 0)\n(1800, 1799, 0)\n(1800, 1801, 0)\n(1800, 1480, 0)\n(1801, 1800, 0)\n(1801, 1802, 0)\n(1801, 1481, 0)\n(1802, 1801, 0)\n(1802, 1803, 0)\n(1802, 1482, 0)\n(1803, 1802, 0)\n(1803, 1804, 0)\n(1803, 1483, 0)\n(1804, 1803, 0)\n(1804, 1805, 0)\n(1804, 1484, 0)\n(1805, 1804, 0)\n(1805, 1806, 0)\n(1805, 1485, 0)\n(1806, 1805, 0)\n(1806, 1807, 0)\n(1806, 1486, 0)\n(1807, 1806, 0)\n(1807, 1808, 0)\n(1807, 1487, 0)\n(1808, 1807, 0)\n(1808, 1809, 0)\n(1808, 1488, 0)\n(1809, 1808, 0)\n(1809, 1810, 0)\n(1809, 1489, 0)\n(1810, 1809, 0)\n(1810, 1811, 0)\n(1810, 1490, 0)\n(1811, 1810, 0)\n(1811, 1812, 0)\n(1811, 1491, 0)\n(1812, 1811, 0)\n(1812, 1813, 0)\n(1812, 1492, 0)\n(1813, 1812, 0)\n(1813, 1814, 0)\n(1813, 1493, 0)\n(1814, 1813, 0)\n(1814, 1815, 0)\n(1814, 1494, 0)\n(1815, 1814, 0)\n(1815, 1816, 0)\n(1815, 1495, 0)\n(1816, 1815, 0)\n(1816, 1817, 0)\n(1816, 1496, 0)\n(1817, 1816, 0)\n(1817, 1818, 0)\n(1817, 1497, 0)\n(1818, 1817, 0)\n(1818, 1819, 0)\n(1818, 1498, 0)\n(1819, 1818, 0)\n(1819, 1820, 0)\n(1819, 1499, 0)\n(1820, 1819, 0)\n(1820, 1821, 0)\n(1820, 1500, 0)\n(1821, 1820, 0)\n(1821, 1822, 0)\n(1821, 1501, 0)\n(1822, 1821, 0)\n(1822, 1823, 0)\n(1822, 1502, 0)\n(1823, 1822, 0)\n(1823, 1824, 0)\n(1823, 1503, 0)\n(1824, 1823, 0)\n(1824, 1825, 0)\n(1824, 1504, 0)\n(1825, 1824, 0)\n(1825, 1826, 0)\n(1825, 1505, 0)\n(1826, 1825, 0)\n(1826, 1827, 0)\n(1826, 1506, 0)\n(1827, 1826, 0)\n(1827, 1828, 0)\n(1827, 1507, 0)\n(1828, 1827, 0)\n(1828, 1829, 0)\n(1828, 1508, 0)\n(1829, 1828, 0)\n(1829, 1830, 0)\n(1829, 1509, 0)\n(1830, 1829, 0)\n(1830, 1831, 0)\n(1830, 1510, 0)\n(1831, 1830, 0)\n(1831, 1832, 0)\n(1831, 1511, 0)\n(1832, 1831, 0)\n(1832, 1833, 0)\n(1832, 1512, 0)\n(1833, 1832, 0)\n(1833, 1834, 0)\n(1833, 1513, 0)\n(1834, 1833, 0)\n(1834, 1835, 0)\n(1834, 1514, 0)\n(1835, 1834, 0)\n(1835, 1836, 0)\n(1835, 1515, 0)\n(1836, 1835, 0)\n(1836, 1837, 0)\n(1836, 1516, 0)\n(1837, 1836, 0)\n(1837, 1838, 0)\n(1837, 1517, 0)\n(1838, 1837, 0)\n(1838, 1839, 0)\n(1838, 1518, 0)\n(1839, 1838, 0)\n(1839, 1840, 0)\n(1839, 1519, 0)\n(1840, 1839, 0)\n(1840, 1841, 0)\n(1840, 1520, 0)\n(1841, 1840, 0)\n(1841, 1842, 0)\n(1841, 1521, 0)\n(1842, 1841, 0)\n(1842, 1843, 0)\n(1842, 1522, 0)\n(1843, 1842, 0)\n(1843, 1844, 0)\n(1843, 1523, 0)\n(1844, 1843, 0)\n(1844, 1845, 0)\n(1844, 1524, 0)\n(1845, 1844, 0)\n(1845, 1846, 0)\n(1845, 1525, 0)\n(1846, 1845, 0)\n(1846, 1847, 0)\n(1846, 1526, 0)\n(1847, 1846, 0)\n(1847, 1848, 0)\n(1847, 1527, 0)\n(1848, 1847, 0)\n(1848, 1849, 0)\n(1848, 1528, 0)\n(1849, 1848, 0)\n(1849, 1850, 0)\n(1849, 1529, 0)\n(1850, 1849, 0)\n(1850, 1851, 0)\n(1850, 1530, 0)\n(1851, 1850, 0)\n(1851, 1852, 0)\n(1851, 1531, 0)\n(1852, 1851, 0)\n(1852, 1853, 0)\n(1852, 1532, 0)\n(1853, 1852, 0)\n(1853, 1854, 0)\n(1853, 1533, 0)\n(1854, 1853, 0)\n(1854, 1855, 0)\n(1854, 1534, 0)\n(1855, 1854, 0)\n(1855, 1856, 0)\n(1855, 1535, 0)\n(1856, 1855, 0)\n(1856, 1857, 0)\n(1856, 1536, 0)\n(1857, 1856, 0)\n(1857, 1858, 0)\n(1857, 1537, 0)\n(1858, 1857, 0)\n(1858, 1859, 0)\n(1858, 1538, 0)\n(1859, 1858, 0)\n(1859, 1860, 0)\n(1859, 1539, 0)\n(1860, 1859, 0)\n(1860, 1861, 0)\n(1860, 1540, 0)\n(1861, 1860, 0)\n(1861, 1862, 0)\n(1861, 1541, 0)\n(1862, 1861, 0)\n(1862, 1863, 0)\n(1862, 1542, 0)\n(1863, 1862, 0)\n(1863, 1864, 0)\n(1863, 1543, 0)\n(1864, 1863, 0)\n(1864, 1865, 0)\n(1864, 1544, 0)\n(1865, 1864, 0)\n(1865, 1866, 0)\n(1865, 1545, 0)\n(1866, 1865, 0)\n(1866, 1867, 0)\n(1866, 1546, 0)\n(1867, 1866, 0)\n(1867, 1868, 0)\n(1867, 1547, 0)\n(1868, 1867, 0)\n(1868, 1869, 0)\n(1868, 1548, 0)\n(1869, 1868, 0)\n(1869, 1870, 0)\n(1869, 1549, 0)\n(1870, 1869, 0)\n(1870, 1871, 0)\n(1870, 1550, 0)\n(1871, 1870, 0)\n(1871, 1872, 0)\n(1871, 1551, 0)\n(1872, 1871, 0)\n(1872, 1873, 0)\n(1872, 1552, 0)\n(1873, 1872, 0)\n(1873, 1874, 0)\n(1873, 1553, 0)\n(1874, 1873, 0)\n(1874, 1875, 0)\n(1874, 1554, 0)\n(1875, 1874, 0)\n(1875, 1876, 0)\n(1875, 1555, 0)\n(1876, 1875, 0)\n(1876, 1877, 0)\n(1876, 1556, 0)\n(1877, 1876, 0)\n(1877, 1878, 0)\n(1877, 1557, 0)\n(1878, 1877, 0)\n(1878, 1879, 0)\n(1878, 1558, 0)\n(1879, 1878, 0)\n(1879, 1880, 0)\n(1879, 1559, 0)\n(1880, 1879, 0)\n(1880, 1881, 0)\n(1880, 1560, 0)\n(1881, 1880, 0)\n(1881, 1882, 0)\n(1881, 1561, 0)\n(1882, 1881, 0)\n(1882, 1883, 0)\n(1882, 1562, 0)\n(1883, 1882, 0)\n(1883, 1884, 0)\n(1883, 1563, 0)\n(1884, 1883, 0)\n(1884, 1885, 0)\n(1884, 1564, 0)\n(1885, 1884, 0)\n(1885, 1886, 0)\n(1885, 1565, 0)\n(1886, 1885, 0)\n(1886, 1887, 0)\n(1886, 1566, 0)\n(1887, 1886, 0)\n(1887, 1888, 0)\n(1887, 1567, 0)\n(1888, 1887, 0)\n(1888, 1889, 0)\n(1888, 1568, 0)\n(1889, 1888, 0)\n(1889, 1890, 0)\n(1889, 1569, 0)\n(1890, 1889, 0)\n(1890, 1891, 0)\n(1890, 1570, 0)\n(1891, 1890, 0)\n(1891, 1892, 0)\n(1891, 1571, 0)\n(1892, 1891, 0)\n(1892, 1893, 0)\n(1892, 1572, 0)\n(1893, 1892, 0)\n(1893, 1894, 0)\n(1893, 1573, 0)\n(1894, 1893, 0)\n(1894, 1895, 0)\n(1894, 1574, 0)\n(1895, 1894, 0)\n(1895, 1896, 0)\n(1895, 1575, 0)\n(1896, 1895, 0)\n(1896, 1897, 0)\n(1896, 1576, 0)\n(1897, 1896, 0)\n(1897, 1898, 0)\n(1897, 1577, 0)\n(1898, 1897, 0)\n(1898, 1899, 0)\n(1898, 1578, 0)\n(1899, 1898, 0)\n(1899, 1900, 0)\n(1899, 1579, 0)\n(1900, 1899, 0)\n(1900, 1901, 0)\n(1900, 1580, 0)\n(1901, 1900, 0)\n(1901, 1902, 0)\n(1901, 1581, 0)\n(1902, 1901, 0)\n(1902, 1903, 0)\n(1902, 1582, 0)\n(1903, 1902, 0)\n(1903, 1904, 0)\n(1903, 1583, 0)\n(1904, 1903, 0)\n(1904, 1905, 0)\n(1904, 1584, 0)\n(1905, 1904, 0)\n(1905, 1906, 0)\n(1905, 1585, 0)\n(1906, 1905, 0)\n(1906, 1907, 0)\n(1906, 1586, 0)\n(1907, 1906, 0)\n(1907, 1908, 0)\n(1907, 1587, 0)\n(1908, 1907, 0)\n(1908, 1909, 0)\n(1908, 1588, 0)\n(1909, 1908, 0)\n(1909, 1910, 0)\n(1909, 1589, 0)\n(1910, 1909, 0)\n(1910, 1911, 0)\n(1910, 1590, 0)\n(1911, 1910, 0)\n(1911, 1912, 0)\n(1911, 1591, 0)\n(1911, 2231, 0)\n(1912, 1911, 0)\n(1912, 1913, 0)\n(1912, 1592, 0)\n(1912, 2232, 0)\n(1913, 1912, 0)\n(1913, 1914, 0)\n(1913, 1593, 0)\n(1913, 2233, 0)\n(1914, 1913, 0)\n(1914, 1915, 0)\n(1914, 1594, 0)\n(1914, 2234, 0)\n(1915, 1914, 0)\n(1915, 1916, 0)\n(1915, 1595, 0)\n(1915, 2235, 0)\n(1916, 1915, 0)\n(1916, 1917, 0)\n(1916, 1596, 0)\n(1916, 2236, 0)\n(1917, 1916, 0)\n(1917, 1918, 0)\n(1917, 1597, 0)\n(1917, 2237, 0)\n(1918, 1917, 0)\n(1918, 1919, 0)\n(1918, 1598, 0)\n(1918, 2238, 0)\n(1919, 1918, 0)\n(1919, 1599, 0)\n(1919, 2239, 0)\n(1920, 1921, 0)\n(1920, 1600, 0)\n(1920, 2240, 0)\n(1921, 1920, 0)\n(1921, 1922, 0)\n(1921, 1601, 0)\n(1921, 2241, 0)\n(1922, 1921, 0)\n(1922, 1923, 0)\n(1922, 1602, 0)\n(1922, 2242, 0)\n(1923, 1922, 0)\n(1923, 1924, 0)\n(1923, 1603, 0)\n(1923, 2243, 0)\n(1924, 1923, 0)\n(1924, 1925, 0)\n(1924, 1604, 0)\n(1924, 2244, 0)\n(1925, 1924, 0)\n(1925, 1926, 0)\n(1925, 1605, 0)\n(1925, 2245, 0)\n(1926, 1925, 0)\n(1926, 1927, 0)\n(1926, 1606, 0)\n(1926, 2246, 0)\n(1927, 1926, 0)\n(1927, 1928, 0)\n(1927, 1607, 0)\n(1927, 2247, 0)\n(1928, 1927, 0)\n(1928, 1929, 0)\n(1928, 1608, 0)\n(1928, 2248, 0)\n(1929, 1928, 0)\n(1929, 1930, 0)\n(1929, 1609, 0)\n(1929, 2249, 0)\n(1930, 1929, 0)\n(1930, 1931, 0)\n(1930, 1610, 0)\n(1930, 2250, 0)\n(1931, 1930, 0)\n(1931, 1932, 0)\n(1931, 1611, 0)\n(1931, 2251, 0)\n(1932, 1931, 0)\n(1932, 1933, 0)\n(1932, 1612, 0)\n(1932, 2252, 0)\n(1933, 1932, 0)\n(1933, 1613, 0)\n(1938, 1939, 0)\n(1939, 1938, 0)\n(1939, 1940, 0)\n(1939, 1619, 0)\n(1939, 2259, 0)\n(1940, 1939, 0)\n(1940, 1941, 0)\n(1940, 1620, 0)\n(1941, 1940, 0)\n(1941, 1942, 0)\n(1941, 1621, 0)\n(1941, 2261, 0)\n(1942, 1941, 0)\n(1942, 1943, 0)\n(1942, 1622, 0)\n(1943, 1942, 0)\n(1943, 1623, 0)\n(1944, 1945, 0)\n(1945, 1944, 0)\n(1945, 1946, 0)\n(1946, 1945, 0)\n(1946, 1947, 0)\n(1947, 1946, 0)\n(1947, 1948, 0)\n(1948, 1947, 0)\n(1948, 1949, 0)\n(1949, 1948, 0)\n(1949, 1950, 0)\n(1950, 1949, 0)\n(1950, 1951, 0)\n(1951, 1950, 0)\n(1951, 1952, 0)\n(1952, 1951, 0)\n(1952, 1953, 0)\n(1953, 1952, 0)\n(1953, 1954, 0)\n(1954, 1953, 0)\n(1954, 1955, 0)\n(1955, 1954, 0)\n(1955, 1956, 0)\n(1956, 1955, 0)\n(1956, 1957, 0)\n(1957, 1956, 0)\n(1957, 1958, 0)\n(1958, 1957, 0)\n(1958, 1959, 0)\n(1959, 1958, 0)\n(1959, 1960, 0)\n(1960, 1959, 0)\n(1960, 1961, 0)\n(1961, 1960, 0)\n(1961, 1962, 0)\n(1962, 1961, 0)\n(1962, 1963, 0)\n(1963, 1962, 0)\n(1963, 1964, 0)\n(1964, 1963, 0)\n(1964, 1965, 0)\n(1965, 1964, 0)\n(1965, 1966, 0)\n(1966, 1965, 0)\n(1966, 1967, 0)\n(1967, 1966, 0)\n(1967, 1968, 0)\n(1968, 1967, 0)\n(1968, 1969, 0)\n(1969, 1968, 0)\n(1969, 1970, 0)\n(1970, 1969, 0)\n(1970, 1971, 0)\n(1971, 1970, 0)\n(1971, 1972, 0)\n(1972, 1971, 0)\n(1972, 1973, 0)\n(1973, 1972, 0)\n(1973, 1974, 0)\n(1974, 1973, 0)\n(1974, 1975, 0)\n(1975, 1974, 0)\n(1975, 1976, 0)\n(1976, 1975, 0)\n(1976, 1977, 0)\n(1977, 1976, 0)\n(1977, 1978, 0)\n(1978, 1977, 0)\n(1978, 1979, 0)\n(1979, 1978, 0)\n(1979, 1980, 0)\n(1980, 1979, 0)\n(1980, 1981, 0)\n(1981, 1980, 0)\n(1981, 1982, 0)\n(1982, 1981, 0)\n(1982, 1983, 0)\n(1983, 1982, 0)\n(1983, 1984, 0)\n(1984, 1983, 0)\n(1984, 1985, 0)\n(1985, 1984, 0)\n(1985, 1986, 0)\n(1986, 1985, 0)\n(1986, 1987, 0)\n(1987, 1986, 0)\n(1987, 1988, 0)\n(1988, 1987, 0)\n(1988, 1989, 0)\n(1989, 1988, 0)\n(1989, 1990, 0)\n(1990, 1989, 0)\n(1990, 1991, 0)\n(1991, 1990, 0)\n(1991, 1992, 0)\n(1992, 1991, 0)\n(1992, 1993, 0)\n(1993, 1992, 0)\n(1993, 1994, 0)\n(1994, 1993, 0)\n(1994, 1995, 0)\n(1995, 1994, 0)\n(1995, 1996, 0)\n(1996, 1995, 0)\n(1996, 1997, 0)\n(1997, 1996, 0)\n(1997, 1998, 0)\n(1998, 1997, 0)\n(1998, 1999, 0)\n(1999, 1998, 0)\n(1999, 2000, 0)\n(2000, 1999, 0)\n(2000, 2001, 0)\n(2001, 2000, 0)\n(2001, 2002, 0)\n(2002, 2001, 0)\n(2002, 2003, 0)\n(2003, 2002, 0)\n(2003, 2004, 0)\n(2004, 2003, 0)\n(2004, 2005, 0)\n(2005, 2004, 0)\n(2005, 2006, 0)\n(2006, 2005, 0)\n(2006, 2007, 0)\n(2007, 2006, 0)\n(2007, 2008, 0)\n(2008, 2007, 0)\n(2008, 2009, 0)\n(2009, 2008, 0)\n(2009, 2010, 0)\n(2010, 2009, 0)\n(2010, 2011, 0)\n(2011, 2010, 0)\n(2011, 2012, 0)\n(2012, 2011, 0)\n(2012, 2013, 0)\n(2013, 2012, 0)\n(2013, 2014, 0)\n(2014, 2013, 0)\n(2014, 2015, 0)\n(2015, 2014, 0)\n(2015, 2016, 0)\n(2016, 2015, 0)\n(2016, 2017, 0)\n(2017, 2016, 0)\n(2017, 2018, 0)\n(2018, 2017, 0)\n(2018, 2019, 0)\n(2019, 2018, 0)\n(2019, 2020, 0)\n(2020, 2019, 0)\n(2020, 2021, 0)\n(2021, 2020, 0)\n(2021, 2022, 0)\n(2022, 2021, 0)\n(2022, 2023, 0)\n(2023, 2022, 0)\n(2023, 2024, 0)\n(2024, 2023, 0)\n(2024, 2025, 0)\n(2025, 2024, 0)\n(2025, 2026, 0)\n(2026, 2025, 0)\n(2026, 2027, 0)\n(2027, 2026, 0)\n(2027, 2028, 0)\n(2028, 2027, 0)\n(2028, 2029, 0)\n(2029, 2028, 0)\n(2029, 2030, 0)\n(2030, 2029, 0)\n(2030, 2031, 0)\n(2031, 2030, 0)\n(2031, 2032, 0)\n(2032, 2031, 0)\n(2032, 2033, 0)\n(2033, 2032, 0)\n(2033, 2034, 0)\n(2034, 2033, 0)\n(2034, 2035, 0)\n(2035, 2034, 0)\n(2035, 2036, 0)\n(2036, 2035, 0)\n(2036, 2037, 0)\n(2037, 2036, 0)\n(2037, 2038, 0)\n(2038, 2037, 0)\n(2038, 2039, 0)\n(2039, 2038, 0)\n(2039, 2040, 0)\n(2040, 2039, 0)\n(2040, 2041, 0)\n(2041, 2040, 0)\n(2041, 2042, 0)\n(2042, 2041, 0)\n(2042, 2043, 0)\n(2043, 2042, 0)\n(2043, 2044, 0)\n(2044, 2043, 0)\n(2044, 2045, 0)\n(2045, 2044, 0)\n(2045, 2046, 0)\n(2046, 2045, 0)\n(2046, 2047, 0)\n(2047, 2046, 0)\n(2047, 2048, 0)\n(2048, 2047, 0)\n(2048, 2049, 0)\n(2049, 2048, 0)\n(2049, 2050, 0)\n(2050, 2049, 0)\n(2050, 2051, 0)\n(2051, 2050, 0)\n(2051, 2052, 0)\n(2052, 2051, 0)\n(2052, 2053, 0)\n(2053, 2052, 0)\n(2053, 2054, 0)\n(2054, 2053, 0)\n(2054, 2055, 0)\n(2055, 2054, 0)\n(2055, 2056, 0)\n(2056, 2055, 0)\n(2056, 2057, 0)\n(2057, 2056, 0)\n(2057, 2058, 0)\n(2058, 2057, 0)\n(2058, 2059, 0)\n(2059, 2058, 0)\n(2059, 2060, 0)\n(2060, 2059, 0)\n(2060, 2061, 0)\n(2061, 2060, 0)\n(2061, 2062, 0)\n(2062, 2061, 0)\n(2062, 2063, 0)\n(2063, 2062, 0)\n(2063, 2064, 0)\n(2064, 2063, 0)\n(2064, 2065, 0)\n(2065, 2064, 0)\n(2065, 2066, 0)\n(2066, 2065, 0)\n(2066, 2067, 0)\n(2067, 2066, 0)\n(2067, 2068, 0)\n(2068, 2067, 0)\n(2068, 2069, 0)\n(2069, 2068, 0)\n(2069, 2070, 0)\n(2070, 2069, 0)\n(2070, 2071, 0)\n(2071, 2070, 0)\n(2071, 2072, 0)\n(2072, 2071, 0)\n(2072, 2073, 0)\n(2073, 2072, 0)\n(2073, 2074, 0)\n(2074, 2073, 0)\n(2074, 2075, 0)\n(2075, 2074, 0)\n(2075, 2076, 0)\n(2076, 2075, 0)\n(2076, 2077, 0)\n(2077, 2076, 0)\n(2077, 2078, 0)\n(2078, 2077, 0)\n(2078, 2079, 0)\n(2079, 2078, 0)\n(2079, 2080, 0)\n(2080, 2079, 0)\n(2080, 2081, 0)\n(2081, 2080, 0)\n(2081, 2082, 0)\n(2082, 2081, 0)\n(2082, 2083, 0)\n(2083, 2082, 0)\n(2083, 2084, 0)\n(2084, 2083, 0)\n(2084, 2085, 0)\n(2085, 2084, 0)\n(2085, 2086, 0)\n(2086, 2085, 0)\n(2086, 2087, 0)\n(2087, 2086, 0)\n(2087, 2088, 0)\n(2088, 2087, 0)\n(2088, 2089, 0)\n(2089, 2088, 0)\n(2089, 2090, 0)\n(2090, 2089, 0)\n(2090, 2091, 0)\n(2091, 2090, 0)\n(2091, 2092, 0)\n(2092, 2091, 0)\n(2092, 2093, 0)\n(2093, 2092, 0)\n(2093, 2094, 0)\n(2094, 2093, 0)\n(2094, 2095, 0)\n(2095, 2094, 0)\n(2095, 2096, 0)\n(2096, 2095, 0)\n(2096, 2097, 0)\n(2097, 2096, 0)\n(2097, 2098, 0)\n(2098, 2097, 0)\n(2098, 2099, 0)\n(2099, 2098, 0)\n(2099, 2100, 0)\n(2100, 2099, 0)\n(2100, 2101, 0)\n(2101, 2100, 0)\n(2101, 2102, 0)\n(2102, 2101, 0)\n(2102, 2103, 0)\n(2103, 2102, 0)\n(2103, 2104, 0)\n(2104, 2103, 0)\n(2104, 2105, 0)\n(2105, 2104, 0)\n(2105, 2106, 0)\n(2106, 2105, 0)\n(2106, 2107, 0)\n(2107, 2106, 0)\n(2107, 2108, 0)\n(2108, 2107, 0)\n(2108, 2109, 0)\n(2109, 2108, 0)\n(2109, 2110, 0)\n(2110, 2109, 0)\n(2110, 2111, 0)\n(2111, 2110, 0)\n(2111, 2112, 0)\n(2112, 2111, 0)\n(2112, 2113, 0)\n(2113, 2112, 0)\n(2113, 2114, 0)\n(2114, 2113, 0)\n(2114, 2115, 0)\n(2115, 2114, 0)\n(2115, 2116, 0)\n(2116, 2115, 0)\n(2116, 2117, 0)\n(2117, 2116, 0)\n(2117, 2118, 0)\n(2118, 2117, 0)\n(2118, 2119, 0)\n(2119, 2118, 0)\n(2119, 2120, 0)\n(2120, 2119, 0)\n(2120, 2121, 0)\n(2121, 2120, 0)\n(2121, 2122, 0)\n(2122, 2121, 0)\n(2122, 2123, 0)\n(2123, 2122, 0)\n(2123, 2124, 0)\n(2124, 2123, 0)\n(2124, 2125, 0)\n(2125, 2124, 0)\n(2125, 2126, 0)\n(2126, 2125, 0)\n(2126, 2127, 0)\n(2127, 2126, 0)\n(2127, 2128, 0)\n(2128, 2127, 0)\n(2128, 2129, 0)\n(2129, 2128, 0)\n(2129, 2130, 0)\n(2130, 2129, 0)\n(2130, 2131, 0)\n(2131, 2130, 0)\n(2131, 2132, 0)\n(2132, 2131, 0)\n(2132, 2133, 0)\n(2133, 2132, 0)\n(2133, 2134, 0)\n(2134, 2133, 0)\n(2134, 2135, 0)\n(2135, 2134, 0)\n(2135, 2136, 0)\n(2136, 2135, 0)\n(2136, 2137, 0)\n(2137, 2136, 0)\n(2137, 2138, 0)\n(2138, 2137, 0)\n(2138, 2139, 0)\n(2139, 2138, 0)\n(2139, 2140, 0)\n(2140, 2139, 0)\n(2140, 2141, 0)\n(2141, 2140, 0)\n(2141, 2142, 0)\n(2142, 2141, 0)\n(2142, 2143, 0)\n(2143, 2142, 0)\n(2143, 2144, 0)\n(2144, 2143, 0)\n(2144, 2145, 0)\n(2145, 2144, 0)\n(2145, 2146, 0)\n(2146, 2145, 0)\n(2146, 2147, 0)\n(2147, 2146, 0)\n(2147, 2148, 0)\n(2148, 2147, 0)\n(2148, 2149, 0)\n(2149, 2148, 0)\n(2149, 2150, 0)\n(2150, 2149, 0)\n(2150, 2151, 0)\n(2151, 2150, 0)\n(2151, 2152, 0)\n(2152, 2151, 0)\n(2152, 2153, 0)\n(2153, 2152, 0)\n(2153, 2154, 0)\n(2154, 2153, 0)\n(2154, 2155, 0)\n(2155, 2154, 0)\n(2155, 2156, 0)\n(2156, 2155, 0)\n(2156, 2157, 0)\n(2157, 2156, 0)\n(2157, 2158, 0)\n(2158, 2157, 0)\n(2158, 2159, 0)\n(2159, 2158, 0)\n(2159, 2160, 0)\n(2160, 2159, 0)\n(2160, 2161, 0)\n(2161, 2160, 0)\n(2161, 2162, 0)\n(2162, 2161, 0)\n(2162, 2163, 0)\n(2163, 2162, 0)\n(2163, 2164, 0)\n(2164, 2163, 0)\n(2164, 2165, 0)\n(2165, 2164, 0)\n(2165, 2166, 0)\n(2166, 2165, 0)\n(2166, 2167, 0)\n(2167, 2166, 0)\n(2167, 2168, 0)\n(2168, 2167, 0)\n(2168, 2169, 0)\n(2169, 2168, 0)\n(2169, 2170, 0)\n(2170, 2169, 0)\n(2170, 2171, 0)\n(2171, 2170, 0)\n(2171, 2172, 0)\n(2172, 2171, 0)\n(2172, 2173, 0)\n(2173, 2172, 0)\n(2173, 2174, 0)\n(2174, 2173, 0)\n(2174, 2175, 0)\n(2175, 2174, 0)\n(2175, 2176, 0)\n(2176, 2175, 0)\n(2176, 2177, 0)\n(2177, 2176, 0)\n(2177, 2178, 0)\n(2178, 2177, 0)\n(2178, 2179, 0)\n(2179, 2178, 0)\n(2179, 2180, 0)\n(2180, 2179, 0)\n(2180, 2181, 0)\n(2181, 2180, 0)\n(2181, 2182, 0)\n(2182, 2181, 0)\n(2182, 2183, 0)\n(2183, 2182, 0)\n(2183, 2184, 0)\n(2184, 2183, 0)\n(2184, 2185, 0)\n(2185, 2184, 0)\n(2185, 2186, 0)\n(2186, 2185, 0)\n(2186, 2187, 0)\n(2187, 2186, 0)\n(2187, 2188, 0)\n(2188, 2187, 0)\n(2188, 2189, 0)\n(2189, 2188, 0)\n(2189, 2190, 0)\n(2190, 2189, 0)\n(2190, 2191, 0)\n(2191, 2190, 0)\n(2191, 2192, 0)\n(2192, 2191, 0)\n(2192, 2193, 0)\n(2193, 2192, 0)\n(2193, 2194, 0)\n(2194, 2193, 0)\n(2194, 2195, 0)\n(2195, 2194, 0)\n(2195, 2196, 0)\n(2196, 2195, 0)\n(2196, 2197, 0)\n(2197, 2196, 0)\n(2197, 2198, 0)\n(2198, 2197, 0)\n(2198, 2199, 0)\n(2199, 2198, 0)\n(2199, 2200, 0)\n(2200, 2199, 0)\n(2200, 2201, 0)\n(2201, 2200, 0)\n(2201, 2202, 0)\n(2202, 2201, 0)\n(2202, 2203, 0)\n(2203, 2202, 0)\n(2203, 2204, 0)\n(2204, 2203, 0)\n(2204, 2205, 0)\n(2205, 2204, 0)\n(2205, 2206, 0)\n(2206, 2205, 0)\n(2206, 2207, 0)\n(2207, 2206, 0)\n(2207, 2208, 0)\n(2208, 2207, 0)\n(2208, 2209, 0)\n(2209, 2208, 0)\n(2209, 2210, 0)\n(2210, 2209, 0)\n(2210, 2211, 0)\n(2211, 2210, 0)\n(2211, 2212, 0)\n(2212, 2211, 0)\n(2212, 2213, 0)\n(2213, 2212, 0)\n(2213, 2214, 0)\n(2214, 2213, 0)\n(2214, 2215, 0)\n(2215, 2214, 0)\n(2215, 2216, 0)\n(2216, 2215, 0)\n(2216, 2217, 0)\n(2217, 2216, 0)\n(2217, 2218, 0)\n(2218, 2217, 0)\n(2218, 2219, 0)\n(2219, 2218, 0)\n(2219, 2220, 0)\n(2220, 2219, 0)\n(2220, 2221, 0)\n(2221, 2220, 0)\n(2221, 2222, 0)\n(2222, 2221, 0)\n(2222, 2223, 0)\n(2223, 2222, 0)\n(2223, 2224, 0)\n(2224, 2223, 0)\n(2224, 2225, 0)\n(2225, 2224, 0)\n(2225, 2226, 0)\n(2226, 2225, 0)\n(2226, 2227, 0)\n(2227, 2226, 0)\n(2227, 2228, 0)\n(2228, 2227, 0)\n(2228, 2229, 0)\n(2229, 2228, 0)\n(2229, 2230, 0)\n(2230, 2229, 0)\n(2231, 2232, 0)\n(2231, 1911, 0)\n(2231, 2551, 0)\n(2232, 2231, 0)\n(2232, 2233, 0)\n(2232, 1912, 0)\n(2232, 2552, 0)\n(2233, 2232, 0)\n(2233, 2234, 0)\n(2233, 1913, 0)\n(2233, 2553, 0)\n(2234, 2233, 0)\n(2234, 2235, 0)\n(2234, 1914, 0)\n(2234, 2554, 0)\n(2235, 2234, 0)\n(2235, 2236, 0)\n(2235, 1915, 0)\n(2235, 2555, 0)\n(2236, 2235, 0)\n(2236, 2237, 0)\n(2236, 1916, 0)\n(2236, 2556, 0)\n(2237, 2236, 0)\n(2237, 2238, 0)\n(2237, 1917, 0)\n(2237, 2557, 0)\n(2238, 2237, 0)\n(2238, 2239, 0)\n(2238, 1918, 0)\n(2238, 2558, 0)\n(2239, 2238, 0)\n(2239, 1919, 0)\n(2239, 2559, 0)\n(2240, 2241, 0)\n(2240, 1920, 0)\n(2240, 2560, 0)\n(2241, 2240, 0)\n(2241, 2242, 0)\n(2241, 1921, 0)\n(2241, 2561, 0)\n(2242, 2241, 0)\n(2242, 2243, 0)\n(2242, 1922, 0)\n(2242, 2562, 0)\n(2243, 2242, 0)\n(2243, 2244, 0)\n(2243, 1923, 0)\n(2243, 2563, 0)\n(2244, 2243, 0)\n(2244, 2245, 0)\n(2244, 1924, 0)\n(2244, 2564, 0)\n(2245, 2244, 0)\n(2245, 2246, 0)\n(2245, 1925, 0)\n(2245, 2565, 0)\n(2246, 2245, 0)\n(2246, 2247, 0)\n(2246, 1926, 0)\n(2246, 2566, 0)\n(2247, 2246, 0)\n(2247, 2248, 0)\n(2247, 1927, 0)\n(2247, 2567, 0)\n(2248, 2247, 0)\n(2248, 2249, 0)\n(2248, 1928, 0)\n(2248, 2568, 0)\n(2249, 2248, 0)\n(2249, 2250, 0)\n(2249, 1929, 0)\n(2249, 2569, 0)\n(2250, 2249, 0)\n(2250, 2251, 0)\n(2250, 1930, 0)\n(2250, 2570, 0)\n(2251, 2250, 0)\n(2251, 2252, 0)\n(2251, 1931, 0)\n(2251, 2571, 0)\n(2252, 2251, 0)\n(2252, 1932, 0)\n(2252, 2572, 0)\n(2253, 2573, 0)\n(2254, 2574, 0)\n(2259, 1939, 0)\n(2261, 1941, 0)\n(2264, 2265, 0)\n(2265, 2264, 0)\n(2265, 2266, 0)\n(2266, 2265, 0)\n(2266, 2267, 0)\n(2267, 2266, 0)\n(2267, 2268, 0)\n(2268, 2267, 0)\n(2268, 2269, 0)\n(2269, 2268, 0)\n(2269, 2270, 0)\n(2270, 2269, 0)\n(2270, 2271, 0)\n(2271, 2270, 0)\n(2271, 2272, 0)\n(2272, 2271, 0)\n(2272, 2273, 0)\n(2273, 2272, 0)\n(2273, 2274, 0)\n(2274, 2273, 0)\n(2274, 2275, 0)\n(2275, 2274, 0)\n(2275, 2276, 0)\n(2276, 2275, 0)\n(2276, 2277, 0)\n(2277, 2276, 0)\n(2277, 2278, 0)\n(2278, 2277, 0)\n(2278, 2279, 0)\n(2279, 2278, 0)\n(2279, 2280, 0)\n(2280, 2279, 0)\n(2280, 2281, 0)\n(2281, 2280, 0)\n(2281, 2282, 0)\n(2282, 2281, 0)\n(2282, 2283, 0)\n(2283, 2282, 0)\n(2283, 2284, 0)\n(2284, 2283, 0)\n(2284, 2285, 0)\n(2285, 2284, 0)\n(2285, 2286, 0)\n(2286, 2285, 0)\n(2286, 2287, 0)\n(2287, 2286, 0)\n(2287, 2288, 0)\n(2288, 2287, 0)\n(2288, 2289, 0)\n(2289, 2288, 0)\n(2289, 2290, 0)\n(2290, 2289, 0)\n(2290, 2291, 0)\n(2291, 2290, 0)\n(2291, 2292, 0)\n(2292, 2291, 0)\n(2292, 2293, 0)\n(2293, 2292, 0)\n(2293, 2294, 0)\n(2294, 2293, 0)\n(2294, 2295, 0)\n(2295, 2294, 0)\n(2295, 2296, 0)\n(2296, 2295, 0)\n(2296, 2297, 0)\n(2297, 2296, 0)\n(2297, 2298, 0)\n(2298, 2297, 0)\n(2298, 2299, 0)\n(2299, 2298, 0)\n(2299, 2300, 0)\n(2300, 2299, 0)\n(2300, 2301, 0)\n(2301, 2300, 0)\n(2301, 2302, 0)\n(2302, 2301, 0)\n(2302, 2303, 0)\n(2303, 2302, 0)\n(2303, 2304, 0)\n(2304, 2303, 0)\n(2304, 2305, 0)\n(2305, 2304, 0)\n(2305, 2306, 0)\n(2306, 2305, 0)\n(2306, 2307, 0)\n(2307, 2306, 0)\n(2307, 2308, 0)\n(2308, 2307, 0)\n(2308, 2309, 0)\n(2309, 2308, 0)\n(2309, 2310, 0)\n(2310, 2309, 0)\n(2310, 2311, 0)\n(2311, 2310, 0)\n(2311, 2312, 0)\n(2312, 2311, 0)\n(2312, 2313, 0)\n(2313, 2312, 0)\n(2313, 2314, 0)\n(2314, 2313, 0)\n(2314, 2315, 0)\n(2315, 2314, 0)\n(2315, 2316, 0)\n</pre> <pre>\n---------------------------------------------------------------------------\nKeyboardInterrupt                         Traceback (most recent call last)\n&lt;ipython-input-55-54285e1d75d7&gt; in &lt;module&gt;\n      2 g = load_image_and_make_graph('test-pic.png')\n      3 print('Running MST algorithm')\n----&gt; 4 (mst_edges, mst_weight) = compute_mst(g)\n      5 print(f'Found MST witn {len(mst_edges)} edges and total weight = {mst_weight}')\n      6 max_mst_edge_weight= max(mst_edges, key=lambda e: e[2])\n\n&lt;ipython-input-50-98b2603c7a9c&gt; in compute_mst(g)\n     13     for edge in g.edges:\n     14         print(edge)\n---&gt; 15         if (d.find(edge[0]) != d.find(edge[1])) and (len(d.dictionary_of_sets())&gt;1):\n     16             mst_edges.append(edge)\n     17             mst_weight += edge[2]\n\n&lt;ipython-input-15-8b560d32a195&gt; in dictionary_of_sets(self)\n     15         for i in range(self.n):\n     16             if self.is_representative(i):\n---&gt; 17                 d[i] = set([i])\n     18         for j in range(self.n):\n     19             if self.parents[j] != None:\n\nKeyboardInterrupt: </pre> In\u00a0[56]: Copied! <pre>import numpy as np\n\n\n    \ndef visualize_components(orig_image, g, components_dict):\n    (w,h,channels) = orig_image.shape\n    new_image = np.zeros((w, h, channels), np.uint8)\n    count = 0\n    delta = 10\n    for (key, vertSet) in components_dict.items():\n        if len(vertSet) &gt;= 10: \n            (i,j) = g.get_vertex_data(key)\n            rgb_px = orig_image[j,i]\n            rgb_color = (int(rgb_px[0]), int(rgb_px[1]), int(rgb_px[2]))\n            count = count+1          \n            for s in vertSet:\n                (i,j) = g.get_vertex_data(s)\n                cv2.circle(new_image,(i,j), 1, rgb_color, -1) \n    return new_image\n</pre> import numpy as np        def visualize_components(orig_image, g, components_dict):     (w,h,channels) = orig_image.shape     new_image = np.zeros((w, h, channels), np.uint8)     count = 0     delta = 10     for (key, vertSet) in components_dict.items():         if len(vertSet) &gt;= 10:              (i,j) = g.get_vertex_data(key)             rgb_px = orig_image[j,i]             rgb_color = (int(rgb_px[0]), int(rgb_px[1]), int(rgb_px[2]))             count = count+1                       for s in vertSet:                 (i,j) = g.get_vertex_data(s)                 cv2.circle(new_image,(i,j), 1, rgb_color, -1)      return new_image In\u00a0[57]: Copied! <pre>W0 = 0.01* max_mst_edge_weight[2]\nres = compute_scc(g, W0)\nprint(f'Found {len(res)} components')\nprint('Showing components with at least 10 vertices')\nnew_img= visualize_components(img, g, res)\nplt.imshow(new_img) # show the image on the screen\n</pre> W0 = 0.01* max_mst_edge_weight[2] res = compute_scc(g, W0) print(f'Found {len(res)} components') print('Showing components with at least 10 vertices') new_img= visualize_components(img, g, res) plt.imshow(new_img) # show the image on the screen  <pre>\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\n&lt;ipython-input-57-edce9cfdd605&gt; in &lt;module&gt;\n----&gt; 1 W0 = 0.01* max_mst_edge_weight[2]\n      2 res = compute_scc(g, W0)\n      3 print(f'Found {len(res)} components')\n      4 print('Showing components with at least 10 vertices')\n      5 new_img= visualize_components(img, g, res)\n\nNameError: name 'max_mst_edge_weight' is not defined</pre> In\u00a0[\u00a0]: Copied! <pre>W0 = 0.02* max_mst_edge_weight[2]\nres = compute_scc(g, W0)\nprint(f'Found {len(res)} components')\nprint('Showing components with at least 10 vertices')\nnew_img= visualize_components(img, g, res)\nplt.imshow(new_img) # show the image on the screen\n</pre> W0 = 0.02* max_mst_edge_weight[2] res = compute_scc(g, W0) print(f'Found {len(res)} components') print('Showing components with at least 10 vertices') new_img= visualize_components(img, g, res) plt.imshow(new_img) # show the image on the screen  In\u00a0[\u00a0]: Copied! <pre>W0 = 0.03* max_mst_edge_weight[2]\nres = compute_scc(g, W0)\nprint(f'Found {len(res)} components')\nnew_img= visualize_components(img, g, res)\nprint('Showing components with at least 10 vertices')\nplt.imshow(new_img) # show the image on the screen\n</pre> W0 = 0.03* max_mst_edge_weight[2] res = compute_scc(g, W0) print(f'Found {len(res)} components') new_img= visualize_components(img, g, res) print('Showing components with at least 10 vertices') plt.imshow(new_img) # show the image on the screen  In\u00a0[\u00a0]: Copied! <pre>W0 = 0.04* max_mst_edge_weight[2]\nres = compute_scc(g, W0)\nprint(f'Found {len(res)} components')\nprint('Showing components with at least 10 vertices')\nnew_img= visualize_components(img, g, res)\nplt.imshow(new_img) # show the image on the screen\n</pre> W0 = 0.04* max_mst_edge_weight[2] res = compute_scc(g, W0) print(f'Found {len(res)} components') print('Showing components with at least 10 vertices') new_img= visualize_components(img, g, res) plt.imshow(new_img) # show the image on the screen  In\u00a0[\u00a0]: Copied! <pre>W0 = 0.05* max_mst_edge_weight[2]\nres = compute_scc(g, W0)\nprint(f'Found {len(res)} components')\nprint('Showing components with at least 10 vertices')\nnew_img= visualize_components(img, g, res)\nplt.imshow(new_img) # show the image on the screen\n</pre> W0 = 0.05* max_mst_edge_weight[2] res = compute_scc(g, W0) print(f'Found {len(res)} components') print('Showing components with at least 10 vertices') new_img= visualize_components(img, g, res) plt.imshow(new_img) # show the image on the screen  In\u00a0[\u00a0]: Copied! <pre>W0 = 0.07* max_mst_edge_weight[2]\nres = compute_scc(g, W0)\nprint(f'Found {len(res)} components')\nprint('Showing components with at least 10 vertices')\nnew_img= visualize_components(img, g, res)\nplt.imshow(new_img) # show the image on the screen\n</pre> W0 = 0.07* max_mst_edge_weight[2] res = compute_scc(g, W0) print(f'Found {len(res)} components') print('Showing components with at least 10 vertices') new_img= visualize_components(img, g, res) plt.imshow(new_img) # show the image on the screen  In\u00a0[\u00a0]: Copied! <pre>W0 = 0.1* max_mst_edge_weight[2]\nres = compute_scc(g, W0)\nprint(f'Found {len(res)} components')\nprint('Showing components with at least 10 vertices')\nnew_img= visualize_components(img, g, res)\nplt.imshow(new_img) # show the image on the screen\n</pre> W0 = 0.1* max_mst_edge_weight[2] res = compute_scc(g, W0) print(f'Found {len(res)} components') print('Showing components with at least 10 vertices') new_img= visualize_components(img, g, res) plt.imshow(new_img) # show the image on the screen"},{"location":"Tree-and-Graph/Week3-Problem/#problem-1","title":"Problem 1\u00b6","text":"<p>We will first complete an implemention of  a union-find data structure with rank compression.</p>"},{"location":"Tree-and-Graph/Week3-Problem/#problem-2","title":"Problem 2\u00b6","text":"<p>We will now explore finding maximal strongly connected components of an undirected graph using union find data structures. The undirected graph just consists of a list of edges with weights.</p> <ul> <li>We will associate a non-negative weight $w_{i,j}$ for each undirected edge $(i,j)$.</li> <li>We associate some extra data with vertices that will come in handy later.</li> </ul> <p>Please examine the code for undirected graph data structures carefully.</p>"},{"location":"Tree-and-Graph/Week3-Problem/#2a-use-union-find-data-structures-to-compute-strongly-connected-components","title":"2A: Use union-find data-structures to compute strongly connected components.\u00b6","text":"<p>We have previously seen  how to use DFS to find maximal strongly connected components with a small twist.</p> <ul> <li>We will consider only those edges $(i,j)$ whose weights are less than or equal to a threshold $W$ provided by the user.</li> <li>Edges with weights above this threshold are not considered.</li> </ul> <p>Design an algorithm to compute all the maximal strongly connected components for all eeges with threshold $W$ using the union-find data structure. What is the running time of your algorithm. Note that this is manually graded answer : you can compare your solution against our solution provided at the end of this assignment.</p>"},{"location":"Tree-and-Graph/Week3-Problem/#2b-compute-minimum-spanning-tree","title":"2B Compute Minimum Spanning Tree\u00b6","text":"<p>We will now compute the MST of a given undirected weighted graph using Kruskal's algorithm. Complete the code below that uses a disjoint set forest data structure for implementing Kruskal's algorithm.</p> <p>You code simply returns a list of edges with edge weights  as a tuple $(i,j, wij)$ that are part of the MST along with the total weight of the MST.</p>"},{"location":"Tree-and-Graph/Week3-Problem/#2c-edge-threshold-to-disconnect-a-graph","title":"2C: Edge Threshold to Disconnect a Graph\u00b6","text":"<p>Let $G$ be a weighted undirected graph that is strongly connected (i.e, the entire graph itself is an SCC). Our goal is to find a largest weight $W$ such that removing all edges of weight $\\geq W$ will disconnect the graph.</p> <p>Prove that the threshold $W$ is equal to the largest weight edge in the MST found by Kruskal's algorithm by proving that:</p> <ul> <li>Removing all edges of weight  $\\geq W$  will result in a disconnected graph.</li> <li>Keeping just  edges of weight $\\leq W$ (or removing edges of weight $&gt; W$) will result in a connected graph.</li> </ul> <p>Use the fact that a graph is strongly connected if and only if it has a minimum spanning tree.</p>"},{"location":"Tree-and-Graph/Week3-Problem/#topological-data-analysis-on-images-not-part-of-the-assignment-just-in-case-you-are-curious","title":"Topological Data Analysis on Images (Not part of the Assignment -- just in case you are curious).\u00b6","text":"<p>We illustrate an interesting connection between the graph algorithms for strongly connected components and minimum spanning trees to analyze images. Specifically, we will identify components in images as follows.</p> <p>a) First, we treat an image stored as a <code>.png</code> or <code>.jpg</code> file as a matrix of pixels where pixels have color and intensity.</p> <p>b) Given an image, we build a graph whose vertices are pixes and edges connect neighboring pixels.</p> <p>c) The edge weight of an edge in the graph connecting neighboring pixels measures the intensity difference between the pixels (other measures of local pixel differences could also be used).</p> <p>We can perform the following analysis (this is just an example of this kind of analysis which belongs to a larger family of methods called topological data analysis).</p> <p>(a) Build a minimum spanning tree and compute the maximum weight edge in the MST. Let us call it W.</p> <p>(b) Consider the maximal strongly connected components of the image for various thresholds such as $0.5W$, $0.75W$ or $0.9W$. Visualizing the pixels in various strongly connected components will allow us to study the \"segments\" that make up the images.</p> <p>Here is some useful code using opencv to load images. Please take a close look.</p>"},{"location":"Tree-and-Graph/Week3-Problem/#thats-all-folks","title":"That's all Folks!\u00b6","text":""},{"location":"Tree-and-Graph/Week3-Spanning-Tree/","title":"W3-Spanning Tree","text":""},{"location":"Tree-and-Graph/Week3-Spanning-Tree/#minimum-spanning-trees-mst","title":"Minimum Spanning Trees (MST)\u00b6","text":""},{"location":"Tree-and-Graph/Week3-Spanning-Tree/#definition","title":"Definition\u00b6","text":""},{"location":"Tree-and-Graph/Week3-Spanning-Tree/#example","title":"Example\u00b6","text":""},{"location":"Tree-and-Graph/Week3-Spanning-Tree/#how-to-verify-the-mst","title":"How to verify the MST\u00b6","text":""},{"location":"Tree-and-Graph/Week3-Spanning-Tree/#prims-algorithm","title":"Prim's Algorithm\u00b6","text":""},{"location":"Tree-and-Graph/Week3-Spanning-Tree/#layzy-version","title":"Layzy Version\u00b6","text":"<ul> <li>Running Time: $O(|E|\u2217log\u2061(|E|))$ </li> </ul>"},{"location":"Tree-and-Graph/Week3-Spanning-Tree/#eager-version","title":"Eager Version\u00b6","text":""},{"location":"Tree-and-Graph/Week3-Spanning-Tree/#kruskals-algorithm","title":"Kruskal's Algorithm\u00b6","text":"<ul> <li>Time Complexity $O(|E|*log|E|)$ </li> </ul>"},{"location":"Tree-and-Graph/Week4-Bellman-Ford-Algorithm/","title":"W4-Bellman-Ford","text":""},{"location":"Tree-and-Graph/Week4-Bellman-Ford-Algorithm/#definition","title":"Definition\u00b6","text":""},{"location":"Tree-and-Graph/Week4-Bellman-Ford-Algorithm/#steps","title":"Steps\u00b6","text":""},{"location":"Tree-and-Graph/Week4-Bellman-Ford-Algorithm/#check-the-shortest-path","title":"Check the shortest path\u00b6","text":""},{"location":"Tree-and-Graph/Week4-Bellman-Ford-Algorithm/#quiz","title":"Quiz\u00b6","text":"<ul> <li>1 </li> <li>2 </li> <li>3 </li> </ul>"},{"location":"Tree-and-Graph/Week4-Dijkstra/","title":"W4-Dijkstra","text":""},{"location":"Tree-and-Graph/Week4-Dijkstra/#definition","title":"Definition\u00b6","text":""},{"location":"Tree-and-Graph/Week4-Dijkstra/#example","title":"Example\u00b6","text":""},{"location":"Tree-and-Graph/Week4-Dijkstra/#pseudo-code","title":"Pseudo Code\u00b6","text":"<pre>1  function Dijkstra(Graph, source):\n 2      \n 3      for each vertex v in Graph.Vertices:\n 4          dist[v] \u2190 INFINITY\n 5          prev[v] \u2190 UNDEFINED\n 6          add v to Q\n 7      dist[source] \u2190 0\n 8      \n 9      while Q is not empty:\n10          u \u2190 vertex in Q with min dist[u]\n11          remove u from Q\n12          \n13          for each neighbor v of u still in Q:\n14              alt \u2190 dist[u] + Graph.Edges(u, v)\n15              if alt &lt; dist[v]:\n16                  dist[v] \u2190 alt\n17                  prev[v] \u2190 u\n18\n19      return dist[], prev[]\n</pre>"},{"location":"Tree-and-Graph/Week4-Dijkstra/#quiz","title":"Quiz\u00b6","text":"<ul> <li>1 </li> <li>2 </li> </ul>"},{"location":"Tree-and-Graph/Week4-Floyd-Warshalls-Algorithm/","title":"W4-Floyd-Warshalls","text":""},{"location":"Tree-and-Graph/Week4-Floyd-Warshalls-Algorithm/#definition","title":"Definition\u00b6","text":""},{"location":"Tree-and-Graph/Week4-Floyd-Warshalls-Algorithm/#example","title":"Example\u00b6","text":""},{"location":"Tree-and-Graph/Week4-Floyd-Warshalls-Algorithm/#another-example","title":"Another Example\u00b6","text":""},{"location":"Tree-and-Graph/Week4-Problem/","title":"W4-Problem","text":"In\u00a0[1]: Copied! <pre>from matplotlib import pyplot as plt\nimport cv2\n# You can read png, jpg and other file types \nimg = cv2.imread('maze.png') # read an image from a file using opencv (cv2) library\n# you can annotate images \ncv2.circle(img,(5,220), 3, (255,0,0), -1) # add a circle centered at (5, 220) radius 3, color red (RGB: 255,0,0)\ncv2.circle(img, (5,5), 3, (0,0,255), -1) # add a circle centered at (5,5) radius 3, color red (RGB: 0,0,255)\nplt.imshow(img) # show the image on the screen \nplt.title('Amazing')\nplt.show()\nimg = cv2.imread('maze-solution.png') # read an image from a file using opencv (cv2) library\n# you can annotate images \ncv2.circle(img,(5,220), 3, (255,0,0), -1) # add a circle centered at (5, 220) radius 3, color red (RGB: 255,0,0)\ncv2.circle(img, (5,5), 3, (0,0,255), -1) # add a circle centered at (5,5) radius 3, color red (RGB: 0,0,255)\nplt.imshow(img) # show the image on the screen \nplt.title('Amazing Solution ')\nplt.show()\n</pre> from matplotlib import pyplot as plt import cv2 # You can read png, jpg and other file types  img = cv2.imread('maze.png') # read an image from a file using opencv (cv2) library # you can annotate images  cv2.circle(img,(5,220), 3, (255,0,0), -1) # add a circle centered at (5, 220) radius 3, color red (RGB: 255,0,0) cv2.circle(img, (5,5), 3, (0,0,255), -1) # add a circle centered at (5,5) radius 3, color red (RGB: 0,0,255) plt.imshow(img) # show the image on the screen  plt.title('Amazing') plt.show() img = cv2.imread('maze-solution.png') # read an image from a file using opencv (cv2) library # you can annotate images  cv2.circle(img,(5,220), 3, (255,0,0), -1) # add a circle centered at (5, 220) radius 3, color red (RGB: 255,0,0) cv2.circle(img, (5,5), 3, (0,0,255), -1) # add a circle centered at (5,5) radius 3, color red (RGB: 0,0,255) plt.imshow(img) # show the image on the screen  plt.title('Amazing Solution ') plt.show()  <p>Given an image it is simple to read the color at a pixel. Let us read the color at pixel (645, 67)</p> In\u00a0[2]: Copied! <pre>print('Image size (height, width, num layers) is', img.shape)\npx = img[145, 67] # img[y,x] is the color of the pixel of x,y\nprint(px) \ncv2.circle(img, (80, 18), 3, (198,31,4),-1) # Draw a colored circle centered at (80, 18)\npx1 = img[18, 80] # It is important to note that rows of the image are y values and columns are x values.\nprint(px1)\npx2 = img[80, 18] # This is important to note that indexing the img data structure takes y, x values.\n# Most opencv functions will require (x,y) coordinates for pixel as is natural.\nprint(px2)\n</pre> print('Image size (height, width, num layers) is', img.shape) px = img[145, 67] # img[y,x] is the color of the pixel of x,y print(px)  cv2.circle(img, (80, 18), 3, (198,31,4),-1) # Draw a colored circle centered at (80, 18) px1 = img[18, 80] # It is important to note that rows of the image are y values and columns are x values. print(px1) px2 = img[80, 18] # This is important to note that indexing the img data structure takes y, x values. # Most opencv functions will require (x,y) coordinates for pixel as is natural. print(px2) <pre>Image size (height, width, num layers) is (225, 225, 3)\n[255 255 255]\n[198  31   4]\n[0 0 0]\n</pre> <p>The pixel color is expressed in RGB format. R is the red value from 0 -&gt; 255, G is the green value 0 -&gt; 255 and B is the blue value from 0 -&gt; 255</p> <p>We will now define a edge weight function for an edge in the image</p> In\u00a0[3]: Copied! <pre>import math \ndef fixPixelValues(px):\n    # convert the RGB values into floating point to avoid an overflow that will give me wrong answers\n    return [ float(px[0]), float(px[1]), float(px[2]) ]\n\n\n    \n# This is a useful function that given a list of (x,y) values, \n# draw a series of red lines between each coordinate and next to \n# show the path in the image\ndef drawPath(img, path, pThick=2):\n    v = path[0]\n    x0, y0 = v[0], v[1]\n    for v in path:\n        x, y = v[0], v[1]\n        cv2.line(img,(x,y), (x0,y0), (255,0,0),pThick)\n        x0, y0 = x,y\n</pre> import math  def fixPixelValues(px):     # convert the RGB values into floating point to avoid an overflow that will give me wrong answers     return [ float(px[0]), float(px[1]), float(px[2]) ]        # This is a useful function that given a list of (x,y) values,  # draw a series of red lines between each coordinate and next to  # show the path in the image def drawPath(img, path, pThick=2):     v = path[0]     x0, y0 = v[0], v[1]     for v in path:         x, y = v[0], v[1]         cv2.line(img,(x,y), (x0,y0), (255,0,0),pThick)         x0, y0 = x,y          In\u00a0[4]: Copied! <pre># Example\nimg = cv2.imread('maze.png') # read an image from a file using opencv (cv2) library\ndrawPath(img, [ (15, 15), (150, 15), (150, 85), (75, 85), (75, 195)])\nplt.imshow(img) # show the image on the screen \nplt.title('Illustration of drawPath')\nplt.show()\n</pre> # Example img = cv2.imread('maze.png') # read an image from a file using opencv (cv2) library drawPath(img, [ (15, 15), (150, 15), (150, 85), (75, 85), (75, 195)]) plt.imshow(img) # show the image on the screen  plt.title('Illustration of drawPath') plt.show() In\u00a0[5]: Copied! <pre>class Vertex: # This is the outline for a vertex data structure\n    \n    def __init__ (self,  i, j):\n        self.x = i # The x coordinate\n        self.y = j  # The y coordinate\n        self.d = float('inf') # the shortest path estimate\n        self.processed = False # Has this vertex's final shortest path distance been computed\n        # this is important for Dijksatra's algorithm\n        # We will track where the vertex is in the priority queue.\n        self.idx_in_priority_queue = -1 # The index of this vertex in the queue\n        self.pi = None # the parent vertex in the shortest path tree.\n        \n    def reset(self):\n        self.d = float('inf')\n        self.processed = False # Has this vertex's final shortest path distance been computed\n        # this is important for Dijksatra's algorithm\n        # We will track where the vertex is in the priority queue.\n        self.idx_in_priority_queue = -1 # The index of this vertex in the queue\n        self.pi = None # the parent vertex in the shortest path tree.\n    \n\n# However, if you want Dijkstra efficiently, we will need a priority queue\n# We will provide you with a heap data structure from course 1.\nclass PriorityQueue:\n    # Constructor:  Implement a empty heap data structure\n    def __init__(self):\n        self.q = [None] # pad it with one element\n    \n    # Function: insert\n    # Insert a vertex v of type Vertex into the queue.\n    # Remember to set the field `idx_in_priority_queue` and\n    # keep updating it.\n    def insert(self, v):\n        n = len(self.q)\n        self.q.append(v)\n        v.idx_in_priority_queue = n\n        self.bubble_up(n)\n        # self.check_invariant()\n        \n    # Function: swap two elements in the priority queue.\n    # Remember to swap the vertices at positions i and j\n    # But also remember to update the positions of the vertices in the\n    # priority queue.\n    # You can use this to implement bubble_up and bubble_down\n    def swap(self, i, j):\n        tmp = self.q[i]\n        self.q[i] = self.q[j]\n        self.q[i].idx_in_priority_queue = i\n        self.q[j] = tmp\n        self.q[j].idx_in_priority_queue = j\n        \n    # Function: bubble_up\n    # bubble up an element j\n    # until min heap property is restored.\n    def bubble_up(self, j):\n        assert j &gt;= 1\n        assert j &lt; len(self.q)\n        if j == 1:\n            return\n        val = self.q[j].d\n        parent_idx = j // 2\n        parent_val = self.q[parent_idx].d\n        if val &lt; parent_val:\n            self.swap(j, parent_idx)\n            self.bubble_up(parent_idx)\n        return\n    \n    # Function: bubble_down\n    # Bubble down an element j until\n    # min heap property is restored.\n    def bubble_down(self, j):\n        n = len(self.q)\n        left_child_idx = 2 * j\n        right_child_idx = 2 * j + 1\n        if left_child_idx &gt;= n:\n            return\n        if right_child_idx &gt;= n:\n            child_idx = left_child_idx\n            child_d = self.q[left_child_idx].d\n        else:\n            (child_d, child_idx) = min ( (self.q[left_child_idx].d, left_child_idx), \n                                         (self.q[right_child_idx].d, right_child_idx)\n                                       )\n        if self.q[j].d &gt; child_d:\n            self.swap(j, child_idx)\n            self.bubble_down(child_idx)\n        return \n        \n    # Function: get_and_delete_min\n    # Find the minimum weight vertex and delete it from the heap.\n    # return the deleted vertex back\n    def get_and_delete_min(self):\n        n = len(self.q)\n        assert n &gt; 1\n        v = self.q[1]\n        if n &gt; 2: \n            self.q[1] = self.q[n-1]\n            self.q[n-1].idx_in_priority_queue = 1\n            del self.q[n-1]\n            self.bubble_down(1)\n        #self.check_invariant()\n        return v\n    \n    # Is the heap empty?\n    def is_empty(self):\n        return len(self.q) == 1\n    \n    # This is a useful function since in Dijkstra\n    # the weight of a vertex updates on the fly.\n    # We will need to call this to update the vertex weight.\n    def update_vertex_weight(self, v):\n        j = v.idx_in_priority_queue\n        n = len(self.q)\n        assert j &gt;= 0 and j &lt; n\n        self.bubble_down(j)\n        self.bubble_up(j)\n        # self.check_invariant()\n</pre> class Vertex: # This is the outline for a vertex data structure          def __init__ (self,  i, j):         self.x = i # The x coordinate         self.y = j  # The y coordinate         self.d = float('inf') # the shortest path estimate         self.processed = False # Has this vertex's final shortest path distance been computed         # this is important for Dijksatra's algorithm         # We will track where the vertex is in the priority queue.         self.idx_in_priority_queue = -1 # The index of this vertex in the queue         self.pi = None # the parent vertex in the shortest path tree.              def reset(self):         self.d = float('inf')         self.processed = False # Has this vertex's final shortest path distance been computed         # this is important for Dijksatra's algorithm         # We will track where the vertex is in the priority queue.         self.idx_in_priority_queue = -1 # The index of this vertex in the queue         self.pi = None # the parent vertex in the shortest path tree.       # However, if you want Dijkstra efficiently, we will need a priority queue # We will provide you with a heap data structure from course 1. class PriorityQueue:     # Constructor:  Implement a empty heap data structure     def __init__(self):         self.q = [None] # pad it with one element          # Function: insert     # Insert a vertex v of type Vertex into the queue.     # Remember to set the field `idx_in_priority_queue` and     # keep updating it.     def insert(self, v):         n = len(self.q)         self.q.append(v)         v.idx_in_priority_queue = n         self.bubble_up(n)         # self.check_invariant()              # Function: swap two elements in the priority queue.     # Remember to swap the vertices at positions i and j     # But also remember to update the positions of the vertices in the     # priority queue.     # You can use this to implement bubble_up and bubble_down     def swap(self, i, j):         tmp = self.q[i]         self.q[i] = self.q[j]         self.q[i].idx_in_priority_queue = i         self.q[j] = tmp         self.q[j].idx_in_priority_queue = j              # Function: bubble_up     # bubble up an element j     # until min heap property is restored.     def bubble_up(self, j):         assert j &gt;= 1         assert j &lt; len(self.q)         if j == 1:             return         val = self.q[j].d         parent_idx = j // 2         parent_val = self.q[parent_idx].d         if val &lt; parent_val:             self.swap(j, parent_idx)             self.bubble_up(parent_idx)         return          # Function: bubble_down     # Bubble down an element j until     # min heap property is restored.     def bubble_down(self, j):         n = len(self.q)         left_child_idx = 2 * j         right_child_idx = 2 * j + 1         if left_child_idx &gt;= n:             return         if right_child_idx &gt;= n:             child_idx = left_child_idx             child_d = self.q[left_child_idx].d         else:             (child_d, child_idx) = min ( (self.q[left_child_idx].d, left_child_idx),                                           (self.q[right_child_idx].d, right_child_idx)                                        )         if self.q[j].d &gt; child_d:             self.swap(j, child_idx)             self.bubble_down(child_idx)         return               # Function: get_and_delete_min     # Find the minimum weight vertex and delete it from the heap.     # return the deleted vertex back     def get_and_delete_min(self):         n = len(self.q)         assert n &gt; 1         v = self.q[1]         if n &gt; 2:              self.q[1] = self.q[n-1]             self.q[n-1].idx_in_priority_queue = 1             del self.q[n-1]             self.bubble_down(1)         #self.check_invariant()         return v          # Is the heap empty?     def is_empty(self):         return len(self.q) == 1          # This is a useful function since in Dijkstra     # the weight of a vertex updates on the fly.     # We will need to call this to update the vertex weight.     def update_vertex_weight(self, v):         j = v.idx_in_priority_queue         n = len(self.q)         assert j &gt;= 0 and j &lt; n         self.bubble_down(j)         self.bubble_up(j)         # self.check_invariant()              In\u00a0[6]: Copied! <pre>class DirectedGraphFromImage:\n    def __init__(self, img):\n        self.img = img\n        self.coords2vertex = {} # construct a dictionary that maps coordinates [(i,j)] to corresponding vertices in graph\n    \n        \n    def get_vertex_from_coords(self, i, j):\n        if (i,j) in self.coords2vertex: # is pixel (i,j) already there? \n            return self.coords2vertex[(i,j)] # if yes, just return the vertex corresponding\n        v = Vertex(i, j)\n        self.coords2vertex[(i,j)] = v\n        return v\n    \n    ## Given (x,y) coordinates of two neighboring pixels, calculate the edge weight.\n    # We take the squared euclidean distance between the pixel values and add 0.1\n    def getEdgeWeight(self, u, v):\n        img = self.img\n        # get edge weight for edge between u, v\n        i0,j0 = u.x, u.y\n        i1,j1 = v.x, v.y\n        height, width, _ = img.shape\n        # First make sure that the edge is legit\n        # Edges can only go from each pixel to neighboring pixel\n        assert i0 &gt;= 0 and j0 &gt;= 0 and i0 &lt; width and j0 &lt; height # pixel position valid?\n        assert i1 &gt;= 0 and j1 &gt;= 0 and i1 &lt; width and j1 &lt; height # pixel position valid?\n        assert -1 &lt;= i0 - i1 &lt;= 1 # edge between node and neighbor?\n        assert -1 &lt;= j0 - j1 &lt;= 1\n        px1 = fixPixelValues(img[j0,i0])\n        px2 = fixPixelValues(img[j1,i1])\n        return 0.1 + (px1[0] - px2[0])**2 + (px1[1] - px2[1])**2 + (px1[2]- px2[2])**2\n\n    # Function: get_list_of_neighbors\n    # Given a vertex in the graph, get its list of neighbors\n    #  I.e, for given vertex `vert` return a list [(v1, w1), (v2, w2),..,(vk,wk)]\n    #  Such that vert has an edge to v1 with weight w1, edge to v2 with weight w2 and ... \n    #   edge to vk with weight wk\n    # Note that rather than build an adjacency list up front, we simply call this function\n    # to get the neighbors of a vertex.\n    def get_list_of_neighbors(self, vert):\n        img = self.img\n        i = vert.x\n        j = vert.y\n        height, width, _ = img.shape\n        lst = []\n        if i &gt; 0:\n             # Get the adjacent vertex directly to the WEST\n            # What is the weight of the edge from pixel (i,j) to (i-1,j)\n            v0 = self.get_vertex_from_coords(i-1, j)\n            w0 = self.getEdgeWeight(vert, v0)\n            # Append the adjacent vertex and its weight.\n            lst.append((v0, w0))\n        if j &gt; 0:\n            # Get the adjacent vertex directly to the SOUTH\n            v1 = self.get_vertex_from_coords(i, j-1)\n            w1 = self.getEdgeWeight(vert, v1)\n            # Append the adjacent vertex and its weight.\n            lst.append((v1, w1))    \n        if i &lt; width-1:\n            # EAST\n            v2 = self.get_vertex_from_coords(i+1, j)\n            w2 = self.getEdgeWeight( vert, v2)\n            lst.append((v2, w2))\n        if j &lt; height-1:\n            # NORTH\n            v3 = self.get_vertex_from_coords(i, j+1)\n            w3 = self.getEdgeWeight(vert, v3)\n            lst.append((v3, w3))\n        return lst\n</pre> class DirectedGraphFromImage:     def __init__(self, img):         self.img = img         self.coords2vertex = {} # construct a dictionary that maps coordinates [(i,j)] to corresponding vertices in graph                   def get_vertex_from_coords(self, i, j):         if (i,j) in self.coords2vertex: # is pixel (i,j) already there?              return self.coords2vertex[(i,j)] # if yes, just return the vertex corresponding         v = Vertex(i, j)         self.coords2vertex[(i,j)] = v         return v          ## Given (x,y) coordinates of two neighboring pixels, calculate the edge weight.     # We take the squared euclidean distance between the pixel values and add 0.1     def getEdgeWeight(self, u, v):         img = self.img         # get edge weight for edge between u, v         i0,j0 = u.x, u.y         i1,j1 = v.x, v.y         height, width, _ = img.shape         # First make sure that the edge is legit         # Edges can only go from each pixel to neighboring pixel         assert i0 &gt;= 0 and j0 &gt;= 0 and i0 &lt; width and j0 &lt; height # pixel position valid?         assert i1 &gt;= 0 and j1 &gt;= 0 and i1 &lt; width and j1 &lt; height # pixel position valid?         assert -1 &lt;= i0 - i1 &lt;= 1 # edge between node and neighbor?         assert -1 &lt;= j0 - j1 &lt;= 1         px1 = fixPixelValues(img[j0,i0])         px2 = fixPixelValues(img[j1,i1])         return 0.1 + (px1[0] - px2[0])**2 + (px1[1] - px2[1])**2 + (px1[2]- px2[2])**2      # Function: get_list_of_neighbors     # Given a vertex in the graph, get its list of neighbors     #  I.e, for given vertex `vert` return a list [(v1, w1), (v2, w2),..,(vk,wk)]     #  Such that vert has an edge to v1 with weight w1, edge to v2 with weight w2 and ...      #   edge to vk with weight wk     # Note that rather than build an adjacency list up front, we simply call this function     # to get the neighbors of a vertex.     def get_list_of_neighbors(self, vert):         img = self.img         i = vert.x         j = vert.y         height, width, _ = img.shape         lst = []         if i &gt; 0:              # Get the adjacent vertex directly to the WEST             # What is the weight of the edge from pixel (i,j) to (i-1,j)             v0 = self.get_vertex_from_coords(i-1, j)             w0 = self.getEdgeWeight(vert, v0)             # Append the adjacent vertex and its weight.             lst.append((v0, w0))         if j &gt; 0:             # Get the adjacent vertex directly to the SOUTH             v1 = self.get_vertex_from_coords(i, j-1)             w1 = self.getEdgeWeight(vert, v1)             # Append the adjacent vertex and its weight.             lst.append((v1, w1))             if i &lt; width-1:             # EAST             v2 = self.get_vertex_from_coords(i+1, j)             w2 = self.getEdgeWeight( vert, v2)             lst.append((v2, w2))         if j &lt; height-1:             # NORTH             v3 = self.get_vertex_from_coords(i, j+1)             w3 = self.getEdgeWeight(vert, v3)             lst.append((v3, w3))         return lst  <p>Using Dijkstra's algorithm and the classes provided above, implement the function <code>computeShortestPath</code>. Its inputs are</p> <ul> <li><code>graph</code> : an instance of DirectedGraphFromImage class</li> <li><code>source_coordinates</code>: The (i,j) coordinates of the starting point.</li> <li><code>dest_coordinates</code>: The (i,j) coordinates of the destination.</li> </ul> <p>It must return a tuple <code>(path, distance)</code> wherein</p> <ul> <li><code>path</code> is a list of pixel coordinates <code>[(i0,j0),...., (ik,jk)]</code> wherein <code>(i0,j0)</code> corresponds to the <code>soure_coordinates</code> and <code>(ik,jk))</code> corresponds to the destination.</li> <li><code>distance</code> is the total weight of the shortest path.</li> </ul> In\u00a0[7]: Copied! <pre># Function: computeShortestPath\n# Let us implement Dijkstra's algorithm\n# graph - instance of the DirectedGraphFromImage class\n# source - a vertex that is the source (i,j) pixel coordinates\n# dest - a vertex that is the destination (i,j) pixel coordinates\ndef computeShortestPath( graph, source_coordinates, dest_coordinates):\n    # your code here\n    priority_q = PriorityQueue()\n    # get source and dest\n    source_vertex = graph.get_vertex_from_coords(source_coordinates[0],source_coordinates[1])\n#     dest_vertex = graph.get_vertex_from_coords(dest_coordinates[0],dest_coordinates[1])\n    \n    # set source dist to 0\n    source_vertex.d = 0\n    priority_q.insert(source_vertex)\n    while(not priority_q.is_empty()):\n        temp_vertex = priority_q.get_and_delete_min()\n        temp_vertex.processed = True\n        if temp_vertex.x == dest_coordinates[0] and temp_vertex.y == dest_coordinates[1]:\n            break\n        else:\n            neighbor_lst = graph.get_list_of_neighbors(temp_vertex)\n            for neighbor in neighbor_lst:\n                if((neighbor[0].processed == False) and (neighbor[0].d &gt; temp_vertex.d + neighbor[1])):\n                    neighbor[0].d = temp_vertex.d + neighbor[1]\n                    neighbor[0].pi = temp_vertex\n                    if (neighbor[0].idx_in_priority_queue == -1):\n                        priority_q.insert(neighbor[0])\n                    else:\n                        priority_q.update_vertex_weight(neighbor[0])\n    shortest_distance = temp_vertex.d\n    path = []\n    while(temp_vertex.d != 0):\n        path.append((temp_vertex.x,temp_vertex.y))\n        temp_vertex = temp_vertex.pi\n    path.append((temp_vertex.x,temp_vertex.y))\n    return (path[::-1], shortest_distance)\n</pre> # Function: computeShortestPath # Let us implement Dijkstra's algorithm # graph - instance of the DirectedGraphFromImage class # source - a vertex that is the source (i,j) pixel coordinates # dest - a vertex that is the destination (i,j) pixel coordinates def computeShortestPath( graph, source_coordinates, dest_coordinates):     # your code here     priority_q = PriorityQueue()     # get source and dest     source_vertex = graph.get_vertex_from_coords(source_coordinates[0],source_coordinates[1]) #     dest_vertex = graph.get_vertex_from_coords(dest_coordinates[0],dest_coordinates[1])          # set source dist to 0     source_vertex.d = 0     priority_q.insert(source_vertex)     while(not priority_q.is_empty()):         temp_vertex = priority_q.get_and_delete_min()         temp_vertex.processed = True         if temp_vertex.x == dest_coordinates[0] and temp_vertex.y == dest_coordinates[1]:             break         else:             neighbor_lst = graph.get_list_of_neighbors(temp_vertex)             for neighbor in neighbor_lst:                 if((neighbor[0].processed == False) and (neighbor[0].d &gt; temp_vertex.d + neighbor[1])):                     neighbor[0].d = temp_vertex.d + neighbor[1]                     neighbor[0].pi = temp_vertex                     if (neighbor[0].idx_in_priority_queue == -1):                         priority_q.insert(neighbor[0])                     else:                         priority_q.update_vertex_weight(neighbor[0])     shortest_distance = temp_vertex.d     path = []     while(temp_vertex.d != 0):         path.append((temp_vertex.x,temp_vertex.y))         temp_vertex = temp_vertex.pi     path.append((temp_vertex.x,temp_vertex.y))     return (path[::-1], shortest_distance)      In\u00a0[8]: Copied! <pre>class DummyGraphClass:\n    def __init__(self, adj_list, verts):\n        self.verts=verts\n        self.adj_list = adj_list\n        \n                \n    def get_vertex_from_coords(self, i, j):\n        assert (i,j) in self.verts\n        return self.verts[(i,j)]\n    \n    def get_list_of_neighbors(self, vert):\n        coords = (vert.x, vert.y)\n        if coords in self.adj_list:\n            return self.adj_list[(vert.x, vert.y)]\n        else:\n            return []\n    \n# Test 1\nverts = {(i,j): Vertex(i,j) for i in range(3) for j in range(3)}\nadj_list= {}\ndef connect_nodes(src, dest, weight):\n    v1 = src\n    v2 = verts[dest]\n    if v1 in adj_list:\n        adj_list[v1].append((v2, weight))\n    else:\n        adj_list[v1] = [(v2, weight)]\n# Let's build a graph\nconnect_nodes((0,0),(0,1),1.0)\nconnect_nodes((0,0),(1,0),0.5)\nconnect_nodes((1,0),(0,1), 0.5)\nconnect_nodes((0,1),(0,0), 0.5)\nconnect_nodes((1,0),(1,1), 0.5)\nconnect_nodes((1,1), (2,2), 0.25)\nconnect_nodes((1,1),(1,2), 0.5)\nconnect_nodes((1,1),(2,1), 1.2)\nconnect_nodes((2,1), (2,2), 0.25)\nconnect_nodes((1,2), (2,2), 0.25)\n\ngraph = DummyGraphClass(adj_list, verts)\n\npath, dist = computeShortestPath(graph, (0,0), (2,2))\nprint(path)\n\nassert(dist == 1.25) , ' shortest path distance from (0,0) to (2,2) must be 1.25'\nassert (path == [(0,0), (1,0), (1,1), (2,2)])\n\nfor (_,v) in verts.items():\n    v.reset()\n\ngraph2 = DummyGraphClass(adj_list, verts)\n(path2, dist2) = computeShortestPath(graph2, (0,0),(1,2))\nprint(path2)\nassert dist2 == 1.5, ' shortest path distance from (0,0) to (1,2) must be 1.5'\nassert path2[0] == (0,0)\nassert path2[-1] == (1,2)\n\nfor (_,v) in verts.items():\n    v.reset()\n\nconnect_nodes((2,2), (2,1), 0.5)\nconnect_nodes((2,1), (1,1), 1.0)\nconnect_nodes((1,1),(0,1), 0.5)\n\n\ngraph3 = DummyGraphClass(adj_list, verts)\n(path3, dist3) = computeShortestPath(graph3, (2,2),(0,0))\nprint(path3)\nassert(dist3 == 2.5)\nassert(path3[0]== (2,2))\nassert(path3[-1] == (0,0))\n\nprint('All tests passed: 15 points!')\n</pre> class DummyGraphClass:     def __init__(self, adj_list, verts):         self.verts=verts         self.adj_list = adj_list                               def get_vertex_from_coords(self, i, j):         assert (i,j) in self.verts         return self.verts[(i,j)]          def get_list_of_neighbors(self, vert):         coords = (vert.x, vert.y)         if coords in self.adj_list:             return self.adj_list[(vert.x, vert.y)]         else:             return []      # Test 1 verts = {(i,j): Vertex(i,j) for i in range(3) for j in range(3)} adj_list= {} def connect_nodes(src, dest, weight):     v1 = src     v2 = verts[dest]     if v1 in adj_list:         adj_list[v1].append((v2, weight))     else:         adj_list[v1] = [(v2, weight)] # Let's build a graph connect_nodes((0,0),(0,1),1.0) connect_nodes((0,0),(1,0),0.5) connect_nodes((1,0),(0,1), 0.5) connect_nodes((0,1),(0,0), 0.5) connect_nodes((1,0),(1,1), 0.5) connect_nodes((1,1), (2,2), 0.25) connect_nodes((1,1),(1,2), 0.5) connect_nodes((1,1),(2,1), 1.2) connect_nodes((2,1), (2,2), 0.25) connect_nodes((1,2), (2,2), 0.25)  graph = DummyGraphClass(adj_list, verts)  path, dist = computeShortestPath(graph, (0,0), (2,2)) print(path)  assert(dist == 1.25) , ' shortest path distance from (0,0) to (2,2) must be 1.25' assert (path == [(0,0), (1,0), (1,1), (2,2)])  for (_,v) in verts.items():     v.reset()  graph2 = DummyGraphClass(adj_list, verts) (path2, dist2) = computeShortestPath(graph2, (0,0),(1,2)) print(path2) assert dist2 == 1.5, ' shortest path distance from (0,0) to (1,2) must be 1.5' assert path2[0] == (0,0) assert path2[-1] == (1,2)  for (_,v) in verts.items():     v.reset()  connect_nodes((2,2), (2,1), 0.5) connect_nodes((2,1), (1,1), 1.0) connect_nodes((1,1),(0,1), 0.5)   graph3 = DummyGraphClass(adj_list, verts) (path3, dist3) = computeShortestPath(graph3, (2,2),(0,0)) print(path3) assert(dist3 == 2.5) assert(path3[0]== (2,2)) assert(path3[-1] == (0,0))  print('All tests passed: 15 points!') <pre>[(0, 0), (1, 0), (1, 1), (2, 2)]\n[(0, 0), (1, 0), (1, 1), (1, 2)]\n[(2, 2), (2, 1), (1, 1), (0, 1), (0, 0)]\nAll tests passed: 15 points!\n</pre> In\u00a0[9]: Copied! <pre>img = cv2.imread('maze.png') # read an image from a file using opencv (cv2) library\n# you can annotate images \ncv2.circle(img,(5,220), 3, (255,0,0), -1) # add a circle centered at (5, 220) radius 3, color red (RGB: 255,0,0)\ncv2.circle(img, (5,5), 3, (0,0,255), -1) # add a circle centered at (5,5) radius 3, color red (RGB: 0,0,255)\nplt.imshow(img) # show the image on the screen \nplt.title('Amazing')\nplt.show()\n</pre> img = cv2.imread('maze.png') # read an image from a file using opencv (cv2) library # you can annotate images  cv2.circle(img,(5,220), 3, (255,0,0), -1) # add a circle centered at (5, 220) radius 3, color red (RGB: 255,0,0) cv2.circle(img, (5,5), 3, (0,0,255), -1) # add a circle centered at (5,5) radius 3, color red (RGB: 0,0,255) plt.imshow(img) # show the image on the screen  plt.title('Amazing') plt.show() In\u00a0[10]: Copied! <pre>img = cv2.imread('maze.png') # read an image from a file using opencv (cv2) library\ngraph = DirectedGraphFromImage(img)\np,dist = computeShortestPath(graph, (5,220), (5,5))\nassert dist &lt;= 78.1, 'Expected shortest path distance must be 78.1'\nassert p[0] == (5,220)\nassert p[-1] == (5,5)\nprint('Passed: 10 points!')\n</pre> img = cv2.imread('maze.png') # read an image from a file using opencv (cv2) library graph = DirectedGraphFromImage(img) p,dist = computeShortestPath(graph, (5,220), (5,5)) assert dist &lt;= 78.1, 'Expected shortest path distance must be 78.1' assert p[0] == (5,220) assert p[-1] == (5,5) print('Passed: 10 points!') <pre>Passed: 10 points!\n</pre> In\u00a0[11]: Copied! <pre>drawPath(img, p, 2)\nplt.imshow(img) # show the image on the screen \nplt.title('Amazing')\nplt.show()\ncv2.imwrite('maze-solution.png', img)\n</pre> drawPath(img, p, 2) plt.imshow(img) # show the image on the screen  plt.title('Amazing') plt.show() cv2.imwrite('maze-solution.png', img) Out[11]: <pre>True</pre> In\u00a0[12]: Copied! <pre>img = cv2.imread('maze2.JPG') # read an image from a file using opencv (cv2) library\ncv2.circle(img,(250,470), 10, (255,0,0), -1) # add a circle centered at (600, 70) radius 10, color red (RGB: 255,0,0)\ncv2.circle(img, (20,100), 10, (255,0,0), -1) # add a circle centered at (790,200) radius 10, color red (RGB: 255,0,0)\nplt.imshow(img) # show the image on the screen \nplt.title('Amazing 2')\nplt.show()\n</pre> img = cv2.imread('maze2.JPG') # read an image from a file using opencv (cv2) library cv2.circle(img,(250,470), 10, (255,0,0), -1) # add a circle centered at (600, 70) radius 10, color red (RGB: 255,0,0) cv2.circle(img, (20,100), 10, (255,0,0), -1) # add a circle centered at (790,200) radius 10, color red (RGB: 255,0,0) plt.imshow(img) # show the image on the screen  plt.title('Amazing 2') plt.show() In\u00a0[13]: Copied! <pre>img = cv2.imread('maze2.JPG') # read an image from a file using opencv (cv2) library\np, dist = computeShortestPath(DirectedGraphFromImage(img), (250,470), (20,100))\nassert dist &lt;= 120.0\nassert p[0] == (250, 470)\nassert p[-1] == (20,100)\nprint('Passed: 10 points!')\n</pre> img = cv2.imread('maze2.JPG') # read an image from a file using opencv (cv2) library p, dist = computeShortestPath(DirectedGraphFromImage(img), (250,470), (20,100)) assert dist &lt;= 120.0 assert p[0] == (250, 470) assert p[-1] == (20,100) print('Passed: 10 points!') <pre>Passed: 10 points!\n</pre> In\u00a0[14]: Copied! <pre>drawPath(img,p)\nplt.imshow(img) # show the image on the screen \nplt.title('Amazing2')\nplt.show()\n</pre> drawPath(img,p) plt.imshow(img) # show the image on the screen  plt.title('Amazing2') plt.show() In\u00a0[15]: Copied! <pre>img = cv2.imread('maze3.JPG')\ncv2.circle(img,(70,1750), 15, (255,0,0), -1) # add a circle centered at (600, 70) radius 10, color red (RGB: 255,0,0)\ncv2.circle(img, (900,500), 15, (0,255,255), -1) # add a circle centered at (790,200) radius 10, color red (RGB: 255,0,0)\nplt.imshow(img) # show the image on the screen \nplt.title('Amazing 3')\nplt.show()\n</pre> img = cv2.imread('maze3.JPG') cv2.circle(img,(70,1750), 15, (255,0,0), -1) # add a circle centered at (600, 70) radius 10, color red (RGB: 255,0,0) cv2.circle(img, (900,500), 15, (0,255,255), -1) # add a circle centered at (790,200) radius 10, color red (RGB: 255,0,0) plt.imshow(img) # show the image on the screen  plt.title('Amazing 3') plt.show() <p>This will take a while to run: cut and paste the code into a new code cell if you wish to try</p> <pre><code>img = cv2.imread('maze3.JPG') # read an image from a file using opencv (cv2) library\np,dist = computeShortestPath(DirectedGraphFromImage(img), (70,1750), (900,500))\n</code></pre> <p>This will visualize your solution over the complicated maze.</p> <pre><code>drawPath(img,p,10)\nplt.imshow(img) # show the image on the screen \nplt.title('Amazing2 Solution')\nplt.show()\n</code></pre>"},{"location":"Tree-and-Graph/Week4-Problem/#solving-image-maze-with-solution","title":"Solving Image Maze (With Solution)\u00b6","text":"<p>Given a maze as an image with a start and end point, we would like to write code to solve the maze.</p> <p>An image is a 2D matrix of pixels of a particular size that depends on its resolution. Each pixel has a color which is given by its Red, Green and Blue (RGB) values.</p> <p>Given an image, we will view it as a graph where each pixel of the image is a vertex and edges connect a pixel to its neighbor. The weight of an edge should be very small if the pixel colors are similar (i.e, the differences between r, g and b values are close to zero) and correspondingly large as the pixel colors diverge.</p> <p>Next, given a source pixel $(i_0, j_0)$ and destination pixel, $(i_1, j_1)$, we wish find the shortest weight path from source to destination.</p> <p>You should use the Dijkstra's algorithm modified in two ways:</p> <ul> <li>It can exit as soon as the destination is reached.</li> <li>A 1000 x 1000 pixel image gives rise to a graph with million vertices. Storing such a graph as an adjacency list is going to be very memory intensive. Instead, your goal will be to generate the vertices and edges on-the-fly.</li> </ul> <p>We will use opencv library, a popular computer vision library to load, and manipulate images of mazes.</p>"},{"location":"Tree-and-Graph/Week4-Problem/#manipulating-images","title":"Manipulating Images\u00b6","text":"<p>You can directly manipulate images in python in many ways. The <code>opencv</code> library is considered a standard for numerous image manipulation tasks.</p> <p>Here we load an image <code>maze.png</code> and you can see it nicely plotted with coordinates. We then show you two pixels shown in red and blue. The goal here is to detect a path from one of the colored circle to the other, in the maze without crossing the black pixels.</p>"},{"location":"Tree-and-Graph/Week4-Problem/#step-1-compute-single-source-shortest-path-for-an-image","title":"Step 1: Compute Single Source Shortest Path For an Image\u00b6","text":"<p>Given an image, compute the  shortest path between source and destination pixels by modifying Dijkstra's algorithm. Your challenge  is to implement it without needing to create the entire the adjacency list for the graph in the first place. However, for simplicity you can try a first cut implementation of a generic Dijkstra algorithm over graphs represented as adjacency matrix or list.</p>"},{"location":"Tree-and-Graph/Week4-Problem/#pseudocode","title":"Pseudocode\u00b6","text":"<p>Here is an outline of Dijkstra's algorithm with modifications that may be useful.</p> <pre><code>1. Initialize an empty priority queue `q` (use `PriorityQueue` class)\n2. Get the source vertex (`source`) using the function `graph.get_vertex_from_coords(i,j)`.\n3. Set the `source.d` field to 0 to indicate that distance of source from source is 0.\n4. Add the source vertex to the priority queue (use `insert` method).\n5. While the priority queue is not empty.\n   5.1 Get the vertex with minimum value of d and delete it (use `get_and_delete_min` function). Let's call this vertex `u`.\n   5.2 Set the processed field of `u` to True.\n   5.3 If `u` has the same coordinates as destination (use `u.x` and `u.y`) then \n       5.3.1 shortest path distance is `u.d` and break from the loop.\n   5.4 For each outgoing edge from `u` to `v` with weight `w`\n       5.4.1 If `v` is not already processed and `v.d &gt; u.d + w` then \n             5.4.1.1 update `v.d` to `u.d + w`. Set `v.pi` to `u`.\n             5.4.1.2 If `v` is already not in the priority queue, insert it into the queue\n             5.4.1.3 Else, use the `update_vertex_weight` method of priority queue with `v` as the argument to make sure that `v` is moved to the appropriate place in the priority queue.\n6. To get the path, start from the destination vertex and keep taking the parent pointer until we reach the source. Store the sequence of vertices in a path.\n7. Return the (path, shortest path distance)\n</code></pre>"},{"location":"Tree-and-Graph/Week4-Problem/#thats-all-folks","title":"That's all Folks!\u00b6","text":""},{"location":"Tree-and-Graph/Week4-Shortest-Path-Problem/","title":"W4-Shortest Path","text":""},{"location":"Tree-and-Graph/Week4-Shortest-Path-Problem/#definition","title":"Definition\u00b6","text":""},{"location":"Tree-and-Graph/Week4-Shortest-Path-Problem/#types","title":"Types\u00b6","text":""},{"location":"Tree-and-Graph/Week4-Shortest-Path-Problem/#the-property-of-shortest-path","title":"The Property of Shortest Path\u00b6","text":""},{"location":"Tree-and-Graph/Week4-Shortest-Path-Problem/#shortest-path-on-dags","title":"Shortest Path on DAGs\u00b6","text":"<ul> <li>(Directed Acyclic Graph) </li> </ul>"},{"location":"gitlab/00-ssh/","title":"SSH","text":""},{"location":"gitlab/00-ssh/#ssh-secure-shell","title":"SSH (Secure Shell)\u00b6","text":""},{"location":"gitlab/00-ssh/#introduction","title":"Introduction\u00b6","text":"<ul> <li><code>SSH</code>, short for <code>Secure Shell</code>, is a cryptographic network protocol used for secure communication over an unsecured network.</li> <li>It allows users to securely access and control remote systems over an encrypted connection. In this tutorial, we'll cover the basics of SSH, including how to set it up, connect to remote servers, and perform common tasks.</li> </ul>"},{"location":"gitlab/00-ssh/#ssh-key-generation","title":"SSH Key Generation\u00b6","text":"<p><code>SSH keys</code> are a pair of cryptographic keys used to authenticate and establish a secure connection between two computers. Follow these steps to generate SSH keys:</p> <pre># Generate SSH key pair\nssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\n</pre> <p>This command will create a <code>public key</code> (<code>id_rsa.pub</code>) and a <code>private key</code> (<code>id_rsa</code>) in the <code>~/.ssh/</code> directory by default. <code>-c \"your_email@example.com\"</code> is the comment to the key</p>"},{"location":"gitlab/00-ssh/#common-ssh-commands","title":"Common SSH Commands\u00b6","text":"<p>Here are some common <code>SSH</code> commands:</p> <ul> <li><p><code>ssh</code>: Connect to a remote server.</p> <pre>ssh username@remote_host\n## Example\nssh john@example.com\n</pre> </li> <li><p><code>scp</code>: Securely copy files between local and remote systems.</p> <pre>scp source_file username@remote_host:destination_file\n## Example\nscp /path/to/local/file.txt john@example.com:/path/to/remote/directory/file.txt\n</pre> </li> <li><p><code>sftp</code>: Securely transfer files between local and remote systems.</p> <pre>sftp username@remote_host\n## Example\nsftp john@example.com\n</pre> </li> <li><p><code>ssh-keygen</code>: Generate <code>SSH key</code> pairs.</p> <pre>ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\n## Example\nssh-keygen -t rsa -b 4096 -C \"john@example.com\"\n</pre> </li> <li><p><code>ssh-add</code>: Add <code>SSH private keys</code> to the SSH authentication agent.</p> <pre>ssh-add /path/to/private_key\n## Example\nssh-add ~/.ssh/id_rsa\n</pre> </li> <li><p><code>ssh-copy-id</code>: Copy your <code>public SSH key</code> to a remote server's authorized_keys file.</p> <pre>ssh-copy-id username@remote_host\n## Example\nssh-copy-id john@example.com\n</pre> </li> <li><p><code>exit</code>: close the current connection</p> </li> </ul>"},{"location":"gitlab/00-ssh/#connecting-to-a-remote-server","title":"Connecting to a Remote Server\u00b6","text":"<p>To connect to a remote server using <code>SSH</code>, you'll need the <code>server's IP address</code> or domain name and your SSH credentials. Use the following command:</p> <pre>ssh username@remote_host\n</pre> <p>Replace <code>username</code> with your username on the remote server and <code>remote_host</code> with the server's IP address or domain name.</p>"},{"location":"gitlab/00-ssh/#connects-server-using-public-private-keys","title":"Connects Server using Public &amp; Private keys\u00b6","text":"<ol> <li>Generate pair of keys using <code>ssh-keygen</code></li> <li>Copy the public SSH key to the server using <code>ssh-copy-id username@remote_host</code></li> <li>Connect Server without password verify using <code>ssh username@remote_host</code></li> </ol>"},{"location":"gitlab/00-ssh/#ssh-configuration","title":"SSH Configuration\u00b6","text":"<p><code>SSH configurations</code> are stored in the <code>~/.ssh/config</code> file. You can customize SSH behavior by modifying this file.</p> <p>Here's an example configuration [The default Port for SSH is <code>22</code>]:</p> <pre>Host example\n    HostName example.com\n    User username\n    Port 22\n    IdentityFile ~/.ssh/id_rsa\n</pre> <p>This configuration allows you to connect to the remote server by typing <code>ssh example</code>.</p> <pre>Host gitlab.com\n\tHostname gitlab.com\n\tUser git\n\tPreferredAuthentications publickey\n\tIdentityFile ~/.ssh/gitlab\n</pre>"},{"location":"gitlab/01-get-started/","title":"Connect Gitlab using SSH","text":""},{"location":"gitlab/01-get-started/#setup-gitlab-ssh-keys","title":"Setup GitLab SSH keys\u00b6","text":"<ul> <li>To setup and configure GitLab <code>SSH keys</code> for secure <code>Git fetch</code>, <code>pull</code>, <code>push</code> and <code>clone</code> operations, follow these steps:</li> </ul>"},{"location":"gitlab/01-get-started/#generate-a-gitlab-ssh-key-pair-on-your-personal-computer","title":"Generate a GitLab <code>SSH key</code> pair on your personal computer.\u00b6","text":"<ul> <li>Both <code>Ubuntu</code> and <code>Windows</code> machines have built-in SSH support through the inclusion of the <code>ssh-keygen</code> tool.</li> <li>open <code>PowerShell</code> in Windows or a Linux <code>terminal</code> window on Ubuntu and issue the following command:</li> </ul> <pre>C:\\gitlab\\ssh\\example&gt; ssh-keygen -o -t rsa -C \"ssh-EricYangGitlab\"\n</pre> <ol> <li><p><code>ssh-keygen</code>: This command is used to generate SSH keys. SSH keys are a pair of cryptographic keys used to authenticate a client to an SSH server. They consist of a <code>public key</code> (which is shared with the server) and a <code>private key</code> (which remains on the client).</p> </li> <li><p><code>-o</code>: This option tells <code>ssh-keygen</code> to use the new OpenSSH format when saving the key. The OpenSSH format was introduced to provide better security and features compared to the older formats.</p> </li> <li><p><code>-t rsa</code>: This option specifies the type of key to generate. In this case, it specifies <code>RSA</code> as the key type.</p> <ul> <li><code>RSA</code> is a widely-used public-key cryptosystem for secure data transmission.</li> </ul> </li> <li><p><code>-C \"ssh-EricYangGitlab\"</code>: This option allows you to add a comment to the key. Comments are useful for identifying the key, especially when you have multiple keys.</p> </li> </ol> <ul> <li>By default, all GitLab <code>SSH keys</code> must go in an <code>.ssh</code> folder under the user\u2019s home directory. Furthermore, a blank passphrase is acceptable unless your organization\u2019s compliance rules state otherwise.</li> </ul>"},{"location":"gitlab/01-get-started/#add-your-public-ssh-key-to-gitlab","title":"Add your <code>public ssh key</code> to GitLab\u00b6","text":"<ol> <li><p>Copy the value of public key</p> <p></p> </li> <li><p>Log into GitLab and click on your account preferences.</p> </li> <li><p>Click the SSH Keys link and paste the copied value into the text field.</p> <ul> <li>Set an expiration date, and then click the blue button to persistently add the GitLab SSH key</li> </ul> <p></p> </li> </ol>"},{"location":"gitlab/01-get-started/#set-config-under-the-ssh-folder","title":"Set <code>config</code> under the <code>.ssh</code> folder\u00b6","text":"<p>Sometimes it will requires config setting to connect the <code>gitlab</code> server, if encounter error in next step, we can build a <code>config</code> file under the <code>C:\\User\\yourname\\.ssh</code>, and put the following material:</p> <pre>Host gitlab.com\nHostname gitlab.com\nUser git\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/gitlab_rsa\n</pre>"},{"location":"gitlab/01-get-started/#issue-a-git-clone-command-with-the-ssh-url","title":"Issue a git clone command with the <code>SSH URL</code>\u00b6","text":"<p>Once the connection is built, we can run any <code>git</code> command to manipulate our repo</p> <p></p>"}]}